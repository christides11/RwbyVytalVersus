{
  "README.html": {
    "href": "README.html",
    "title": "RwbyVytalVersus | Rwby Vytal Versus Documentation",
    "keywords": "RwbyVytalVersus"
  },
  "api/Global.AddressableFighterDefinitionContainer.html": {
    "href": "api/Global.AddressableFighterDefinitionContainer.html",
    "title": "Class AddressableFighterDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressableFighterDefinitionContainer Namespace Global Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Fighter Definitions Container\", fileName = \"fighterdefinitioncontainer\")] public class AddressableFighterDefinitionContainer : BaseFighterDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseFighterDefinitionContainer AddressableFighterDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetFighters() public override IFighterDefinition[] GetFighters() Returns IFighterDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadFighterDefinitions() public override UniTask<bool> LoadFighterDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadFighterDefinitions() public override void UnloadFighterDefinitions()"
  },
  "api/Global.AddressablesFighterDefinition.html": {
    "href": "api/Global.AddressablesFighterDefinition.html",
    "title": "Class AddressablesFighterDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesFighterDefinition Namespace Global Assembly rwby.dll [Serializable] [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Fighter Definition\")] public class AddressablesFighterDefinition : IFighterDefinition Inheritance object Object ScriptableObject IContentDefinition IFighterDefinition AddressablesFighterDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags Properties Aura public override int Aura { get; } Property Value int AuraGainPerFrame public override int AuraGainPerFrame { get; } Property Value int Description public override string Description { get; } Property Value string Health public override int Health { get; } Property Value int Name public override string Name { get; } Property Value string Selectable public override bool Selectable { get; } Property Value bool Methods GetCommandList() public override BaseCommandListDefinition GetCommandList() Returns BaseCommandListDefinition GetFighter() public override GameObject GetFighter() Returns GameObject GetFighterQuantum() public override CharaDefinitionAsset GetFighterQuantum() Returns CharaDefinitionAsset GetHUDReferences() public override ModAssetSoftReference[] GetHUDReferences() Returns ModAssetSoftReference[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> RegisterQuantumAsset() public override void RegisterQuantumAsset() Unload() public override void Unload() UnloadAssets() public override void UnloadAssets() UnregisterQuantumAsset() public override void UnregisterQuantumAsset()"
  },
  "api/Global.AddressablesGamemodeDefinition.html": {
    "href": "api/Global.AddressablesGamemodeDefinition.html",
    "title": "Class AddressablesGamemodeDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesGamemodeDefinition Namespace Global Assembly rwby.dll [Serializable] [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Gamemode Definition\")] public class AddressablesGamemodeDefinition : BaseGamemodeDefinition Inheritance object Object ScriptableObject IContentDefinition BaseGamemodeDefinition AddressablesGamemodeDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.Load(string) Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetMatchHandler() public override GameObject GetMatchHandler() Returns GameObject GetQuantumDataAsset() public override GamemodeQuantumData GetQuantumDataAsset() Returns GamemodeQuantumData GetTeamConfig() public override GamemodeTeamConfig[] GetTeamConfig() Returns GamemodeTeamConfig[] LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> RegisterQuantumAsset() public override void RegisterQuantumAsset() Unload() public override void Unload() UnloadAssets() public override void UnloadAssets() UnregisterQuantumAsset() public override void UnregisterQuantumAsset()"
  },
  "api/Global.AddressablesGamemodeDefinitionContainer.html": {
    "href": "api/Global.AddressablesGamemodeDefinitionContainer.html",
    "title": "Class AddressablesGamemodeDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesGamemodeDefinitionContainer Namespace Global Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Gamemode Definitions Container\", fileName = \"gamemodedefinitioncontainer\")] public class AddressablesGamemodeDefinitionContainer : BaseGamemodeDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseGamemodeDefinitionContainer AddressablesGamemodeDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetGamemodes() public override BaseGamemodeDefinition[] GetGamemodes() Returns BaseGamemodeDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadGamemodeDefinitions() public override UniTask<bool> LoadGamemodeDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadGamemodeDefinitions() public override void UnloadGamemodeDefinitions()"
  },
  "api/Global.AddressablesLoadedModDefinition.html": {
    "href": "api/Global.AddressablesLoadedModDefinition.html",
    "title": "Class AddressablesLoadedModDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesLoadedModDefinition Namespace Global Assembly rwby.dll public class AddressablesLoadedModDefinition : LoadedModDefinition Inheritance object LoadedModDefinition AddressablesLoadedModDefinition Derived LocalLoadedModDefinition Inherited Members LoadedModDefinition.information LoadedModDefinition.modAsset LoadedModDefinition.HasValidModAsset() Fields resourceLocator public IResourceLocator resourceLocator Field Value IResourceLocator resourceLocatorHandle public AsyncOperationHandle<IResourceLocator> resourceLocatorHandle Field Value AsyncOperationHandle<IResourceLocator>"
  },
  "api/Global.AddressablesMapDefinition.html": {
    "href": "api/Global.AddressablesMapDefinition.html",
    "title": "Class AddressablesMapDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesMapDefinition Namespace Global Assembly rwby.dll [Serializable] [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Map Definition\")] public class AddressablesMapDefinition : IMapDefinition Inheritance object Object ScriptableObject IContentDefinition IMapDefinition AddressablesMapDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.UnloadAssets() Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetMapAsset() public override Map GetMapAsset() Returns Map GetSceneName() public override string GetSceneName() Returns string Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> LoadMap(LoadSceneMode) public override UniTask<bool> LoadMap(LoadSceneMode loadMode) Parameters loadMode LoadSceneMode Returns UniTask<bool> RegisterQuantumAsset() public override void RegisterQuantumAsset() Unload() public override void Unload() UnloadMap() public override UniTask UnloadMap() Returns UniTask UnregisterQuantumAsset() public override void UnregisterQuantumAsset()"
  },
  "api/Global.AddressablesMapDefinitionContainer.html": {
    "href": "api/Global.AddressablesMapDefinitionContainer.html",
    "title": "Class AddressablesMapDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesMapDefinitionContainer Namespace Global Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Map Definitions Container\", fileName = \"mapdefinitioncontainer\")] public class AddressablesMapDefinitionContainer : BaseMapDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseMapDefinitionContainer AddressablesMapDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetMaps() public override IMapDefinition[] GetMaps() Returns IMapDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadMapDefinitions() public override UniTask<bool> LoadMapDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadMapDefinitions() public override void UnloadMapDefinitions()"
  },
  "api/Global.AddressablesModInfoAsset.html": {
    "href": "api/Global.AddressablesModInfoAsset.html",
    "title": "Class AddressablesModInfoAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesModInfoAsset Namespace Global Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/modding/Addressables ModInfoAsset\")] [Serializable] public class AddressablesModInfoAsset : BaseModInfoAsset Inheritance object Object ScriptableObject BaseModInfoAsset AddressablesModInfoAsset Inherited Members BaseModInfoAsset.ModDefinition BaseModInfoAsset.Build() BaseModInfoAsset.GetLoadedAssetListByType<T>() BaseModInfoAsset.GetAssetInfo(string) Fields assetsByTypes public SerializedDictionary<Type, List<AssetReference>> assetsByTypes Field Value SerializedDictionary<Type, List<AssetReference>> Properties ModID public override string ModID { get; } Property Value string ModVersion public override string ModVersion { get; } Property Value string OnlineRequirement public override ModOnlineRequirement OnlineRequirement { get; } Property Value ModOnlineRequirement ShouldRegisterQuantumAssets public bool ShouldRegisterQuantumAssets { get; set; } Property Value bool Methods GetAssetByID(string, bool) public override Object GetAssetByID(string id, bool autoLoad = false) Parameters id string autoLoad bool Returns Object GetAssetByID<T>(string, bool) public override T GetAssetByID<T>(string id, bool autoLoad = false) where T : Object Parameters id string autoLoad bool Returns T Type Parameters T GetAssetList() Gets a list of all content (loaded or not) in this mod. public override List<string> GetAssetList() Returns List<string> A list of the IDs of content. GetAssetListPaginated(int, int) Gets a list of all content (loaded or not) in this mod pagniated. public override List<string> GetAssetListPaginated(int page = 0, int pageCount = 100) Parameters page int The page wanted. pageCount int How many asset IDs per page. Returns List<string> The page's list of IDs. GetAssetsByType<T>(bool) public override List<T> GetAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Returns List<T> Type Parameters T GetLoadedAssetList() Gets a list of all loaded content in this mod. public override List<string> GetLoadedAssetList() Returns List<string> A list of the IDs of loaded content. HasAsset(string) public override bool HasAsset(string id) Parameters id string Returns bool LoadAssetByID(string) Loads an asset by the ID given. public override bool LoadAssetByID(string id) Parameters id string The ID of the asset. Returns bool True if the asset was loaded; otherwise false. LoadAssetByIDAsync(string) Loads an asset by the ID given asynchronously. public override UniTask<bool> LoadAssetByIDAsync(string id) Parameters id string The ID of the asset. Returns UniTask<bool> True if the asset was loaded; otherwise false. LoadAssetByIDAsync<T>(string) Loads an asset by the ID given asynchronously. public override UniTask<bool> LoadAssetByIDAsync<T>(string id) where T : Object Parameters id string The ID of the asset. Returns UniTask<bool> True if the asset was loaded; otherwise false. Type Parameters T OnLoad() Called right when the mod this ModInfoAsset belongs to loads. public override void OnLoad() OnUnload() Called right before the mod this ModInfoAsset belongs to unloads. public override void OnUnload() RegisterQuantumAsset(string) Registers an asset to the quantum database. public override void RegisterQuantumAsset(string id) Parameters id string UnloadAssetByID(string) public override void UnloadAssetByID(string id) Parameters id string UnloadAssetsByType<T>(bool) public override void UnloadAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Type Parameters T UnregisterQuantumAsset(string) Deregisters an asset from the quantum database. public override void UnregisterQuantumAsset(string id) Parameters id string"
  },
  "api/Global.AddressablesModLoader.html": {
    "href": "api/Global.AddressablesModLoader.html",
    "title": "Class AddressablesModLoader | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesModLoader Namespace Global Assembly rwby.dll public class AddressablesModLoader : BaseModLoader Inheritance object BaseModLoader AddressablesModLoader Properties LoaderType public override ModLoaderType LoaderType { get; } Property Value ModLoaderType Methods TryLoadMod(ModManager, AvailableModDefinition) public override UniTask<LoadedModDefinition> TryLoadMod(ModManager modManager, AvailableModDefinition modDefinition) Parameters modManager ModManager modDefinition AvailableModDefinition Returns UniTask<LoadedModDefinition> TryUnloadMod(ModManager, LoadedModDefinition) public override bool TryUnloadMod(ModManager modManager, LoadedModDefinition modLoadedDefinition) Parameters modManager ModManager modLoadedDefinition LoadedModDefinition Returns bool"
  },
  "api/Global.AnimancerVisualEffect.html": {
    "href": "api/Global.AnimancerVisualEffect.html",
    "title": "Class AnimancerVisualEffect | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimancerVisualEffect Namespace Global Assembly rwby.dll public class AnimancerVisualEffect : VisualEffectBase Inheritance object Object Component Behaviour MonoBehaviour VisualEffectBase AnimancerVisualEffect Inherited Members VisualEffectBase.status VisualEffectBase.autoDestroy VisualEffectBase.autoDestroyAfter VisualEffectBase.entryAsset VisualEffectBase.freezeDuringHitstop VisualEffectBase.FixedUpdate() VisualEffectBase.SetSeed(uint) Fields animancer public AnimancerComponent animancer Field Value AnimancerComponent clip public AnimationClip clip Field Value AnimationClip Properties CurrentTime public override float CurrentTime { get; protected set; } Property Value float Methods DestroyEffect() public override void DestroyEffect() Freeze() public override void Freeze() Play() public override void Play() Resume() public override void Resume() SeekTo(float, bool) public override void SeekTo(float time, bool play = true) Parameters time float play bool Stop(bool) public override void Stop(bool clearParticles = true) Parameters clearParticles bool"
  },
  "api/Global.AnimationAssetBaker.html": {
    "href": "api/Global.AnimationAssetBaker.html",
    "title": "Class AnimationAssetBaker | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimationAssetBaker Namespace Global Assembly rwby.editor.dll public class AnimationAssetBaker : EditorWindow Inheritance object Object ScriptableObject EditorWindow AnimationAssetBaker Methods ConvertAnimationCurve(AnimationCurve) public FPAnimationCurve ConvertAnimationCurve(AnimationCurve animationCurve) Parameters animationCurve AnimationCurve Returns FPAnimationCurve OnGUI() public void OnGUI() ShowWindow() [MenuItem(\"Tools/Animation Curve Grabber\")] public static void ShowWindow()"
  },
  "api/Global.AnimationCurveExtensions.html": {
    "href": "api/Global.AnimationCurveExtensions.html",
    "title": "Class AnimationCurveExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimationCurveExtensions Namespace Global Assembly rwby.dll public static class AnimationCurveExtensions Inheritance object AnimationCurveExtensions Methods Derivative(AnimationCurve, int, float) public static AnimationCurve Derivative(this AnimationCurve curve, int resolution = 100, float smoothing = 0.05) Parameters curve AnimationCurve resolution int smoothing float Returns AnimationCurve Differentiate(AnimationCurve, float) Find first derivative of curve at point x public static float Differentiate(this AnimationCurve curve, float x) Parameters curve AnimationCurve x float Returns float Slope of curve at point x as float Differentiate(AnimationCurve, float, float, float) public static float Differentiate(this AnimationCurve curve, float x, float xMin, float xMax) Parameters curve AnimationCurve x float xMin float xMax float Returns float Integrate(AnimationCurve, float, float, int) Find integral of curve between xStart and xEnd using the trapezoidal rule public static float Integrate(this AnimationCurve curve, float xStart = 0, float xEnd = 1, int sliceCount = 100) Parameters curve AnimationCurve xStart float xEnd float sliceCount int Resolution of calculation. Increase for better precision, at cost of computation Returns float Area under the curve between xStart and xEnd as float"
  },
  "api/Global.AvailableModDefinition.html": {
    "href": "api/Global.AvailableModDefinition.html",
    "title": "Class AvailableModDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AvailableModDefinition Namespace Global Assembly rwby.dll [Serializable] public class AvailableModDefinition Inheritance object AvailableModDefinition Fields OnlineRequirement public ModOnlineRequirement OnlineRequirement Field Value ModOnlineRequirement author public string author Field Value string canUnload [NonSerialized] public bool canUnload Field Value bool guid public string guid Field Value string identifier public string identifier Field Value string loadedDefinition [NonSerialized] public LoadedModDefinition loadedDefinition Field Value LoadedModDefinition loader public ModLoaderType loader Field Value ModLoaderType name public string name Field Value string path public string path Field Value string requiresReload public bool requiresReload Field Value bool version public string version Field Value string Methods GetGuid() public Guid GetGuid() Returns Guid"
  },
  "api/Global.BaseContentDefinitionContainer-1.html": {
    "href": "api/Global.BaseContentDefinitionContainer-1.html",
    "title": "Class BaseContentDefinitionContainer<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseContentDefinitionContainer<T> Namespace Global Assembly rwby.dll public abstract class BaseContentDefinitionContainer<T> : IContentDefinition where T : IContentDefinition Type Parameters T Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<T> Derived BaseHudElementDefinitionContainer BaseSongDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetDefinitions() public abstract T[] GetDefinitions() Returns T[] LoadDefinitions() public abstract UniTask<bool> LoadDefinitions() Returns UniTask<bool> UnloadDefinitions() public abstract void UnloadDefinitions()"
  },
  "api/Global.BaseFighterDefinitionContainer.html": {
    "href": "api/Global.BaseFighterDefinitionContainer.html",
    "title": "Class BaseFighterDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseFighterDefinitionContainer Namespace Global Assembly rwby.dll public abstract class BaseFighterDefinitionContainer : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseFighterDefinitionContainer Derived AddressableFighterDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetFighters() public abstract IFighterDefinition[] GetFighters() Returns IFighterDefinition[] LoadFighterDefinitions() public abstract UniTask<bool> LoadFighterDefinitions() Returns UniTask<bool> UnloadFighterDefinitions() public abstract void UnloadFighterDefinitions()"
  },
  "api/Global.BaseGamemodeDefinition.html": {
    "href": "api/Global.BaseGamemodeDefinition.html",
    "title": "Class BaseGamemodeDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseGamemodeDefinition Namespace Global Assembly rwby.dll [Serializable] public abstract class BaseGamemodeDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseGamemodeDefinition Derived AddressablesGamemodeDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetMatchHandler() public abstract GameObject GetMatchHandler() Returns GameObject GetQuantumDataAsset() public abstract GamemodeQuantumData GetQuantumDataAsset() Returns GamemodeQuantumData GetTeamConfig() public abstract GamemodeTeamConfig[] GetTeamConfig() Returns GamemodeTeamConfig[]"
  },
  "api/Global.BaseGamemodeDefinitionContainer.html": {
    "href": "api/Global.BaseGamemodeDefinitionContainer.html",
    "title": "Class BaseGamemodeDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseGamemodeDefinitionContainer Namespace Global Assembly rwby.dll public abstract class BaseGamemodeDefinitionContainer : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseGamemodeDefinitionContainer Derived AddressablesGamemodeDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetGamemodes() public abstract BaseGamemodeDefinition[] GetGamemodes() Returns BaseGamemodeDefinition[] LoadGamemodeDefinitions() public abstract UniTask<bool> LoadGamemodeDefinitions() Returns UniTask<bool> UnloadGamemodeDefinitions() public abstract void UnloadGamemodeDefinitions()"
  },
  "api/Global.BaseHudElementDefinition.html": {
    "href": "api/Global.BaseHudElementDefinition.html",
    "title": "Class BaseHudElementDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseHudElementDefinition Namespace Global Assembly rwby.dll [Serializable] public abstract class BaseHudElementDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseHudElementDefinition Derived AddressablesHudElementDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetElementContainer() public abstract HudElementContainer GetElementContainer() Returns HudElementContainer"
  },
  "api/Global.BaseHudElementDefinitionContainer.html": {
    "href": "api/Global.BaseHudElementDefinitionContainer.html",
    "title": "Class BaseHudElementDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseHudElementDefinitionContainer Namespace Global Assembly rwby.dll public abstract class BaseHudElementDefinitionContainer : BaseContentDefinitionContainer<BaseHudElementDefinition> Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<BaseHudElementDefinition> BaseHudElementDefinitionContainer Derived AddressablesHudElementDefinitionContainer Inherited Members BaseContentDefinitionContainer<BaseHudElementDefinition>.LoadDefinitions() BaseContentDefinitionContainer<BaseHudElementDefinition>.GetDefinitions() BaseContentDefinitionContainer<BaseHudElementDefinition>.UnloadDefinitions() IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload()"
  },
  "api/Global.BaseMapDefinitionContainer.html": {
    "href": "api/Global.BaseMapDefinitionContainer.html",
    "title": "Class BaseMapDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseMapDefinitionContainer Namespace Global Assembly rwby.dll public abstract class BaseMapDefinitionContainer : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseMapDefinitionContainer Derived AddressablesMapDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetMaps() public abstract IMapDefinition[] GetMaps() Returns IMapDefinition[] LoadMapDefinitions() public abstract UniTask<bool> LoadMapDefinitions() Returns UniTask<bool> UnloadMapDefinitions() public abstract void UnloadMapDefinitions()"
  },
  "api/Global.BaseModInfoAsset.html": {
    "href": "api/Global.BaseModInfoAsset.html",
    "title": "Class BaseModInfoAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseModInfoAsset Namespace Global Assembly rwby.dll [Serializable] public class BaseModInfoAsset : ScriptableObject Inheritance object Object ScriptableObject BaseModInfoAsset Derived AddressablesModInfoAsset Properties ModDefinition public virtual LoadedModDefinition ModDefinition { get; set; } Property Value LoadedModDefinition ModID public virtual string ModID { get; } Property Value string ModVersion public virtual string ModVersion { get; } Property Value string OnlineRequirement public virtual ModOnlineRequirement OnlineRequirement { get; } Property Value ModOnlineRequirement Methods Build() public virtual void Build() GetAssetByID(string, bool) public virtual Object GetAssetByID(string id, bool autoLoad = false) Parameters id string autoLoad bool Returns Object GetAssetByID<T>(string, bool) public virtual T GetAssetByID<T>(string id, bool autoLoad = false) where T : Object Parameters id string autoLoad bool Returns T Type Parameters T GetAssetInfo(string) public virtual object GetAssetInfo(string id) Parameters id string Returns object GetAssetList() Gets a list of all content (loaded or not) in this mod. public virtual List<string> GetAssetList() Returns List<string> A list of the IDs of content. GetAssetListPaginated(int, int) Gets a list of all content (loaded or not) in this mod pagniated. public virtual List<string> GetAssetListPaginated(int page = 0, int pageCount = 100) Parameters page int The page wanted. pageCount int How many asset IDs per page. Returns List<string> The page's list of IDs. GetAssetsByType<T>(bool) public virtual List<T> GetAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Returns List<T> Type Parameters T GetLoadedAssetList() Gets a list of all loaded content in this mod. public virtual List<string> GetLoadedAssetList() Returns List<string> A list of the IDs of loaded content. GetLoadedAssetListByType<T>() Gets a list of all loaded content in the mod with the given type. public virtual List<string> GetLoadedAssetListByType<T>() where T : Object Returns List<string> A list of the IDs of the loaded content for the given type. Type Parameters T The type of the content. HasAsset(string) public virtual bool HasAsset(string id) Parameters id string Returns bool LoadAssetByID(string) Loads an asset by the ID given. public virtual bool LoadAssetByID(string id) Parameters id string The ID of the asset. Returns bool True if the asset was loaded; otherwise false. LoadAssetByIDAsync(string) Loads an asset by the ID given asynchronously. public virtual UniTask<bool> LoadAssetByIDAsync(string id) Parameters id string The ID of the asset. Returns UniTask<bool> True if the asset was loaded; otherwise false. LoadAssetByIDAsync<T>(string) Loads an asset by the ID given asynchronously. public virtual UniTask<bool> LoadAssetByIDAsync<T>(string id) where T : Object Parameters id string The ID of the asset. Returns UniTask<bool> True if the asset was loaded; otherwise false. Type Parameters T OnLoad() Called right when the mod this ModInfoAsset belongs to loads. public virtual void OnLoad() OnUnload() Called right before the mod this ModInfoAsset belongs to unloads. public virtual void OnUnload() RegisterQuantumAsset(string) Registers an asset to the quantum database. public virtual void RegisterQuantumAsset(string id) Parameters id string UnloadAssetByID(string) public virtual void UnloadAssetByID(string id) Parameters id string UnloadAssetsByType<T>(bool) public virtual void UnloadAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Type Parameters T UnregisterQuantumAsset(string) Deregisters an asset from the quantum database. public virtual void UnregisterQuantumAsset(string id) Parameters id string"
  },
  "api/Global.BaseModItemAsset.html": {
    "href": "api/Global.BaseModItemAsset.html",
    "title": "Class BaseModItemAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseModItemAsset Namespace Global Assembly rwby.dll public abstract class BaseModItemAsset : ScriptableObject Inheritance object Object ScriptableObject BaseModItemAsset"
  },
  "api/Global.BaseModLoader.html": {
    "href": "api/Global.BaseModLoader.html",
    "title": "Class BaseModLoader | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseModLoader Namespace Global Assembly rwby.dll public class BaseModLoader Inheritance object BaseModLoader Derived AddressablesModLoader LocalModLoader Properties LoaderType public virtual ModLoaderType LoaderType { get; } Property Value ModLoaderType Methods TryLoadMod(ModManager, AvailableModDefinition) public virtual UniTask<LoadedModDefinition> TryLoadMod(ModManager modManager, AvailableModDefinition modDefinition) Parameters modManager ModManager modDefinition AvailableModDefinition Returns UniTask<LoadedModDefinition> TryUnloadMod(ModManager, LoadedModDefinition) public virtual bool TryUnloadMod(ModManager modManager, LoadedModDefinition modLoadedDefinition) Parameters modManager ModManager modLoadedDefinition LoadedModDefinition Returns bool"
  },
  "api/Global.ControllerGlyphDatabase.html": {
    "href": "api/Global.ControllerGlyphDatabase.html",
    "title": "Class ControllerGlyphDatabase | Rwby Vytal Versus Documentation",
    "keywords": "Class ControllerGlyphDatabase Namespace Global Assembly rwby.dll public class ControllerGlyphDatabase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ControllerGlyphDatabase Fields glyphMap public Dictionary<string, ControllerGlyphs> glyphMap Field Value Dictionary<string, ControllerGlyphs> inputManager public InputManager inputManager Field Value InputManager Methods BuildRectTransformsForAction(string, InputAction) public RectTransform[] BuildRectTransformsForAction(string deviceName, InputAction inputAction) Parameters deviceName string inputAction InputAction Returns RectTransform[] BuildRectTransformsForAction(InputDevice, InputAction) public RectTransform[] BuildRectTransformsForAction(InputDevice device, InputAction inputAction) Parameters device InputDevice inputAction InputAction Returns RectTransform[] GetGlyphsForAction(string, InputAction) public Sprite[] GetGlyphsForAction(string deviceName, InputAction inputAction) Parameters deviceName string inputAction InputAction Returns Sprite[] GetGlyphsForAction(InputDevice, InputAction) public Sprite[] GetGlyphsForAction(InputDevice device, InputAction inputAction) Parameters device InputDevice inputAction InputAction Returns Sprite[] Init() public void Init()"
  },
  "api/Global.ControllerGlyphs.html": {
    "href": "api/Global.ControllerGlyphs.html",
    "title": "Class ControllerGlyphs | Rwby Vytal Versus Documentation",
    "keywords": "Class ControllerGlyphs Namespace Global Assembly rwby.dll [CreateAssetMenu(fileName = \"Controller Glyphs\")] public class ControllerGlyphs : ScriptableObject Inheritance object Object ScriptableObject ControllerGlyphs Fields UnknownBindingName public static readonly string UnknownBindingName Field Value string glyphBackgrounds public SerializedDictionary<int, Sprite> glyphBackgrounds Field Value SerializedDictionary<int, Sprite> glyphMapping public SerializedDictionary<string, GlyphEntry> glyphMapping Field Value SerializedDictionary<string, GlyphEntry> matchingControllers public string[] matchingControllers Field Value string[] tmpSpritesheetName public string tmpSpritesheetName Field Value string Methods GetBackgroundSpriteForID(int) public Sprite GetBackgroundSpriteForID(int id) Parameters id int Returns Sprite GetGlyphEntryForBinding(string) public GlyphEntry GetGlyphEntryForBinding(string bindingString) Parameters bindingString string Returns GlyphEntry GetGlyphForBinding(string) public Sprite GetGlyphForBinding(string bindingString) Parameters bindingString string Returns Sprite GetGlyphTextSpriteName(string) public string GetGlyphTextSpriteName(string bindingString) Parameters bindingString string Returns string"
  },
  "api/Global.ControlsMainScreen.html": {
    "href": "api/Global.ControlsMainScreen.html",
    "title": "Class ControlsMainScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class ControlsMainScreen Namespace Global Assembly rwby.dll public class ControlsMainScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase ControlsMainScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields createProfileButtonPrefab public Button createProfileButtonPrefab Field Value Button profilesScrollRect public ScrollRect profilesScrollRect Field Value ScrollRect selectProfileButtonPrefab public Button selectProfileButtonPrefab Field Value Button Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.ControlsProfileMappingScreen.html": {
    "href": "api/Global.ControlsProfileMappingScreen.html",
    "title": "Class ControlsProfileMappingScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class ControlsProfileMappingScreen Namespace Global Assembly rwby.dll public class ControlsProfileMappingScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase ControlsProfileMappingScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields buttonMappingPrefab public GameObject buttonMappingPrefab Field Value GameObject controlsScrollView public ScrollRect controlsScrollView Field Value ScrollRect deviceButtonPrefab public GameObject deviceButtonPrefab Field Value GameObject devicesScrollRect public ScrollRect devicesScrollRect Field Value ScrollRect mappingWindow public GameObject mappingWindow Field Value GameObject Methods BUTTON_Back() public void BUTTON_Back() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.ControlsScreen.MenuTypes.html": {
    "href": "api/Global.ControlsScreen.MenuTypes.html",
    "title": "Enum ControlsScreen.MenuTypes | Rwby Vytal Versus Documentation",
    "keywords": "Enum ControlsScreen.MenuTypes Namespace Global Assembly rwby.dll public enum ControlsScreen.MenuTypes Fields Main = 0 ProfileRemapping = 1"
  },
  "api/Global.ControlsScreen.html": {
    "href": "api/Global.ControlsScreen.html",
    "title": "Class ControlsScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class ControlsScreen Namespace Global Assembly rwby.dll public class ControlsScreen : MenuAndHandlerBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase MenuAndHandlerBase ControlsScreen Implements IMenu IMenuHandler Inherited Members MenuAndHandlerBase.menus MenuAndHandlerBase.history MenuAndHandlerBase.ResetAndForwardTo(int) MenuAndHandlerBase.Forward(int, bool) MenuAndHandlerBase.Back() MenuAndHandlerBase.GetHistory() MenuAndHandlerBase.GetCurrentMenu() MenuAndHandlerBase.HasSubmenuOpen() MenuBase.currentHandler Fields mainScreen public ControlsMainScreen mainScreen Field Value ControlsMainScreen remappingScreen public ControlsProfileMappingScreen remappingScreen Field Value ControlsProfileMappingScreen Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.DevicePickerUtility.DelegatePickerEvent.html": {
    "href": "api/Global.DevicePickerUtility.DelegatePickerEvent.html",
    "title": "Delegate DevicePickerUtility.DelegatePickerEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate DevicePickerUtility.DelegatePickerEvent Namespace Global Assembly rwby.dll public delegate void DevicePickerUtility.DelegatePickerEvent(DevicePickerUtility dpu) Parameters dpu DevicePickerUtility"
  },
  "api/Global.DevicePickerUtility.html": {
    "href": "api/Global.DevicePickerUtility.html",
    "title": "Class DevicePickerUtility | Rwby Vytal Versus Documentation",
    "keywords": "Class DevicePickerUtility Namespace Global Assembly rwby.dll public class DevicePickerUtility : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DevicePickerUtility Fields OnPickerCancel public DevicePickerUtility.DelegatePickerEvent OnPickerCancel Field Value DevicePickerUtility.DelegatePickerEvent OnPickerConfirm public DevicePickerUtility.DelegatePickerEvent OnPickerConfirm Field Value DevicePickerUtility.DelegatePickerEvent canvasObject public GameObject canvasObject Field Value GameObject defaultColor public Color defaultColor Field Value Color deviceItemPrefab public GameObject deviceItemPrefab Field Value GameObject disabledColor public Color disabledColor Field Value Color mainPanelRect public ScrollRect mainPanelRect Field Value ScrollRect playerPanelRects public ScrollRect[] playerPanelRects Field Value ScrollRect[] Methods Close() public void Close() GetValidInputPlayers() public List<List<InputDevice>> GetValidInputPlayers() Returns List<List<InputDevice>> Open(int, int) public void Open(int minimumPlayers = 0, int maximumPlayers = 4) Parameters minimumPlayers int maximumPlayers int"
  },
  "api/Global.DualsenseEdgeGamepadHID.html": {
    "href": "api/Global.DualsenseEdgeGamepadHID.html",
    "title": "Class DualsenseEdgeGamepadHID | Rwby Vytal Versus Documentation",
    "keywords": "Class DualsenseEdgeGamepadHID Namespace Global Assembly rwby.dll public class DualsenseEdgeGamepadHID : Gamepad Inheritance object InputControl InputDevice Gamepad DualsenseEdgeGamepadHID"
  },
  "api/Global.EntityInputDebugger.html": {
    "href": "api/Global.EntityInputDebugger.html",
    "title": "Class EntityInputDebugger | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityInputDebugger Namespace Global Assembly rwby.dll public class EntityInputDebugger : QuantumEntityViewComponent Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumViewComponent<IQuantumViewContext> QuantumEntityViewComponent<IQuantumViewContext> QuantumEntityViewComponent EntityInputDebugger Fields customEntityView public CustomEntityView customEntityView Field Value CustomEntityView Methods OnUpdateView() Is called from the Quantum.QuantumEntityViewUpdater on a Unity update. public override void OnUpdateView()"
  },
  "api/Global.EntityPhysicsDebugger.html": {
    "href": "api/Global.EntityPhysicsDebugger.html",
    "title": "Class EntityPhysicsDebugger | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityPhysicsDebugger Namespace Global Assembly rwby.dll public class EntityPhysicsDebugger : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityPhysicsDebugger Fields customEntityView public CustomEntityView customEntityView Field Value CustomEntityView"
  },
  "api/Global.EntityPrototypeBaker.html": {
    "href": "api/Global.EntityPrototypeBaker.html",
    "title": "Class EntityPrototypeBaker | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityPrototypeBaker Namespace Global Assembly rwby.editor.dll public class EntityPrototypeBaker Inheritance object EntityPrototypeBaker"
  },
  "api/Global.EntitySoundManager.html": {
    "href": "api/Global.EntitySoundManager.html",
    "title": "Class EntitySoundManager | Rwby Vytal Versus Documentation",
    "keywords": "Class EntitySoundManager Namespace Global Assembly rwby.dll public class EntitySoundManager : QuantumEntityViewComponent Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumViewComponent<IQuantumViewContext> QuantumEntityViewComponent<IQuantumViewContext> QuantumEntityViewComponent EntitySoundManager Fields currentlyPlayingSounds public Dictionary<Tag, List<AudioSource>> currentlyPlayingSounds Field Value Dictionary<Tag, List<AudioSource>> Methods OnUpdateView() Is called from the Quantum.QuantumEntityViewUpdater on a Unity update. public override void OnUpdateView() PlaySound(SoundEntry, GameObject, Vector3, float, float, float, Tag, AudioSourceConfig, EventKey, bool) public AudioSource PlaySound(SoundEntry soundEntry, GameObject parent, Vector3 position, float time, float volume, float pitch, Tag tag, AudioSourceConfig audioSourceConfig, EventKey key, bool stopOtherInstances = false) Parameters soundEntry SoundEntry parent GameObject position Vector3 time float volume float pitch float tag Tag audioSourceConfig AudioSourceConfig key EventKey stopOtherInstances bool Returns AudioSource StopSound(AudioSource) public void StopSound(AudioSource audioSource) Parameters audioSource AudioSource"
  },
  "api/Global.EntityStateDebugger.html": {
    "href": "api/Global.EntityStateDebugger.html",
    "title": "Class EntityStateDebugger | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityStateDebugger Namespace Global Assembly rwby.dll public class EntityStateDebugger : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityStateDebugger Fields customEntityView public CustomEntityView customEntityView Field Value CustomEntityView latestStates public List<HNSFState> latestStates Field Value List<HNSFState>"
  },
  "api/Global.EntityViewTrackECB.html": {
    "href": "api/Global.EntityViewTrackECB.html",
    "title": "Class EntityViewTrackECB | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityViewTrackECB Namespace Global Assembly rwby.dll public class EntityViewTrackECB : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityViewTrackECB Fields currentLocation public Vector3 currentLocation Field Value Vector3 customEntityView public CustomEntityView customEntityView Field Value CustomEntityView locationSmoothed public Vector3 locationSmoothed Field Value Vector3 offset public Vector3 offset Field Value Vector3 smoothTime public float smoothTime Field Value float Methods UpdateLocation(QuantumGame) public void UpdateLocation(QuantumGame game) Parameters game QuantumGame"
  },
  "api/Global.EntityVisibilityUpdater.html": {
    "href": "api/Global.EntityVisibilityUpdater.html",
    "title": "Class EntityVisibilityUpdater | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityVisibilityUpdater Namespace Global Assembly rwby.dll public class EntityVisibilityUpdater : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityVisibilityUpdater Fields customEntityView public CustomEntityView customEntityView Field Value CustomEntityView viewVisibility public bool viewVisibility Field Value bool visibilityGameobjects public GameObject[] visibilityGameobjects Field Value GameObject[]"
  },
  "api/Global.ExButton.html": {
    "href": "api/Global.ExButton.html",
    "title": "Class ExButton | Rwby Vytal Versus Documentation",
    "keywords": "Class ExButton Namespace Global Assembly rwby.dll public class ExButton : Button Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour Selectable Button ExButton Properties onSelected public Button.ButtonClickedEvent onSelected { get; set; } Property Value Button.ButtonClickedEvent Methods OnSelect(BaseEventData) public override void OnSelect(BaseEventData eventData) Parameters eventData BaseEventData"
  },
  "api/Global.FPConverter.html": {
    "href": "api/Global.FPConverter.html",
    "title": "Class FPConverter | Rwby Vytal Versus Documentation",
    "keywords": "Class FPConverter Namespace Global Assembly rwby.editor.dll public class FPConverter : EditorWindow Inheritance object Object ScriptableObject EditorWindow FPConverter Methods OnGUI() public virtual void OnGUI() ShowWindow() [MenuItem(\"Quantum/FP Converter\")] public static void ShowWindow()"
  },
  "api/Global.FighterContentHelper.html": {
    "href": "api/Global.FighterContentHelper.html",
    "title": "Class FighterContentHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterContentHelper Namespace Global Assembly rwby.dll public static class FighterContentHelper Inheritance object FighterContentHelper Methods GetAllFighterDefinitions() public static UniTask<List<IFighterDefinition>> GetAllFighterDefinitions() Returns UniTask<List<IFighterDefinition>> UnloadDefinitions(List<IFighterDefinition>) public static void UnloadDefinitions(List<IFighterDefinition> fightersToUnload) Parameters fightersToUnload List<IFighterDefinition>"
  },
  "api/Global.FighterShakeManager.html": {
    "href": "api/Global.FighterShakeManager.html",
    "title": "Class FighterShakeManager | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterShakeManager Namespace Global Assembly rwby.dll public class FighterShakeManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FighterShakeManager Fields currentShakeLength public float currentShakeLength Field Value float shakeAmt public float shakeAmt Field Value float shakeCurve public AnimationCurve shakeCurve Field Value AnimationCurve shakeSpeed public float shakeSpeed Field Value float shaker public Transform shaker Field Value Transform view public CustomEntityView view Field Value CustomEntityView Methods Shake(float) public virtual void Shake(float shakeLength) Parameters shakeLength float StopShake() public virtual void StopShake()"
  },
  "api/Global.FighterVFXManager.html": {
    "href": "api/Global.FighterVFXManager.html",
    "title": "Class FighterVFXManager | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterVFXManager Namespace Global Assembly rwby.dll public class FighterVFXManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FighterVFXManager Fields currentPlayingEffects public List<VisualEffectBase> currentPlayingEffects Field Value List<VisualEffectBase> view public CustomEntityView view Field Value CustomEntityView Methods Destroy(VisualEffectBase) public virtual void Destroy(VisualEffectBase visualEffect) Parameters visualEffect VisualEffectBase Play(VisualEffectBase) public virtual void Play(VisualEffectBase visualEffect) Parameters visualEffect VisualEffectBase StopLastEffect(bool) public virtual void StopLastEffect(bool clearParticles) Parameters clearParticles bool"
  },
  "api/Global.FighterViewHandle.html": {
    "href": "api/Global.FighterViewHandle.html",
    "title": "Class FighterViewHandle | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterViewHandle Namespace Global Assembly rwby.dll public class FighterViewHandle : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FighterViewHandle Fields targetPoint public Transform targetPoint Field Value Transform"
  },
  "api/Global.GamemodeContentHelper.html": {
    "href": "api/Global.GamemodeContentHelper.html",
    "title": "Class GamemodeContentHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class GamemodeContentHelper Namespace Global Assembly rwby.dll public static class GamemodeContentHelper Inheritance object GamemodeContentHelper Methods GetAllGamemodeDefinitions() public static UniTask<List<BaseGamemodeDefinition>> GetAllGamemodeDefinitions() Returns UniTask<List<BaseGamemodeDefinition>> UnloadGamemodeDefinitions(List<BaseGamemodeDefinition>) public static void UnloadGamemodeDefinitions(List<BaseGamemodeDefinition> gamemodesToUnload) Parameters gamemodesToUnload List<BaseGamemodeDefinition>"
  },
  "api/Global.GamemodeTeamConfig.html": {
    "href": "api/Global.GamemodeTeamConfig.html",
    "title": "Struct GamemodeTeamConfig | Rwby Vytal Versus Documentation",
    "keywords": "Struct GamemodeTeamConfig Namespace Global Assembly rwby.dll [Serializable] public struct GamemodeTeamConfig Fields maximumPlayers public int maximumPlayers Field Value int minimumPlayers public int minimumPlayers Field Value int name public string name Field Value string"
  },
  "api/Global.GeneralHelpers.html": {
    "href": "api/Global.GeneralHelpers.html",
    "title": "Class GeneralHelpers | Rwby Vytal Versus Documentation",
    "keywords": "Class GeneralHelpers Namespace Global Assembly rwby.dll public static class GeneralHelpers Inheritance object GeneralHelpers Fields displayNameToRegion public static Dictionary<string, string> displayNameToRegion Field Value Dictionary<string, string> quantumRegions public static string[] quantumRegions Field Value string[] regionToDisplayName public static Dictionary<string, string> regionToDisplayName Field Value Dictionary<string, string> Methods Eerp(float, float, float) public static float Eerp(float a, float b, float t) Parameters a float b float t float Returns float GetAssetRefID(AssetReference) public static UniTask<string> GetAssetRefID(AssetReference assetReference) Parameters assetReference AssetReference Returns UniTask<string> GetSnapToPositionToBringChildIntoView(ScrollRect, RectTransform) public static Vector2 GetSnapToPositionToBringChildIntoView(this ScrollRect instance, RectTransform child) Parameters instance ScrollRect child RectTransform Returns Vector2 LinearRolloff(AudioSource) public static void LinearRolloff(AudioSource AS) Parameters AS AudioSource RealisticRolloff(AudioSource) public static void RealisticRolloff(AudioSource AS) Parameters AS AudioSource SFXSpatialBlend(AudioSource) public static void SFXSpatialBlend(AudioSource AS) Parameters AS AudioSource TrySetupLocalPlayers() public static UniTask<bool> TrySetupLocalPlayers() Returns UniTask<bool> WorldToCanvasPosition(Canvas, Camera, Vector3) public static Vector2 WorldToCanvasPosition(Canvas canvas, Camera worldCamera, Vector3 worldPosition) Parameters canvas Canvas worldCamera Camera worldPosition Vector3 Returns Vector2 WorldToScreenSpace(Vector3, Camera, RectTransform) public static Vector3 WorldToScreenSpace(Vector3 worldPos, Camera cam, RectTransform area) Parameters worldPos Vector3 cam Camera area RectTransform Returns Vector3"
  },
  "api/Global.GlobalFighterEventManager.html": {
    "href": "api/Global.GlobalFighterEventManager.html",
    "title": "Class GlobalFighterEventManager | Rwby Vytal Versus Documentation",
    "keywords": "Class GlobalFighterEventManager Namespace Global Assembly rwby.dll [Serializable] public class GlobalFighterEventManager Inheritance object GlobalFighterEventManager Fields viewUpdater public QuantumEntityViewUpdater viewUpdater Field Value QuantumEntityViewUpdater Methods Breakdown() public void Breakdown() Initialize() public void Initialize()"
  },
  "api/Global.GlobalSoundManager.html": {
    "href": "api/Global.GlobalSoundManager.html",
    "title": "Class GlobalSoundManager | Rwby Vytal Versus Documentation",
    "keywords": "Class GlobalSoundManager Namespace Global Assembly rwby.dll [Serializable] public class GlobalSoundManager Inheritance object GlobalSoundManager Fields viewUpdater public QuantumEntityViewUpdater viewUpdater Field Value QuantumEntityViewUpdater Methods Initialize() public void Initialize() Teardown() public void Teardown()"
  },
  "api/Global.GlobalVFXManager.html": {
    "href": "api/Global.GlobalVFXManager.html",
    "title": "Class GlobalVFXManager | Rwby Vytal Versus Documentation",
    "keywords": "Class GlobalVFXManager Namespace Global Assembly rwby.dll [Serializable] public class GlobalVFXManager Inheritance object GlobalVFXManager Fields viewUpdater public QuantumEntityViewUpdater viewUpdater Field Value QuantumEntityViewUpdater Methods Breakdown() public void Breakdown() Initialize() public void Initialize()"
  },
  "api/Global.GlyphEntry.html": {
    "href": "api/Global.GlyphEntry.html",
    "title": "Class GlyphEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class GlyphEntry Namespace Global Assembly rwby.dll [Serializable] public class GlyphEntry Inheritance object GlyphEntry Fields glyph public Sprite glyph Field Value Sprite glyphBackgroundID public int glyphBackgroundID Field Value int glyphNeg public Sprite glyphNeg Field Value Sprite glyphPos public Sprite glyphPos Field Value Sprite textSpriteName public string textSpriteName Field Value string"
  },
  "api/Global.GroupVisualEffect.html": {
    "href": "api/Global.GroupVisualEffect.html",
    "title": "Class GroupVisualEffect | Rwby Vytal Versus Documentation",
    "keywords": "Class GroupVisualEffect Namespace Global Assembly rwby.dll public class GroupVisualEffect : VisualEffectBase Inheritance object Object Component Behaviour MonoBehaviour VisualEffectBase GroupVisualEffect Inherited Members VisualEffectBase.CurrentTime VisualEffectBase.status VisualEffectBase.autoDestroy VisualEffectBase.autoDestroyAfter VisualEffectBase.entryAsset VisualEffectBase.freezeDuringHitstop VisualEffectBase.FixedUpdate() Fields visualEffects public VisualEffectBase[] visualEffects Field Value VisualEffectBase[] Methods DestroyEffect() public override void DestroyEffect() Freeze() public override void Freeze() Play() public override void Play() Resume() public override void Resume() SeekTo(float, bool) public override void SeekTo(float time, bool play = true) Parameters time float play bool SetSeed(uint) public override void SetSeed(uint seed) Parameters seed uint Stop(bool) public override void Stop(bool clearParticles = true) Parameters clearParticles bool"
  },
  "api/Global.HudElementContentHelper.html": {
    "href": "api/Global.HudElementContentHelper.html",
    "title": "Class HudElementContentHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class HudElementContentHelper Namespace Global Assembly rwby.dll public static class HudElementContentHelper Inheritance object HudElementContentHelper Methods GetAllContentDefinitions() public static UniTask<List<BaseHudElementDefinition>> GetAllContentDefinitions() Returns UniTask<List<BaseHudElementDefinition>> UnloadContentDefinitions(List<BaseHudElementDefinition>) public static void UnloadContentDefinitions(List<BaseHudElementDefinition> contentToUnload) Parameters contentToUnload List<BaseHudElementDefinition>"
  },
  "api/Global.IContentDefinition.html": {
    "href": "api/Global.IContentDefinition.html",
    "title": "Class IContentDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class IContentDefinition Namespace Global Assembly rwby.dll [Serializable] public abstract class IContentDefinition : ScriptableObject Inheritance object Object ScriptableObject IContentDefinition Derived BaseContentDefinitionContainer<T> BaseFighterDefinitionContainer BaseGamemodeDefinition BaseGamemodeDefinitionContainer BaseHudElementDefinition BaseMapDefinitionContainer IFighterDefinition IMapDefinition BaseCommandListDefinition BaseCommandListEntry BaseCommandListMovesetDefinition BaseSongDefinition Properties Description public virtual string Description { get; } Property Value string ID public virtual string ID { get; set; } Property Value string Name public virtual string Name { get; } Property Value string Tags public virtual List<string> Tags { get; } Property Value List<string> modDefinition public virtual LoadedModDefinition modDefinition { get; set; } Property Value LoadedModDefinition Methods Load(string) public virtual UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadAssets() public virtual UniTask<bool> LoadAssets() Returns UniTask<bool> RegisterQuantumAsset() public virtual void RegisterQuantumAsset() Unload() public virtual void Unload() UnloadAssets() public virtual void UnloadAssets() UnregisterQuantumAsset() public virtual void UnregisterQuantumAsset()"
  },
  "api/Global.IControllerChangedCallback.html": {
    "href": "api/Global.IControllerChangedCallback.html",
    "title": "Interface IControllerChangedCallback | Rwby Vytal Versus Documentation",
    "keywords": "Interface IControllerChangedCallback Namespace Global Assembly rwby.dll public interface IControllerChangedCallback"
  },
  "api/Global.IExternalOptionCallback.html": {
    "href": "api/Global.IExternalOptionCallback.html",
    "title": "Interface IExternalOptionCallback | Rwby Vytal Versus Documentation",
    "keywords": "Interface IExternalOptionCallback Namespace Global Assembly rwby.dll public interface IExternalOptionCallback Methods WhenElementSelected(MenuLabelExternalOptionElement, BaseEventData) void WhenElementSelected(MenuLabelExternalOptionElement element, BaseEventData eventData) Parameters element MenuLabelExternalOptionElement eventData BaseEventData"
  },
  "api/Global.IFighterDefinition.html": {
    "href": "api/Global.IFighterDefinition.html",
    "title": "Class IFighterDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class IFighterDefinition Namespace Global Assembly rwby.dll public abstract class IFighterDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition IFighterDefinition Derived AddressablesFighterDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Properties Aura public virtual int Aura { get; } Property Value int AuraGainPerFrame public virtual int AuraGainPerFrame { get; } Property Value int Health public virtual int Health { get; } Property Value int Selectable public virtual bool Selectable { get; } Property Value bool Methods GetCommandList() public abstract BaseCommandListDefinition GetCommandList() Returns BaseCommandListDefinition GetFighter() public abstract GameObject GetFighter() Returns GameObject GetFighterQuantum() public abstract CharaDefinitionAsset GetFighterQuantum() Returns CharaDefinitionAsset GetHUDReferences() public abstract ModAssetSoftReference[] GetHUDReferences() Returns ModAssetSoftReference[]"
  },
  "api/Global.IMapDefinition.html": {
    "href": "api/Global.IMapDefinition.html",
    "title": "Class IMapDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class IMapDefinition Namespace Global Assembly rwby.dll [Serializable] public abstract class IMapDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition IMapDefinition Derived AddressablesMapDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetMapAsset() public abstract Map GetMapAsset() Returns Map GetSceneName() public abstract string GetSceneName() Returns string LoadMap(LoadSceneMode) public abstract UniTask<bool> LoadMap(LoadSceneMode loadMode) Parameters loadMode LoadSceneMode Returns UniTask<bool> UnloadMap() public abstract UniTask UnloadMap() Returns UniTask"
  },
  "api/Global.INavigationStyleChanged.html": {
    "href": "api/Global.INavigationStyleChanged.html",
    "title": "Interface INavigationStyleChanged | Rwby Vytal Versus Documentation",
    "keywords": "Interface INavigationStyleChanged Namespace Global Assembly rwby.dll public interface INavigationStyleChanged Methods NavigationStyleChanged(InputPlayerManager, NavigationType) void NavigationStyleChanged(InputPlayerManager inputPlayer, InputPlayerManager.NavigationType navigationType) Parameters inputPlayer InputPlayerManager navigationType InputPlayerManager.NavigationType"
  },
  "api/Global.InputPlayerManager.DelegateDeviceChanged.html": {
    "href": "api/Global.InputPlayerManager.DelegateDeviceChanged.html",
    "title": "Delegate InputPlayerManager.DelegateDeviceChanged | Rwby Vytal Versus Documentation",
    "keywords": "Delegate InputPlayerManager.DelegateDeviceChanged Namespace Global Assembly rwby.dll public delegate void InputPlayerManager.DelegateDeviceChanged()"
  },
  "api/Global.InputPlayerManager.DelegateNavigationStyleChange.html": {
    "href": "api/Global.InputPlayerManager.DelegateNavigationStyleChange.html",
    "title": "Delegate InputPlayerManager.DelegateNavigationStyleChange | Rwby Vytal Versus Documentation",
    "keywords": "Delegate InputPlayerManager.DelegateNavigationStyleChange Namespace Global Assembly rwby.dll public delegate void InputPlayerManager.DelegateNavigationStyleChange(InputPlayerManager inputPlayer, InputPlayerManager.NavigationType navigationType) Parameters inputPlayer InputPlayerManager navigationType InputPlayerManager.NavigationType"
  },
  "api/Global.InputPlayerManager.DelegateWhenControlSchemeChanged.html": {
    "href": "api/Global.InputPlayerManager.DelegateWhenControlSchemeChanged.html",
    "title": "Delegate InputPlayerManager.DelegateWhenControlSchemeChanged | Rwby Vytal Versus Documentation",
    "keywords": "Delegate InputPlayerManager.DelegateWhenControlSchemeChanged Namespace Global Assembly rwby.dll public delegate void InputPlayerManager.DelegateWhenControlSchemeChanged(InputPlayerManager inputPlayer, InputManager.ControlSchemeType controlScheme) Parameters inputPlayer InputPlayerManager controlScheme InputManager.ControlSchemeType"
  },
  "api/Global.InputPlayerManager.NavigationType.html": {
    "href": "api/Global.InputPlayerManager.NavigationType.html",
    "title": "Enum InputPlayerManager.NavigationType | Rwby Vytal Versus Documentation",
    "keywords": "Enum InputPlayerManager.NavigationType Namespace Global Assembly rwby.dll public enum InputPlayerManager.NavigationType Fields Controller_Or_Keyboard = 0 Mouse = 1"
  },
  "api/Global.InputPlayerManager.html": {
    "href": "api/Global.InputPlayerManager.html",
    "title": "Class InputPlayerManager | Rwby Vytal Versus Documentation",
    "keywords": "Class InputPlayerManager Namespace Global Assembly rwby.dll public class InputPlayerManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InputPlayerManager Fields assignedDevices public HashSet<InputDevice> assignedDevices Field Value HashSet<InputDevice> autoSwitchControlSchemes public bool autoSwitchControlSchemes Field Value bool currentDevices public List<InputDevice> currentDevices Field Value List<InputDevice> inputActions public InputActions inputActions Field Value InputActions lastNavigationType public InputPlayerManager.NavigationType lastNavigationType Field Value InputPlayerManager.NavigationType mpEventSystem public MultiplayerEventSystem mpEventSystem Field Value MultiplayerEventSystem navigationStyleUpdateRate public int navigationStyleUpdateRate Field Value int onControlSchemeChanged public InputPlayerManager.DelegateWhenControlSchemeChanged onControlSchemeChanged Field Value InputPlayerManager.DelegateWhenControlSchemeChanged onCurrentDeviceChanged public InputPlayerManager.DelegateDeviceChanged onCurrentDeviceChanged Field Value InputPlayerManager.DelegateDeviceChanged onNavigationStyleChanged public InputPlayerManager.DelegateNavigationStyleChange onNavigationStyleChanged Field Value InputPlayerManager.DelegateNavigationStyleChange playerInput public PlayerInput playerInput Field Value PlayerInput uiInputModule public InputSystemUIInputModule uiInputModule Field Value InputSystemUIInputModule Properties CurrentProfile public string CurrentProfile { get; } Property Value string Id public int Id { get; } Property Value int User public InputUser User { get; } Property Value InputUser Methods ActivateInput() public void ActivateInput() ActivateUIHandling() public void ActivateUIHandling() ApplyBindingOverrides(string) public void ApplyBindingOverrides(string overrides) Parameters overrides string ApplyProfile(string) public void ApplyProfile(string profileName) Parameters profileName string AssignInputDevice(InputDevice) public void AssignInputDevice(InputDevice inputDevice) Parameters inputDevice InputDevice AssignInputDevices(Gamepad[]) public void AssignInputDevices(Gamepad[] gamepadList) Parameters gamepadList Gamepad[] AssignInputDevices(InputDevice[]) public void AssignInputDevices(InputDevice[] inputDeviceList) Parameters inputDeviceList InputDevice[] AssignKeyboardAndMouse() public void AssignKeyboardAndMouse() ClearAssignedDevices() public void ClearAssignedDevices() DeactivateInput() public void DeactivateInput() DeactivateUIHandling() public void DeactivateUIHandling() GetBindingOverridesAsJson() public string GetBindingOverridesAsJson() Returns string GetCurrentDeviceType() public InputManager.ControlSchemeType GetCurrentDeviceType() Returns InputManager.ControlSchemeType Initialize(int) public void Initialize(int id) Parameters id int RemoveAllDevices() public void RemoveAllDevices() RemoveDevice(InputDevice) public void RemoveDevice(InputDevice inputDevice) Parameters inputDevice InputDevice RemoveDevices(InputDevice[]) public void RemoveDevices(InputDevice[] inputDevices) Parameters inputDevices InputDevice[] ResetBindingOverrides() public void ResetBindingOverrides() SetID(int) public void SetID(int id) Parameters id int SetUIRoot(GameObject) public void SetUIRoot(GameObject uiRoot) Parameters uiRoot GameObject SwitchToDevice(InputDevice) public void SwitchToDevice(InputDevice device) Parameters device InputDevice SwitchToPlayerMap() public void SwitchToPlayerMap() SwitchToUIMap() public void SwitchToUIMap() Teardown() public void Teardown() UpdateDevices() public void UpdateDevices() Vibrate(float) public void Vibrate(float vibrateTime) Parameters vibrateTime float"
  },
  "api/Global.InputRumbleManager.html": {
    "href": "api/Global.InputRumbleManager.html",
    "title": "Class InputRumbleManager | Rwby Vytal Versus Documentation",
    "keywords": "Class InputRumbleManager Namespace Global Assembly rwby.dll public class InputRumbleManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InputRumbleManager"
  },
  "api/Global.LoadedModDefinition.html": {
    "href": "api/Global.LoadedModDefinition.html",
    "title": "Class LoadedModDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class LoadedModDefinition Namespace Global Assembly rwby.dll [Serializable] public class LoadedModDefinition Inheritance object LoadedModDefinition Derived AddressablesLoadedModDefinition Fields information [NonSerialized] public AvailableModDefinition information Field Value AvailableModDefinition modAsset public BaseModInfoAsset modAsset Field Value BaseModInfoAsset Methods HasValidModAsset() public bool HasValidModAsset() Returns bool"
  },
  "api/Global.LocalLoadedModDefinition.html": {
    "href": "api/Global.LocalLoadedModDefinition.html",
    "title": "Class LocalLoadedModDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class LocalLoadedModDefinition Namespace Global Assembly rwby.dll public class LocalLoadedModDefinition : AddressablesLoadedModDefinition Inheritance object LoadedModDefinition AddressablesLoadedModDefinition LocalLoadedModDefinition Inherited Members AddressablesLoadedModDefinition.resourceLocatorHandle AddressablesLoadedModDefinition.resourceLocator LoadedModDefinition.information LoadedModDefinition.modAsset LoadedModDefinition.HasValidModAsset()"
  },
  "api/Global.LocalModLoader.html": {
    "href": "api/Global.LocalModLoader.html",
    "title": "Class LocalModLoader | Rwby Vytal Versus Documentation",
    "keywords": "Class LocalModLoader Namespace Global Assembly rwby.dll public class LocalModLoader : BaseModLoader Inheritance object BaseModLoader LocalModLoader Properties LoaderType public override ModLoaderType LoaderType { get; } Property Value ModLoaderType Methods TryLoadMod(ModManager, AvailableModDefinition) public override UniTask<LoadedModDefinition> TryLoadMod(ModManager modManager, AvailableModDefinition modDefinition) Parameters modManager ModManager modDefinition AvailableModDefinition Returns UniTask<LoadedModDefinition> TryUnloadMod(ModManager, LoadedModDefinition) public override bool TryUnloadMod(ModManager modManager, LoadedModDefinition modLoadedDefinition) Parameters modManager ModManager modLoadedDefinition LoadedModDefinition Returns bool"
  },
  "api/Global.MapContentHelper.html": {
    "href": "api/Global.MapContentHelper.html",
    "title": "Class MapContentHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class MapContentHelper Namespace Global Assembly rwby.dll public static class MapContentHelper Inheritance object MapContentHelper Methods GetAllMapDefinitions() public static UniTask<List<IMapDefinition>> GetAllMapDefinitions() Returns UniTask<List<IMapDefinition>> UnloadMapDefinitions(List<IMapDefinition>) public static void UnloadMapDefinitions(List<IMapDefinition> mapsToUnload) Parameters mapsToUnload List<IMapDefinition>"
  },
  "api/Global.MapViewManager.html": {
    "href": "api/Global.MapViewManager.html",
    "title": "Class MapViewManager | Rwby Vytal Versus Documentation",
    "keywords": "Class MapViewManager Namespace Global Assembly rwby.dll public class MapViewManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MapViewManager Fields genericVictoryScreenDirector [Header(\"Victory Screen\")] public ActorCutscenePlayer genericVictoryScreenDirector Field Value ActorCutscenePlayer mapIntroCutscenePlayer public ActorCutscenePlayer mapIntroCutscenePlayer Field Value ActorCutscenePlayer victoryScreenObjectsToDisable public GameObject[] victoryScreenObjectsToDisable Field Value GameObject[] victoryScreenObjectsToEnable public GameObject[] victoryScreenObjectsToEnable Field Value GameObject[] Methods StartVictoryScreen() public void StartVictoryScreen()"
  },
  "api/Global.MenuAndHandlerBase.html": {
    "href": "api/Global.MenuAndHandlerBase.html",
    "title": "Class MenuAndHandlerBase | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuAndHandlerBase Namespace Global Assembly rwby.dll public class MenuAndHandlerBase : MenuBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase MenuAndHandlerBase Implements IMenu IMenuHandler Derived ControlsScreen NetworkLobbySessionMatchCreationScreen Inherited Members MenuBase.currentHandler Fields history [SerializeField] protected List<int> history Field Value List<int> menus public Dictionary<int, MenuBase> menus Field Value Dictionary<int, MenuBase> Methods Back() public bool Back() Returns bool Forward(int, bool) public bool Forward(int menu, bool autoClose = true) Parameters menu int autoClose bool Returns bool GetCurrentMenu() public IMenu GetCurrentMenu() Returns IMenu GetHistory() public IList GetHistory() Returns IList HasSubmenuOpen() public bool HasSubmenuOpen() Returns bool Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler ResetAndForwardTo(int) public virtual void ResetAndForwardTo(int menuToForwardTo) Parameters menuToForwardTo int TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.MenuHandlerBase.html": {
    "href": "api/Global.MenuHandlerBase.html",
    "title": "Class MenuHandlerBase | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuHandlerBase Namespace Global Assembly rwby.dll public class MenuHandlerBase : MonoBehaviour, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuHandlerBase Implements IMenuHandler Derived NetworkLobbySessionMenuHandler Fields history [SerializeField] protected List<int> history Field Value List<int> menus public Dictionary<int, MenuBase> menus Field Value Dictionary<int, MenuBase> Methods Back() public virtual bool Back() Returns bool Forward(int, bool) public virtual bool Forward(int menu, bool autoClose = true) Parameters menu int autoClose bool Returns bool GetCurrentMenu() public virtual IMenu GetCurrentMenu() Returns IMenu GetHistory() public virtual IList GetHistory() Returns IList GetPreviousMenu() public virtual IMenu GetPreviousMenu() Returns IMenu HasSubmenuOpen() public bool HasSubmenuOpen() Returns bool ResetAndForwardTo(int) public virtual void ResetAndForwardTo(int menuToForwardTo) Parameters menuToForwardTo int"
  },
  "api/Global.ModAssetReference.html": {
    "href": "api/Global.ModAssetReference.html",
    "title": "Class ModAssetReference | Rwby Vytal Versus Documentation",
    "keywords": "Class ModAssetReference Namespace Global Assembly rwby.dll [Serializable] public class ModAssetReference Inheritance object ModAssetReference Fields assetID public string assetID Field Value string modDefinition [NonSerialized] public AvailableModDefinition modDefinition Field Value AvailableModDefinition"
  },
  "api/Global.ModAssetSoftReference.html": {
    "href": "api/Global.ModAssetSoftReference.html",
    "title": "Struct ModAssetSoftReference | Rwby Vytal Versus Documentation",
    "keywords": "Struct ModAssetSoftReference Namespace Global Assembly rwby.dll [Serializable] public struct ModAssetSoftReference Constructors ModAssetSoftReference(IFighterDefinition) public ModAssetSoftReference(IFighterDefinition definition) Parameters definition IFighterDefinition Fields assetID public string assetID Field Value string mod public string mod Field Value string Methods Equals(ModAssetSoftReference) public bool Equals(ModAssetSoftReference other) Parameters other ModAssetSoftReference Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(ModAssetSoftReference, ModAssetSoftReference) public static bool operator ==(ModAssetSoftReference assetA, ModAssetSoftReference assetB) Parameters assetA ModAssetSoftReference assetB ModAssetSoftReference Returns bool operator !=(ModAssetSoftReference, ModAssetSoftReference) public static bool operator !=(ModAssetSoftReference assetA, ModAssetSoftReference assetB) Parameters assetA ModAssetSoftReference assetB ModAssetSoftReference Returns bool"
  },
  "api/Global.ModContentManager.html": {
    "href": "api/Global.ModContentManager.html",
    "title": "Class ModContentManager | Rwby Vytal Versus Documentation",
    "keywords": "Class ModContentManager Namespace Global Assembly rwby.dll public class ModContentManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ModContentManager Fields gameManager public GameManager gameManager Field Value GameManager modManager public ModManager modManager Field Value ModManager Methods GetAssetFromMod(LoadedModDefinition, string, bool) public Object GetAssetFromMod(LoadedModDefinition loadedModDefinition, string assetID, bool autoLoad = false) Parameters loadedModDefinition LoadedModDefinition assetID string autoLoad bool Returns Object GetAssetFromMod<T>(LoadedModDefinition, string, bool) public T GetAssetFromMod<T>(LoadedModDefinition loadedModDefinition, string assetID, bool autoLoad = false) where T : Object Parameters loadedModDefinition LoadedModDefinition assetID string autoLoad bool Returns T Type Parameters T GetAssetFromMod<T>(string, string, bool) public T GetAssetFromMod<T>(string modId, string assetID, bool autoLoad = false) where T : Object Parameters modId string assetID string autoLoad bool Returns T Type Parameters T GetAssetFromMods(string, bool) public List<Object> GetAssetFromMods(string assetID, bool autoLoad = false) Parameters assetID string autoLoad bool Returns List<Object> GetAssetList() public List<string> GetAssetList() Returns List<string> GetLoadedAssetList() public List<string> GetLoadedAssetList() Returns List<string> Init() public void Init() LoadAllAssetsByTypeAsync<T>() public UniTask LoadAllAssetsByTypeAsync<T>() where T : Object Returns UniTask Type Parameters T LoadAllAssetsByType<T>() public void LoadAllAssetsByType<T>() where T : Object Type Parameters T LoadAllAssetsFromMod(LoadedModDefinition) public bool LoadAllAssetsFromMod(LoadedModDefinition loadedModDefinition) Parameters loadedModDefinition LoadedModDefinition Returns bool LoadAllAssetsFromModAsync(LoadedModDefinition) public UniTask<bool> LoadAllAssetsFromModAsync(LoadedModDefinition loadedModDefinition) Parameters loadedModDefinition LoadedModDefinition Returns UniTask<bool> LoadAllAssetsFromModByTypeAsync<T>(LoadedModDefinition) public UniTask LoadAllAssetsFromModByTypeAsync<T>(LoadedModDefinition loadedModDefinition) where T : Object Parameters loadedModDefinition LoadedModDefinition Returns UniTask Type Parameters T LoadAllAssetsFromModByType<T>(LoadedModDefinition) public void LoadAllAssetsFromModByType<T>(LoadedModDefinition loadedModDefinition) where T : Object Parameters loadedModDefinition LoadedModDefinition Type Parameters T LoadAssetFromMod(LoadedModDefinition, string) public bool LoadAssetFromMod(LoadedModDefinition loadedModDefinition, string assetID) Parameters loadedModDefinition LoadedModDefinition assetID string Returns bool LoadAssetFromModAsync(LoadedModDefinition, string) public UniTask<bool> LoadAssetFromModAsync(LoadedModDefinition loadedModDefinition, string assetID) Parameters loadedModDefinition LoadedModDefinition assetID string Returns UniTask<bool> LoadAssetFromModAsync(string, string) public UniTask<bool> LoadAssetFromModAsync(string modID, string assetID) Parameters modID string assetID string Returns UniTask<bool> LoadAssetFromModsAsync(string) public UniTask LoadAssetFromModsAsync(string assetID) Parameters assetID string Returns UniTask ModHasAsset(LoadedModDefinition, string) public bool ModHasAsset(LoadedModDefinition loadedModDefinition, string assetID) Parameters loadedModDefinition LoadedModDefinition assetID string Returns bool ModHasAsset(string, string) public bool ModHasAsset(string modID, string assetID) Parameters modID string assetID string Returns bool PrintAssetList() public void PrintAssetList() PrintLoadedAssetList() public void PrintLoadedAssetList() Refresh() public void Refresh() UnloadAllAssetsByType<T>() public void UnloadAllAssetsByType<T>() where T : Object Type Parameters T UnloadAllAssetsFromMod(LoadedModDefinition) public void UnloadAllAssetsFromMod(LoadedModDefinition loadedModDefinition) Parameters loadedModDefinition LoadedModDefinition UnloadAsset(IContentDefinition) public void UnloadAsset(IContentDefinition contentDefinition) Parameters contentDefinition IContentDefinition UnloadAssetFromMod(LoadedModDefinition, string) public void UnloadAssetFromMod(LoadedModDefinition loadedModDefinition, string assetID) Parameters loadedModDefinition LoadedModDefinition assetID string"
  },
  "api/Global.ModLoaderType.html": {
    "href": "api/Global.ModLoaderType.html",
    "title": "Enum ModLoaderType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModLoaderType Namespace Global Assembly rwby.dll public enum ModLoaderType Fields ADDRESSABLES = 1 LOCAL = 0 UMOD = 2"
  },
  "api/Global.ModManager.html": {
    "href": "api/Global.ModManager.html",
    "title": "Class ModManager | Rwby Vytal Versus Documentation",
    "keywords": "Class ModManager Namespace Global Assembly rwby.dll public class ModManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ModManager Fields IdentifierToAvailableMod public Dictionary<string, AvailableModDefinition> IdentifierToAvailableMod Field Value Dictionary<string, AvailableModDefinition> ModProfilesFilename public static readonly string ModProfilesFilename Field Value string PathToAvailableMod public Dictionary<string, AvailableModDefinition> PathToAvailableMod Field Value Dictionary<string, AvailableModDefinition> availableMods public List<AvailableModDefinition> availableMods Field Value List<AvailableModDefinition> currentModProfileIndex public int currentModProfileIndex Field Value int currentlyLoadedMods public List<LoadedModDefinition> currentlyLoadedMods Field Value List<LoadedModDefinition> modLoaders public Dictionary<ModLoaderType, BaseModLoader> modLoaders Field Value Dictionary<ModLoaderType, BaseModLoader> modProfiles public List<ModProfile> modProfiles Field Value List<ModProfile> Properties ModDirectory public string ModDirectory { get; } Property Value string Methods ApplyModProfile(ModProfile) public UniTask ApplyModProfile(ModProfile modProfile) Parameters modProfile ModProfile Returns UniTask GenerateModGuid(bool, bool) public Guid GenerateModGuid(bool loadedOnly = true, bool onlyRequiredMods = true) Parameters loadedOnly bool onlyRequiredMods bool Returns Guid GetCurrentModProfile() public ModProfile GetCurrentModProfile() Returns ModProfile GetMod(string) public AvailableModDefinition GetMod(string modIdentifier) Parameters modIdentifier string Returns AvailableModDefinition GetModListByGuid(bool, bool) public Guid[] GetModListByGuid(bool loadedOnly = true, bool onlineOnly = true) Parameters loadedOnly bool onlineOnly bool Returns Guid[] GetModListByGuidAsStrings(bool, bool) public string[] GetModListByGuidAsStrings(bool loadedOnly = true, bool onlineOnly = true) Parameters loadedOnly bool onlineOnly bool Returns string[] GetModsByIdentifiers(string[]) public List<AvailableModDefinition> GetModsByIdentifiers(string[] modIdentifiers) Parameters modIdentifiers string[] Returns List<AvailableModDefinition> Init() public UniTask Init() Returns UniTask IsModLoaded(string) public bool IsModLoaded(string modID) Parameters modID string Returns bool LoadAllMods() public UniTask LoadAllMods() Returns UniTask LoadMod(AvailableModDefinition) public UniTask<bool> LoadMod(AvailableModDefinition modDefinition) Parameters modDefinition AvailableModDefinition Returns UniTask<bool> LoadModByPath(string) public UniTask<bool> LoadModByPath(string path) Parameters path string Returns UniTask<bool> LoadModProfiles() public void LoadModProfiles() LoadMods(AvailableModDefinition[]) public UniTask LoadMods(AvailableModDefinition[] modDefinitions) Parameters modDefinitions AvailableModDefinition[] Returns UniTask LoadMods(string[]) public UniTask LoadMods(string[] modIdentifiers) Parameters modIdentifiers string[] Returns UniTask SaveModProfiles() public void SaveModProfiles() TryGetCurrentModProfile(out ModProfile) public bool TryGetCurrentModProfile(out ModProfile currentProfile) Parameters currentProfile ModProfile Returns bool UnloadAllMods(string[]) public void UnloadAllMods(string[] modsToExcludeByIdentifier = null) Parameters modsToExcludeByIdentifier string[] UnloadMod(LoadedModDefinition) public bool UnloadMod(LoadedModDefinition loadedModDefinition) Parameters loadedModDefinition LoadedModDefinition Returns bool UnloadMods(string[]) public void UnloadMods(string[] modIdentifiers) Parameters modIdentifiers string[]"
  },
  "api/Global.ModOnlineRequirement.html": {
    "href": "api/Global.ModOnlineRequirement.html",
    "title": "Enum ModOnlineRequirement | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModOnlineRequirement Namespace Global Assembly rwby.dll public enum ModOnlineRequirement Fields NotRequiredByPlayers = 0 RequiredByAllPlayers = 1"
  },
  "api/Global.ModProfile.html": {
    "href": "api/Global.ModProfile.html",
    "title": "Class ModProfile | Rwby Vytal Versus Documentation",
    "keywords": "Class ModProfile Namespace Global Assembly rwby.dll [Serializable] public class ModProfile Inheritance object ModProfile Fields modsByIdentifiers public List<string> modsByIdentifiers Field Value List<string> nickname public string nickname Field Value string"
  },
  "api/Global.NewCameraInputController.InputReader.html": {
    "href": "api/Global.NewCameraInputController.InputReader.html",
    "title": "Class NewCameraInputController.InputReader | Rwby Vytal Versus Documentation",
    "keywords": "Class NewCameraInputController.InputReader Namespace Global Assembly rwby.dll [Serializable] public class NewCameraInputController.InputReader Inheritance object NewCameraInputController.InputReader Fields gamepadAxisDeadzone public float gamepadAxisDeadzone Field Value float inputPlayer public InputPlayerManager inputPlayer Field Value InputPlayerManager Methods GetValue(Object, Hints) public float GetValue(Object context, IInputAxisOwner.AxisDescriptor.Hints hint) Parameters context Object hint IInputAxisOwner.AxisDescriptor.Hints Returns float SetInputPlayer(InputPlayerManager) public void SetInputPlayer(InputPlayerManager ipm) Parameters ipm InputPlayerManager"
  },
  "api/Global.NewCameraInputController.html": {
    "href": "api/Global.NewCameraInputController.html",
    "title": "Class NewCameraInputController | Rwby Vytal Versus Documentation",
    "keywords": "Class NewCameraInputController Namespace Global Assembly rwby.dll public class NewCameraInputController : InputAxisControllerBase<NewCameraInputController.InputReader> Inheritance object Object Component Behaviour MonoBehaviour InputAxisControllerBase<NewCameraInputController.InputReader> NewCameraInputController"
  },
  "api/Global.OptionsGameplayScreen.html": {
    "href": "api/Global.OptionsGameplayScreen.html",
    "title": "Class OptionsGameplayScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsGameplayScreen Namespace Global Assembly rwby.dll public class OptionsGameplayScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase OptionsGameplayScreen Implements IMenu Inherited Members MenuBase.currentHandler MenuBase.Open(MenuDirection, IMenuHandler) MenuBase.TryClose(MenuDirection, bool) Fields optionsMainScreen public OptionsMainScreen optionsMainScreen Field Value OptionsMainScreen Methods SetupOptions() public void SetupOptions()"
  },
  "api/Global.OptionsMainScreen.OptionsTabs.html": {
    "href": "api/Global.OptionsMainScreen.OptionsTabs.html",
    "title": "Enum OptionsMainScreen.OptionsTabs | Rwby Vytal Versus Documentation",
    "keywords": "Enum OptionsMainScreen.OptionsTabs Namespace Global Assembly rwby.dll public enum OptionsMainScreen.OptionsTabs Fields Controls = 1 Gameplay = 0 Language = 3 Modding = 4 Video = 2"
  },
  "api/Global.OptionsMainScreen.html": {
    "href": "api/Global.OptionsMainScreen.html",
    "title": "Class OptionsMainScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsMainScreen Namespace Global Assembly rwby.dll public class OptionsMainScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase OptionsMainScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields VideoScreen public OptionsVideoScreen VideoScreen Field Value OptionsVideoScreen currentTab [NonSerialized] public OptionsMainScreen.OptionsTabs currentTab Field Value OptionsMainScreen.OptionsTabs externalOptionPrefab public MenuLabelExternalOptionElement externalOptionPrefab Field Value MenuLabelExternalOptionElement gameplayScreen [Header(\"Screens\")] public OptionsGameplayScreen gameplayScreen Field Value OptionsGameplayScreen generalMenu public GameObject generalMenu Field Value GameObject menuLabelSliderPrefab [FormerlySerializedAs(\"slidePrefab\")] [Header(\"Prefabs\")] public MenuLabelFloatSliderElement menuLabelSliderPrefab Field Value MenuLabelFloatSliderElement optionsScrollRect public ScrollRect optionsScrollRect Field Value ScrollRect sidebarBottomScrollView public ScrollRect sidebarBottomScrollView Field Value ScrollRect sidebarOptionPrefab public OptionsSidebarItem sidebarOptionPrefab Field Value OptionsSidebarItem sidebarTopImage public Image sidebarTopImage Field Value Image sidebarTopText public TextMeshProUGUI sidebarTopText Field Value TextMeshProUGUI Methods BUTTON_Controls() public void BUTTON_Controls() BUTTON_Gameplay() public void BUTTON_Gameplay() BUTTON_Language() public void BUTTON_Language() BUTTON_Modding() public void BUTTON_Modding() BUTTON_Video() public void BUTTON_Video() ClearOptions() public void ClearOptions() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler PopulateSidebar(MenuLabelExternalOptionElement) public void PopulateSidebar(MenuLabelExternalOptionElement externalOption) Parameters externalOption MenuLabelExternalOptionElement TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.OptionsModdingScreen.html": {
    "href": "api/Global.OptionsModdingScreen.html",
    "title": "Class OptionsModdingScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsModdingScreen Namespace Global Assembly rwby.dll public class OptionsModdingScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase OptionsModdingScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields colorActive public Color colorActive Field Value Color colorInactive public Color colorInactive Field Value Color modListEntryPrefab public GameObject modListEntryPrefab Field Value GameObject modListScrollRect public ScrollRect modListScrollRect Field Value ScrollRect Methods BUTTON_Back() public void BUTTON_Back() BUTTON_SaveAndApplyProfile() public void BUTTON_SaveAndApplyProfile() BUTTON_SaveProfile() public void BUTTON_SaveProfile() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.OptionsScreen.OptionsScreenMenus.html": {
    "href": "api/Global.OptionsScreen.OptionsScreenMenus.html",
    "title": "Enum OptionsScreen.OptionsScreenMenus | Rwby Vytal Versus Documentation",
    "keywords": "Enum OptionsScreen.OptionsScreenMenus Namespace Global Assembly rwby.dll public enum OptionsScreen.OptionsScreenMenus Fields CONTROLS = 2 GAMEPLAY = 1 MAIN = 0 MODDING = 4 VIDEO = 3"
  },
  "api/Global.OptionsScreen.html": {
    "href": "api/Global.OptionsScreen.html",
    "title": "Class OptionsScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsScreen Namespace Global Assembly rwby.dll public class OptionsScreen : MenuBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase OptionsScreen Implements IMenu IMenuHandler Inherited Members MenuBase.currentHandler Fields menus public Dictionary<int, MenuBase> menus Field Value Dictionary<int, MenuBase> startMenu public OptionsScreen.OptionsScreenMenus startMenu Field Value OptionsScreen.OptionsScreenMenus Methods Back() public bool Back() Returns bool Forward(int, bool) public bool Forward(int menu, bool autoClose = true) Parameters menu int autoClose bool Returns bool GetCurrentMenu() public IMenu GetCurrentMenu() Returns IMenu GetHistory() public IList GetHistory() Returns IList HasSubmenuOpen() public bool HasSubmenuOpen() Returns bool Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.OptionsSidebarItem.html": {
    "href": "api/Global.OptionsSidebarItem.html",
    "title": "Class OptionsSidebarItem | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsSidebarItem Namespace Global Assembly rwby.dll public class OptionsSidebarItem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour OptionsSidebarItem Fields button public Button button Field Value Button descriptionText public TextMeshProUGUI descriptionText Field Value TextMeshProUGUI splitter public GameObject splitter Field Value GameObject titleText public TextMeshProUGUI titleText Field Value TextMeshProUGUI Methods Initialize(string, string) public void Initialize(string title, string description) Parameters title string description string"
  },
  "api/Global.ParticleSystemVisualEffect.html": {
    "href": "api/Global.ParticleSystemVisualEffect.html",
    "title": "Class ParticleSystemVisualEffect | Rwby Vytal Versus Documentation",
    "keywords": "Class ParticleSystemVisualEffect Namespace Global Assembly rwby.dll public class ParticleSystemVisualEffect : VisualEffectBase Inheritance object Object Component Behaviour MonoBehaviour VisualEffectBase ParticleSystemVisualEffect Inherited Members VisualEffectBase.status VisualEffectBase.autoDestroy VisualEffectBase.autoDestroyAfter VisualEffectBase.entryAsset VisualEffectBase.freezeDuringHitstop VisualEffectBase.FixedUpdate() Fields particleSystems public ParticleSystem[] particleSystems Field Value ParticleSystem[] Properties CurrentTime public override float CurrentTime { get; protected set; } Property Value float Methods DestroyEffect() public override void DestroyEffect() Freeze() public override void Freeze() Play() public override void Play() Resume() public override void Resume() SeekTo(float, bool) public override void SeekTo(float time, bool play = true) Parameters time float play bool SetSeed(uint) public override void SetSeed(uint seed) Parameters seed uint Stop(bool) public override void Stop(bool clearParticles = true) Parameters clearParticles bool"
  },
  "api/Global.PlayerCamPositioner.html": {
    "href": "api/Global.PlayerCamPositioner.html",
    "title": "Class PlayerCamPositioner | Rwby Vytal Versus Documentation",
    "keywords": "Class PlayerCamPositioner Namespace Global Assembly rwby.dll public class PlayerCamPositioner : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerCamPositioner Fields pos public Transform pos Field Value Transform"
  },
  "api/Global.ProfileDefinition.CameraVariables.html": {
    "href": "api/Global.ProfileDefinition.CameraVariables.html",
    "title": "Struct ProfileDefinition.CameraVariables | Rwby Vytal Versus Documentation",
    "keywords": "Struct ProfileDefinition.CameraVariables Namespace Global Assembly rwby.dll [Serializable] public struct ProfileDefinition.CameraVariables Fields deadzoneHoz public float deadzoneHoz Field Value float deadzoneVert public float deadzoneVert Field Value float speedHoz public float speedHoz Field Value float speedLockOnHoz public float speedLockOnHoz Field Value float speedLockOnVert public float speedLockOnVert Field Value float speedVert public float speedVert Field Value float"
  },
  "api/Global.ProfileDefinition.html": {
    "href": "api/Global.ProfileDefinition.html",
    "title": "Struct ProfileDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Struct ProfileDefinition Namespace Global Assembly rwby.dll [Serializable] public struct ProfileDefinition Fields controllerCam [SerializeField] public ProfileDefinition.CameraVariables controllerCam Field Value ProfileDefinition.CameraVariables keyboardCam [SerializeField] public ProfileDefinition.CameraVariables keyboardCam Field Value ProfileDefinition.CameraVariables lockOnType [SerializeField] public int lockOnType Field Value int overrides [SerializeField] public string overrides Field Value string profileName [SerializeField] public string profileName Field Value string undeletable [SerializeField] public bool undeletable Field Value bool version [SerializeField] public byte version Field Value byte Methods IsValid() public bool IsValid() Returns bool"
  },
  "api/Global.ProfilesManager.ProfileAction.html": {
    "href": "api/Global.ProfilesManager.ProfileAction.html",
    "title": "Delegate ProfilesManager.ProfileAction | Rwby Vytal Versus Documentation",
    "keywords": "Delegate ProfilesManager.ProfileAction Namespace Global Assembly rwby.dll public delegate void ProfilesManager.ProfileAction(ProfilesManager profilesManager) Parameters profilesManager ProfilesManager"
  },
  "api/Global.ProfilesManager.ProfileChangeAction.html": {
    "href": "api/Global.ProfilesManager.ProfileChangeAction.html",
    "title": "Delegate ProfilesManager.ProfileChangeAction | Rwby Vytal Versus Documentation",
    "keywords": "Delegate ProfilesManager.ProfileChangeAction Namespace Global Assembly rwby.dll public delegate void ProfilesManager.ProfileChangeAction(ProfilesManager profilesManager, int index) Parameters profilesManager ProfilesManager index int"
  },
  "api/Global.ProfilesManager.html": {
    "href": "api/Global.ProfilesManager.html",
    "title": "Class ProfilesManager | Rwby Vytal Versus Documentation",
    "keywords": "Class ProfilesManager Namespace Global Assembly rwby.dll public class ProfilesManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ProfilesManager Fields ProfileNameToIndex public Dictionary<string, int> ProfileNameToIndex Field Value Dictionary<string, int> _inputManager public InputManager _inputManager Field Value InputManager defaultProfiles public ProfileDefinition[] defaultProfiles Field Value ProfileDefinition[] profiles [SerializeField] protected List<ProfileDefinition> profiles Field Value List<ProfileDefinition> Properties Profiles public ReadOnlyCollection<ProfileDefinition> Profiles { get; } Property Value ReadOnlyCollection<ProfileDefinition> Methods ApplyProfile(ProfileDefinition, string) public void ApplyProfile(ProfileDefinition profileDefinition, string profileName) Parameters profileDefinition ProfileDefinition profileName string DeleteProfile(string) public void DeleteProfile(string profileName) Parameters profileName string Init() public void Init() LoadProfiles() public bool LoadProfiles() Returns bool SaveProfiles() public void SaveProfiles() TryCreateProfile(string) public bool TryCreateProfile(string profileName) Parameters profileName string Returns bool TryGetProfile(string, out ProfileDefinition) public bool TryGetProfile(string name, out ProfileDefinition profileDefinition) Parameters name string profileDefinition ProfileDefinition Returns bool UpdateProfileBindingOverrides(string, string) public void UpdateProfileBindingOverrides(string bindingOverrides, string profileName) Parameters bindingOverrides string profileName string Events onProfileAdded public event ProfilesManager.ProfileAction onProfileAdded Event Type ProfilesManager.ProfileAction onProfileRemoved public event ProfilesManager.ProfileAction onProfileRemoved Event Type ProfilesManager.ProfileAction onProfileUpdated public event ProfilesManager.ProfileChangeAction onProfileUpdated Event Type ProfilesManager.ProfileChangeAction"
  },
  "api/Global.QuantumAssetDBHelper.html": {
    "href": "api/Global.QuantumAssetDBHelper.html",
    "title": "Class QuantumAssetDBHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class QuantumAssetDBHelper Namespace Global Assembly rwby.dll public static class QuantumAssetDBHelper Inheritance object QuantumAssetDBHelper"
  },
  "api/Global.RectTransformExtensions.html": {
    "href": "api/Global.RectTransformExtensions.html",
    "title": "Class RectTransformExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class RectTransformExtensions Namespace Global Assembly rwby.dll public static class RectTransformExtensions Inheritance object RectTransformExtensions Methods Bottom(RectTransform, float) public static RectTransform Bottom(this RectTransform rt, float y) Parameters rt RectTransform y float Returns RectTransform Left(RectTransform, float) public static RectTransform Left(this RectTransform rt, float x) Parameters rt RectTransform x float Returns RectTransform Right(RectTransform, float) public static RectTransform Right(this RectTransform rt, float x) Parameters rt RectTransform x float Returns RectTransform Top(RectTransform, float) public static RectTransform Top(this RectTransform rt, float y) Parameters rt RectTransform y float Returns RectTransform"
  },
  "api/Global.RectTransformPresetApplyUtils.html": {
    "href": "api/Global.RectTransformPresetApplyUtils.html",
    "title": "Class RectTransformPresetApplyUtils | Rwby Vytal Versus Documentation",
    "keywords": "Class RectTransformPresetApplyUtils Namespace Global Assembly rwby.dll Author: CG-Tespy public static class RectTransformPresetApplyUtils Inheritance object RectTransformPresetApplyUtils Methods AnchorAndPivotToPoint(RectTransform, Vector2) Sets the rectTransform's anchors and pivot to a given point. public static void AnchorAndPivotToPoint(this RectTransform rectTransform, Vector2 point) Parameters rectTransform RectTransform point Vector2 AnchorToPoint(RectTransform, Vector2) Sets the rectTransform's anchors to a given point. public static void AnchorToPoint(this RectTransform rectTransform, Vector2 anchorPoint) Parameters rectTransform RectTransform anchorPoint Vector2 ApplyAnchorPreset(RectTransform, TextAnchor, bool, bool) public static void ApplyAnchorPreset(this RectTransform rectTransform, TextAnchor presetToApply, bool alsoSetPivot = false, bool alsoSetPosition = false) Parameters rectTransform RectTransform presetToApply TextAnchor alsoSetPivot bool alsoSetPosition bool ApplyAnchorPresetRecursively(RectTransform, TextAnchor, bool, bool) public static void ApplyAnchorPresetRecursively(this RectTransform rectTransform, TextAnchor presetToApply, bool alsoSetPivot = false, bool alsoSetPosition = false) Parameters rectTransform RectTransform presetToApply TextAnchor alsoSetPivot bool alsoSetPosition bool Center(RectTransform, bool) public static Vector2 Center(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns Vector2 GetPositionOnRect(RectTransform, Vector2, bool) Returns a position on the rect transform based on the anchor position passed. Say, if the anchor position is (1, 1), this returns the position of the rect's upper right corner. public static Vector2 GetPositionOnRect(this RectTransform rectTransform, Vector2 anchorPos, bool inWorldCoordinates = false) Parameters rectTransform RectTransform anchorPos Vector2 inWorldCoordinates bool Returns Vector2 Height(RectTransform) public static float Height(this RectTransform rectTransform) Parameters rectTransform RectTransform Returns float LeftEdgeX(RectTransform, bool) public static float LeftEdgeX(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns float LowerEdgeY(RectTransform, bool) public static float LowerEdgeY(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns float LowerLeftCorner(RectTransform, bool) public static Vector2 LowerLeftCorner(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns Vector2 LowerRightCorner(RectTransform, bool) public static Vector2 LowerRightCorner(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns Vector2 PositionRelativeToParent(RectTransform, TextAnchor) public static void PositionRelativeToParent(this RectTransform rectTransform, TextAnchor preset) Parameters rectTransform RectTransform preset TextAnchor PositionRelativeToParent(RectTransform, Vector2) public static void PositionRelativeToParent(this RectTransform rectTransform, Vector2 anchorPos) Parameters rectTransform RectTransform anchorPos Vector2 RightEdgeX(RectTransform, bool) public static float RightEdgeX(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns float SetAnchors(RectTransform, Vector2, Vector2) public static void SetAnchors(this RectTransform rectTransform, Vector2 anchorMin, Vector2 anchorMax) Parameters rectTransform RectTransform anchorMin Vector2 anchorMax Vector2 SetAndStretchToParentSize(RectTransform, RectTransform) public static void SetAndStretchToParentSize(this RectTransform _mRect, RectTransform _parent) Parameters _mRect RectTransform _parent RectTransform SetPivot(RectTransform, TextAnchor) public static void SetPivot(this RectTransform rectTransform, TextAnchor newPivot) Parameters rectTransform RectTransform newPivot TextAnchor SetPivot(RectTransform, Vector2) Sets the pivot without changing the rect trans' physical position in the scene. Credit to jmorhart at Unity Answers for this function. public static void SetPivot(this RectTransform rectTransform, Vector2 newPivot) Parameters rectTransform RectTransform newPivot Vector2 ToViewportCoords(TextAnchor) public static Vector2 ToViewportCoords(this TextAnchor textAnchor) Parameters textAnchor TextAnchor Returns Vector2 UpperEdgeY(RectTransform, bool) public static float UpperEdgeY(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns float UpperLeftCorner(RectTransform, bool) public static Vector2 UpperLeftCorner(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns Vector2 UpperRightCorner(RectTransform, bool) public static Vector2 UpperRightCorner(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns Vector2 Width(RectTransform) public static float Width(this RectTransform rectTransform) Parameters rectTransform RectTransform Returns float"
  },
  "api/Global.SongContentHelper.html": {
    "href": "api/Global.SongContentHelper.html",
    "title": "Class SongContentHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class SongContentHelper Namespace Global Assembly rwby.dll public static class SongContentHelper Inheritance object SongContentHelper Methods GetAllSongDefinitions() public static UniTask<List<BaseSongDefinition>> GetAllSongDefinitions() Returns UniTask<List<BaseSongDefinition>> UnloadSongDefinitions(List<BaseSongDefinition>) public static void UnloadSongDefinitions(List<BaseSongDefinition> contentToUnload) Parameters contentToUnload List<BaseSongDefinition>"
  },
  "api/Global.SplitScreenManager.RectDefinition.html": {
    "href": "api/Global.SplitScreenManager.RectDefinition.html",
    "title": "Class SplitScreenManager.RectDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class SplitScreenManager.RectDefinition Namespace Global Assembly rwby.dll [Serializable] public class SplitScreenManager.RectDefinition Inheritance object SplitScreenManager.RectDefinition Fields rects public Rect[] rects Field Value Rect[]"
  },
  "api/Global.SplitScreenManager.html": {
    "href": "api/Global.SplitScreenManager.html",
    "title": "Class SplitScreenManager | Rwby Vytal Versus Documentation",
    "keywords": "Class SplitScreenManager Namespace Global Assembly rwby.dll public class SplitScreenManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SplitScreenManager Fields backgroundCamera public Camera backgroundCamera Field Value Camera settingsManager public SettingsManager settingsManager Field Value SettingsManager shouldUpdateView public bool shouldUpdateView Field Value bool splitscreenRects public List<SplitScreenManager.RectDefinition> splitscreenRects Field Value List<SplitScreenManager.RectDefinition> Methods Activate() public void Activate() Clear() public void Clear() Deactivate() public void Deactivate() Init() public void Init() RegisterCamera(Camera) public void RegisterCamera(Camera camera) Parameters camera Camera UnregisterCamera(Camera) public void UnregisterCamera(Camera camera) Parameters camera Camera UpdateView() public void UpdateView()"
  },
  "api/Global.SubassetConverter.html": {
    "href": "api/Global.SubassetConverter.html",
    "title": "Class SubassetConverter | Rwby Vytal Versus Documentation",
    "keywords": "Class SubassetConverter Namespace Global Assembly rwby.editor.dll public class SubassetConverter : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SubassetConverter"
  },
  "api/Global.TextColorBounce.html": {
    "href": "api/Global.TextColorBounce.html",
    "title": "Class TextColorBounce | Rwby Vytal Versus Documentation",
    "keywords": "Class TextColorBounce Namespace Global Assembly rwby.dll public class TextColorBounce : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TextColorBounce Fields duration public float duration Field Value float endColor public Color endColor Field Value Color holdTime public float holdTime Field Value float startColor public Color startColor Field Value Color text public TextMeshProUGUI text Field Value TextMeshProUGUI"
  },
  "api/Global.VFXGraphVisualEffect.html": {
    "href": "api/Global.VFXGraphVisualEffect.html",
    "title": "Class VFXGraphVisualEffect | Rwby Vytal Versus Documentation",
    "keywords": "Class VFXGraphVisualEffect Namespace Global Assembly rwby.dll public class VFXGraphVisualEffect : VisualEffectBase Inheritance object Object Component Behaviour MonoBehaviour VisualEffectBase VFXGraphVisualEffect Inherited Members VisualEffectBase.CurrentTime VisualEffectBase.status VisualEffectBase.autoDestroy VisualEffectBase.autoDestroyAfter VisualEffectBase.entryAsset VisualEffectBase.freezeDuringHitstop VisualEffectBase.FixedUpdate() VisualEffectBase.SetSeed(uint) Fields visualEffects public VisualEffect[] visualEffects Field Value VisualEffect[] Methods DestroyEffect() public override void DestroyEffect() Freeze() public override void Freeze() Play() public override void Play() Resume() public override void Resume() SeekTo(float, bool) public override void SeekTo(float time, bool play = true) Parameters time float play bool Stop(bool) public override void Stop(bool clearParticles = true) Parameters clearParticles bool"
  },
  "api/Global.VisualEffectBase.VisualEffectPlayStatus.html": {
    "href": "api/Global.VisualEffectBase.VisualEffectPlayStatus.html",
    "title": "Enum VisualEffectBase.VisualEffectPlayStatus | Rwby Vytal Versus Documentation",
    "keywords": "Enum VisualEffectBase.VisualEffectPlayStatus Namespace Global Assembly rwby.dll public enum VisualEffectBase.VisualEffectPlayStatus Fields Paused = 2 Playing = 1 Stopped = 0"
  },
  "api/Global.VisualEffectBase.html": {
    "href": "api/Global.VisualEffectBase.html",
    "title": "Class VisualEffectBase | Rwby Vytal Versus Documentation",
    "keywords": "Class VisualEffectBase Namespace Global Assembly rwby.dll public class VisualEffectBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour VisualEffectBase Derived AnimancerVisualEffect GroupVisualEffect ParticleSystemVisualEffect VFXGraphVisualEffect Fields autoDestroy public bool autoDestroy Field Value bool autoDestroyAfter public float autoDestroyAfter Field Value float entryAsset [NonSerialized] public VisualEffectEntry entryAsset Field Value VisualEffectEntry freezeDuringHitstop public bool freezeDuringHitstop Field Value bool status public VisualEffectBase.VisualEffectPlayStatus status Field Value VisualEffectBase.VisualEffectPlayStatus Properties CurrentTime public virtual float CurrentTime { get; protected set; } Property Value float Methods DestroyEffect() public virtual void DestroyEffect() FixedUpdate() public virtual void FixedUpdate() Freeze() public virtual void Freeze() Play() public virtual void Play() Resume() public virtual void Resume() SeekTo(float, bool) public virtual void SeekTo(float time, bool play = true) Parameters time float play bool SetSeed(uint) public virtual void SetSeed(uint seed) Parameters seed uint Stop(bool) public virtual void Stop(bool clearParticles = true) Parameters clearParticles bool"
  },
  "api/Global.WindowsServerConsole.html": {
    "href": "api/Global.WindowsServerConsole.html",
    "title": "Class WindowsServerConsole | Rwby Vytal Versus Documentation",
    "keywords": "Class WindowsServerConsole Namespace Global Assembly rwby.dll public class WindowsServerConsole : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour WindowsServerConsole"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Classes AddressableFighterDefinitionContainer AddressablesFighterDefinition AddressablesGamemodeDefinition AddressablesGamemodeDefinitionContainer AddressablesLoadedModDefinition AddressablesMapDefinition AddressablesMapDefinitionContainer AddressablesModInfoAsset AddressablesModLoader AnimancerVisualEffect AnimationAssetBaker AnimationCurveExtensions AvailableModDefinition BaseContentDefinitionContainer<T> BaseFighterDefinitionContainer BaseGamemodeDefinition BaseGamemodeDefinitionContainer BaseHudElementDefinition BaseHudElementDefinitionContainer BaseMapDefinitionContainer BaseModInfoAsset BaseModItemAsset BaseModLoader ControllerGlyphDatabase ControllerGlyphs ControlsMainScreen ControlsProfileMappingScreen ControlsScreen DevicePickerUtility DualsenseEdgeGamepadHID EntityInputDebugger EntityPhysicsDebugger EntityPrototypeBaker EntitySoundManager EntityStateDebugger EntityViewTrackECB EntityVisibilityUpdater ExButton FPConverter FighterContentHelper FighterShakeManager FighterVFXManager FighterViewHandle GamemodeContentHelper GeneralHelpers GlobalFighterEventManager GlobalSoundManager GlobalVFXManager GlyphEntry GroupVisualEffect HudElementContentHelper IContentDefinition IFighterDefinition IMapDefinition InputPlayerManager InputRumbleManager LoadedModDefinition LocalLoadedModDefinition LocalModLoader MapContentHelper MapViewManager MenuAndHandlerBase MenuHandlerBase ModAssetReference ModContentManager ModManager ModProfile NewCameraInputController NewCameraInputController.InputReader OptionsGameplayScreen OptionsMainScreen OptionsModdingScreen OptionsScreen OptionsSidebarItem ParticleSystemVisualEffect PlayerCamPositioner ProfilesManager QuantumAssetDBHelper RectTransformExtensions RectTransformPresetApplyUtils Author: CG-Tespy SongContentHelper SplitScreenManager SplitScreenManager.RectDefinition SubassetConverter TextColorBounce VFXGraphVisualEffect VisualEffectBase WindowsServerConsole Structs GamemodeTeamConfig ModAssetSoftReference ProfileDefinition ProfileDefinition.CameraVariables Interfaces IControllerChangedCallback IExternalOptionCallback INavigationStyleChanged Enums ControlsScreen.MenuTypes InputPlayerManager.NavigationType ModLoaderType ModOnlineRequirement OptionsMainScreen.OptionsTabs OptionsScreen.OptionsScreenMenus VisualEffectBase.VisualEffectPlayStatus Delegates DevicePickerUtility.DelegatePickerEvent InputPlayerManager.DelegateDeviceChanged InputPlayerManager.DelegateNavigationStyleChange InputPlayerManager.DelegateWhenControlSchemeChanged ProfilesManager.ProfileAction ProfilesManager.ProfileChangeAction"
  },
  "api/rwby.ActorCutscenePlayer.CutsceneEvent.html": {
    "href": "api/rwby.ActorCutscenePlayer.CutsceneEvent.html",
    "title": "Delegate ActorCutscenePlayer.CutsceneEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate ActorCutscenePlayer.CutsceneEvent Namespace rwby Assembly rwby.dll public delegate void ActorCutscenePlayer.CutsceneEvent()"
  },
  "api/rwby.ActorCutscenePlayer.html": {
    "href": "api/rwby.ActorCutscenePlayer.html",
    "title": "Class ActorCutscenePlayer | Rwby Vytal Versus Documentation",
    "keywords": "Class ActorCutscenePlayer Namespace rwby Assembly rwby.dll public class ActorCutscenePlayer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ActorCutscenePlayer Fields OnCutsceneReachedEnding public ActorCutscenePlayer.CutsceneEvent OnCutsceneReachedEnding Field Value ActorCutscenePlayer.CutsceneEvent cutsceneBinder public CutsceneBinder cutsceneBinder Field Value CutsceneBinder cutsceneBindingsGetters public List<GameObject> cutsceneBindingsGetters Field Value List<GameObject> director public PlayableDirector director Field Value PlayableDirector objectsDisabledOnCutsceneEnd public GameObject[] objectsDisabledOnCutsceneEnd Field Value GameObject[] tag public AssetRef<Tag> tag Field Value AssetRef<Tag> virtualCameras public CinemachineVirtualCameraBase[] virtualCameras Field Value CinemachineVirtualCameraBase[] Methods AssignVirtualCameraLayer(OutputChannels) public void AssignVirtualCameraLayer(OutputChannels cameraOutputChannels) Parameters cameraOutputChannels OutputChannels GetCutsceneLength() public double GetCutsceneLength() Returns double PlayCutscene(QuantumGame, CutsceneBindingSource) public void PlayCutscene(QuantumGame qGame, CutsceneBindingSource bindingSource) Parameters qGame QuantumGame bindingSource CutsceneBindingSource StopCutscene() public void StopCutscene()"
  },
  "api/rwby.AddressablesCommandListDefinition.html": {
    "href": "api/rwby.AddressablesCommandListDefinition.html",
    "title": "Class AddressablesCommandListDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesCommandListDefinition Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Command List Definition\")] public class AddressablesCommandListDefinition : BaseCommandListDefinition Inheritance object Object ScriptableObject IContentDefinition BaseCommandListDefinition AddressablesCommandListDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() Methods GetMovesets() public override BaseCommandListMovesetDefinition[] GetMovesets() Returns BaseCommandListMovesetDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> Unload() public override void Unload() UnloadAssets() public override void UnloadAssets()"
  },
  "api/rwby.AddressablesCommandListEntry.html": {
    "href": "api/rwby.AddressablesCommandListEntry.html",
    "title": "Class AddressablesCommandListEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesCommandListEntry Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Command List Entry\")] public class AddressablesCommandListEntry : BaseCommandListEntry Inheritance object Object ScriptableObject IContentDefinition BaseCommandListEntry AddressablesCommandListEntry Inherited Members BaseCommandListEntry.commandName BaseCommandListEntry.command BaseCommandListEntry.requiresLockon BaseCommandListEntry.description BaseCommandListEntry.subtext BaseCommandListEntry.meterRequirement BaseCommandListEntry.BuildCommandVisualText() IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.Unload() Fields children public BaseCommandListEntry[] children Field Value BaseCommandListEntry[] Properties ChildCommands public override BaseCommandListEntry[] ChildCommands { get; } Property Value BaseCommandListEntry[] Methods GetImage() public override Sprite GetImage() Returns Sprite GetVideo() public override VideoClip GetVideo() Returns VideoClip LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> UnloadAssets() public override void UnloadAssets()"
  },
  "api/rwby.AddressablesHudElementDefinition.html": {
    "href": "api/rwby.AddressablesHudElementDefinition.html",
    "title": "Class AddressablesHudElementDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesHudElementDefinition Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Hud Element Definition\")] public class AddressablesHudElementDefinition : BaseHudElementDefinition Inheritance object Object ScriptableObject IContentDefinition BaseHudElementDefinition AddressablesHudElementDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetElementContainer() public override HudElementContainer GetElementContainer() Returns HudElementContainer LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> Unload() public override void Unload() UnloadAssets() public override void UnloadAssets()"
  },
  "api/rwby.AddressablesHudElementDefinitionContainer.html": {
    "href": "api/rwby.AddressablesHudElementDefinitionContainer.html",
    "title": "Class AddressablesHudElementDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesHudElementDefinitionContainer Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Hud Element Definitions Container\", fileName = \"hudelementdefinitioncontainer\")] public class AddressablesHudElementDefinitionContainer : BaseHudElementDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<BaseHudElementDefinition> BaseHudElementDefinitionContainer AddressablesHudElementDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetDefinitions() public override BaseHudElementDefinition[] GetDefinitions() Returns BaseHudElementDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadDefinitions() public override UniTask<bool> LoadDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadDefinitions() public override void UnloadDefinitions()"
  },
  "api/rwby.AddressablesSongDefinition.html": {
    "href": "api/rwby.AddressablesSongDefinition.html",
    "title": "Class AddressablesSongDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesSongDefinition Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Song Definition\")] public class AddressablesSongDefinition : BaseSongDefinition Inheritance object Object ScriptableObject IContentDefinition BaseSongDefinition AddressablesSongDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetSong() public override SongAudio GetSong() Returns SongAudio LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> Unload() public override void Unload() UnloadAssets() public override void UnloadAssets()"
  },
  "api/rwby.AddressablesSongDefinitionContainer.html": {
    "href": "api/rwby.AddressablesSongDefinitionContainer.html",
    "title": "Class AddressablesSongDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesSongDefinitionContainer Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Song Definitions Container\", fileName = \"songdefinitioncontainer\")] public class AddressablesSongDefinitionContainer : BaseSongDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<BaseSongDefinition> BaseSongDefinitionContainer AddressablesSongDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetDefinitions() public override BaseSongDefinition[] GetDefinitions() Returns BaseSongDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadDefinitions() public override UniTask<bool> LoadDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadDefinitions() public override void UnloadDefinitions()"
  },
  "api/rwby.AudioListenerManager.html": {
    "href": "api/rwby.AudioListenerManager.html",
    "title": "Class AudioListenerManager | Rwby Vytal Versus Documentation",
    "keywords": "Class AudioListenerManager Namespace rwby Assembly rwby.dll public class AudioListenerManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AudioListenerManager Fields lastSetPriority public int lastSetPriority Field Value int Properties AudioListener public Transform AudioListener { get; } Property Value Transform Methods AttemptSetPosition(Vector3, int) public void AttemptSetPosition(Vector3 position, int priority = 0) Parameters position Vector3 priority int AttemptSetRotation(Quaternion, int) public void AttemptSetRotation(Quaternion rotation, int priority = 0) Parameters rotation Quaternion priority int AttemptSetRotation(Vector3, int) public void AttemptSetRotation(Vector3 rotation, int priority = 0) Parameters rotation Vector3 priority int"
  },
  "api/rwby.BaseCommandListDefinition.html": {
    "href": "api/rwby.BaseCommandListDefinition.html",
    "title": "Class BaseCommandListDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseCommandListDefinition Namespace rwby Assembly rwby.dll public abstract class BaseCommandListDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseCommandListDefinition Derived AddressablesCommandListDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetMovesets() public abstract BaseCommandListMovesetDefinition[] GetMovesets() Returns BaseCommandListMovesetDefinition[]"
  },
  "api/rwby.BaseCommandListEntry.html": {
    "href": "api/rwby.BaseCommandListEntry.html",
    "title": "Class BaseCommandListEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseCommandListEntry Namespace rwby Assembly rwby.dll public abstract class BaseCommandListEntry : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseCommandListEntry Derived AddressablesCommandListEntry Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Fields command public string command Field Value string commandName public string commandName Field Value string description [TextArea] public string description Field Value string meterRequirement public string meterRequirement Field Value string requiresLockon public bool requiresLockon Field Value bool subtext public string subtext Field Value string Properties ChildCommands public virtual BaseCommandListEntry[] ChildCommands { get; } Property Value BaseCommandListEntry[] Methods BuildCommandVisualText() public virtual string BuildCommandVisualText() Returns string GetImage() public abstract Sprite GetImage() Returns Sprite GetVideo() public abstract VideoClip GetVideo() Returns VideoClip"
  },
  "api/rwby.BaseCommandListEntryGrouping.html": {
    "href": "api/rwby.BaseCommandListEntryGrouping.html",
    "title": "Class BaseCommandListEntryGrouping | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseCommandListEntryGrouping Namespace rwby Assembly rwby.dll [Serializable] public class BaseCommandListEntryGrouping Inheritance object BaseCommandListEntryGrouping Fields entries public BaseCommandListEntry[] entries Field Value BaseCommandListEntry[] label public string label Field Value string"
  },
  "api/rwby.BaseCommandListMovesetDefinition.html": {
    "href": "api/rwby.BaseCommandListMovesetDefinition.html",
    "title": "Class BaseCommandListMovesetDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseCommandListMovesetDefinition Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Content/Command List Moveset\")] public class BaseCommandListMovesetDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseCommandListMovesetDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Fields EntryGroups public BaseCommandListEntryGrouping[] EntryGroups Field Value BaseCommandListEntryGrouping[] label public string label Field Value string"
  },
  "api/rwby.BaseSongDefinition.html": {
    "href": "api/rwby.BaseSongDefinition.html",
    "title": "Class BaseSongDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseSongDefinition Namespace rwby Assembly rwby.dll public abstract class BaseSongDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseSongDefinition Derived AddressablesSongDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetSong() public abstract SongAudio GetSong() Returns SongAudio"
  },
  "api/rwby.BaseSongDefinitionContainer.html": {
    "href": "api/rwby.BaseSongDefinitionContainer.html",
    "title": "Class BaseSongDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseSongDefinitionContainer Namespace rwby Assembly rwby.dll public abstract class BaseSongDefinitionContainer : BaseContentDefinitionContainer<BaseSongDefinition> Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<BaseSongDefinition> BaseSongDefinitionContainer Derived AddressablesSongDefinitionContainer Inherited Members BaseContentDefinitionContainer<BaseSongDefinition>.LoadDefinitions() BaseContentDefinitionContainer<BaseSongDefinition>.GetDefinitions() BaseContentDefinitionContainer<BaseSongDefinition>.UnloadDefinitions() IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload()"
  },
  "api/rwby.Bootloader.html": {
    "href": "api/rwby.Bootloader.html",
    "title": "Class Bootloader | Rwby Vytal Versus Documentation",
    "keywords": "Class Bootloader Namespace rwby Assembly rwby.dll public class Bootloader : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Bootloader"
  },
  "api/rwby.ClientManager.ClientManagerEvent.html": {
    "href": "api/rwby.ClientManager.ClientManagerEvent.html",
    "title": "Delegate ClientManager.ClientManagerEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate ClientManager.ClientManagerEvent Namespace rwby Assembly rwby.dll public delegate void ClientManager.ClientManagerEvent(ClientManager clientManager) Parameters clientManager ClientManager"
  },
  "api/rwby.ClientManager.ClientManagerPlayerCountEvent.html": {
    "href": "api/rwby.ClientManager.ClientManagerPlayerCountEvent.html",
    "title": "Delegate ClientManager.ClientManagerPlayerCountEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate ClientManager.ClientManagerPlayerCountEvent Namespace rwby Assembly rwby.dll public delegate void ClientManager.ClientManagerPlayerCountEvent(ClientManager clientManager, int oldValue, int currentValue) Parameters clientManager ClientManager oldValue int currentValue int"
  },
  "api/rwby.ClientManager.html": {
    "href": "api/rwby.ClientManager.html",
    "title": "Class ClientManager | Rwby Vytal Versus Documentation",
    "keywords": "Class ClientManager Namespace rwby Assembly rwby.dll public class ClientManager : NetworkBehaviour Inheritance object Object Component Behaviour MonoBehaviour NetworkBehaviour ClientManager Fields OnPlayerCountChangedEvent public ClientManager.ClientManagerPlayerCountEvent OnPlayerCountChangedEvent Field Value ClientManager.ClientManagerPlayerCountEvent Username public string Username Field Value string clientManagers public static List<ClientManager> clientManagers Field Value List<ClientManager> clientModGUID public Guid clientModGUID Field Value Guid clientState public LobbyClientState clientState Field Value LobbyClientState currentMatchCode public string currentMatchCode Field Value string local public static ClientManager local Field Value ClientManager ping public int ping Field Value int playerCount public int playerCount Field Value int Methods CmdSetModGUID(Guid) public void CmdSetModGUID(Guid guid) Parameters guid Guid CmdSetPing(int) public void CmdSetPing(int newPing) Parameters newPing int CmdSetPlayerCount(int) public void CmdSetPlayerCount(int count) Parameters count int CmnRequestModListFromClient(NetworkIdentity) public void CmnRequestModListFromClient(NetworkIdentity requestedClient) Parameters requestedClient NetworkIdentity CmnSendModListToTarget(NetworkIdentity, Guid[]) public void CmnSendModListToTarget(NetworkIdentity requesterClient, Guid[] modList) Parameters requesterClient NetworkIdentity modList Guid[] OnStartAuthority() Like Start(), but only called for objects the client has authority over. public override void OnStartAuthority() OnStartClient() Like Start(), but only called on client and host. public override void OnStartClient() OnStartServer() Like Start(), but only called on server and host. public override void OnStartServer() OnStopClient() Stop event, only called on client and host. public override void OnStopClient() TargetReceiveModListFromTarget(Guid[]) public void TargetReceiveModListFromTarget(Guid[] modList) Parameters modList Guid[] TargetRequestModList(NetworkConnectionToClient, NetworkIdentity) public void TargetRequestModList(NetworkConnectionToClient target, NetworkIdentity requesterClient) Parameters target NetworkConnectionToClient requesterClient NetworkIdentity"
  },
  "api/rwby.CreateLobbyScreen.html": {
    "href": "api/rwby.CreateLobbyScreen.html",
    "title": "Class CreateLobbyScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class CreateLobbyScreen Namespace rwby Assembly rwby.dll public class CreateLobbyScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase CreateLobbyScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields lobbyMaxPlayerField public TMP_InputField lobbyMaxPlayerField Field Value TMP_InputField lobbyNameField public TMP_InputField lobbyNameField Field Value TMP_InputField lobbyPasswordField public TMP_InputField lobbyPasswordField Field Value TMP_InputField modStrictnessDropdown public TMP_Dropdown modStrictnessDropdown Field Value TMP_Dropdown Methods BUTTON_CreateLobby() public void BUTTON_CreateLobby() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool TryCreateLobby() public UniTask<bool> TryCreateLobby() Returns UniTask<bool>"
  },
  "api/rwby.CustomEntityView.EntityAction.html": {
    "href": "api/rwby.CustomEntityView.EntityAction.html",
    "title": "Delegate CustomEntityView.EntityAction | Rwby Vytal Versus Documentation",
    "keywords": "Delegate CustomEntityView.EntityAction Namespace rwby Assembly rwby.dll public delegate void CustomEntityView.EntityAction(CustomEntityView ev) Parameters ev CustomEntityView"
  },
  "api/rwby.CustomEntityView.html": {
    "href": "api/rwby.CustomEntityView.html",
    "title": "Class CustomEntityView | Rwby Vytal Versus Documentation",
    "keywords": "Class CustomEntityView Namespace rwby Assembly rwby.dll public class CustomEntityView : QuantumEntityView Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumEntityView CustomEntityView Fields OnInstantiateEvent public static CustomEntityView.EntityAction OnInstantiateEvent Field Value CustomEntityView.EntityAction Methods OnActivate(Frame) A callback to override to add custom logic the activation of this entity view. public override void OnActivate(Frame frame) Parameters frame Frame Frame"
  },
  "api/rwby.CustomEntityViewUpdater.html": {
    "href": "api/rwby.CustomEntityViewUpdater.html",
    "title": "Class CustomEntityViewUpdater | Rwby Vytal Versus Documentation",
    "keywords": "Class CustomEntityViewUpdater Namespace rwby Assembly rwby.dll public class CustomEntityViewUpdater : QuantumEntityViewUpdater Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumEntityViewUpdater CustomEntityViewUpdater Fields instance public static CustomEntityViewUpdater instance Field Value CustomEntityViewUpdater Methods Awake() Unity Awake() callback, register callbacks and load view contexts. public override void Awake()"
  },
  "api/rwby.CutsceneBinder.CinemachineTrackBindingDefinition.html": {
    "href": "api/rwby.CutsceneBinder.CinemachineTrackBindingDefinition.html",
    "title": "Class CutsceneBinder.CinemachineTrackBindingDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class CutsceneBinder.CinemachineTrackBindingDefinition Namespace rwby Assembly rwby.dll [Serializable] public class CutsceneBinder.CinemachineTrackBindingDefinition Inheritance object CutsceneBinder.CinemachineTrackBindingDefinition Fields trackBindings public List<AssetRef<Tag>> trackBindings Field Value List<AssetRef<Tag>>"
  },
  "api/rwby.CutsceneBinder.html": {
    "href": "api/rwby.CutsceneBinder.html",
    "title": "Class CutsceneBinder | Rwby Vytal Versus Documentation",
    "keywords": "Class CutsceneBinder Namespace rwby Assembly rwby.dll public class CutsceneBinder : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CutsceneBinder Fields bindingList public List<AssetRef<Tag>> bindingList Field Value List<AssetRef<Tag>> cinemachineTrackBindings public List<CutsceneBinder.CinemachineTrackBindingDefinition> cinemachineTrackBindings Field Value List<CutsceneBinder.CinemachineTrackBindingDefinition> director public PlayableDirector director Field Value PlayableDirector Methods Bind(QuantumGame, CutsceneBindingSource) public void Bind(QuantumGame qGame, CutsceneBindingSource bindingSource) Parameters qGame QuantumGame bindingSource CutsceneBindingSource"
  },
  "api/rwby.CutsceneBindingSource.html": {
    "href": "api/rwby.CutsceneBindingSource.html",
    "title": "Class CutsceneBindingSource | Rwby Vytal Versus Documentation",
    "keywords": "Class CutsceneBindingSource Namespace rwby Assembly rwby.dll [Serializable] public class CutsceneBindingSource Inheritance object CutsceneBindingSource Fields mappings public Dictionary<AssetRef<Tag>, Object> mappings Field Value Dictionary<AssetRef<Tag>, Object> parent public CutsceneBindingSource parent Field Value CutsceneBindingSource Methods GetMapping(AssetRef<Tag>) public virtual Object GetMapping(AssetRef<Tag> tag) Parameters tag AssetRef<Tag> Returns Object TryGetMapping(AssetRef<Tag>, List<CutsceneBindingSourceCondition>, out Object) public virtual bool TryGetMapping(AssetRef<Tag> tag, List<CutsceneBindingSourceCondition> conditions, out Object output) Parameters tag AssetRef<Tag> conditions List<CutsceneBindingSourceCondition> output Object Returns bool TryGetMapping(AssetRef<Tag>, out Object) public virtual bool TryGetMapping(AssetRef<Tag> tag, out Object output) Parameters tag AssetRef<Tag> output Object Returns bool"
  },
  "api/rwby.CutsceneBindingSourceCondition.html": {
    "href": "api/rwby.CutsceneBindingSourceCondition.html",
    "title": "Class CutsceneBindingSourceCondition | Rwby Vytal Versus Documentation",
    "keywords": "Class CutsceneBindingSourceCondition Namespace rwby Assembly rwby.dll public class CutsceneBindingSourceCondition Inheritance object CutsceneBindingSourceCondition Methods Decide(Object) public virtual bool Decide(Object wantedBinding) Parameters wantedBinding Object Returns bool"
  },
  "api/rwby.CutsceneGrouping.html": {
    "href": "api/rwby.CutsceneGrouping.html",
    "title": "Class CutsceneGrouping | Rwby Vytal Versus Documentation",
    "keywords": "Class CutsceneGrouping Namespace rwby Assembly rwby.dll public class CutsceneGrouping : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CutsceneGrouping Fields bindingSource public CutsceneBindingSource bindingSource Field Value CutsceneBindingSource cutscenePlayers public Dictionary<AssetRef<Tag>, ActorCutscenePlayer> cutscenePlayers Field Value Dictionary<AssetRef<Tag>, ActorCutscenePlayer> Methods StopAll() public void StopAll()"
  },
  "api/rwby.Debugging.CommandAttribute.html": {
    "href": "api/rwby.Debugging.CommandAttribute.html",
    "title": "Class CommandAttribute | Rwby Vytal Versus Documentation",
    "keywords": "Class CommandAttribute Namespace rwby.Debugging Assembly rwby.dll [AttributeUsage(AttributeTargets.Method)] public class CommandAttribute : Attribute Inheritance object Attribute CommandAttribute Constructors CommandAttribute(string, string) public CommandAttribute(string id, string description) Parameters id string description string Fields commandDescrition public string commandDescrition Field Value string commandId public string commandId Field Value string"
  },
  "api/rwby.Debugging.ConsoleInput.html": {
    "href": "api/rwby.Debugging.ConsoleInput.html",
    "title": "Class ConsoleInput | Rwby Vytal Versus Documentation",
    "keywords": "Class ConsoleInput Namespace rwby.Debugging Assembly rwby.dll [Serializable] public class ConsoleInput Inheritance object ConsoleInput Constructors ConsoleInput(string[]) public ConsoleInput(string[] input) Parameters input string[] Fields input public string[] input Field Value string[] Methods ToString() public override string ToString() Returns string"
  },
  "api/rwby.Debugging.ConsoleInputProcessor.html": {
    "href": "api/rwby.Debugging.ConsoleInputProcessor.html",
    "title": "Class ConsoleInputProcessor | Rwby Vytal Versus Documentation",
    "keywords": "Class ConsoleInputProcessor Namespace rwby.Debugging Assembly rwby.dll public class ConsoleInputProcessor : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ConsoleInputProcessor Fields consoleWindow public ConsoleWindow consoleWindow Field Value ConsoleWindow Methods Process(List<ConsoleInput>) public virtual Task Process(List<ConsoleInput> inputs) Parameters inputs List<ConsoleInput> Returns Task Process(ConsoleInput) public virtual Task Process(ConsoleInput input) Parameters input ConsoleInput Returns Task"
  },
  "api/rwby.Debugging.ConsoleMessageType.html": {
    "href": "api/rwby.Debugging.ConsoleMessageType.html",
    "title": "Enum ConsoleMessageType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ConsoleMessageType Namespace rwby.Debugging Assembly rwby.dll public enum ConsoleMessageType Fields Debug = 0 Error = 1 Print = 3 Warning = 2"
  },
  "api/rwby.Debugging.ConsoleReader.html": {
    "href": "api/rwby.Debugging.ConsoleReader.html",
    "title": "Class ConsoleReader | Rwby Vytal Versus Documentation",
    "keywords": "Class ConsoleReader Namespace rwby.Debugging Assembly rwby.dll public class ConsoleReader : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ConsoleReader Methods Convert(string) public Task Convert(string input) Parameters input string Returns Task ReadCommandLine() public Task ReadCommandLine() Returns Task SplitInputLine(string) public static ConsoleInput SplitInputLine(string inputLine) Parameters inputLine string Returns ConsoleInput"
  },
  "api/rwby.Debugging.ConsoleWindow.html": {
    "href": "api/rwby.Debugging.ConsoleWindow.html",
    "title": "Class ConsoleWindow | Rwby Vytal Versus Documentation",
    "keywords": "Class ConsoleWindow Namespace rwby.Debugging Assembly rwby.dll public class ConsoleWindow : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ConsoleWindow Fields canvasGO public GameObject canvasGO Field Value GameObject current public static ConsoleWindow current Field Value ConsoleWindow Methods Awake() public void Awake() Write(string) public void Write(string text) Parameters text string WriteLine(string, ConsoleMessageType) public void WriteLine(string text, ConsoleMessageType msgType = ConsoleMessageType.Debug) Parameters text string msgType ConsoleMessageType"
  },
  "api/rwby.Debugging.ExtConsoleCommands.html": {
    "href": "api/rwby.Debugging.ExtConsoleCommands.html",
    "title": "Class ExtConsoleCommands | Rwby Vytal Versus Documentation",
    "keywords": "Class ExtConsoleCommands Namespace rwby.Debugging Assembly rwby.dll public class ExtConsoleCommands Inheritance object ExtConsoleCommands Methods EnableVSync(int) [ConsoleMethod(\"vsync\", \"Turn vsync on or off\", new string[] { })] public static void EnableVSync(int vSyncCount) Parameters vSyncCount int PrintGameVersion() [ConsoleMethod(\"version\", \"Prints the game version\", new string[] { })] public static void PrintGameVersion() PrintUnityVersion() [ConsoleMethod(\"unity-version\", \"Prints the unity version\", new string[] { })] public static void PrintUnityVersion() QuitApplication() [ConsoleMethod(\"quit\", \"Closes the application\", new string[] { })] public static void QuitApplication() Say(string) [ConsoleMethod(\"say\", \"Say the text given\", new string[] { })] public static void Say(string msg) Parameters msg string SetTargetFramerate(int) [ConsoleMethod(\"targetframerate\", \"Sets the targeted framerate\", new string[] { })] public static void SetTargetFramerate(int framerate) Parameters framerate int"
  },
  "api/rwby.Debugging.ICParser.html": {
    "href": "api/rwby.Debugging.ICParser.html",
    "title": "Interface ICParser | Rwby Vytal Versus Documentation",
    "keywords": "Interface ICParser Namespace rwby.Debugging Assembly rwby.dll public interface ICParser Properties Priority int Priority { get; } Property Value int Methods CanParse(Type) bool CanParse(Type type) Parameters type Type Returns bool Parse(string, Type, Func<string, Type, object>) object Parse(string value, Type type, Func<string, Type, object> recursiveParser) Parameters value string type Type recursiveParser Func<string, Type, object> Returns object"
  },
  "api/rwby.Debugging.MonoTargetType.html": {
    "href": "api/rwby.Debugging.MonoTargetType.html",
    "title": "Enum MonoTargetType | Rwby Vytal Versus Documentation",
    "keywords": "Enum MonoTargetType Namespace rwby.Debugging Assembly rwby.dll public enum MonoTargetType Fields All = 0 Single = 1"
  },
  "api/rwby.Debugging.PrimitiveParser.html": {
    "href": "api/rwby.Debugging.PrimitiveParser.html",
    "title": "Class PrimitiveParser | Rwby Vytal Versus Documentation",
    "keywords": "Class PrimitiveParser Namespace rwby.Debugging Assembly rwby.dll public class PrimitiveParser : ICParser Inheritance object PrimitiveParser Implements ICParser Properties Priority public int Priority { get; } Property Value int Methods CanParse(Type) public bool CanParse(Type type) Parameters type Type Returns bool Parse(string, Type, Func<string, Type, object>) public object Parse(string value, Type type, Func<string, Type, object> recursiveParser) Parameters value string type Type recursiveParser Func<string, Type, object> Returns object"
  },
  "api/rwby.Debugging.StringArrayParser.html": {
    "href": "api/rwby.Debugging.StringArrayParser.html",
    "title": "Class StringArrayParser | Rwby Vytal Versus Documentation",
    "keywords": "Class StringArrayParser Namespace rwby.Debugging Assembly rwby.dll public class StringArrayParser : ICParser Inheritance object StringArrayParser Implements ICParser Properties Priority public int Priority { get; } Property Value int Methods CanParse(Type) public bool CanParse(Type type) Parameters type Type Returns bool Parse(string, Type, Func<string, Type, object>) public object Parse(string value, Type type, Func<string, Type, object> recursiveParser) Parameters value string type Type recursiveParser Func<string, Type, object> Returns object"
  },
  "api/rwby.Debugging.html": {
    "href": "api/rwby.Debugging.html",
    "title": "Namespace rwby.Debugging | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.Debugging Classes CommandAttribute ConsoleInput ConsoleInputProcessor ConsoleReader ConsoleWindow ExtConsoleCommands PrimitiveParser StringArrayParser Interfaces ICParser Enums ConsoleMessageType MonoTargetType"
  },
  "api/rwby.DummyCamera.html": {
    "href": "api/rwby.DummyCamera.html",
    "title": "Class DummyCamera | Rwby Vytal Versus Documentation",
    "keywords": "Class DummyCamera Namespace rwby Assembly rwby.dll public class DummyCamera : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DummyCamera Fields brain public CinemachineBrain brain Field Value CinemachineBrain cam public Camera cam Field Value Camera Methods UpdateCameraSettings() public void UpdateCameraSettings()"
  },
  "api/rwby.EntityAnimationUpdater.html": {
    "href": "api/rwby.EntityAnimationUpdater.html",
    "title": "Class EntityAnimationUpdater | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityAnimationUpdater Namespace rwby Assembly rwby.dll public class EntityAnimationUpdater : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityAnimationUpdater Fields animancer public AnimancerComponent animancer Field Value AnimancerComponent animationGroupAsset public AnimationGroupDefinitions animationGroupAsset Field Value AnimationGroupDefinitions customEntityView public CustomEntityView customEntityView Field Value CustomEntityView disabled public bool disabled Field Value bool lMixers public Dictionary<AssetRef<AnimationEntry>, MixerState<float>> lMixers Field Value Dictionary<AssetRef<AnimationEntry>, MixerState<float>> mixers public Dictionary<AssetRef<AnimationEntry>, MixerState<Vector2>> mixers Field Value Dictionary<AssetRef<AnimationEntry>, MixerState<Vector2>> modelRoot public GameObject modelRoot Field Value GameObject wantedFadeDuration public float wantedFadeDuration Field Value float Methods Reset() public void Reset()"
  },
  "api/rwby.ExternalModAssetSoftReference.html": {
    "href": "api/rwby.ExternalModAssetSoftReference.html",
    "title": "Class ExternalModAssetSoftReference | Rwby Vytal Versus Documentation",
    "keywords": "Class ExternalModAssetSoftReference Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Mod Asset Soft Reference\")] public class ExternalModAssetSoftReference : ScriptableObject Inheritance object Object ScriptableObject ExternalModAssetSoftReference Fields reference public ModAssetSoftReference reference Field Value ModAssetSoftReference"
  },
  "api/rwby.ExternalOptionDefinition.html": {
    "href": "api/rwby.ExternalOptionDefinition.html",
    "title": "Struct ExternalOptionDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Struct ExternalOptionDefinition Namespace rwby Assembly rwby.dll [Serializable] public struct ExternalOptionDefinition Constructors ExternalOptionDefinition(string, string, Sprite) public ExternalOptionDefinition(string name, string description, Sprite image) Parameters name string description string image Sprite Fields description public string description Field Value string image public Sprite image Field Value Sprite name public string name Field Value string"
  },
  "api/rwby.FindLobbyScreen.html": {
    "href": "api/rwby.FindLobbyScreen.html",
    "title": "Class FindLobbyScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class FindLobbyScreen Namespace rwby Assembly rwby.dll public class FindLobbyScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase FindLobbyScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields lobbyListItemPrefab public GameObject lobbyListItemPrefab Field Value GameObject lobbyListScrollView public ScrollRect lobbyListScrollView Field Value ScrollRect Methods BUTTON_RefreshLobbies() public void BUTTON_RefreshLobbies() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.ForceRenderRate.html": {
    "href": "api/rwby.ForceRenderRate.html",
    "title": "Class ForceRenderRate | Rwby Vytal Versus Documentation",
    "keywords": "Class ForceRenderRate Namespace rwby Assembly rwby.dll public class ForceRenderRate : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ForceRenderRate Fields Rate public float Rate Field Value float Methods Activate(int) public void Activate(int cap) Parameters cap int Deactivate() public void Deactivate()"
  },
  "api/rwby.GameConstants.html": {
    "href": "api/rwby.GameConstants.html",
    "title": "Class GameConstants | Rwby Vytal Versus Documentation",
    "keywords": "Class GameConstants Namespace rwby Assembly rwby.dll [CreateAssetMenu(fileName = \"Game Constants\", menuName = \"rwby/Game Constants\")] public class GameConstants : ScriptableObject Inheritance object Object ScriptableObject GameConstants Fields dummyCamera public DummyCamera dummyCamera Field Value DummyCamera localPlayerCamCamLayers public OutputChannels[] localPlayerCamCamLayers Field Value OutputChannels[] localPlayerVirtualCamLayers public OutputChannels[] localPlayerVirtualCamLayers Field Value OutputChannels[] matchSessionHandler public NetworkMatchSessionHandler matchSessionHandler Field Value NetworkMatchSessionHandler messageHandler [FormerlySerializedAs(\"lobbySessionHandler\")] public NetworkLobbySessionHandler messageHandler Field Value NetworkLobbySessionHandler mirrorNetworkManager public MirrorNetworkManager mirrorNetworkManager Field Value MirrorNetworkManager mouseMenuLabelDropdownElement [Header(\"UI - Mouse\")] public MenuLabelDropdownElement mouseMenuLabelDropdownElement Field Value MenuLabelDropdownElement mouseMenuLabelFloatSliderElement public MenuLabelFloatSliderElement mouseMenuLabelFloatSliderElement Field Value MenuLabelFloatSliderElement mouseMenuLabelOptionElement public MenuLabelOptionElement mouseMenuLabelOptionElement Field Value MenuLabelOptionElement mouseMenuLabelToggleElement public MenuLabelToggleElement mouseMenuLabelToggleElement Field Value MenuLabelToggleElement offlineMatchSessionHandler public OfflineMatchSessionHandler offlineMatchSessionHandler Field Value OfflineMatchSessionHandler pipelineAsset [Header(\"Rendering\")] public UniversalRenderPipelineAsset pipelineAsset Field Value UniversalRenderPipelineAsset tag_CinemachineBrain [Header(\"Tags\")] public Tag tag_CinemachineBrain Field Value Tag tag_CutscenePlayingEntity public Tag tag_CutscenePlayingEntity Field Value Tag tag_CutscenePlayingEntityModel public Tag tag_CutscenePlayingEntityModel Field Value Tag tag_CutscenePlayingEntityModelRoot public Tag tag_CutscenePlayingEntityModelRoot Field Value Tag tag_Cutscene_GameManager public Tag tag_Cutscene_GameManager Field Value Tag tag_Cutscene_MatchHandler public Tag tag_Cutscene_MatchHandler Field Value Tag tag_VirtualCam public Tag tag_VirtualCam Field Value Tag targetCam public TargetCameraManager targetCam Field Value TargetCameraManager teamVersusModeSoftReference public ExternalModAssetSoftReference teamVersusModeSoftReference Field Value ExternalModAssetSoftReference trainingModeSoftReference [Header(\"Mod References\")] public ExternalModAssetSoftReference trainingModeSoftReference Field Value ExternalModAssetSoftReference"
  },
  "api/rwby.GameManager.html": {
    "href": "api/rwby.GameManager.html",
    "title": "Class GameManager | Rwby Vytal Versus Documentation",
    "keywords": "Class GameManager Namespace rwby Assembly rwby.dll public class GameManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour GameManager Fields audioListenerManager public AudioListenerManager audioListenerManager Field Value AudioListenerManager consoleWindow public ConsoleWindow consoleWindow Field Value ConsoleWindow constants public GameConstants constants Field Value GameConstants contentManager public ModContentManager contentManager Field Value ModContentManager devicePickerUtility public DevicePickerUtility devicePickerUtility Field Value DevicePickerUtility eosLobby public EOSLobby eosLobby Field Value EOSLobby eosSdk public EOSSDKComponent eosSdk Field Value EOSSDKComponent forceRenderRate public ForceRenderRate forceRenderRate Field Value ForceRenderRate glyphDatabase public ControllerGlyphDatabase glyphDatabase Field Value ControllerGlyphDatabase inputManager public InputManager inputManager Field Value InputManager instance public static GameManager instance Field Value GameManager loadingScreenManager [FormerlySerializedAs(\"LoadingScreenManager\")] public LoadingScreenManager loadingScreenManager Field Value LoadingScreenManager modManager public ModManager modManager Field Value ModManager musicManager public MusicManager musicManager Field Value MusicManager networkManager public NetworkManager networkManager Field Value NetworkManager profilesManager public ProfilesManager profilesManager Field Value ProfilesManager saveManager public SaveManager saveManager Field Value SaveManager settingsManager public SettingsManager settingsManager Field Value SettingsManager splitScreenManager public SplitScreenManager splitScreenManager Field Value SplitScreenManager Methods Initialize() public UniTask Initialize() Returns UniTask"
  },
  "api/rwby.GlobalCutsceneManager.html": {
    "href": "api/rwby.GlobalCutsceneManager.html",
    "title": "Class GlobalCutsceneManager | Rwby Vytal Versus Documentation",
    "keywords": "Class GlobalCutsceneManager Namespace rwby Assembly rwby.dll [Serializable] public class GlobalCutsceneManager Inheritance object GlobalCutsceneManager Fields cutsceneGroupingPool public Dictionary<AssetRef<CharaDefinitionAsset>, List<CutsceneGrouping>> cutsceneGroupingPool Field Value Dictionary<AssetRef<CharaDefinitionAsset>, List<CutsceneGrouping>> entityToCutscenePlayers public Dictionary<EntityRef, CutsceneGrouping> entityToCutscenePlayers Field Value Dictionary<EntityRef, CutsceneGrouping> globalBindingSource public CutsceneBindingSource globalBindingSource Field Value CutsceneBindingSource matchHandler public MatchHandlerBase matchHandler Field Value MatchHandlerBase viewUpdater public QuantumEntityViewUpdater viewUpdater Field Value QuantumEntityViewUpdater Methods Breakdown() public void Breakdown() Initialize(MatchHandlerBase, CutsceneBindingSource) public void Initialize(MatchHandlerBase mHandler, CutsceneBindingSource bindingSource = null) Parameters mHandler MatchHandlerBase bindingSource CutsceneBindingSource UpdateMapBindings() public void UpdateMapBindings()"
  },
  "api/rwby.HudElementContainer.html": {
    "href": "api/rwby.HudElementContainer.html",
    "title": "Class HudElementContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class HudElementContainer Namespace rwby Assembly rwby.dll public class HudElementContainer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour HudElementContainer Methods GetElementInstance(Transform) public GameObject GetElementInstance(Transform parent) Parameters parent Transform Returns GameObject"
  },
  "api/rwby.IClosableMenu.html": {
    "href": "api/rwby.IClosableMenu.html",
    "title": "Interface IClosableMenu | Rwby Vytal Versus Documentation",
    "keywords": "Interface IClosableMenu Namespace rwby Assembly rwby.dll public interface IClosableMenu Methods TryClose() bool TryClose() Returns bool"
  },
  "api/rwby.ICutsceneBinding.html": {
    "href": "api/rwby.ICutsceneBinding.html",
    "title": "Interface ICutsceneBinding | Rwby Vytal Versus Documentation",
    "keywords": "Interface ICutsceneBinding Namespace rwby Assembly rwby.dll public interface ICutsceneBinding Methods Bind(QuantumGame, CutsceneBindingSource) void Bind(QuantumGame qGame, CutsceneBindingSource bindingSource) Parameters qGame QuantumGame bindingSource CutsceneBindingSource"
  },
  "api/rwby.IFighterDefinitionUser.html": {
    "href": "api/rwby.IFighterDefinitionUser.html",
    "title": "Interface IFighterDefinitionUser | Rwby Vytal Versus Documentation",
    "keywords": "Interface IFighterDefinitionUser Namespace rwby Assembly rwby.dll public interface IFighterDefinitionUser Properties FighterDef IFighterDefinition FighterDef { get; set; } Property Value IFighterDefinition"
  },
  "api/rwby.IHUDElement.html": {
    "href": "api/rwby.IHUDElement.html",
    "title": "Interface IHUDElement | Rwby Vytal Versus Documentation",
    "keywords": "Interface IHUDElement Namespace rwby Assembly rwby.dll public interface IHUDElement Properties RootCanvas Canvas RootCanvas { get; set; } Property Value Canvas Methods Initialize(int, int) void Initialize(int localPlayerID, int networkPlayerID) Parameters localPlayerID int networkPlayerID int Teardown() void Teardown()"
  },
  "api/rwby.ILocalEntityHolder.html": {
    "href": "api/rwby.ILocalEntityHolder.html",
    "title": "Interface ILocalEntityHolder | Rwby Vytal Versus Documentation",
    "keywords": "Interface ILocalEntityHolder Namespace rwby Assembly rwby.dll public interface ILocalEntityHolder Properties LocalPlayerEntitys Dictionary<int, QuantumEntityView> LocalPlayerEntitys { get; } Property Value Dictionary<int, QuantumEntityView>"
  },
  "api/rwby.InputActions.IPlayerActions.html": {
    "href": "api/rwby.InputActions.IPlayerActions.html",
    "title": "Interface InputActions.IPlayerActions | Rwby Vytal Versus Documentation",
    "keywords": "Interface InputActions.IPlayerActions Namespace rwby Assembly rwby.dll public interface InputActions.IPlayerActions Methods OnAbilities(CallbackContext) void OnAbilities(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnAbility1(CallbackContext) void OnAbility1(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnAbility2(CallbackContext) void OnAbility2(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnAbility3(CallbackContext) void OnAbility3(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnAbility4(CallbackContext) void OnAbility4(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnBlock(CallbackContext) void OnBlock(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnCamera(CallbackContext) void OnCamera(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnDash(CallbackContext) void OnDash(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnExtra1(CallbackContext) void OnExtra1(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnExtra2(CallbackContext) void OnExtra2(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnExtra3(CallbackContext) void OnExtra3(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnExtra4(CallbackContext) void OnExtra4(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnHeavy(CallbackContext) void OnHeavy(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnJump(CallbackContext) void OnJump(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnLight(CallbackContext) void OnLight(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnLockon(CallbackContext) void OnLockon(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnMove(CallbackContext) void OnMove(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPause(CallbackContext) void OnPause(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnResetCamera(CallbackContext) void OnResetCamera(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnTaunt(CallbackContext) void OnTaunt(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnUnique(CallbackContext) void OnUnique(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/rwby.InputActions.IUIActions.html": {
    "href": "api/rwby.InputActions.IUIActions.html",
    "title": "Interface InputActions.IUIActions | Rwby Vytal Versus Documentation",
    "keywords": "Interface InputActions.IUIActions Namespace rwby Assembly rwby.dll public interface InputActions.IUIActions Methods OnAlternative(CallbackContext) void OnAlternative(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnCancel(CallbackContext) void OnCancel(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnClick(CallbackContext) void OnClick(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnMiddleClick(CallbackContext) void OnMiddleClick(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnNavigate(CallbackContext) void OnNavigate(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPageLeft(CallbackContext) void OnPageLeft(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPageRight(CallbackContext) void OnPageRight(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPause(CallbackContext) void OnPause(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPoint(CallbackContext) void OnPoint(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnScrollWheel(CallbackContext) void OnScrollWheel(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnSubmit(CallbackContext) void OnSubmit(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/rwby.InputActions.PlayerActions.html": {
    "href": "api/rwby.InputActions.PlayerActions.html",
    "title": "Struct InputActions.PlayerActions | Rwby Vytal Versus Documentation",
    "keywords": "Struct InputActions.PlayerActions Namespace rwby Assembly rwby.dll public struct InputActions.PlayerActions Constructors PlayerActions(InputActions) public PlayerActions(InputActions wrapper) Parameters wrapper InputActions Properties Abilities public InputAction Abilities { get; } Property Value InputAction Ability1 public InputAction Ability1 { get; } Property Value InputAction Ability2 public InputAction Ability2 { get; } Property Value InputAction Ability3 public InputAction Ability3 { get; } Property Value InputAction Ability4 public InputAction Ability4 { get; } Property Value InputAction Block public InputAction Block { get; } Property Value InputAction Camera public InputAction Camera { get; } Property Value InputAction Dash public InputAction Dash { get; } Property Value InputAction Extra1 public InputAction Extra1 { get; } Property Value InputAction Extra2 public InputAction Extra2 { get; } Property Value InputAction Extra3 public InputAction Extra3 { get; } Property Value InputAction Extra4 public InputAction Extra4 { get; } Property Value InputAction Heavy public InputAction Heavy { get; } Property Value InputAction Jump public InputAction Jump { get; } Property Value InputAction Light public InputAction Light { get; } Property Value InputAction Lockon public InputAction Lockon { get; } Property Value InputAction Move public InputAction Move { get; } Property Value InputAction Pause public InputAction Pause { get; } Property Value InputAction ResetCamera public InputAction ResetCamera { get; } Property Value InputAction Taunt public InputAction Taunt { get; } Property Value InputAction Unique public InputAction Unique { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IPlayerActions) public void AddCallbacks(InputActions.IPlayerActions instance) Parameters instance InputActions.IPlayerActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IPlayerActions) public void RemoveCallbacks(InputActions.IPlayerActions instance) Parameters instance InputActions.IPlayerActions SetCallbacks(IPlayerActions) public void SetCallbacks(InputActions.IPlayerActions instance) Parameters instance InputActions.IPlayerActions Operators implicit operator InputActionMap(PlayerActions) public static implicit operator InputActionMap(InputActions.PlayerActions set) Parameters set InputActions.PlayerActions Returns InputActionMap"
  },
  "api/rwby.InputActions.UIActions.html": {
    "href": "api/rwby.InputActions.UIActions.html",
    "title": "Struct InputActions.UIActions | Rwby Vytal Versus Documentation",
    "keywords": "Struct InputActions.UIActions Namespace rwby Assembly rwby.dll public struct InputActions.UIActions Constructors UIActions(InputActions) public UIActions(InputActions wrapper) Parameters wrapper InputActions Properties Alternative public InputAction Alternative { get; } Property Value InputAction Cancel public InputAction Cancel { get; } Property Value InputAction Click public InputAction Click { get; } Property Value InputAction MiddleClick public InputAction MiddleClick { get; } Property Value InputAction Navigate public InputAction Navigate { get; } Property Value InputAction PageLeft public InputAction PageLeft { get; } Property Value InputAction PageRight public InputAction PageRight { get; } Property Value InputAction Pause public InputAction Pause { get; } Property Value InputAction Point public InputAction Point { get; } Property Value InputAction ScrollWheel public InputAction ScrollWheel { get; } Property Value InputAction Submit public InputAction Submit { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IUIActions) public void AddCallbacks(InputActions.IUIActions instance) Parameters instance InputActions.IUIActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IUIActions) public void RemoveCallbacks(InputActions.IUIActions instance) Parameters instance InputActions.IUIActions SetCallbacks(IUIActions) public void SetCallbacks(InputActions.IUIActions instance) Parameters instance InputActions.IUIActions Operators implicit operator InputActionMap(UIActions) public static implicit operator InputActionMap(InputActions.UIActions set) Parameters set InputActions.UIActions Returns InputActionMap"
  },
  "api/rwby.InputActions.html": {
    "href": "api/rwby.InputActions.html",
    "title": "Class InputActions | Rwby Vytal Versus Documentation",
    "keywords": "Class InputActions Namespace rwby Assembly rwby.dll public class InputActions Inheritance object InputActions Constructors InputActions() public InputActions() Properties GamepadScheme public InputControlScheme GamepadScheme { get; } Property Value InputControlScheme KeyboardMouseScheme public InputControlScheme KeyboardMouseScheme { get; } Property Value InputControlScheme Player public InputActions.PlayerActions Player { get; } Property Value InputActions.PlayerActions UI public InputActions.UIActions UI { get; } Property Value InputActions.UIActions asset public InputActionAsset asset { get; } Property Value InputActionAsset bindingMask public InputBinding? bindingMask { get; set; } Property Value InputBinding? bindings public IEnumerable<InputBinding> bindings { get; } Property Value IEnumerable<InputBinding> controlSchemes public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value ReadOnlyArray<InputControlScheme> devices public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value ReadOnlyArray<InputDevice>? Methods Contains(InputAction) public bool Contains(InputAction action) Parameters action InputAction Returns bool Disable() public void Disable() Dispose() public void Dispose() Enable() public void Enable() ~InputActions() protected ~InputActions() FindAction(string, bool) public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters actionNameOrId string throwIfNotFound bool Returns InputAction FindBinding(InputBinding, out InputAction) public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters bindingMask InputBinding action InputAction Returns int GetEnumerator() public IEnumerator<InputAction> GetEnumerator() Returns IEnumerator<InputAction>"
  },
  "api/rwby.InputManager.ControlSchemeType.html": {
    "href": "api/rwby.InputManager.ControlSchemeType.html",
    "title": "Enum InputManager.ControlSchemeType | Rwby Vytal Versus Documentation",
    "keywords": "Enum InputManager.ControlSchemeType Namespace rwby Assembly rwby.dll public enum InputManager.ControlSchemeType Fields GAMEPAD = 1 KEYBOARD_MOUSE = 0"
  },
  "api/rwby.InputManager.html": {
    "href": "api/rwby.InputManager.html",
    "title": "Class InputManager | Rwby Vytal Versus Documentation",
    "keywords": "Class InputManager Namespace rwby Assembly rwby.dll public class InputManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InputManager Fields inputUserIndex public Dictionary<InputUser, int> inputUserIndex Field Value Dictionary<InputUser, int> playerInputManagers public List<InputPlayerManager> playerInputManagers Field Value List<InputPlayerManager> Methods AddPlayer() public void AddPlayer() AssignDevicesToPlayer(InputDevice[], int) public void AssignDevicesToPlayer(InputDevice[] devices, int player) Parameters devices InputDevice[] player int GetPlayer(int) public InputPlayerManager GetPlayer(int playerId) Parameters playerId int Returns InputPlayerManager GetPlayerCount() public int GetPlayerCount() Returns int GetSystemPlayer() public InputPlayerManager GetSystemPlayer() Returns InputPlayerManager Initialize() public void Initialize() InitializeSystemPlayer() public void InitializeSystemPlayer() RemoveDeviceFromPlayers(InputDevice) public void RemoveDeviceFromPlayers(InputDevice device) Parameters device InputDevice RemovePlayer(int) public void RemovePlayer(int player) Parameters player int ReturnAllDevicesToSystem() public void ReturnAllDevicesToSystem() ReturnPlayerDevicesToSystem(int) public void ReturnPlayerDevicesToSystem(int player) Parameters player int SetGlobalUIControllingPlayer(int) public void SetGlobalUIControllingPlayer(int playerId) Parameters playerId int SetPlayerCount(int) public void SetPlayerCount(int count) Parameters count int SwitchAllToPlayerActionMap() public void SwitchAllToPlayerActionMap() SwitchAllToUIActionMap() public void SwitchAllToUIActionMap() SwitchToPlayerActionMap(int) public void SwitchToPlayerActionMap(int playerId = 0) Parameters playerId int SwitchToUIActionMap(int) public void SwitchToUIActionMap(int playerId = 0) Parameters playerId int TransferAllDevicesFromSystemTo(int) public void TransferAllDevicesFromSystemTo(int player) Parameters player int onInputDeviceChange(InputDevice, InputDeviceChange) public void onInputDeviceChange(InputDevice device, InputDeviceChange change) Parameters device InputDevice change InputDeviceChange"
  },
  "api/rwby.LoadingScreenManager.html": {
    "href": "api/rwby.LoadingScreenManager.html",
    "title": "Class LoadingScreenManager | Rwby Vytal Versus Documentation",
    "keywords": "Class LoadingScreenManager Namespace rwby Assembly rwby.dll public class LoadingScreenManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LoadingScreenManager Fields canvas public Canvas canvas Field Value Canvas loadingBar public Image loadingBar Field Value Image loadingBarFill public Image loadingBarFill Field Value Image loadingText public TextMeshProUGUI loadingText Field Value TextMeshProUGUI Methods ActivateBlackScreen() public void ActivateBlackScreen() ActivateLoadingScreen() public void ActivateLoadingScreen() DeactivateLoadingScreen() public void DeactivateLoadingScreen() DeactivateLoadingScreen(float) public UniTaskVoid DeactivateLoadingScreen(float delay) Parameters delay float Returns UniTaskVoid SetLoadingBarProgress(float) public void SetLoadingBarProgress(float percentage) Parameters percentage float SetLoadingText(string) public void SetLoadingText(string text) Parameters text string"
  },
  "api/rwby.LobbyClientState.html": {
    "href": "api/rwby.LobbyClientState.html",
    "title": "Enum LobbyClientState | Rwby Vytal Versus Documentation",
    "keywords": "Enum LobbyClientState Namespace rwby Assembly rwby.dll public enum LobbyClientState Fields IN_LOBBY = 0 IN_MATCH = 2 TRANSITIONING_TO_LOBBY = 3 TRANSITIONING_TO_MATCH = 1"
  },
  "api/rwby.LobbyModStrictness.html": {
    "href": "api/rwby.LobbyModStrictness.html",
    "title": "Enum LobbyModStrictness | Rwby Vytal Versus Documentation",
    "keywords": "Enum LobbyModStrictness Namespace rwby Assembly rwby.dll public enum LobbyModStrictness Fields AllLoadedMods = 1 Custom = 2 RequiredMods = 0"
  },
  "api/rwby.MatchHandlerBase.MatchEvent.html": {
    "href": "api/rwby.MatchHandlerBase.MatchEvent.html",
    "title": "Delegate MatchHandlerBase.MatchEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate MatchHandlerBase.MatchEvent Namespace rwby Assembly rwby.dll public delegate void MatchHandlerBase.MatchEvent()"
  },
  "api/rwby.MatchHandlerBase.html": {
    "href": "api/rwby.MatchHandlerBase.html",
    "title": "Class MatchHandlerBase | Rwby Vytal Versus Documentation",
    "keywords": "Class MatchHandlerBase Namespace rwby Assembly rwby.dll public class MatchHandlerBase : MonoBehaviour, ILocalEntityHolder Inheritance object Object Component Behaviour MonoBehaviour MatchHandlerBase Implements ILocalEntityHolder Fields OnMatchEnded public MatchHandlerBase.MatchEvent OnMatchEnded Field Value MatchHandlerBase.MatchEvent gameRunner public QuantumRunner gameRunner Field Value QuantumRunner gamemodeSystemConfig public AssetRef<SystemsConfig> gamemodeSystemConfig Field Value AssetRef<SystemsConfig> Properties LocalPlayerEntitys public virtual Dictionary<int, QuantumEntityView> LocalPlayerEntitys { get; } Property Value Dictionary<int, QuantumEntityView> Methods GetGamemodeSettings() public virtual GamemodeSettingsBase GetGamemodeSettings() Returns GamemodeSettingsBase GetLocalPlayerCamera(PlayerRef) public virtual DummyCamera GetLocalPlayerCamera(PlayerRef globalPlayer) Parameters globalPlayer PlayerRef Returns DummyCamera GetLocalPlayerVirtualCam(PlayerRef) public virtual TargetCameraManager GetLocalPlayerVirtualCam(PlayerRef globalPlayer) Parameters globalPlayer PlayerRef Returns TargetCameraManager SetBGM(BaseSongDefinition) public virtual void SetBGM(BaseSongDefinition songDefinition) Parameters songDefinition BaseSongDefinition SetLocalPlayerCharacters(List<IFighterDefinition>) public virtual void SetLocalPlayerCharacters(List<IFighterDefinition> fighterDefinitions) Parameters fighterDefinitions List<IFighterDefinition> SetLocalPlayerSpecials(List<List<AssetRef<HNSFSpecialSet>>>) public virtual void SetLocalPlayerSpecials(List<List<AssetRef<HNSFSpecialSet>>> fighterSpecials) Parameters fighterSpecials List<List<AssetRef<HNSFSpecialSet>>> SetLocalPlayerTeams(List<int>) public virtual void SetLocalPlayerTeams(List<int> playerTeams) Parameters playerTeams List<int> Setup() public virtual UniTask<bool> Setup() Returns UniTask<bool> Teardown() public virtual UniTask Teardown() Returns UniTask"
  },
  "api/rwby.MenuLabelExternalOptionElement.html": {
    "href": "api/rwby.MenuLabelExternalOptionElement.html",
    "title": "Class MenuLabelExternalOptionElement | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelExternalOptionElement Namespace rwby Assembly rwby.dll public class MenuLabelExternalOptionElement : Selectable Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour Selectable MenuLabelExternalOptionElement Fields description public string description Field Value string label public TextMeshProUGUI label Field Value TextMeshProUGUI options public ExternalOptionDefinition[] options Field Value ExternalOptionDefinition[] reversed [NonSerialized] public bool reversed Field Value bool valueLabel public TextMeshProUGUI valueLabel Field Value TextMeshProUGUI Properties SelectedOption public int SelectedOption { get; set; } Property Value int Methods Awake() protected override void Awake() GetSelectedOption() public ExternalOptionDefinition GetSelectedOption() Returns ExternalOptionDefinition GetSelectedOptionName() public string GetSelectedOptionName() Returns string Initialize(string, string, List<string>, int, IExternalOptionCallback, bool) public void Initialize(string labelText, string description, List<string> options, int selectedOption, IExternalOptionCallback callback, bool reverse = false) Parameters labelText string description string options List<string> selectedOption int callback IExternalOptionCallback reverse bool Initialize(string, string, List<(string, string)>, int, IExternalOptionCallback, bool) public void Initialize(string labelText, string description, List<(string, string)> options, int selectedOption, IExternalOptionCallback callback, bool reverse = false) Parameters labelText string description string options List<(string, string)> selectedOption int callback IExternalOptionCallback reverse bool Initialize(string, string, ExternalOptionDefinition[], int, IExternalOptionCallback, bool) public void Initialize(string labelText, string description, ExternalOptionDefinition[] options, int selectedOption, IExternalOptionCallback callback, bool reverse = false) Parameters labelText string description string options ExternalOptionDefinition[] selectedOption int callback IExternalOptionCallback reverse bool OnDeselect(BaseEventData) public override void OnDeselect(BaseEventData eventData) Parameters eventData BaseEventData OnSelect(BaseEventData) public override void OnSelect(BaseEventData eventData) Parameters eventData BaseEventData UpdateSelection() public void UpdateSelection()"
  },
  "api/rwby.MirrorNetworkManager.EmptyEvent.html": {
    "href": "api/rwby.MirrorNetworkManager.EmptyEvent.html",
    "title": "Delegate MirrorNetworkManager.EmptyEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate MirrorNetworkManager.EmptyEvent Namespace rwby Assembly rwby.dll public delegate void MirrorNetworkManager.EmptyEvent()"
  },
  "api/rwby.MirrorNetworkManager.ServerClientEvent.html": {
    "href": "api/rwby.MirrorNetworkManager.ServerClientEvent.html",
    "title": "Delegate MirrorNetworkManager.ServerClientEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate MirrorNetworkManager.ServerClientEvent Namespace rwby Assembly rwby.dll public delegate void MirrorNetworkManager.ServerClientEvent(NetworkConnectionToClient conn) Parameters conn NetworkConnectionToClient"
  },
  "api/rwby.MirrorNetworkManager.html": {
    "href": "api/rwby.MirrorNetworkManager.html",
    "title": "Class MirrorNetworkManager | Rwby Vytal Versus Documentation",
    "keywords": "Class MirrorNetworkManager Namespace rwby Assembly rwby.dll public class MirrorNetworkManager : NetworkManager Inheritance object Object Component Behaviour MonoBehaviour NetworkManager MirrorNetworkManager Fields ClientOnClientConnectEvent public MirrorNetworkManager.EmptyEvent ClientOnClientConnectEvent Field Value MirrorNetworkManager.EmptyEvent ClientOnClientDisconnectEvent public MirrorNetworkManager.EmptyEvent ClientOnClientDisconnectEvent Field Value MirrorNetworkManager.EmptyEvent ServerClientManagers List of client managers. List is only filled on the server. Indexed by connection ID. public Dictionary<int, NetworkIdentity> ServerClientManagers Field Value Dictionary<int, NetworkIdentity> ServerOnClientConnectEvent public MirrorNetworkManager.ServerClientEvent ServerOnClientConnectEvent Field Value MirrorNetworkManager.ServerClientEvent ServerOnClientDisconnectEvent public MirrorNetworkManager.ServerClientEvent ServerOnClientDisconnectEvent Field Value MirrorNetworkManager.ServerClientEvent Methods OnClientConnect() Called on the client when connected to a server. By default it sets client as ready and adds a player. public override void OnClientConnect() OnClientDisconnect() Called on clients when disconnected from a server. public override void OnClientDisconnect() OnServerAddPlayer(NetworkConnectionToClient) Called on server when a client requests to add the player. Adds playerPrefab by default. Can be overwritten. public override void OnServerAddPlayer(NetworkConnectionToClient conn) Parameters conn NetworkConnectionToClient OnServerConnect(NetworkConnectionToClient) Called on the server when a new client connects. public override void OnServerConnect(NetworkConnectionToClient conn) Parameters conn NetworkConnectionToClient OnServerDisconnect(NetworkConnectionToClient) Called on the server when a client disconnects. public override void OnServerDisconnect(NetworkConnectionToClient conn) Parameters conn NetworkConnectionToClient"
  },
  "api/rwby.MultipleDisplayUtilities.html": {
    "href": "api/rwby.MultipleDisplayUtilities.html",
    "title": "Class MultipleDisplayUtilities | Rwby Vytal Versus Documentation",
    "keywords": "Class MultipleDisplayUtilities Namespace rwby Assembly rwby.dll public static class MultipleDisplayUtilities Inheritance object MultipleDisplayUtilities Methods GetRelativeMousePositionForDrag(PointerEventData, ref Vector2) Converts the current drag position into a relative position for the display. public static bool GetRelativeMousePositionForDrag(PointerEventData eventData, ref Vector2 position) Parameters eventData PointerEventData position Vector2 Returns bool Returns true except when the drag operation is not on the same display as it originated GetRelativeMousePositionForRaycast(PointerEventData) public static Vector3 GetRelativeMousePositionForRaycast(PointerEventData eventData) Parameters eventData PointerEventData Returns Vector3 RelativeMouseAtScaled(Vector2, int) A version of Display.RelativeMouseAt that scales the position when the main display has a different rendering resolution to the system resolution. By default, the mouse position is relative to the main render area, we need to adjust this so it is relative to the system resolution in order to correctly determine the position on other displays. public static Vector3 RelativeMouseAtScaled(Vector2 position, int displayIndex) Parameters position Vector2 displayIndex int Returns Vector3"
  },
  "api/rwby.MusicLooper.html": {
    "href": "api/rwby.MusicLooper.html",
    "title": "Class MusicLooper | Rwby Vytal Versus Documentation",
    "keywords": "Class MusicLooper Namespace rwby Assembly rwby.dll public class MusicLooper : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MusicLooper Fields song public SongAudio song Field Value SongAudio tracks public List<MusicLooperTrack> tracks Field Value List<MusicLooperTrack> Methods FadeOut(float) public UniTask FadeOut(float fadeTime = 0.5) Parameters fadeTime float Returns UniTask Pause() public void Pause() Play(SongAudio, float) public void Play(SongAudio wantedSong, float volume = 1) Parameters wantedSong SongAudio volume float SetTrackVolume(int, float) public void SetTrackVolume(int index, float volume) Parameters index int volume float SetTrackVolumeSlice(int, float) public void SetTrackVolumeSlice(int index, float volume) Parameters index int volume float Stop() public void Stop()"
  },
  "api/rwby.MusicLooperTrack.html": {
    "href": "api/rwby.MusicLooperTrack.html",
    "title": "Class MusicLooperTrack | Rwby Vytal Versus Documentation",
    "keywords": "Class MusicLooperTrack Namespace rwby Assembly rwby.dll public class MusicLooperTrack : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MusicLooperTrack Methods GetNextSource(int) public int GetNextSource(int val) Parameters val int Returns int GetVolume() public float GetVolume() Returns float Play(AudioSource, AudioClip, SongLoopType, double, double) public void Play(AudioSource referenceAudioSource, AudioClip audioClip, SongLoopType loopType, double introBoundary, double loopBoundary) Parameters referenceAudioSource AudioSource audioClip AudioClip loopType SongLoopType introBoundary double loopBoundary double SetVolume(float) public void SetVolume(float volume) Parameters volume float Stop() public void Stop()"
  },
  "api/rwby.MusicManager.html": {
    "href": "api/rwby.MusicManager.html",
    "title": "Class MusicManager | Rwby Vytal Versus Documentation",
    "keywords": "Class MusicManager Namespace rwby Assembly rwby.dll public class MusicManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MusicManager Fields currentlyFading public List<MusicLooper> currentlyFading Field Value List<MusicLooper> currentlyPlaying public List<MusicLooper> currentlyPlaying Field Value List<MusicLooper> musicLooperPrefab public MusicLooper musicLooperPrefab Field Value MusicLooper Methods Fade(int, float) public void Fade(int index, float timeToFade = 0.5) Parameters index int timeToFade float FadeAll(float) public void FadeAll(float timeToFade = 0.5) Parameters timeToFade float GetLooperForSong(SongAudio) public MusicLooper GetLooperForSong(SongAudio song) Parameters song SongAudio Returns MusicLooper Play(SongAudio, float) public MusicLooper Play(SongAudio song, float volume = 1) Parameters song SongAudio volume float Returns MusicLooper StopCurrentlyFading(bool) public void StopCurrentlyFading(bool destroyPlayers = false) Parameters destroyPlayers bool StopCurrentlyPlaying(bool) public void StopCurrentlyPlaying(bool destroyPlayers = false) Parameters destroyPlayers bool"
  },
  "api/rwby.NetworkConsoleCommands.html": {
    "href": "api/rwby.NetworkConsoleCommands.html",
    "title": "Class NetworkConsoleCommands | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkConsoleCommands Namespace rwby Assembly rwby.dll public class NetworkConsoleCommands Inheritance object NetworkConsoleCommands Methods CreateLobby(string, uint, string, string) [ConsoleMethod(\"create-lobby\", \"Creates a multiplayer lobby.\", new string[] { })] public static UniTask<bool> CreateLobby(string lobbyName, uint maxClients, string password, string modGuid) Parameters lobbyName string maxClients uint password string modGuid string Returns UniTask<bool> JoinLobby(LobbyDetails) public static UniTask<bool> JoinLobby(LobbyDetails lobbyDetails) Parameters lobbyDetails LobbyDetails Returns UniTask<bool> StartLocalTrainingMode() public static UniTask<bool> StartLocalTrainingMode() Returns UniTask<bool> StartLocalVersusMode() public static UniTask<bool> StartLocalVersusMode() Returns UniTask<bool>"
  },
  "api/rwby.NetworkManager.html": {
    "href": "api/rwby.NetworkManager.html",
    "title": "Class NetworkManager | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkManager Namespace rwby Assembly rwby.dll public class NetworkManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NetworkManager Fields regionCodes public static readonly string[] regionCodes Field Value string[] sessionHandlers public Dictionary<string, SessionHandlerBase> sessionHandlers Field Value Dictionary<string, SessionHandlerBase> Methods CreateSessionHandler(string, SessionHandlerBase) public bool CreateSessionHandler(string sessionID, SessionHandlerBase sessionHandlerPrefab) Parameters sessionID string sessionHandlerPrefab SessionHandlerBase Returns bool DestroySessionHandler(string) public void DestroySessionHandler(string sessionID) Parameters sessionID string TryGetSessionHandler(string, out SessionHandlerBase) public bool TryGetSessionHandler(string sessionID, out SessionHandlerBase sessionHandler) Parameters sessionID string sessionHandler SessionHandlerBase Returns bool"
  },
  "api/rwby.NetworkMatchSessionHandler.MatchEvent.html": {
    "href": "api/rwby.NetworkMatchSessionHandler.MatchEvent.html",
    "title": "Delegate NetworkMatchSessionHandler.MatchEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate NetworkMatchSessionHandler.MatchEvent Namespace rwby Assembly rwby.dll public delegate void NetworkMatchSessionHandler.MatchEvent(string id) Parameters id string"
  },
  "api/rwby.NetworkMatchSessionHandler.html": {
    "href": "api/rwby.NetworkMatchSessionHandler.html",
    "title": "Class NetworkMatchSessionHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkMatchSessionHandler Namespace rwby Assembly rwby.dll public class NetworkMatchSessionHandler : SessionHandlerBase Inheritance object Object Component Behaviour MonoBehaviour SessionHandlerBase NetworkMatchSessionHandler Inherited Members SessionHandlerBase.ID Fields CurrentRunner [HideInInspector] public QuantumRunner CurrentRunner Field Value QuantumRunner OnMatchEnded public NetworkMatchSessionHandler.MatchEvent OnMatchEnded Field Value NetworkMatchSessionHandler.MatchEvent assetsToLoad [NonSerialized] public ModAssetSoftReference[] assetsToLoad Field Value ModAssetSoftReference[] clientCount [NonSerialized] public int clientCount Field Value int currentMatchHandler [HideInInspector] public MatchHandlerBase currentMatchHandler Field Value MatchHandlerBase defaultRuntimeConfig public RuntimeConfig defaultRuntimeConfig Field Value RuntimeConfig gameManager [HideInInspector] public GameManager gameManager Field Value GameManager gamemodeReference [NonSerialized] public ModAssetSoftReference gamemodeReference Field Value ModAssetSoftReference localBGM [NonSerialized] public BaseSongDefinition localBGM Field Value BaseSongDefinition localPlayerCharacterRefs [NonSerialized] public ModAssetSoftReference[] localPlayerCharacterRefs Field Value ModAssetSoftReference[] localPlayerTeams public int[] localPlayerTeams Field Value int[] mapReference [NonSerialized] public ModAssetSoftReference mapReference Field Value ModAssetSoftReference matchCode [Header(\"Match Info\")] [NonSerialized] public string matchCode Field Value string matchRegion public string matchRegion Field Value string playerCount [NonSerialized] public int playerCount Field Value int quantumAppSettings public AppSettings quantumAppSettings Field Value AppSettings quantumClient public RealtimeClient quantumClient Field Value RealtimeClient Methods BeginMatch() public UniTask BeginMatch() Returns UniTask Initialize() public override bool Initialize() Returns bool OnConnected() Called to signal that the \"low level connection\" got established but before the client can call operation on the server. public void OnConnected() Remarks After the (low level transport) connection is established, the client will automatically send the Authentication operation, which needs to get a response before the client can call other operations. Your logic should wait for either: OnRegionListReceived or OnConnectedToMaster. This callback is useful to detect if the server can be reached at all (technically). Most often, it's enough to implement OnDisconnected(DisconnectCause cause) and check for the cause. This is not called for transitions from the masterserver to game servers. OnConnectedToMaster() Called when the client is connected to the Master Server and ready for matchmaking and other tasks. public void OnConnectedToMaster() Remarks The list of available rooms won't become available unless you join a lobby via RealtimeClient.OpJoinLobby. You can join rooms and create them even without being in a lobby. The default lobby is used in that case. OnCreateRoomFailed(short, string) Called when the server couldn't create a room (OpCreateRoom failed). public void OnCreateRoomFailed(short returnCode, string message) Parameters returnCode short Operation ReturnCode from the server. message string Debug message for the error. Remarks Creating a room may fail for various reasons. Most often, the room already exists (roomname in use) or the RoomOptions clash and it's impossible to create the room. When creating a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. OnCreatedRoom() Called when this client created a room and entered it. OnJoinedRoom() will be called as well. public void OnCreatedRoom() Remarks This callback is only called on the client which created a room (see OpCreateRoom). As any client might close (or drop connection) anytime, there is a chance that the creator of a room does not execute OnCreatedRoom. If you need specific room properties or a \"start signal\", implement OnMasterClientSwitched() and make each new MasterClient check the room's state. OnCustomAuthenticationFailed(string) Called when the custom authentication failed. Followed by disconnect! public void OnCustomAuthenticationFailed(string debugMessage) Parameters debugMessage string Contains a debug message why authentication failed. This has to be fixed during development. Remarks Custom Authentication can fail due to user-input, bad tokens/secrets. If authentication is successful, this method is not called. Implement OnJoinedLobby() or OnConnectedToMaster() (as usual). During development of a game, it might also fail due to wrong configuration on the server side. In those cases, logging the debugMessage is very important. Unless you setup a custom authentication service for your app (in the Dashboard), this won't be called! OnCustomAuthenticationResponse(Dictionary<string, object>) Called when your Custom Authentication service responds with additional data. public void OnCustomAuthenticationResponse(Dictionary<string, object> data) Parameters data Dictionary<string, object> Remarks Custom Authentication services can include some custom data in their response. When present, that data is made available in this callback as Dictionary. While the keys of your data have to be strings, the values can be either string or a number (in Json). You need to make extra sure, that the value type is the one you expect. Numbers become (currently) int64. Example: void OnCustomAuthenticationResponse(Dictionary<string, object> data) { ... } OnDisconnected(DisconnectCause) Called after disconnecting from the Photon server. It could be a failure or an explicit disconnect call public void OnDisconnected(DisconnectCause cause) Parameters cause DisconnectCause Remarks The reason for this disconnect is provided as DisconnectCause. OnEvent(EventData) Called for any incoming events. public void OnEvent(EventData photonEvent) Parameters photonEvent EventData Remarks To receive events, implement IOnEventCallback in any class and register it via AddCallbackTarget (either in RealtimeClient or PhotonNetwork). With the EventData.Sender you can look up the Player who sent the event. It is best practice to assign an eventCode for each different type of content and action, so the Code will be essential to read the incoming events. OnFriendListUpdate(List<FriendInfo>) Called when the server sent the response to a FindFriends request. public void OnFriendListUpdate(List<FriendInfo> friendList) Parameters friendList List<FriendInfo> Remarks After calling OpFindFriends, the Master Server will cache the friend list and send updates to the friend list. The friends includes the name, userId, online state and the room (if any) for each requested user/friend. Use the friendList to update your UI and store it, if the UI should highlight changes. OnJoinRandomFailed(short, string) Called when a previous OpJoinRandom call failed on the server. public void OnJoinRandomFailed(short returnCode, string message) Parameters returnCode short Operation ReturnCode from the server. message string Debug message for the error. Remarks The most common causes are that a room is full or does not exist (due to someone else being faster or closing the room). This operation is only ever sent to the Master Server. Once a room is found by the Master Server, the client will head off to the designated Game Server and use the operation Join on the Game Server. When using multiple lobbies (via OpJoinLobby or a TypedLobby parameter), another lobby might have more/fitting rooms. OnJoinRoomFailed(short, string) Called when a previous OpJoinRoom call failed on the server. public void OnJoinRoomFailed(short returnCode, string message) Parameters returnCode short Operation ReturnCode from the server. message string Debug message for the error. Remarks Joining a room may fail for various reasons. Most often, the room is full or does not exist anymore (due to someone else being faster or closing the room). When joining a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. OnJoinedRoom() Called when the RealtimeClient entered a room, no matter if this client created it or simply joined. public void OnJoinedRoom() Remarks When this is called, you can access the existing players in Room.Players, their custom properties and Room.CustomProperties. In this callback, you could create player objects. For example in Unity, instantiate a prefab for the player. If you want a match to be started \"actively\", enable the user to signal \"ready\" (using OpRaiseEvent or a Custom Property). OnLeftRoom() Called when the local user/client left a room, so the game's logic can clean up it's internal state. public void OnLeftRoom() Remarks When leaving a room, the RealtimeClient will disconnect the Game Server and connect to the Master Server. This wraps up multiple internal actions. Wait for the callback OnConnectedToMaster, before you use lobbies and join or create rooms. OnLeftRoom also gets called, when the application quits. It makes sense to check static ConnectionHandler.AppQuits before loading scenes in OnLeftRoom(). OnRegionListReceived(RegionHandler) Called when the Name Server provided a list of regions for your title. public void OnRegionListReceived(RegionHandler regionHandler) Parameters regionHandler RegionHandler The currently used RegionHandler. Remarks This callback is called as soon as the list is available. No pings were sent for Best Region selection yet. If the client is set to connect to the Best Region (lowest ping), one or more regions get pinged. Not all regions are pinged. As soon as the results are final, the client will connect to the best region, so you can check the ping results when connected to the Master Server. Check the RegionHandler class description, to make use of the provided values. Teardown() public override UniTask Teardown() Returns UniTask Update() public void Update()"
  },
  "api/rwby.NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter.html": {
    "href": "api/rwby.NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter.html",
    "title": "Struct NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter Namespace rwby Assembly rwby.dll public struct NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter Fields fighterReference public ModAssetSoftReference fighterReference Field Value ModAssetSoftReference"
  },
  "api/rwby.NetworkMessagesCharacterLoading.html": {
    "href": "api/rwby.NetworkMessagesCharacterLoading.html",
    "title": "Class NetworkMessagesCharacterLoading | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkMessagesCharacterLoading Namespace rwby Assembly rwby.dll public static class NetworkMessagesCharacterLoading Inheritance object NetworkMessagesCharacterLoading Methods RoomClient_RequestMatchClientsLoadFighter(ModAssetSoftReference) public static UniTask<bool> RoomClient_RequestMatchClientsLoadFighter(ModAssetSoftReference fighterReference) Parameters fighterReference ModAssetSoftReference Returns UniTask<bool> Server_RequestMatchClientsLoadFighter(NetworkConnectionToClient, ClientToServerRequestRoomMembersLoadFighter) public static void Server_RequestMatchClientsLoadFighter(NetworkConnectionToClient arg1, NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter arg2) Parameters arg1 NetworkConnectionToClient arg2 NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter"
  },
  "api/rwby.OfflineMatchSessionHandler.html": {
    "href": "api/rwby.OfflineMatchSessionHandler.html",
    "title": "Class OfflineMatchSessionHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class OfflineMatchSessionHandler Namespace rwby Assembly rwby.dll public class OfflineMatchSessionHandler : SessionHandlerBase Inheritance object Object Component Behaviour MonoBehaviour SessionHandlerBase OfflineMatchSessionHandler Inherited Members SessionHandlerBase.ID Fields bgmIndex public int bgmIndex Field Value int currentMatchHandler [HideInInspector] public MatchHandlerBase currentMatchHandler Field Value MatchHandlerBase currentRunner [HideInInspector] public QuantumRunner currentRunner Field Value QuantumRunner defaultRuntimeConfig public RuntimeConfig defaultRuntimeConfig Field Value RuntimeConfig gameManager [HideInInspector] public GameManager gameManager Field Value GameManager localBGM [NonSerialized] public BaseSongDefinition localBGM Field Value BaseSongDefinition mapIndex [Header(\"Match Info\")] public int mapIndex Field Value int profiling public bool profiling Field Value bool Methods BeginMatch(ModAssetSoftReference) public virtual UniTask BeginMatch(ModAssetSoftReference gamemodeReference) Parameters gamemodeReference ModAssetSoftReference Returns UniTask Initialize() public override bool Initialize() Returns bool StartQuantumGame(AssetGuid, int) public virtual UniTask StartQuantumGame(AssetGuid mapGuid, int playerCount) Parameters mapGuid AssetGuid playerCount int Returns UniTask Teardown() public override UniTask Teardown() Returns UniTask"
  },
  "api/rwby.ParentSelectable.html": {
    "href": "api/rwby.ParentSelectable.html",
    "title": "Class ParentSelectable | Rwby Vytal Versus Documentation",
    "keywords": "Class ParentSelectable Namespace rwby Assembly rwby.dll [SelectionBase] [DisallowMultipleComponent] public class ParentSelectable : Selectable Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour Selectable ParentSelectable"
  },
  "api/rwby.QuickBootloader.html": {
    "href": "api/rwby.QuickBootloader.html",
    "title": "Class QuickBootloader | Rwby Vytal Versus Documentation",
    "keywords": "Class QuickBootloader Namespace rwby Assembly rwby.dll public class QuickBootloader : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour QuickBootloader"
  },
  "api/rwby.SaveData.html": {
    "href": "api/rwby.SaveData.html",
    "title": "Struct SaveData | Rwby Vytal Versus Documentation",
    "keywords": "Struct SaveData Namespace rwby Assembly rwby.dll [Serializable] public struct SaveData Fields version public int version Field Value int"
  },
  "api/rwby.SaveManager.html": {
    "href": "api/rwby.SaveManager.html",
    "title": "Class SaveManager | Rwby Vytal Versus Documentation",
    "keywords": "Class SaveManager Namespace rwby Assembly rwby.dll public class SaveManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SaveManager Fields currentSaveSlot public int currentSaveSlot Field Value int Properties CurrentSaveData public SaveData CurrentSaveData { get; } Property Value SaveData Methods CreateNewSaveFile() public void CreateNewSaveFile() LoadData(int) public void LoadData(int index) Parameters index int SaveData() public bool SaveData() Returns bool UpdateSaveData(SaveData) public void UpdateSaveData(SaveData newData) Parameters newData SaveData"
  },
  "api/rwby.SessionHandlerBase.html": {
    "href": "api/rwby.SessionHandlerBase.html",
    "title": "Class SessionHandlerBase | Rwby Vytal Versus Documentation",
    "keywords": "Class SessionHandlerBase Namespace rwby Assembly rwby.dll public class SessionHandlerBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SessionHandlerBase Derived NetworkMatchSessionHandler OfflineMatchSessionHandler NetworkLobbySessionHandler Fields ID public string ID Field Value string Methods Initialize() public virtual bool Initialize() Returns bool Teardown() public virtual UniTask Teardown() Returns UniTask"
  },
  "api/rwby.SetPositionFromCutsceneBinding.html": {
    "href": "api/rwby.SetPositionFromCutsceneBinding.html",
    "title": "Class SetPositionFromCutsceneBinding | Rwby Vytal Versus Documentation",
    "keywords": "Class SetPositionFromCutsceneBinding Namespace rwby Assembly rwby.dll public class SetPositionFromCutsceneBinding : MonoBehaviour, ICutsceneBinding Inheritance object Object Component Behaviour MonoBehaviour SetPositionFromCutsceneBinding Implements ICutsceneBinding Fields followTarget public GameObject followTarget Field Value GameObject setRotation public bool setRotation Field Value bool tag public AssetRef<Tag> tag Field Value AssetRef<Tag> Methods Bind(QuantumGame, CutsceneBindingSource) public void Bind(QuantumGame qGame, CutsceneBindingSource bindingSource) Parameters qGame QuantumGame bindingSource CutsceneBindingSource"
  },
  "api/rwby.SetTextFromVersion.html": {
    "href": "api/rwby.SetTextFromVersion.html",
    "title": "Class SetTextFromVersion | Rwby Vytal Versus Documentation",
    "keywords": "Class SetTextFromVersion Namespace rwby Assembly rwby.dll public class SetTextFromVersion : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SetTextFromVersion Fields prefix public string prefix Field Value string text public TextMeshProUGUI text Field Value TextMeshProUGUI"
  },
  "api/rwby.SettingsManager.SettingsChangedEvent.html": {
    "href": "api/rwby.SettingsManager.SettingsChangedEvent.html",
    "title": "Delegate SettingsManager.SettingsChangedEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate SettingsManager.SettingsChangedEvent Namespace rwby Assembly rwby.dll public delegate void SettingsManager.SettingsChangedEvent(SettingsManager settingsManager) Parameters settingsManager SettingsManager"
  },
  "api/rwby.SettingsManager.html": {
    "href": "api/rwby.SettingsManager.html",
    "title": "Class SettingsManager | Rwby Vytal Versus Documentation",
    "keywords": "Class SettingsManager Namespace rwby Assembly rwby.dll public class SettingsManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SettingsManager Fields OnVideoSettingsChanged public static SettingsManager.SettingsChangedEvent OnVideoSettingsChanged Field Value SettingsManager.SettingsChangedEvent VideoSettingsFile public const string VideoSettingsFile = \"VideoSettings.json\" Field Value string defaultVideoSettings public VideoSettings defaultVideoSettings Field Value VideoSettings Properties CurrentVideoSettings public VideoSettings CurrentVideoSettings { get; protected set; } Property Value VideoSettings Methods ApplyVideoSettings() public void ApplyVideoSettings() Initialize() public void Initialize() LoadAllSettings() public void LoadAllSettings() LoadVideoSettings() public void LoadVideoSettings() SaveVideoSettings() public void SaveVideoSettings() SetVideoSettings(VideoSettings) public void SetVideoSettings(VideoSettings settings) Parameters settings VideoSettings"
  },
  "api/rwby.SongAudio.html": {
    "href": "api/rwby.SongAudio.html",
    "title": "Class SongAudio | Rwby Vytal Versus Documentation",
    "keywords": "Class SongAudio Namespace rwby Assembly rwby.dll [CreateAssetMenu(fileName = \"SongAudio\", menuName = \"rwby/SongAudio\")] public class SongAudio : ScriptableObject Inheritance object Object ScriptableObject SongAudio Fields audioClips public AudioClip[] audioClips Field Value AudioClip[] introBoundary public double introBoundary Field Value double loopType public SongLoopType loopType Field Value SongLoopType loopingBoundary public double loopingBoundary Field Value double pitch [Range(-3, 3)] public float pitch Field Value float volume [Range(0, 1)] public float volume Field Value float"
  },
  "api/rwby.SongLoopType.html": {
    "href": "api/rwby.SongLoopType.html",
    "title": "Enum SongLoopType | Rwby Vytal Versus Documentation",
    "keywords": "Enum SongLoopType Namespace rwby Assembly rwby.dll public enum SongLoopType Fields IntroLoop = 0 Loop = 1 NonLooping = 2"
  },
  "api/rwby.StagingManager.html": {
    "href": "api/rwby.StagingManager.html",
    "title": "Class StagingManager | Rwby Vytal Versus Documentation",
    "keywords": "Class StagingManager Namespace rwby Assembly rwby.dll public class StagingManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour StagingManager Fields cutsceneManager public GlobalCutsceneManager cutsceneManager Field Value GlobalCutsceneManager fighterEventManager public GlobalFighterEventManager fighterEventManager Field Value GlobalFighterEventManager soundManager public GlobalSoundManager soundManager Field Value GlobalSoundManager vfxManager public GlobalVFXManager vfxManager Field Value GlobalVFXManager"
  },
  "api/rwby.TargetCameraManager.CameraState.html": {
    "href": "api/rwby.TargetCameraManager.CameraState.html",
    "title": "Enum TargetCameraManager.CameraState | Rwby Vytal Versus Documentation",
    "keywords": "Enum TargetCameraManager.CameraState Namespace rwby Assembly rwby.dll public enum TargetCameraManager.CameraState Fields LockedOn = 2 None = 0 ThirdPerson = 1"
  },
  "api/rwby.TargetCameraManager.html": {
    "href": "api/rwby.TargetCameraManager.html",
    "title": "Class TargetCameraManager | Rwby Vytal Versus Documentation",
    "keywords": "Class TargetCameraManager Namespace rwby Assembly rwby.dll public class TargetCameraManager : QuantumCallbacks Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumCallbacks TargetCameraManager Fields animator public Animator animator Field Value Animator dummyCam public DummyCamera dummyCam Field Value DummyCamera enemyVirtualTarget public Transform enemyVirtualTarget Field Value Transform followPlayer [HideInInspector] public int followPlayer Field Value int localEntityHolder public ILocalEntityHolder localEntityHolder Field Value ILocalEntityHolder lockOnCenterTarget public Transform lockOnCenterTarget Field Value Transform lockOnTargetGroup public CinemachineTargetGroup lockOnTargetGroup Field Value CinemachineTargetGroup selfTargetGroup public CinemachineTargetGroup selfTargetGroup Field Value CinemachineTargetGroup stateDrivenCam public CinemachineStateDrivenCamera stateDrivenCam Field Value CinemachineStateDrivenCamera targetVirtualCam public CinemachineCamera targetVirtualCam Field Value CinemachineCamera tpVirtualCam public CinemachineCamera tpVirtualCam Field Value CinemachineCamera updateAudioListener public bool updateAudioListener Field Value bool virtualCameras public CinemachineCamera[] virtualCameras Field Value CinemachineCamera[] virtualTarget public Transform virtualTarget Field Value Transform Methods OnUpdateView(QuantumGame) Is called by Quantum.CallbackUpdateView which is originally called by Quantum.QuantumRunner.Update() and it is called every Unity frame. public override void OnUpdateView(QuantumGame game) Parameters game QuantumGame Quantum game SetCameraOutputLayer(OutputChannels) public void SetCameraOutputLayer(OutputChannels channels) Parameters channels OutputChannels UpdatePOVSources(InputPlayerManager) public void UpdatePOVSources(InputPlayerManager inputPlayer) Parameters inputPlayer InputPlayerManager UpdateTargetCameraAim() public void UpdateTargetCameraAim() UpdateTpCameraAim() public void UpdateTpCameraAim()"
  },
  "api/rwby.TestUIMenu.html": {
    "href": "api/rwby.TestUIMenu.html",
    "title": "Class TestUIMenu | Rwby Vytal Versus Documentation",
    "keywords": "Class TestUIMenu Namespace rwby Assembly rwby.dll public class TestUIMenu : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase TestUIMenu Implements IMenu Inherited Members MenuBase.currentHandler Fields gameManager [NonSerialized] public GameManager gameManager Field Value GameManager sliderEle [Header(\"Elements\")] public MenuLabelFloatSliderElement sliderEle Field Value MenuLabelFloatSliderElement Methods BUTTON_CreateLobby() public void BUTTON_CreateLobby() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.TitleMainScreen.SubmenuType.html": {
    "href": "api/rwby.TitleMainScreen.SubmenuType.html",
    "title": "Enum TitleMainScreen.SubmenuType | Rwby Vytal Versus Documentation",
    "keywords": "Enum TitleMainScreen.SubmenuType Namespace rwby Assembly rwby.dll public enum TitleMainScreen.SubmenuType Fields local = 2 online = 1 topLevel = 0"
  },
  "api/rwby.TitleMainScreen.html": {
    "href": "api/rwby.TitleMainScreen.html",
    "title": "Class TitleMainScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class TitleMainScreen Namespace rwby Assembly rwby.dll public class TitleMainScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase TitleMainScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields gameManager [NonSerialized] public GameManager gameManager Field Value GameManager joinLobbyEntryScreen public GameObject joinLobbyEntryScreen Field Value GameObject submenuHistory public List<TitleMainScreen.SubmenuType> submenuHistory Field Value List<TitleMainScreen.SubmenuType> submenuLocal public GameObject submenuLocal Field Value GameObject submenuLocalDefaultSelection public GameObject submenuLocalDefaultSelection Field Value GameObject submenuOnline public GameObject submenuOnline Field Value GameObject submenuOnlineDefaultSelection public GameObject submenuOnlineDefaultSelection Field Value GameObject submenuTop [Header(\"Submenus\")] public GameObject submenuTop Field Value GameObject submenuTopDefaultSelection [Header(\"Default Picks\")] public GameObject submenuTopDefaultSelection Field Value GameObject testingLocal public bool testingLocal Field Value bool titleCamera public Camera titleCamera Field Value Camera titleGroup public CanvasGroup titleGroup Field Value CanvasGroup Methods BUTTON_ConfigureMods() public void BUTTON_ConfigureMods() BUTTON_CreateLobby() public void BUTTON_CreateLobby() BUTTON_ExitToDesktop() public void BUTTON_ExitToDesktop() BUTTON_JoinLobby() public void BUTTON_JoinLobby() BUTTON_Local() public void BUTTON_Local() BUTTON_Online() public void BUTTON_Online() BUTTON_Settings() public void BUTTON_Settings() BUTTON_TestButton() public void BUTTON_TestButton() BUTTON_Training() public void BUTTON_Training() BUTTON_Versus() public void BUTTON_Versus() GetSubmenuFromType(SubmenuType) public GameObject GetSubmenuFromType(TitleMainScreen.SubmenuType submenuType) Parameters submenuType TitleMainScreen.SubmenuType Returns GameObject Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.TitleScreen.html": {
    "href": "api/rwby.TitleScreen.html",
    "title": "Class TitleScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class TitleScreen Namespace rwby Assembly rwby.dll public class TitleScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase TitleScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields cutsceneTitleScreenTransition public PlayableDirector cutsceneTitleScreenTransition Field Value PlayableDirector gameManager [NonSerialized] public GameManager gameManager Field Value GameManager Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.UIElementTweenSequence.html": {
    "href": "api/rwby.UIElementTweenSequence.html",
    "title": "Class UIElementTweenSequence | Rwby Vytal Versus Documentation",
    "keywords": "Class UIElementTweenSequence Namespace rwby Assembly rwby.dll public class UIElementTweenSequence : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UIElementTweenSequence Fields scale public float scale Field Value float targetTransform public RectTransform targetTransform Field Value RectTransform Methods OnDeselect(BaseEventData) public void OnDeselect(BaseEventData eventData) Parameters eventData BaseEventData OnPointerDown(PointerEventData) public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData OnPointerEnter(PointerEventData) public void OnPointerEnter(PointerEventData eventData) Parameters eventData PointerEventData OnPointerExit(PointerEventData) public void OnPointerExit(PointerEventData eventData) Parameters eventData PointerEventData OnPointerUp(PointerEventData) public void OnPointerUp(PointerEventData eventData) Parameters eventData PointerEventData OnSelect(BaseEventData) public void OnSelect(BaseEventData eventData) Parameters eventData BaseEventData"
  },
  "api/rwby.UrpCameraSettingsUpdater.html": {
    "href": "api/rwby.UrpCameraSettingsUpdater.html",
    "title": "Class UrpCameraSettingsUpdater | Rwby Vytal Versus Documentation",
    "keywords": "Class UrpCameraSettingsUpdater Namespace rwby Assembly rwby.dll public class UrpCameraSettingsUpdater : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UrpCameraSettingsUpdater"
  },
  "api/rwby.VideoSettings.html": {
    "href": "api/rwby.VideoSettings.html",
    "title": "Struct VideoSettings | Rwby Vytal Versus Documentation",
    "keywords": "Struct VideoSettings Namespace rwby Assembly rwby.dll [Serializable] public struct VideoSettings Fields ambientOcculsion public int ambientOcculsion Field Value int antiAliasing public AntialiasingMode antiAliasing Field Value AntialiasingMode aoBlurQuality public int aoBlurQuality Field Value int aoSamples public int aoSamples Field Value int bloomQuality public int bloomQuality Field Value int bloomStrength public int bloomStrength Field Value int displayMode public int displayMode Field Value int fieldOfView public int fieldOfView Field Value int frameRateCap public int frameRateCap Field Value int fsrSharpness public float fsrSharpness Field Value float msaaQuality public int msaaQuality Field Value int renderScale public float renderScale Field Value float resolutionX public int resolutionX Field Value int resolutionY public int resolutionY Field Value int separateDisplayPerPlayer public bool separateDisplayPerPlayer Field Value bool shadowQuality public int shadowQuality Field Value int textureFiltering public int textureFiltering Field Value int textureQuality public int textureQuality Field Value int upscaler public int upscaler Field Value int vsyncMode public int vsyncMode Field Value int Methods ApplyCameraSettings(Camera, bool) public void ApplyCameraSettings(Camera camera, bool applyFOV = true) Parameters camera Camera applyFOV bool ApplyVideoSettings(UniversalRenderPipelineAsset) public void ApplyVideoSettings(UniversalRenderPipelineAsset urpAsset) Parameters urpAsset UniversalRenderPipelineAsset ApplyVolumeSettings(Volume) public void ApplyVolumeSettings(Volume volume) Parameters volume Volume GetAnisoLevel() public int GetAnisoLevel() Returns int GetFullScreenMode() public FullScreenMode GetFullScreenMode() Returns FullScreenMode SetShadowQuality(UniversalRenderPipelineAsset) public void SetShadowQuality(UniversalRenderPipelineAsset urpAsset) Parameters urpAsset UniversalRenderPipelineAsset"
  },
  "api/rwby.html": {
    "href": "api/rwby.html",
    "title": "Namespace rwby | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby Classes ActorCutscenePlayer AddressablesCommandListDefinition AddressablesCommandListEntry AddressablesHudElementDefinition AddressablesHudElementDefinitionContainer AddressablesSongDefinition AddressablesSongDefinitionContainer AudioListenerManager BaseCommandListDefinition BaseCommandListEntry BaseCommandListEntryGrouping BaseCommandListMovesetDefinition BaseSongDefinition BaseSongDefinitionContainer Bootloader ClientManager CreateLobbyScreen CustomEntityView CustomEntityViewUpdater CutsceneBinder CutsceneBinder.CinemachineTrackBindingDefinition CutsceneBindingSource CutsceneBindingSourceCondition CutsceneGrouping DummyCamera EntityAnimationUpdater ExternalModAssetSoftReference FindLobbyScreen ForceRenderRate GameConstants GameManager GlobalCutsceneManager HudElementContainer InputActions InputManager LoadingScreenManager MatchHandlerBase MenuLabelExternalOptionElement MirrorNetworkManager MultipleDisplayUtilities MusicLooper MusicLooperTrack MusicManager NetworkConsoleCommands NetworkManager NetworkMatchSessionHandler NetworkMessagesCharacterLoading OfflineMatchSessionHandler ParentSelectable QuickBootloader SaveManager SessionHandlerBase SetPositionFromCutsceneBinding SetTextFromVersion SettingsManager SongAudio StagingManager TargetCameraManager TestUIMenu TitleMainScreen TitleScreen UIElementTweenSequence UrpCameraSettingsUpdater Structs ExternalOptionDefinition InputActions.PlayerActions InputActions.UIActions NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter SaveData VideoSettings Interfaces IClosableMenu ICutsceneBinding IFighterDefinitionUser IHUDElement ILocalEntityHolder InputActions.IPlayerActions InputActions.IUIActions Enums InputManager.ControlSchemeType LobbyClientState LobbyModStrictness SongLoopType TargetCameraManager.CameraState TitleMainScreen.SubmenuType Delegates ActorCutscenePlayer.CutsceneEvent ClientManager.ClientManagerEvent ClientManager.ClientManagerPlayerCountEvent CustomEntityView.EntityAction MatchHandlerBase.MatchEvent MirrorNetworkManager.EmptyEvent MirrorNetworkManager.ServerClientEvent NetworkMatchSessionHandler.MatchEvent SettingsManager.SettingsChangedEvent"
  },
  "api/rwby.sessionhandlers.lobby.BGMSelectScreen.FighterEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.BGMSelectScreen.FighterEvent.html",
    "title": "Delegate BGMSelectScreen.FighterEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate BGMSelectScreen.FighterEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void BGMSelectScreen.FighterEvent(BaseSongDefinition songDefinition) Parameters songDefinition BaseSongDefinition"
  },
  "api/rwby.sessionhandlers.lobby.BGMSelectScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.BGMSelectScreen.html",
    "title": "Class BGMSelectScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class BGMSelectScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class BGMSelectScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase BGMSelectScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields OnFighterSelectedEvent public BGMSelectScreen.FighterEvent OnFighterSelectedEvent Field Value BGMSelectScreen.FighterEvent currentlySelectedSong public BaseSongDefinition currentlySelectedSong Field Value BaseSongDefinition fighhterDescriptionPanelText public TextMeshProUGUI fighhterDescriptionPanelText Field Value TextMeshProUGUI fighterItemPrefab public GameObject fighterItemPrefab Field Value GameObject fighterNamePanelText public TextMeshProUGUI fighterNamePanelText Field Value TextMeshProUGUI fighterScrollView public ScrollRect fighterScrollView Field Value ScrollRect Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler SelectCurrentViewingFighter() public void SelectCurrentViewingFighter() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.sessionhandlers.lobby.CharacterSelectionScreen.FighterEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.CharacterSelectionScreen.FighterEvent.html",
    "title": "Delegate CharacterSelectionScreen.FighterEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate CharacterSelectionScreen.FighterEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void CharacterSelectionScreen.FighterEvent(IFighterDefinition fighterDefinition) Parameters fighterDefinition IFighterDefinition"
  },
  "api/rwby.sessionhandlers.lobby.CharacterSelectionScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.CharacterSelectionScreen.html",
    "title": "Class CharacterSelectionScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class CharacterSelectionScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class CharacterSelectionScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase CharacterSelectionScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields OnFighterSelectedEvent public CharacterSelectionScreen.FighterEvent OnFighterSelectedEvent Field Value CharacterSelectionScreen.FighterEvent currentlySelectedFighter public IFighterDefinition currentlySelectedFighter Field Value IFighterDefinition fighhterDescriptionPanelText public TextMeshProUGUI fighhterDescriptionPanelText Field Value TextMeshProUGUI fighterItemPrefab public GameObject fighterItemPrefab Field Value GameObject fighterNamePanelText public TextMeshProUGUI fighterNamePanelText Field Value TextMeshProUGUI fighterScrollView public ScrollRect fighterScrollView Field Value ScrollRect Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler SelectCurrentViewingFighter() public void SelectCurrentViewingFighter() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool TrySelectCurrentViewingFighter() public UniTask TrySelectCurrentViewingFighter() Returns UniTask"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientAssetEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientAssetEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.ClientAssetEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.ClientAssetEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.ClientAssetEvent(ClientManager client, ModAssetSoftReference[] assetRefs, bool result) Parameters client ClientManager assetRefs ModAssetSoftReference[] result bool"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent(ClientManager client, ModAssetSoftReference characterRef, bool result) Parameters client ClientManager characterRef ModAssetSoftReference result bool"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientReadyStateEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientReadyStateEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.ClientReadyStateEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.ClientReadyStateEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.ClientReadyStateEvent(int matchID, ClientManager client, int localPlayerID, bool readyState) Parameters matchID int client ClientManager localPlayerID int readyState bool"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.EmptyEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.EmptyEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.EmptyEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.EmptyEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.EmptyEvent()"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.JoinMatchResponseEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.JoinMatchResponseEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.JoinMatchResponseEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.JoinMatchResponseEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.JoinMatchResponseEvent(NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode result) Parameters result NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent(bool result, int matchID) Parameters result bool matchID int"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.html",
    "title": "Class LobbySessionNetworkMessageHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class LobbySessionNetworkMessageHandler Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class LobbySessionNetworkMessageHandler Inheritance object LobbySessionNetworkMessageHandler Fields OnClientReportHasAsset public LobbySessionNetworkMessageHandler.ClientAssetEvent OnClientReportHasAsset Field Value LobbySessionNetworkMessageHandler.ClientAssetEvent OnClientSetCharacterResponse public LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent OnClientSetCharacterResponse Field Value LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent OnJoinMatchGetResponse public LobbySessionNetworkMessageHandler.JoinMatchResponseEvent OnJoinMatchGetResponse Field Value LobbySessionNetworkMessageHandler.JoinMatchResponseEvent OnMatchCreationOrUpdateResult public LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent OnMatchCreationOrUpdateResult Field Value LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent OnMatchListUpdated public LobbySessionNetworkMessageHandler.EmptyEvent OnMatchListUpdated Field Value LobbySessionNetworkMessageHandler.EmptyEvent ServerOnPlayerReadyStateChanged public LobbySessionNetworkMessageHandler.ClientReadyStateEvent ServerOnPlayerReadyStateChanged Field Value LobbySessionNetworkMessageHandler.ClientReadyStateEvent lobbySessionHandler public NetworkLobbySessionHandler lobbySessionHandler Field Value NetworkLobbySessionHandler Methods ClientAttemptReadyUpAsync(int) public UniTask<bool> ClientAttemptReadyUpAsync(int localPlayerID) Parameters localPlayerID int Returns UniTask<bool> ClientRequestMatchList() public void ClientRequestMatchList() ClientTryAddNewMatchAsync(NetworkLobbySessionMatchInfo) public UniTask<(bool, int)> ClientTryAddNewMatchAsync(NetworkLobbySessionMatchInfo matchInfo) Parameters matchInfo NetworkLobbySessionMatchInfo Returns UniTask<(bool, int)> ClientTryJoinMatchAsync(int, int, int, int) public UniTask<bool> ClientTryJoinMatchAsync(int matchID, int team, int slot, int localPlayerID) Parameters matchID int team int slot int localPlayerID int Returns UniTask<bool> ClientTrySetCharacterAsync(ModAssetSoftReference, int) public UniTask<bool> ClientTrySetCharacterAsync(ModAssetSoftReference characterRef, int localPlayerID) Parameters characterRef ModAssetSoftReference localPlayerID int Returns UniTask<bool> ClientUnready(int) public void ClientUnready(int localPlayerID) Parameters localPlayerID int RegisterNetworkMessages() public void RegisterNetworkMessages() ServerStartMatch(int) public void ServerStartMatch(int matchId) Parameters matchId int ServerUpdateClientMatchList(NetworkConnectionToClient, RequestMatchListMessage) public void ServerUpdateClientMatchList(NetworkConnectionToClient requester, NetworkLobbySessionHandlerMessages.RequestMatchListMessage msg) Parameters requester NetworkConnectionToClient msg NetworkLobbySessionHandlerMessages.RequestMatchListMessage"
  },
  "api/rwby.sessionhandlers.lobby.MatchCreationScreenGamemodeSelectionScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.MatchCreationScreenGamemodeSelectionScreen.html",
    "title": "Class MatchCreationScreenGamemodeSelectionScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class MatchCreationScreenGamemodeSelectionScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class MatchCreationScreenGamemodeSelectionScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase MatchCreationScreenGamemodeSelectionScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields gamemodeDescriptionPanelText public TextMeshProUGUI gamemodeDescriptionPanelText Field Value TextMeshProUGUI gamemodeItemPrefab public GameObject gamemodeItemPrefab Field Value GameObject gamemodeNamePanelText public TextMeshProUGUI gamemodeNamePanelText Field Value TextMeshProUGUI gamemodeScrollView public ScrollRect gamemodeScrollView Field Value ScrollRect matchCreationScreen public NetworkLobbySessionMatchCreationScreen matchCreationScreen Field Value NetworkLobbySessionMatchCreationScreen Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler SelectCurrentViewingGamemode() public void SelectCurrentViewingGamemode() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.sessionhandlers.lobby.MatchCreationScreenMainScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.MatchCreationScreenMainScreen.html",
    "title": "Class MatchCreationScreenMainScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class MatchCreationScreenMainScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class MatchCreationScreenMainScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase MatchCreationScreenMainScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields createLobbyButton public Button createLobbyButton Field Value Button pickGamemodeButton public Button pickGamemodeButton Field Value Button pickMapButton public Button pickMapButton Field Value Button regionDropdown public TMP_Dropdown regionDropdown Field Value TMP_Dropdown Methods AttemptToCreateLobby() public void AttemptToCreateLobby() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler Refresh() public void Refresh() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.sessionhandlers.lobby.MatchCreationScreenMapSelectionScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.MatchCreationScreenMapSelectionScreen.html",
    "title": "Class MatchCreationScreenMapSelectionScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class MatchCreationScreenMapSelectionScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class MatchCreationScreenMapSelectionScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase MatchCreationScreenMapSelectionScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields gamemodeDescriptionPanelText public TextMeshProUGUI gamemodeDescriptionPanelText Field Value TextMeshProUGUI gamemodeItemPrefab public GameObject gamemodeItemPrefab Field Value GameObject gamemodeNamePanelText public TextMeshProUGUI gamemodeNamePanelText Field Value TextMeshProUGUI gamemodeScrollView public ScrollRect gamemodeScrollView Field Value ScrollRect matchCreationScreen public NetworkLobbySessionMatchCreationScreen matchCreationScreen Field Value NetworkLobbySessionMatchCreationScreen Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler SelectCurrentViewingGamemode() public void SelectCurrentViewingGamemode() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.sessionhandlers.lobby.MatchPlayerListHolder.html": {
    "href": "api/rwby.sessionhandlers.lobby.MatchPlayerListHolder.html",
    "title": "Class MatchPlayerListHolder | Rwby Vytal Versus Documentation",
    "keywords": "Class MatchPlayerListHolder Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class MatchPlayerListHolder : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MatchPlayerListHolder Fields listTitle public TextMeshProUGUI listTitle Field Value TextMeshProUGUI playerListGroup public GridLayoutGroup playerListGroup Field Value GridLayoutGroup playerListItemPrefab public GameObject playerListItemPrefab Field Value GameObject readyColor public Color readyColor Field Value Color Methods UpdateList(NetworkLobbySessionMatchScreen, NetworkLobbySessionMatchInfo, int) public void UpdateList(NetworkLobbySessionMatchScreen matchScreen, NetworkLobbySessionMatchInfo matchInfo, int teamIndex) Parameters matchScreen NetworkLobbySessionMatchScreen matchInfo NetworkLobbySessionMatchInfo teamIndex int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandler.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandler.html",
    "title": "Class NetworkLobbySessionHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkLobbySessionHandler Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class NetworkLobbySessionHandler : SessionHandlerBase Inheritance object Object Component Behaviour MonoBehaviour SessionHandlerBase NetworkLobbySessionHandler Inherited Members SessionHandlerBase.ID Fields currentMatches public List<NetworkLobbySessionMatchInfo> currentMatches Field Value List<NetworkLobbySessionMatchInfo> gameManager [HideInInspector] public GameManager gameManager Field Value GameManager lobbyMenuHandlers public List<NetworkLobbySessionMenuHandler> lobbyMenuHandlers Field Value List<NetworkLobbySessionMenuHandler> lobbyMenuPrefab public NetworkLobbySessionMenuHandler lobbyMenuPrefab Field Value NetworkLobbySessionMenuHandler mirrorNetworkManager [HideInInspector] public MirrorNetworkManager mirrorNetworkManager Field Value MirrorNetworkManager networkMessageHandler public LobbySessionNetworkMessageHandler networkMessageHandler Field Value LobbySessionNetworkMessageHandler quantumAppSettings public AppSettings quantumAppSettings Field Value AppSettings quantumClient public RealtimeClient quantumClient Field Value RealtimeClient selectedSong public BaseSongDefinition selectedSong Field Value BaseSongDefinition Methods CreateLobby(string, string, uint, Guid) public virtual bool CreateLobby(string lobbyName, string password, uint maxClients, Guid modListGuid) Parameters lobbyName string password string maxClients uint modListGuid Guid Returns bool CreateQuantumClient() public virtual void CreateQuantumClient() GetMatchIndexByID(int) public int GetMatchIndexByID(int id) Parameters id int Returns int GetMatchInfoByID(int) public NetworkLobbySessionMatchInfo GetMatchInfoByID(int id) Parameters id int Returns NetworkLobbySessionMatchInfo Initialize() public override bool Initialize() Returns bool JoinLobby(LobbyDetails) public virtual bool JoinLobby(LobbyDetails lobbyDetails) Parameters lobbyDetails LobbyDetails Returns bool QuantumClientUpdateRegionPing() public virtual UniTask<bool> QuantumClientUpdateRegionPing() Returns UniTask<bool> RegisterNetworkEvents() public void RegisterNetworkEvents() SetMatchInfo(NetworkLobbySessionMatchInfo) public void SetMatchInfo(NetworkLobbySessionMatchInfo newMatchInfo) Parameters newMatchInfo NetworkLobbySessionMatchInfo SetupLobbyLocalUI() public void SetupLobbyLocalUI() Teardown() public override UniTask Teardown() Returns UniTask TeardownLobbyLocalUI() public void TeardownLobbyLocalUI() UnregisterNetworkEvents() public void UnregisterNetworkEvents() Update() public void Update()"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ChatMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ChatMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ChatMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ChatMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ChatMessage"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse Fields assetReferences public ModAssetSoftReference[] assetReferences Field Value ModAssetSoftReference[] hasAssets public bool hasAssets Field Value bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp Fields localPlayerID public int localPlayerID Field Value int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAttemptToUnready.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAttemptToUnready.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientAttemptToUnready | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientAttemptToUnready Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientAttemptToUnready Fields localPlayerID public int localPlayerID Field Value int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode.html",
    "title": "Enum NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode | Rwby Vytal Versus Documentation",
    "keywords": "Enum NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public enum NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode Fields InvalidMatch = 2 InvalidModID = 1 InvalidTeam = 3 Success = 0"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage Fields result public NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode result Field Value NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse Fields characterReference public ModAssetSoftReference characterReference Field Value ModAssetSoftReference result public bool result Field Value bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage Fields localPlayerID public int localPlayerID Field Value int matchID public int matchID Field Value int slot public int slot Field Value int team public int team Field Value int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage Fields characterReference public ModAssetSoftReference characterReference Field Value ModAssetSoftReference localPlayerID public int localPlayerID Field Value int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage Fields matchID public int matchID Field Value int result public bool result Field Value bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage Fields matches public NetworkLobbySessionMatchInfo[] matches Field Value NetworkLobbySessionMatchInfo[]"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestMatchListMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestMatchListMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.RequestMatchListMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.RequestMatchListMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.RequestMatchListMessage"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestNewMatchMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestNewMatchMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.RequestNewMatchMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.RequestNewMatchMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.RequestNewMatchMessage Fields id public int id Field Value int matchInfo public NetworkLobbySessionMatchInfo matchInfo Field Value NetworkLobbySessionMatchInfo"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage Fields newMatchInfo public NetworkLobbySessionMatchInfo newMatchInfo Field Value NetworkLobbySessionMatchInfo"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse Fields localPlayerID public int localPlayerID Field Value int result public bool result Field Value bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets Fields assetReferences public ModAssetSoftReference[] assetReferences Field Value ModAssetSoftReference[]"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerStartMatchMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerStartMatchMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ServerStartMatchMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ServerStartMatchMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ServerStartMatchMessage Fields matchId public int matchId Field Value int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.html",
    "title": "Class NetworkLobbySessionHandlerMessages | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkLobbySessionHandlerMessages Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public static class NetworkLobbySessionHandlerMessages Inheritance object NetworkLobbySessionHandlerMessages"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchClientDefinition.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchClientDefinition.html",
    "title": "Struct NetworkLobbySessionMatchClientDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionMatchClientDefinition Namespace rwby.sessionhandlers.lobby Assembly rwby.dll [Serializable] public struct NetworkLobbySessionMatchClientDefinition Fields characterReference public ModAssetSoftReference characterReference Field Value ModAssetSoftReference client public ClientManager client Field Value ClientManager localPlayerID public int localPlayerID Field Value int ready public bool ready Field Value bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchCreationScreen.MenuTypes.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchCreationScreen.MenuTypes.html",
    "title": "Enum NetworkLobbySessionMatchCreationScreen.MenuTypes | Rwby Vytal Versus Documentation",
    "keywords": "Enum NetworkLobbySessionMatchCreationScreen.MenuTypes Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public enum NetworkLobbySessionMatchCreationScreen.MenuTypes Fields GamemodeSelection = 1 Main = 0 MapSelection = 2"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchCreationScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchCreationScreen.html",
    "title": "Class NetworkLobbySessionMatchCreationScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkLobbySessionMatchCreationScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class NetworkLobbySessionMatchCreationScreen : MenuAndHandlerBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase MenuAndHandlerBase NetworkLobbySessionMatchCreationScreen Implements IMenu IMenuHandler Inherited Members MenuAndHandlerBase.menus MenuAndHandlerBase.history MenuAndHandlerBase.ResetAndForwardTo(int) MenuAndHandlerBase.Forward(int, bool) MenuAndHandlerBase.Back() MenuAndHandlerBase.GetHistory() MenuAndHandlerBase.GetCurrentMenu() MenuAndHandlerBase.HasSubmenuOpen() MenuBase.currentHandler Fields gamemodeSelectionScreen public MatchCreationScreenGamemodeSelectionScreen gamemodeSelectionScreen Field Value MatchCreationScreenGamemodeSelectionScreen mainScreen public MatchCreationScreenMainScreen mainScreen Field Value MatchCreationScreenMainScreen mapSelectionScreen public MatchCreationScreenMapSelectionScreen mapSelectionScreen Field Value MatchCreationScreenMapSelectionScreen messageHandler [FormerlySerializedAs(\"lobbySessionHandler\")] public NetworkLobbySessionHandler messageHandler Field Value NetworkLobbySessionHandler pickedGamemode [NonSerialized] public BaseGamemodeDefinition pickedGamemode Field Value BaseGamemodeDefinition pickedMap [NonSerialized] public IMapDefinition pickedMap Field Value IMapDefinition Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler PickGamemode(BaseGamemodeDefinition) public void PickGamemode(BaseGamemodeDefinition gamemodeDefinition) Parameters gamemodeDefinition BaseGamemodeDefinition PickMap(IMapDefinition) public void PickMap(IMapDefinition mapDefinition) Parameters mapDefinition IMapDefinition TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchInfo.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchInfo.html",
    "title": "Struct NetworkLobbySessionMatchInfo | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionMatchInfo Namespace rwby.sessionhandlers.lobby Assembly rwby.dll [Serializable] public struct NetworkLobbySessionMatchInfo Fields gamemodeName public string gamemodeName Field Value string gamemodeRef public ModAssetSoftReference gamemodeRef Field Value ModAssetSoftReference id public int id Field Value int mapName public string mapName Field Value string mapRef public ModAssetSoftReference mapRef Field Value ModAssetSoftReference matchCode public string matchCode Field Value string matchLocked public bool matchLocked Field Value bool matchMasterClient public int matchMasterClient Field Value int matchRegion public string matchRegion Field Value string modGuid public Guid modGuid Field Value Guid teamDefinitions public GamemodeTeamConfig[] teamDefinitions Field Value GamemodeTeamConfig[] teams public NetworkLobbySessionMatchTeam[] teams Field Value NetworkLobbySessionMatchTeam[] Methods GenerateMatchCode() public void GenerateMatchCode() GetClientManagers() public ClientManager[] GetClientManagers() Returns ClientManager[] GetLocalPlayerCharacterRefs() public ModAssetSoftReference[] GetLocalPlayerCharacterRefs() Returns ModAssetSoftReference[] GetLocalPlayerTeams() public int[] GetLocalPlayerTeams() Returns int[] GetPlayerCharacterRefs() public ModAssetSoftReference[] GetPlayerCharacterRefs() Returns ModAssetSoftReference[] GetTotalClientCount() public int GetTotalClientCount() Returns int GetTotalPlayerCount() public int GetTotalPlayerCount() Returns int UnreadyAll() public void UnreadyAll()"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchScreen.html",
    "title": "Class NetworkLobbySessionMatchScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkLobbySessionMatchScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class NetworkLobbySessionMatchScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase NetworkLobbySessionMatchScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields BGMText public TextMeshProUGUI BGMText Field Value TextMeshProUGUI lobbySessionHandler [FormerlySerializedAs(\"messageHandler\")] public NetworkLobbySessionHandler lobbySessionHandler Field Value NetworkLobbySessionHandler lobbySessionMenuHandler public NetworkLobbySessionMenuHandler lobbySessionMenuHandler Field Value NetworkLobbySessionMenuHandler matchButtonPrefab public Button matchButtonPrefab Field Value Button matchGamemodeNameText public TextMeshProUGUI matchGamemodeNameText Field Value TextMeshProUGUI matchMapNameText public TextMeshProUGUI matchMapNameText Field Value TextMeshProUGUI matchPlayerListHolderPrefab public MatchPlayerListHolder matchPlayerListHolderPrefab Field Value MatchPlayerListHolder matchPlayerScrollView public ScrollRect matchPlayerScrollView Field Value ScrollRect matchScrollView public ScrollRect matchScrollView Field Value ScrollRect regionText public TextMeshProUGUI regionText Field Value TextMeshProUGUI Methods BUTTON_BGMSelect() public void BUTTON_BGMSelect() OnTeamSlotClicked(int, int) public void OnTeamSlotClicked(int teamIndex, int playerSlotIndex) Parameters teamIndex int playerSlotIndex int Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler RefreshAll() public void RefreshAll() RefreshMatchInfo() public void RefreshMatchInfo() RefreshMatchList() public void RefreshMatchList() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool WhenMatchSelected(NetworkLobbySessionMatchInfo) public void WhenMatchSelected(NetworkLobbySessionMatchInfo match) Parameters match NetworkLobbySessionMatchInfo"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchTeam.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchTeam.html",
    "title": "Struct NetworkLobbySessionMatchTeam | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionMatchTeam Namespace rwby.sessionhandlers.lobby Assembly rwby.dll [Serializable] public struct NetworkLobbySessionMatchTeam Fields players public NetworkLobbySessionMatchClientDefinition[] players Field Value NetworkLobbySessionMatchClientDefinition[]"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMenuHandler.ScreenTypes.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMenuHandler.ScreenTypes.html",
    "title": "Enum NetworkLobbySessionMenuHandler.ScreenTypes | Rwby Vytal Versus Documentation",
    "keywords": "Enum NetworkLobbySessionMenuHandler.ScreenTypes Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public enum NetworkLobbySessionMenuHandler.ScreenTypes Fields BGMSelect = 3 CharacterSelect = 2 Match = 0 MatchCreation = 1"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMenuHandler.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMenuHandler.html",
    "title": "Class NetworkLobbySessionMenuHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkLobbySessionMenuHandler Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class NetworkLobbySessionMenuHandler : MenuHandlerBase, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuHandlerBase NetworkLobbySessionMenuHandler Implements IMenuHandler Inherited Members MenuHandlerBase.menus MenuHandlerBase.history MenuHandlerBase.ResetAndForwardTo(int) MenuHandlerBase.Forward(int, bool) MenuHandlerBase.Back() MenuHandlerBase.GetHistory() MenuHandlerBase.GetPreviousMenu() MenuHandlerBase.GetCurrentMenu() MenuHandlerBase.HasSubmenuOpen() Fields InputPlayerManager public InputPlayerManager InputPlayerManager Field Value InputPlayerManager bgmSelectScreen public MenuBase bgmSelectScreen Field Value MenuBase characterSelectScreen public MenuBase characterSelectScreen Field Value MenuBase matchCreationScreen public MenuBase matchCreationScreen Field Value MenuBase matchScreen public MenuBase matchScreen Field Value MenuBase messageHandler [FormerlySerializedAs(\"lobbySessionHandler\")] public NetworkLobbySessionHandler messageHandler Field Value NetworkLobbySessionHandler"
  },
  "api/rwby.sessionhandlers.lobby.html": {
    "href": "api/rwby.sessionhandlers.lobby.html",
    "title": "Namespace rwby.sessionhandlers.lobby | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.sessionhandlers.lobby Classes BGMSelectScreen CharacterSelectionScreen LobbySessionNetworkMessageHandler MatchCreationScreenGamemodeSelectionScreen MatchCreationScreenMainScreen MatchCreationScreenMapSelectionScreen MatchPlayerListHolder NetworkLobbySessionHandler NetworkLobbySessionHandlerMessages NetworkLobbySessionMatchCreationScreen NetworkLobbySessionMatchScreen NetworkLobbySessionMenuHandler Structs NetworkLobbySessionHandlerMessages.ChatMessage NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp NetworkLobbySessionHandlerMessages.ClientAttemptToUnready NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage NetworkLobbySessionHandlerMessages.RequestMatchListMessage NetworkLobbySessionHandlerMessages.RequestNewMatchMessage NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets NetworkLobbySessionHandlerMessages.ServerStartMatchMessage NetworkLobbySessionMatchClientDefinition NetworkLobbySessionMatchInfo NetworkLobbySessionMatchTeam Enums NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode NetworkLobbySessionMatchCreationScreen.MenuTypes NetworkLobbySessionMenuHandler.ScreenTypes Delegates BGMSelectScreen.FighterEvent CharacterSelectionScreen.FighterEvent LobbySessionNetworkMessageHandler.ClientAssetEvent LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent LobbySessionNetworkMessageHandler.ClientReadyStateEvent LobbySessionNetworkMessageHandler.EmptyEvent LobbySessionNetworkMessageHandler.JoinMatchResponseEvent LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent"
  },
  "api/rwby.ui.CommandListEntry.html": {
    "href": "api/rwby.ui.CommandListEntry.html",
    "title": "Class CommandListEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class CommandListEntry Namespace rwby.ui Assembly rwby.dll public class CommandListEntry : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CommandListEntry Fields bgImage public Image bgImage Field Value Image button public Button button Field Value Button command public TextMeshProUGUI command Field Value TextMeshProUGUI deselectedColor public Color deselectedColor Field Value Color image public Image image Field Value Image label public TextMeshProUGUI label Field Value TextMeshProUGUI meterRequirement public TextMeshProUGUI meterRequirement Field Value TextMeshProUGUI root public RectTransform root Field Value RectTransform selectedColor public Color selectedColor Field Value Color subtext public TextMeshProUGUI subtext Field Value TextMeshProUGUI Methods SetSelectedState(bool) public void SetSelectedState(bool state) Parameters state bool Setup(BaseCommandListEntry) public void Setup(BaseCommandListEntry commandListEntry) Parameters commandListEntry BaseCommandListEntry"
  },
  "api/rwby.ui.CommandListMenu.html": {
    "href": "api/rwby.ui.CommandListMenu.html",
    "title": "Class CommandListMenu | Rwby Vytal Versus Documentation",
    "keywords": "Class CommandListMenu Namespace rwby.ui Assembly rwby.dll public class CommandListMenu : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase CommandListMenu Implements IMenu Inherited Members MenuBase.currentHandler Fields characterName public TextMeshProUGUI characterName Field Value TextMeshProUGUI characterPortrait public Image characterPortrait Field Value Image moveDescription public TextMeshProUGUI moveDescription Field Value TextMeshProUGUI moveListEntryItemPrefab public CommandListEntry moveListEntryItemPrefab Field Value CommandListEntry moveListScrollRect public ScrollRect moveListScrollRect Field Value ScrollRect moveName public TextMeshProUGUI moveName Field Value TextMeshProUGUI moveVideoPlayer public VideoPlayer moveVideoPlayer Field Value VideoPlayer moveVideoRawImage public RawImage moveVideoRawImage Field Value RawImage movesetListChildItem public CommandListMovesetButton movesetListChildItem Field Value CommandListMovesetButton movesetListTransform public Transform movesetListTransform Field Value Transform tabChildItem public CommandListTabButton tabChildItem Field Value CommandListTabButton tabsTransform public Transform tabsTransform Field Value Transform Methods CreateMenu(IFighterDefinition) public void CreateMenu(IFighterDefinition fighterDefinition) Parameters fighterDefinition IFighterDefinition InitializeCommandList(IFighterDefinition) public UniTask<bool> InitializeCommandList(IFighterDefinition fighterDefinition) Parameters fighterDefinition IFighterDefinition Returns UniTask<bool> Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool UninitializeCommandList(IFighterDefinition) public void UninitializeCommandList(IFighterDefinition fighterDefinition) Parameters fighterDefinition IFighterDefinition"
  },
  "api/rwby.ui.CommandListMovesetButton.html": {
    "href": "api/rwby.ui.CommandListMovesetButton.html",
    "title": "Class CommandListMovesetButton | Rwby Vytal Versus Documentation",
    "keywords": "Class CommandListMovesetButton Namespace rwby.ui Assembly rwby.dll public class CommandListMovesetButton : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CommandListMovesetButton Fields button public Button button Field Value Button deselectedColor public Color deselectedColor Field Value Color deselectedTextColor public Color deselectedTextColor Field Value Color image public Image image Field Value Image label public TextMeshProUGUI label Field Value TextMeshProUGUI selectedColor public Color selectedColor Field Value Color selectedTextColor public Color selectedTextColor Field Value Color Methods SetSelectedState(bool) public void SetSelectedState(bool state) Parameters state bool"
  },
  "api/rwby.ui.CommandListTabButton.html": {
    "href": "api/rwby.ui.CommandListTabButton.html",
    "title": "Class CommandListTabButton | Rwby Vytal Versus Documentation",
    "keywords": "Class CommandListTabButton Namespace rwby.ui Assembly rwby.dll public class CommandListTabButton : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CommandListTabButton Fields button public Button button Field Value Button deselectedColor public Color deselectedColor Field Value Color deselectedTextColor public Color deselectedTextColor Field Value Color image public Image image Field Value Image label public TextMeshProUGUI label Field Value TextMeshProUGUI selectedColor public Color selectedColor Field Value Color selectedTextColor public Color selectedTextColor Field Value Color Methods SetSelectedState(bool) public void SetSelectedState(bool state) Parameters state bool"
  },
  "api/rwby.ui.IMenu.html": {
    "href": "api/rwby.ui.IMenu.html",
    "title": "Interface IMenu | Rwby Vytal Versus Documentation",
    "keywords": "Interface IMenu Namespace rwby.ui Assembly rwby.dll public interface IMenu Methods Open(MenuDirection, IMenuHandler) void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.ui.IMenuHandler.html": {
    "href": "api/rwby.ui.IMenuHandler.html",
    "title": "Interface IMenuHandler | Rwby Vytal Versus Documentation",
    "keywords": "Interface IMenuHandler Namespace rwby.ui Assembly rwby.dll public interface IMenuHandler Methods Back() bool Back() Returns bool Forward(int, bool) bool Forward(int menu, bool autoClose = true) Parameters menu int autoClose bool Returns bool GetCurrentMenu() IMenu GetCurrentMenu() Returns IMenu GetHistory() IList GetHistory() Returns IList HasSubmenuOpen() bool HasSubmenuOpen() Returns bool"
  },
  "api/rwby.ui.MainMenu.MainMenuManager.MainMenuScreens.html": {
    "href": "api/rwby.ui.MainMenu.MainMenuManager.MainMenuScreens.html",
    "title": "Enum MainMenuManager.MainMenuScreens | Rwby Vytal Versus Documentation",
    "keywords": "Enum MainMenuManager.MainMenuScreens Namespace rwby.ui.MainMenu Assembly rwby.dll public enum MainMenuManager.MainMenuScreens Fields CreateLobbyScreen = 4 FindLobbyScreen = 3 MAIN_SCREEN = 1 OPTIONS_SCREEN = 2 TITLE_SCREEN = 0 TestUIScreen = 5"
  },
  "api/rwby.ui.MainMenu.MainMenuManager.html": {
    "href": "api/rwby.ui.MainMenu.MainMenuManager.html",
    "title": "Class MainMenuManager | Rwby Vytal Versus Documentation",
    "keywords": "Class MainMenuManager Namespace rwby.ui.MainMenu Assembly rwby.dll public class MainMenuManager : MonoBehaviour, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MainMenuManager Implements IMenuHandler Fields createLobbyScreen public MenuBase createLobbyScreen Field Value MenuBase findLobbyScreen public MenuBase findLobbyScreen Field Value MenuBase mainMenuCamera public Camera mainMenuCamera Field Value Camera mainScreen public MenuBase mainScreen Field Value MenuBase menus public Dictionary<int, MenuBase> menus Field Value Dictionary<int, MenuBase> optionsScreen public MenuBase optionsScreen Field Value MenuBase singleton public static MainMenuManager singleton Field Value MainMenuManager skipTitleScreen public bool skipTitleScreen Field Value bool startingMenu public MainMenuManager.MainMenuScreens startingMenu Field Value MainMenuManager.MainMenuScreens testUIScreen public MenuBase testUIScreen Field Value MenuBase titleScreen public MenuBase titleScreen Field Value MenuBase Methods Back() public bool Back() Returns bool Forward(int, bool) public bool Forward(int menu, bool autoClose = true) Parameters menu int autoClose bool Returns bool GetCurrentMenu() public IMenu GetCurrentMenu() Returns IMenu GetHistory() public IList GetHistory() Returns IList GetPreviousMenu() public IMenu GetPreviousMenu() Returns IMenu HasSubmenuOpen() public bool HasSubmenuOpen() Returns bool Start() public void Start()"
  },
  "api/rwby.ui.MainMenu.OptionsVideoScreen.html": {
    "href": "api/rwby.ui.MainMenu.OptionsVideoScreen.html",
    "title": "Class OptionsVideoScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsVideoScreen Namespace rwby.ui.MainMenu Assembly rwby.dll public class OptionsVideoScreen : MenuBase, IMenu, IExternalOptionCallback Inheritance object Object Component Behaviour MonoBehaviour MenuBase OptionsVideoScreen Implements IMenu IExternalOptionCallback Inherited Members MenuBase.currentHandler Fields optionsMainScreen public OptionsMainScreen optionsMainScreen Field Value OptionsMainScreen optionsScrollRect public ScrollRect optionsScrollRect Field Value ScrollRect Methods ApplyVideoOptions() public void ApplyVideoOptions() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler SelectDefault() public void SelectDefault() SetupVideoOptions() public void SetupVideoOptions() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool WhenElementSelected(MenuLabelExternalOptionElement, BaseEventData) public void WhenElementSelected(MenuLabelExternalOptionElement element, BaseEventData eventData) Parameters element MenuLabelExternalOptionElement eventData BaseEventData"
  },
  "api/rwby.ui.MainMenu.html": {
    "href": "api/rwby.ui.MainMenu.html",
    "title": "Namespace rwby.ui.MainMenu | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.ui.MainMenu Classes MainMenuManager OptionsVideoScreen Enums MainMenuManager.MainMenuScreens"
  },
  "api/rwby.ui.MenuBase.html": {
    "href": "api/rwby.ui.MenuBase.html",
    "title": "Class MenuBase | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuBase Namespace rwby.ui Assembly rwby.dll public class MenuBase : MonoBehaviour, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase Implements IMenu Derived ControlsMainScreen ControlsProfileMappingScreen MenuAndHandlerBase OptionsGameplayScreen OptionsMainScreen OptionsModdingScreen OptionsScreen CreateLobbyScreen FindLobbyScreen TestUIMenu TitleMainScreen TitleScreen BGMSelectScreen CharacterSelectionScreen MatchCreationScreenGamemodeSelectionScreen MatchCreationScreenMainScreen MatchCreationScreenMapSelectionScreen NetworkLobbySessionMatchScreen CommandListMenu OptionsVideoScreen Fields currentHandler public IMenuHandler currentHandler Field Value IMenuHandler Methods Open(MenuDirection, IMenuHandler) public virtual void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public virtual bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.ui.MenuDirection.html": {
    "href": "api/rwby.ui.MenuDirection.html",
    "title": "Enum MenuDirection | Rwby Vytal Versus Documentation",
    "keywords": "Enum MenuDirection Namespace rwby.ui Assembly rwby.dll public enum MenuDirection Fields BACKWARDS = 0 FORWARDS = 1"
  },
  "api/rwby.ui.MenuLabelDropdownElement.html": {
    "href": "api/rwby.ui.MenuLabelDropdownElement.html",
    "title": "Class MenuLabelDropdownElement | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelDropdownElement Namespace rwby.ui Assembly rwby.dll public class MenuLabelDropdownElement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MenuLabelDropdownElement Fields bgImage public Image bgImage Field Value Image dropdown public TMP_Dropdown dropdown Field Value TMP_Dropdown label public TextMeshProUGUI label Field Value TextMeshProUGUI Methods GetSelectedOptionText() public string GetSelectedOptionText() Returns string Initialize(string, List<string>, int) public void Initialize(string labelText, List<string> dropdownOptions, int defaultValue) Parameters labelText string dropdownOptions List<string> defaultValue int"
  },
  "api/rwby.ui.MenuLabelFloatSliderElement.ElementCallback.html": {
    "href": "api/rwby.ui.MenuLabelFloatSliderElement.ElementCallback.html",
    "title": "Delegate MenuLabelFloatSliderElement.ElementCallback | Rwby Vytal Versus Documentation",
    "keywords": "Delegate MenuLabelFloatSliderElement.ElementCallback Namespace rwby.ui Assembly rwby.dll public delegate void MenuLabelFloatSliderElement.ElementCallback(MenuLabelFloatSliderElement slider) Parameters slider MenuLabelFloatSliderElement"
  },
  "api/rwby.ui.MenuLabelFloatSliderElement.SliderEvent.html": {
    "href": "api/rwby.ui.MenuLabelFloatSliderElement.SliderEvent.html",
    "title": "Class MenuLabelFloatSliderElement.SliderEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelFloatSliderElement.SliderEvent Namespace rwby.ui Assembly rwby.dll [Serializable] public class MenuLabelFloatSliderElement.SliderEvent : UnityEvent<float> Inheritance object UnityEventBase UnityEvent<float> MenuLabelFloatSliderElement.SliderEvent"
  },
  "api/rwby.ui.MenuLabelFloatSliderElement.html": {
    "href": "api/rwby.ui.MenuLabelFloatSliderElement.html",
    "title": "Class MenuLabelFloatSliderElement | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelFloatSliderElement Namespace rwby.ui Assembly rwby.dll public class MenuLabelFloatSliderElement : Selectable, INavigationStyleChanged Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour Selectable MenuLabelFloatSliderElement Implements INavigationStyleChanged Fields bgImage public Image bgImage Field Value Image description public string description Field Value string label public TextMeshProUGUI label Field Value TextMeshProUGUI m_Value [SerializeField] protected float m_Value Field Value float onSelected public MenuLabelFloatSliderElement.ElementCallback onSelected Field Value MenuLabelFloatSliderElement.ElementCallback sliderValueLabel public TextMeshProUGUI sliderValueLabel Field Value TextMeshProUGUI Properties maxValue public float maxValue { get; set; } Property Value float minValue public float minValue { get; set; } Property Value float normalizedValue public float normalizedValue { get; set; } Property Value float onValueChanged public MenuLabelFloatSliderElement.SliderEvent onValueChanged { get; set; } Property Value MenuLabelFloatSliderElement.SliderEvent value public virtual float value { get; set; } Property Value float wholeNumbers public bool wholeNumbers { get; set; } Property Value bool Methods FindSelectableOnLeft() See Selectable.FindSelectableOnLeft public override Selectable FindSelectableOnLeft() Returns Selectable FindSelectableOnRight() See Selectable.FindSelectableOnRight public override Selectable FindSelectableOnRight() Returns Selectable GetValue() public float GetValue() Returns float GraphicUpdateComplete() public void GraphicUpdateComplete() Initialize(string, float, float, float, string) public void Initialize(string labelText, float sliderValue, float sliderMin, float sliderMax, string valueFormatting = \"F0\") Parameters labelText string sliderValue float sliderMin float sliderMax float valueFormatting string LayoutComplete() public void LayoutComplete() NavigationStyleChanged(InputPlayerManager, NavigationType) public void NavigationStyleChanged(InputPlayerManager inputPlayer, InputPlayerManager.NavigationType navigationType) Parameters inputPlayer InputPlayerManager navigationType InputPlayerManager.NavigationType OnDisable() protected override void OnDisable() OnDrag(PointerEventData) public virtual void OnDrag(PointerEventData eventData) Parameters eventData PointerEventData OnEnable() protected override void OnEnable() OnInitializePotentialDrag(PointerEventData) public virtual void OnInitializePotentialDrag(PointerEventData eventData) Parameters eventData PointerEventData OnMove(AxisEventData) public override void OnMove(AxisEventData eventData) Parameters eventData AxisEventData OnPointerDown(PointerEventData) public override void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData OnSelect(BaseEventData) public override void OnSelect(BaseEventData eventData) Parameters eventData BaseEventData Rebuild(CanvasUpdate) public virtual void Rebuild(CanvasUpdate executing) Parameters executing CanvasUpdate Set(float, bool) Set the value of the slider. protected virtual void Set(float input, bool sendCallback = true) Parameters input float The new value for the slider. sendCallback bool If the OnValueChanged callback should be invoked. Remarks Process the input to ensure the value is between min and max value. If the input is different set the value and send the callback is required. SetValue(float) public void SetValue(float value) Parameters value float Update() Update the rect based on the delayed update visuals. Got around issue of calling sendMessage from onValidate. public virtual void Update()"
  },
  "api/rwby.ui.MenuLabelOptionElement.html": {
    "href": "api/rwby.ui.MenuLabelOptionElement.html",
    "title": "Class MenuLabelOptionElement | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelOptionElement Namespace rwby.ui Assembly rwby.dll public class MenuLabelOptionElement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MenuLabelOptionElement Fields bgImage public Image bgImage Field Value Image label public TextMeshProUGUI label Field Value TextMeshProUGUI listLabel public TextMeshProUGUI listLabel Field Value TextMeshProUGUI Properties Option public int Option { get; protected set; } Property Value int Methods Initialize(string, List<string>, int) public void Initialize(string labelText, List<string> options, int defaultOption) Parameters labelText string options List<string> defaultOption int ScrollLeft() public void ScrollLeft() ScrollRight() public void ScrollRight() SetOption(int) public void SetOption(int value) Parameters value int"
  },
  "api/rwby.ui.MenuLabelToggleElement.html": {
    "href": "api/rwby.ui.MenuLabelToggleElement.html",
    "title": "Class MenuLabelToggleElement | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelToggleElement Namespace rwby.ui Assembly rwby.dll public class MenuLabelToggleElement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MenuLabelToggleElement Fields bgImage public Image bgImage Field Value Image label public TextMeshProUGUI label Field Value TextMeshProUGUI toggle public Toggle toggle Field Value Toggle Methods Initialize(string, bool) public void Initialize(string labelText, bool defaultOption) Parameters labelText string defaultOption bool ScrollLeft() public void ScrollLeft() ScrollRight() public void ScrollRight()"
  },
  "api/rwby.ui.html": {
    "href": "api/rwby.ui.html",
    "title": "Namespace rwby.ui | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.ui Classes CommandListEntry CommandListMenu CommandListMovesetButton CommandListTabButton MenuBase MenuLabelDropdownElement MenuLabelFloatSliderElement MenuLabelFloatSliderElement.SliderEvent MenuLabelOptionElement MenuLabelToggleElement Interfaces IMenu IMenuHandler Enums MenuDirection Delegates MenuLabelFloatSliderElement.ElementCallback"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Rwby Vytal Versus Documentation",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Rwby Vytal Versus Documentation",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Rwby Vytal Versus Documentation",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}