### YamlMime:ManagedReference
items:
- uid: Quantum.SystemsConfig.SystemEntryBase
  commentId: T:Quantum.SystemsConfig.SystemEntryBase
  id: SystemsConfig.SystemEntryBase
  parent: Quantum
  children:
  - Quantum.SystemsConfig.SystemEntryBase.GetChildren
  - Quantum.SystemsConfig.SystemEntryBase.StartDisabled
  - Quantum.SystemsConfig.SystemEntryBase.SystemName
  - Quantum.SystemsConfig.SystemEntryBase.SystemType
  langs:
  - csharp
  - vb
  name: SystemsConfig.SystemEntryBase
  nameWithType: SystemsConfig.SystemEntryBase
  fullName: Quantum.SystemsConfig.SystemEntryBase
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/SystemsConfig.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemEntryBase
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/SystemsConfig.cs
    startLine: 20
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: System that will be instantiated on simulation start.
  example: []
  syntax:
    content: >-
      [Serializable]

      public abstract class SystemsConfig.SystemEntryBase
    content.vb: >-
      <Serializable>

      Public MustInherit Class SystemsConfig.SystemEntryBase
  inheritance:
  - System.Object
  derivedClasses:
  - Quantum.SystemsConfig.SubSubSystemEntry
  - Quantum.SystemsConfig.SystemEntryBase`1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Quantum.SystemsConfig.SystemEntryBase.SystemType
  commentId: F:Quantum.SystemsConfig.SystemEntryBase.SystemType
  id: SystemType
  parent: Quantum.SystemsConfig.SystemEntryBase
  langs:
  - csharp
  - vb
  name: SystemType
  nameWithType: SystemsConfig.SystemEntryBase.SystemType
  fullName: Quantum.SystemsConfig.SystemEntryBase.SystemType
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/SystemsConfig.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemType
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/SystemsConfig.cs
    startLine: 26
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: System type name. Use typeof(SystemBase).FullName to get a valid name programmatically. E.g. Quantum.Core.SystemSignalsOnly.
  example: []
  syntax:
    content: >-
      [SerializableType(WarnIfNoPreserveAttribute = true)]

      public SerializableType<SystemBase> SystemType
    return:
      type: Quantum.SerializableType{Quantum.SystemBase}
    content.vb: >-
      <SerializableType(WarnIfNoPreserveAttribute:=True)>

      Public SystemType As SerializableType(Of SystemBase)
  attributes:
  - type: Quantum.SerializableTypeAttribute
    ctor: Quantum.SerializableTypeAttribute.#ctor
    arguments: []
    namedArguments:
    - name: WarnIfNoPreserveAttribute
      type: System.Boolean
      value: true
- uid: Quantum.SystemsConfig.SystemEntryBase.SystemName
  commentId: F:Quantum.SystemsConfig.SystemEntryBase.SystemName
  id: SystemName
  parent: Quantum.SystemsConfig.SystemEntryBase
  langs:
  - csharp
  - vb
  name: SystemName
  nameWithType: SystemsConfig.SystemEntryBase.SystemName
  fullName: Quantum.SystemsConfig.SystemEntryBase.SystemName
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/SystemsConfig.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemName
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/SystemsConfig.cs
    startLine: 30
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Optional System name. If set, then the SystemType class needs to have a matching constructor.
  example: []
  syntax:
    content: public string SystemName
    return:
      type: System.String
    content.vb: Public SystemName As String
- uid: Quantum.SystemsConfig.SystemEntryBase.StartDisabled
  commentId: F:Quantum.SystemsConfig.SystemEntryBase.StartDisabled
  id: StartDisabled
  parent: Quantum.SystemsConfig.SystemEntryBase
  langs:
  - csharp
  - vb
  name: StartDisabled
  nameWithType: SystemsConfig.SystemEntryBase.StartDisabled
  fullName: Quantum.SystemsConfig.SystemEntryBase.StartDisabled
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/SystemsConfig.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: StartDisabled
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/SystemsConfig.cs
    startLine: 35
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Start system disabled.

    Set <xref href="Quantum.SystemBase.StartEnabled" data-throw-if-not-resolved="false"></xref> accordingly. The value is inversed to have a better default value in Unity inspectors.
  example: []
  syntax:
    content: public bool StartDisabled
    return:
      type: System.Boolean
    content.vb: Public StartDisabled As Boolean
- uid: Quantum.SystemsConfig.SystemEntryBase.GetChildren
  commentId: M:Quantum.SystemsConfig.SystemEntryBase.GetChildren
  id: GetChildren
  parent: Quantum.SystemsConfig.SystemEntryBase
  langs:
  - csharp
  - vb
  name: GetChildren()
  nameWithType: SystemsConfig.SystemEntryBase.GetChildren()
  fullName: Quantum.SystemsConfig.SystemEntryBase.GetChildren()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/SystemsConfig.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetChildren
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/SystemsConfig.cs
    startLine: 40
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns child system list if any.
  example: []
  syntax:
    content: public abstract IReadOnlyList<SystemsConfig.SystemEntryBase> GetChildren()
    return:
      type: System.Collections.Generic.IReadOnlyList{Quantum.SystemsConfig.SystemEntryBase}
      description: List of child systems
    content.vb: Public MustOverride Function GetChildren() As IReadOnlyList(Of SystemsConfig.SystemEntryBase)
  overload: Quantum.SystemsConfig.SystemEntryBase.GetChildren*
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quantum.SerializableType{Quantum.SystemBase}
  commentId: T:Quantum.SerializableType{Quantum.SystemBase}
  parent: Quantum
  definition: Quantum.SerializableType`1
  href: Quantum.SystemBase.html
  name: SerializableType<SystemBase>
  nameWithType: SerializableType<SystemBase>
  fullName: Quantum.SerializableType<Quantum.SystemBase>
  nameWithType.vb: SerializableType(Of SystemBase)
  fullName.vb: Quantum.SerializableType(Of Quantum.SystemBase)
  name.vb: SerializableType(Of SystemBase)
  spec.csharp:
  - uid: Quantum.SerializableType`1
    name: SerializableType
    isExternal: true
  - name: <
  - uid: Quantum.SystemBase
    name: SystemBase
    href: Quantum.SystemBase.html
  - name: '>'
  spec.vb:
  - uid: Quantum.SerializableType`1
    name: SerializableType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.SystemBase
    name: SystemBase
    href: Quantum.SystemBase.html
  - name: )
- uid: Quantum.SerializableType`1
  commentId: T:Quantum.SerializableType`1
  isExternal: true
  name: SerializableType<BaseType>
  nameWithType: SerializableType<BaseType>
  fullName: Quantum.SerializableType<BaseType>
  nameWithType.vb: SerializableType(Of BaseType)
  fullName.vb: Quantum.SerializableType(Of BaseType)
  name.vb: SerializableType(Of BaseType)
  spec.csharp:
  - uid: Quantum.SerializableType`1
    name: SerializableType
    isExternal: true
  - name: <
  - name: BaseType
  - name: '>'
  spec.vb:
  - uid: Quantum.SerializableType`1
    name: SerializableType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: BaseType
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Quantum.SystemBase.StartEnabled
  commentId: P:Quantum.SystemBase.StartEnabled
  parent: Quantum.SystemBase
  href: Quantum.SystemBase.html#Quantum_SystemBase_StartEnabled
  name: StartEnabled
  nameWithType: SystemBase.StartEnabled
  fullName: Quantum.SystemBase.StartEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Quantum.SystemBase
  commentId: T:Quantum.SystemBase
  parent: Quantum
  href: Quantum.SystemBase.html
  name: SystemBase
  nameWithType: SystemBase
  fullName: Quantum.SystemBase
- uid: Quantum.SystemsConfig.SystemEntryBase.GetChildren*
  commentId: Overload:Quantum.SystemsConfig.SystemEntryBase.GetChildren
  href: Quantum.SystemsConfig.SystemEntryBase.html#Quantum_SystemsConfig_SystemEntryBase_GetChildren
  name: GetChildren
  nameWithType: SystemsConfig.SystemEntryBase.GetChildren
  fullName: Quantum.SystemsConfig.SystemEntryBase.GetChildren
- uid: System.Collections.Generic.IReadOnlyList{Quantum.SystemsConfig.SystemEntryBase}
  commentId: T:System.Collections.Generic.IReadOnlyList{Quantum.SystemsConfig.SystemEntryBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<SystemsConfig.SystemEntryBase>
  nameWithType: IReadOnlyList<SystemsConfig.SystemEntryBase>
  fullName: System.Collections.Generic.IReadOnlyList<Quantum.SystemsConfig.SystemEntryBase>
  nameWithType.vb: IReadOnlyList(Of SystemsConfig.SystemEntryBase)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Quantum.SystemsConfig.SystemEntryBase)
  name.vb: IReadOnlyList(Of SystemsConfig.SystemEntryBase)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Quantum.SystemsConfig
    name: SystemsConfig
    href: Quantum.SystemsConfig.html
  - name: .
  - uid: Quantum.SystemsConfig.SystemEntryBase
    name: SystemEntryBase
    href: Quantum.SystemsConfig.SystemEntryBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.SystemsConfig
    name: SystemsConfig
    href: Quantum.SystemsConfig.html
  - name: .
  - uid: Quantum.SystemsConfig.SystemEntryBase
    name: SystemEntryBase
    href: Quantum.SystemsConfig.SystemEntryBase.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
