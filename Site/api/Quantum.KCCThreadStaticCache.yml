### YamlMime:ManagedReference
items:
- uid: Quantum.KCCThreadStaticCache
  commentId: T:Quantum.KCCThreadStaticCache
  id: KCCThreadStaticCache
  parent: Quantum
  children:
  - Quantum.KCCThreadStaticCache.Get``1
  - Quantum.KCCThreadStaticCache.Return``1(``0)
  langs:
  - csharp
  - vb
  name: KCCThreadStaticCache
  nameWithType: KCCThreadStaticCache
  fullName: Quantum.KCCThreadStaticCache
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCThreadStaticCache.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: KCCThreadStaticCache
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCThreadStaticCache.cs
    startLine: 6
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public static class KCCThreadStaticCache
    content.vb: Public Module KCCThreadStaticCache
  inheritance:
  - System.Object
- uid: Quantum.KCCThreadStaticCache.Get``1
  commentId: M:Quantum.KCCThreadStaticCache.Get``1
  id: Get``1
  parent: Quantum.KCCThreadStaticCache
  langs:
  - csharp
  - vb
  name: Get<T>()
  nameWithType: KCCThreadStaticCache.Get<T>()
  fullName: Quantum.KCCThreadStaticCache.Get<T>()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCThreadStaticCache.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Get
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCThreadStaticCache.cs
    startLine: 8
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: 'public static T Get<T>() where T : new()'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function [Get](Of T As New)() As T
  overload: Quantum.KCCThreadStaticCache.Get*
  nameWithType.vb: KCCThreadStaticCache.Get(Of T)()
  fullName.vb: Quantum.KCCThreadStaticCache.Get(Of T)()
  name.vb: Get(Of T)()
- uid: Quantum.KCCThreadStaticCache.Return``1(``0)
  commentId: M:Quantum.KCCThreadStaticCache.Return``1(``0)
  id: Return``1(``0)
  parent: Quantum.KCCThreadStaticCache
  langs:
  - csharp
  - vb
  name: Return<T>(T)
  nameWithType: KCCThreadStaticCache.Return<T>(T)
  fullName: Quantum.KCCThreadStaticCache.Return<T>(T)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCThreadStaticCache.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Return
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCThreadStaticCache.cs
    startLine: 14
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: 'public static void Return<T>(T item) where T : new()'
    parameters:
    - id: item
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub [Return](Of T As New)(item As T)
  overload: Quantum.KCCThreadStaticCache.Return*
  nameWithType.vb: KCCThreadStaticCache.Return(Of T)(T)
  fullName.vb: Quantum.KCCThreadStaticCache.Return(Of T)(T)
  name.vb: Return(Of T)(T)
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quantum.KCCThreadStaticCache.Get*
  commentId: Overload:Quantum.KCCThreadStaticCache.Get
  href: Quantum.KCCThreadStaticCache.html#Quantum_KCCThreadStaticCache_Get__1
  name: Get
  nameWithType: KCCThreadStaticCache.Get
  fullName: Quantum.KCCThreadStaticCache.Get
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Quantum.KCCThreadStaticCache.Return*
  commentId: Overload:Quantum.KCCThreadStaticCache.Return
  href: Quantum.KCCThreadStaticCache.html#Quantum_KCCThreadStaticCache_Return__1___0_
  name: Return
  nameWithType: KCCThreadStaticCache.Return
  fullName: Quantum.KCCThreadStaticCache.Return
