### YamlMime:ManagedReference
items:
- uid: Quantum.ChecksumFile.ChecksumEntry
  commentId: T:Quantum.ChecksumFile.ChecksumEntry
  id: ChecksumFile.ChecksumEntry
  parent: Quantum
  children:
  - Quantum.ChecksumFile.ChecksumEntry.ChecksumAsLong
  - Quantum.ChecksumFile.ChecksumEntry.Frame
  langs:
  - csharp
  - vb
  name: ChecksumFile.ChecksumEntry
  nameWithType: ChecksumFile.ChecksumEntry
  fullName: Quantum.ChecksumFile.ChecksumEntry
  type: Struct
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ChecksumEntry
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 5741
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Represents one recorded checksum.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct ChecksumFile.ChecksumEntry
    content.vb: >-
      <Serializable>

      Public Structure ChecksumFile.ChecksumEntry
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Quantum.ChecksumFile.ChecksumEntry.Frame
  commentId: F:Quantum.ChecksumFile.ChecksumEntry.Frame
  id: Frame
  parent: Quantum.ChecksumFile.ChecksumEntry
  langs:
  - csharp
  - vb
  name: Frame
  nameWithType: ChecksumFile.ChecksumEntry.Frame
  fullName: Quantum.ChecksumFile.ChecksumEntry.Frame
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Frame
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 5746
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: The frame number the checksum was recorded for.
  example: []
  syntax:
    content: public int Frame
    return:
      type: System.Int32
    content.vb: Public Frame As Integer
- uid: Quantum.ChecksumFile.ChecksumEntry.ChecksumAsLong
  commentId: F:Quantum.ChecksumFile.ChecksumEntry.ChecksumAsLong
  id: ChecksumAsLong
  parent: Quantum.ChecksumFile.ChecksumEntry
  langs:
  - csharp
  - vb
  name: ChecksumAsLong
  nameWithType: ChecksumFile.ChecksumEntry.ChecksumAsLong
  fullName: Quantum.ChecksumFile.ChecksumEntry.ChecksumAsLong
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ChecksumAsLong
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 5752
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Unity JSON cannot read the unsigned long data type. 

    We can convert on this level, keeping the ULong CalculateChecksum() signature and encode the 

    checksum as a long for serialization. Any other ideas?
  example: []
  syntax:
    content: public long ChecksumAsLong
    return:
      type: System.Int64
    content.vb: Public ChecksumAsLong As Long
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
