### YamlMime:ManagedReference
items:
- uid: Quantum.Prototypes.DummyRecordingSlotPrototype
  commentId: T:Quantum.Prototypes.DummyRecordingSlotPrototype
  id: DummyRecordingSlotPrototype
  parent: Quantum.Prototypes
  children:
  - Quantum.Prototypes.DummyRecordingSlotPrototype.Materialize(Quantum.Frame,Quantum.DummyRecordingSlot@,Quantum.PrototypeMaterializationContext@)
  - Quantum.Prototypes.DummyRecordingSlotPrototype.active
  - Quantum.Prototypes.DummyRecordingSlotPrototype.delay
  - Quantum.Prototypes.DummyRecordingSlotPrototype.inputs
  - Quantum.Prototypes.DummyRecordingSlotPrototype.slotChance
  langs:
  - csharp
  - vb
  name: DummyRecordingSlotPrototype
  nameWithType: DummyRecordingSlotPrototype
  fullName: Quantum.Prototypes.DummyRecordingSlotPrototype
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DummyRecordingSlotPrototype
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 678
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: >-
      [Serializable]

      [Prototype(typeof(DummyRecordingSlot))]

      public class DummyRecordingSlotPrototype : StructPrototype, IPrototype
    content.vb: >-
      <Serializable>

      <Prototype(GetType(DummyRecordingSlot))>

      Public Class DummyRecordingSlotPrototype Inherits StructPrototype Implements IPrototype
  inheritance:
  - System.Object
  - Quantum.StructPrototype
  implements:
  - Quantum.IPrototype
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: Quantum.Prototypes.PrototypeAttribute
    ctor: Quantum.Prototypes.PrototypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Quantum.DummyRecordingSlot
- uid: Quantum.Prototypes.DummyRecordingSlotPrototype.active
  commentId: F:Quantum.Prototypes.DummyRecordingSlotPrototype.active
  id: active
  parent: Quantum.Prototypes.DummyRecordingSlotPrototype
  langs:
  - csharp
  - vb
  name: active
  nameWithType: DummyRecordingSlotPrototype.active
  fullName: Quantum.Prototypes.DummyRecordingSlotPrototype.active
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: active
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 681
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QBoolean active
    return:
      type: Quantum.QBoolean
    content.vb: Public active As QBoolean
- uid: Quantum.Prototypes.DummyRecordingSlotPrototype.slotChance
  commentId: F:Quantum.Prototypes.DummyRecordingSlotPrototype.slotChance
  id: slotChance
  parent: Quantum.Prototypes.DummyRecordingSlotPrototype
  langs:
  - csharp
  - vb
  name: slotChance
  nameWithType: DummyRecordingSlotPrototype.slotChance
  fullName: Quantum.Prototypes.DummyRecordingSlotPrototype.slotChance
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: slotChance
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 682
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public byte slotChance
    return:
      type: System.Byte
    content.vb: Public slotChance As Byte
- uid: Quantum.Prototypes.DummyRecordingSlotPrototype.delay
  commentId: F:Quantum.Prototypes.DummyRecordingSlotPrototype.delay
  id: delay
  parent: Quantum.Prototypes.DummyRecordingSlotPrototype
  langs:
  - csharp
  - vb
  name: delay
  nameWithType: DummyRecordingSlotPrototype.delay
  fullName: Quantum.Prototypes.DummyRecordingSlotPrototype.delay
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: delay
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 683
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public byte delay
    return:
      type: System.Byte
    content.vb: Public delay As Byte
- uid: Quantum.Prototypes.DummyRecordingSlotPrototype.inputs
  commentId: F:Quantum.Prototypes.DummyRecordingSlotPrototype.inputs
  id: inputs
  parent: Quantum.Prototypes.DummyRecordingSlotPrototype
  langs:
  - csharp
  - vb
  name: inputs
  nameWithType: DummyRecordingSlotPrototype.inputs
  fullName: Quantum.Prototypes.DummyRecordingSlotPrototype.inputs
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: inputs
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 685
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: >-
      [DynamicCollection]

      public InputPrototype[] inputs
    return:
      type: Quantum.Prototypes.InputPrototype[]
    content.vb: >-
      <DynamicCollection>

      Public inputs As InputPrototype()
  attributes:
  - type: Quantum.DynamicCollectionAttribute
    ctor: Quantum.DynamicCollectionAttribute.#ctor
    arguments: []
- uid: Quantum.Prototypes.DummyRecordingSlotPrototype.Materialize(Quantum.Frame,Quantum.DummyRecordingSlot@,Quantum.PrototypeMaterializationContext@)
  commentId: M:Quantum.Prototypes.DummyRecordingSlotPrototype.Materialize(Quantum.Frame,Quantum.DummyRecordingSlot@,Quantum.PrototypeMaterializationContext@)
  id: Materialize(Quantum.Frame,Quantum.DummyRecordingSlot@,Quantum.PrototypeMaterializationContext@)
  parent: Quantum.Prototypes.DummyRecordingSlotPrototype
  langs:
  - csharp
  - vb
  name: Materialize(Frame, ref DummyRecordingSlot, in PrototypeMaterializationContext)
  nameWithType: DummyRecordingSlotPrototype.Materialize(Frame, ref DummyRecordingSlot, in PrototypeMaterializationContext)
  fullName: Quantum.Prototypes.DummyRecordingSlotPrototype.Materialize(Quantum.Frame, ref Quantum.DummyRecordingSlot, in Quantum.PrototypeMaterializationContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Materialize
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 687
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public void Materialize(Frame frame, ref DummyRecordingSlot result, in PrototypeMaterializationContext context = default)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: result
      type: Quantum.DummyRecordingSlot
    - id: context
      type: Quantum.PrototypeMaterializationContext
    content.vb: Public Sub Materialize(frame As Frame, result As DummyRecordingSlot, context As PrototypeMaterializationContext = Nothing)
  overload: Quantum.Prototypes.DummyRecordingSlotPrototype.Materialize*
  nameWithType.vb: DummyRecordingSlotPrototype.Materialize(Frame, DummyRecordingSlot, PrototypeMaterializationContext)
  fullName.vb: Quantum.Prototypes.DummyRecordingSlotPrototype.Materialize(Quantum.Frame, Quantum.DummyRecordingSlot, Quantum.PrototypeMaterializationContext)
  name.vb: Materialize(Frame, DummyRecordingSlot, PrototypeMaterializationContext)
references:
- uid: Quantum.Prototypes
  commentId: N:Quantum.Prototypes
  href: Quantum.html
  name: Quantum.Prototypes
  nameWithType: Quantum.Prototypes
  fullName: Quantum.Prototypes
  spec.csharp:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Prototypes
    name: Prototypes
    href: Quantum.Prototypes.html
  spec.vb:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Prototypes
    name: Prototypes
    href: Quantum.Prototypes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quantum.StructPrototype
  commentId: T:Quantum.StructPrototype
  parent: Quantum
  isExternal: true
  name: StructPrototype
  nameWithType: StructPrototype
  fullName: Quantum.StructPrototype
- uid: Quantum.IPrototype
  commentId: T:Quantum.IPrototype
  parent: Quantum
  isExternal: true
  name: IPrototype
  nameWithType: IPrototype
  fullName: Quantum.IPrototype
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: Quantum.QBoolean
  commentId: T:Quantum.QBoolean
  parent: Quantum
  isExternal: true
  name: QBoolean
  nameWithType: QBoolean
  fullName: Quantum.QBoolean
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Quantum.Prototypes.InputPrototype[]
  isExternal: true
  href: Quantum.Prototypes.InputPrototype.html
  name: InputPrototype[]
  nameWithType: InputPrototype[]
  fullName: Quantum.Prototypes.InputPrototype[]
  nameWithType.vb: InputPrototype()
  fullName.vb: Quantum.Prototypes.InputPrototype()
  name.vb: InputPrototype()
  spec.csharp:
  - uid: Quantum.Prototypes.InputPrototype
    name: InputPrototype
    href: Quantum.Prototypes.InputPrototype.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.Prototypes.InputPrototype
    name: InputPrototype
    href: Quantum.Prototypes.InputPrototype.html
  - name: (
  - name: )
- uid: Quantum.Prototypes.DummyRecordingSlotPrototype.Materialize*
  commentId: Overload:Quantum.Prototypes.DummyRecordingSlotPrototype.Materialize
  href: Quantum.Prototypes.DummyRecordingSlotPrototype.html#Quantum_Prototypes_DummyRecordingSlotPrototype_Materialize_Quantum_Frame_Quantum_DummyRecordingSlot__Quantum_PrototypeMaterializationContext__
  name: Materialize
  nameWithType: DummyRecordingSlotPrototype.Materialize
  fullName: Quantum.Prototypes.DummyRecordingSlotPrototype.Materialize
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Quantum.DummyRecordingSlot
  commentId: T:Quantum.DummyRecordingSlot
  parent: Quantum
  href: Quantum.DummyRecordingSlot.html
  name: DummyRecordingSlot
  nameWithType: DummyRecordingSlot
  fullName: Quantum.DummyRecordingSlot
- uid: Quantum.PrototypeMaterializationContext
  commentId: T:Quantum.PrototypeMaterializationContext
  parent: Quantum
  isExternal: true
  name: PrototypeMaterializationContext
  nameWithType: PrototypeMaterializationContext
  fullName: Quantum.PrototypeMaterializationContext
