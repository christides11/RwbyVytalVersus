### YamlMime:ManagedReference
items:
- uid: Quantum.Frame.FrameSignals
  commentId: T:Quantum.Frame.FrameSignals
  id: Frame.FrameSignals
  parent: Quantum
  children:
  - Quantum.Frame.FrameSignals.#ctor(Quantum.Frame)
  - Quantum.Frame.FrameSignals.AuraDecreased(Quantum.EntityRef,System.Int32,System.Int32)
  - Quantum.Frame.FrameSignals.AuraIncreased(Quantum.EntityRef,System.Int32,System.Int32)
  - Quantum.Frame.FrameSignals.DespawnFighter(Quantum.EntityRef)
  - Quantum.Frame.FrameSignals.GamemodeStateChanged(Quantum.GenericGamemodeStates,Quantum.GenericGamemodeStates)
  - Quantum.Frame.FrameSignals.GamemodeTeamScoreChanged(System.Int32,System.Int32,System.Int32)
  - Quantum.Frame.FrameSignals.HealthDecreased(Quantum.EntityRef,System.Int32,System.Int32)
  - Quantum.Frame.FrameSignals.HealthIncreased(Quantum.EntityRef,System.Int32,System.Int32)
  - Quantum.Frame.FrameSignals.OnCollision2D(Quantum.CollisionInfo2D)
  - Quantum.Frame.FrameSignals.OnCollision3D(Quantum.CollisionInfo3D)
  - Quantum.Frame.FrameSignals.OnCollisionEnter2D(Quantum.CollisionInfo2D)
  - Quantum.Frame.FrameSignals.OnCollisionEnter3D(Quantum.CollisionInfo3D)
  - Quantum.Frame.FrameSignals.OnCollisionExit2D(Quantum.ExitInfo2D)
  - Quantum.Frame.FrameSignals.OnCollisionExit3D(Quantum.ExitInfo3D)
  - Quantum.Frame.FrameSignals.OnEntityPrototypeMaterialized(Quantum.EntityRef,Quantum.EntityPrototypeRef)
  - Quantum.Frame.FrameSignals.OnMapChanged(Quantum.AssetRef{Quantum.Map})
  - Quantum.Frame.FrameSignals.OnNavMeshMoveAgent(Quantum.EntityRef,Photon.Deterministic.FPVector2)
  - Quantum.Frame.FrameSignals.OnNavMeshSearchFailed(Quantum.EntityRef,System.Boolean@)
  - Quantum.Frame.FrameSignals.OnNavMeshWaypointReached(Quantum.EntityRef,Photon.Deterministic.FPVector3,Quantum.Navigation.WaypointFlag,System.Boolean@)
  - Quantum.Frame.FrameSignals.OnPlayerAdded(Quantum.PlayerRef,System.Boolean)
  - Quantum.Frame.FrameSignals.OnPlayerConnected(Quantum.PlayerRef)
  - Quantum.Frame.FrameSignals.OnPlayerDisconnected(Quantum.PlayerRef)
  - Quantum.Frame.FrameSignals.OnPlayerRemoved(Quantum.PlayerRef)
  - Quantum.Frame.FrameSignals.OnTrigger2D(Quantum.TriggerInfo2D)
  - Quantum.Frame.FrameSignals.OnTrigger3D(Quantum.TriggerInfo3D)
  - Quantum.Frame.FrameSignals.OnTriggerEnter2D(Quantum.TriggerInfo2D)
  - Quantum.Frame.FrameSignals.OnTriggerEnter3D(Quantum.TriggerInfo3D)
  - Quantum.Frame.FrameSignals.OnTriggerExit2D(Quantum.ExitInfo2D)
  - Quantum.Frame.FrameSignals.OnTriggerExit3D(Quantum.ExitInfo3D)
  langs:
  - csharp
  - vb
  name: Frame.FrameSignals
  nameWithType: Frame.FrameSignals
  fullName: Quantum.Frame.FrameSignals
  type: Struct
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: FrameSignals
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1704
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: The Quantum signal API consist of core and user-defined code-generated signals.
  example: []
  syntax:
    content: public struct Frame.FrameSignals
    content.vb: Public Structure Frame.FrameSignals
- uid: Quantum.Frame.FrameSignals.AuraDecreased(Quantum.EntityRef,System.Int32,System.Int32)
  commentId: M:Quantum.Frame.FrameSignals.AuraDecreased(Quantum.EntityRef,System.Int32,System.Int32)
  id: AuraDecreased(Quantum.EntityRef,System.Int32,System.Int32)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: AuraDecreased(EntityRef, int, int)
  nameWithType: Frame.FrameSignals.AuraDecreased(EntityRef, int, int)
  fullName: Quantum.Frame.FrameSignals.AuraDecreased(Quantum.EntityRef, int, int)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AuraDecreased
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 3187
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void AuraDecreased(EntityRef entity, int oldAura, int newAura)
    parameters:
    - id: entity
      type: Quantum.EntityRef
    - id: oldAura
      type: System.Int32
    - id: newAura
      type: System.Int32
    content.vb: Public Sub AuraDecreased(entity As EntityRef, oldAura As Integer, newAura As Integer)
  overload: Quantum.Frame.FrameSignals.AuraDecreased*
  nameWithType.vb: Frame.FrameSignals.AuraDecreased(EntityRef, Integer, Integer)
  fullName.vb: Quantum.Frame.FrameSignals.AuraDecreased(Quantum.EntityRef, Integer, Integer)
  name.vb: AuraDecreased(EntityRef, Integer, Integer)
- uid: Quantum.Frame.FrameSignals.AuraIncreased(Quantum.EntityRef,System.Int32,System.Int32)
  commentId: M:Quantum.Frame.FrameSignals.AuraIncreased(Quantum.EntityRef,System.Int32,System.Int32)
  id: AuraIncreased(Quantum.EntityRef,System.Int32,System.Int32)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: AuraIncreased(EntityRef, int, int)
  nameWithType: Frame.FrameSignals.AuraIncreased(EntityRef, int, int)
  fullName: Quantum.Frame.FrameSignals.AuraIncreased(Quantum.EntityRef, int, int)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AuraIncreased
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 3196
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void AuraIncreased(EntityRef entity, int oldAura, int newAura)
    parameters:
    - id: entity
      type: Quantum.EntityRef
    - id: oldAura
      type: System.Int32
    - id: newAura
      type: System.Int32
    content.vb: Public Sub AuraIncreased(entity As EntityRef, oldAura As Integer, newAura As Integer)
  overload: Quantum.Frame.FrameSignals.AuraIncreased*
  nameWithType.vb: Frame.FrameSignals.AuraIncreased(EntityRef, Integer, Integer)
  fullName.vb: Quantum.Frame.FrameSignals.AuraIncreased(Quantum.EntityRef, Integer, Integer)
  name.vb: AuraIncreased(EntityRef, Integer, Integer)
- uid: Quantum.Frame.FrameSignals.DespawnFighter(Quantum.EntityRef)
  commentId: M:Quantum.Frame.FrameSignals.DespawnFighter(Quantum.EntityRef)
  id: DespawnFighter(Quantum.EntityRef)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: DespawnFighter(EntityRef)
  nameWithType: Frame.FrameSignals.DespawnFighter(EntityRef)
  fullName: Quantum.Frame.FrameSignals.DespawnFighter(Quantum.EntityRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DespawnFighter
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 3205
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void DespawnFighter(EntityRef entity)
    parameters:
    - id: entity
      type: Quantum.EntityRef
    content.vb: Public Sub DespawnFighter(entity As EntityRef)
  overload: Quantum.Frame.FrameSignals.DespawnFighter*
- uid: Quantum.Frame.FrameSignals.GamemodeStateChanged(Quantum.GenericGamemodeStates,Quantum.GenericGamemodeStates)
  commentId: M:Quantum.Frame.FrameSignals.GamemodeStateChanged(Quantum.GenericGamemodeStates,Quantum.GenericGamemodeStates)
  id: GamemodeStateChanged(Quantum.GenericGamemodeStates,Quantum.GenericGamemodeStates)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: GamemodeStateChanged(GenericGamemodeStates, GenericGamemodeStates)
  nameWithType: Frame.FrameSignals.GamemodeStateChanged(GenericGamemodeStates, GenericGamemodeStates)
  fullName: Quantum.Frame.FrameSignals.GamemodeStateChanged(Quantum.GenericGamemodeStates, Quantum.GenericGamemodeStates)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GamemodeStateChanged
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 3214
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void GamemodeStateChanged(GenericGamemodeStates newState, GenericGamemodeStates oldState)
    parameters:
    - id: newState
      type: Quantum.GenericGamemodeStates
    - id: oldState
      type: Quantum.GenericGamemodeStates
    content.vb: Public Sub GamemodeStateChanged(newState As GenericGamemodeStates, oldState As GenericGamemodeStates)
  overload: Quantum.Frame.FrameSignals.GamemodeStateChanged*
- uid: Quantum.Frame.FrameSignals.GamemodeTeamScoreChanged(System.Int32,System.Int32,System.Int32)
  commentId: M:Quantum.Frame.FrameSignals.GamemodeTeamScoreChanged(System.Int32,System.Int32,System.Int32)
  id: GamemodeTeamScoreChanged(System.Int32,System.Int32,System.Int32)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: GamemodeTeamScoreChanged(int, int, int)
  nameWithType: Frame.FrameSignals.GamemodeTeamScoreChanged(int, int, int)
  fullName: Quantum.Frame.FrameSignals.GamemodeTeamScoreChanged(int, int, int)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GamemodeTeamScoreChanged
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 3223
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void GamemodeTeamScoreChanged(int team, int oldValue, int newValue)
    parameters:
    - id: team
      type: System.Int32
    - id: oldValue
      type: System.Int32
    - id: newValue
      type: System.Int32
    content.vb: Public Sub GamemodeTeamScoreChanged(team As Integer, oldValue As Integer, newValue As Integer)
  overload: Quantum.Frame.FrameSignals.GamemodeTeamScoreChanged*
  nameWithType.vb: Frame.FrameSignals.GamemodeTeamScoreChanged(Integer, Integer, Integer)
  fullName.vb: Quantum.Frame.FrameSignals.GamemodeTeamScoreChanged(Integer, Integer, Integer)
  name.vb: GamemodeTeamScoreChanged(Integer, Integer, Integer)
- uid: Quantum.Frame.FrameSignals.HealthDecreased(Quantum.EntityRef,System.Int32,System.Int32)
  commentId: M:Quantum.Frame.FrameSignals.HealthDecreased(Quantum.EntityRef,System.Int32,System.Int32)
  id: HealthDecreased(Quantum.EntityRef,System.Int32,System.Int32)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: HealthDecreased(EntityRef, int, int)
  nameWithType: Frame.FrameSignals.HealthDecreased(EntityRef, int, int)
  fullName: Quantum.Frame.FrameSignals.HealthDecreased(Quantum.EntityRef, int, int)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: HealthDecreased
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 3232
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void HealthDecreased(EntityRef entity, int oldHealth, int newHealth)
    parameters:
    - id: entity
      type: Quantum.EntityRef
    - id: oldHealth
      type: System.Int32
    - id: newHealth
      type: System.Int32
    content.vb: Public Sub HealthDecreased(entity As EntityRef, oldHealth As Integer, newHealth As Integer)
  overload: Quantum.Frame.FrameSignals.HealthDecreased*
  nameWithType.vb: Frame.FrameSignals.HealthDecreased(EntityRef, Integer, Integer)
  fullName.vb: Quantum.Frame.FrameSignals.HealthDecreased(Quantum.EntityRef, Integer, Integer)
  name.vb: HealthDecreased(EntityRef, Integer, Integer)
- uid: Quantum.Frame.FrameSignals.HealthIncreased(Quantum.EntityRef,System.Int32,System.Int32)
  commentId: M:Quantum.Frame.FrameSignals.HealthIncreased(Quantum.EntityRef,System.Int32,System.Int32)
  id: HealthIncreased(Quantum.EntityRef,System.Int32,System.Int32)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: HealthIncreased(EntityRef, int, int)
  nameWithType: Frame.FrameSignals.HealthIncreased(EntityRef, int, int)
  fullName: Quantum.Frame.FrameSignals.HealthIncreased(Quantum.EntityRef, int, int)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: HealthIncreased
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 3241
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void HealthIncreased(EntityRef entity, int oldHealth, int newHealth)
    parameters:
    - id: entity
      type: Quantum.EntityRef
    - id: oldHealth
      type: System.Int32
    - id: newHealth
      type: System.Int32
    content.vb: Public Sub HealthIncreased(entity As EntityRef, oldHealth As Integer, newHealth As Integer)
  overload: Quantum.Frame.FrameSignals.HealthIncreased*
  nameWithType.vb: Frame.FrameSignals.HealthIncreased(EntityRef, Integer, Integer)
  fullName.vb: Quantum.Frame.FrameSignals.HealthIncreased(Quantum.EntityRef, Integer, Integer)
  name.vb: HealthIncreased(EntityRef, Integer, Integer)
- uid: Quantum.Frame.FrameSignals.#ctor(Quantum.Frame)
  commentId: M:Quantum.Frame.FrameSignals.#ctor(Quantum.Frame)
  id: '#ctor(Quantum.Frame)'
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: FrameSignals(Frame)
  nameWithType: Frame.FrameSignals.FrameSignals(Frame)
  fullName: Quantum.Frame.FrameSignals.FrameSignals(Quantum.Frame)
  type: Constructor
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: .ctor
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1711
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Constructor. Only used internally.
  example: []
  syntax:
    content: public FrameSignals(Frame f)
    parameters:
    - id: f
      type: Quantum.Frame
      description: The frame reference.
    content.vb: Public Sub New(f As Frame)
  overload: Quantum.Frame.FrameSignals.#ctor*
  nameWithType.vb: Frame.FrameSignals.New(Frame)
  fullName.vb: Quantum.Frame.FrameSignals.New(Quantum.Frame)
  name.vb: New(Frame)
- uid: Quantum.Frame.FrameSignals.OnPlayerAdded(Quantum.PlayerRef,System.Boolean)
  commentId: M:Quantum.Frame.FrameSignals.OnPlayerAdded(Quantum.PlayerRef,System.Boolean)
  id: OnPlayerAdded(Quantum.PlayerRef,System.Boolean)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnPlayerAdded(PlayerRef, bool)
  nameWithType: Frame.FrameSignals.OnPlayerAdded(PlayerRef, bool)
  fullName: Quantum.Frame.FrameSignals.OnPlayerAdded(Quantum.PlayerRef, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnPlayerAdded
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1716
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    This signal is called when a player was successfully added to the simulation 

    and the server accepted the RuntimePlayer data.
  example: []
  syntax:
    content: public void OnPlayerAdded(PlayerRef player, bool firstTime)
    parameters:
    - id: player
      type: Quantum.PlayerRef
      description: The player that was added.
    - id: firstTime
      type: System.Boolean
      description: The first time that this player ref was assigned to a player at all. When firstTime is false the player ref is being reused by a different player. See documentation.
    content.vb: Public Sub OnPlayerAdded(player As PlayerRef, firstTime As Boolean)
  overload: Quantum.Frame.FrameSignals.OnPlayerAdded*
  nameWithType.vb: Frame.FrameSignals.OnPlayerAdded(PlayerRef, Boolean)
  fullName.vb: Quantum.Frame.FrameSignals.OnPlayerAdded(Quantum.PlayerRef, Boolean)
  name.vb: OnPlayerAdded(PlayerRef, Boolean)
- uid: Quantum.Frame.FrameSignals.OnPlayerRemoved(Quantum.PlayerRef)
  commentId: M:Quantum.Frame.FrameSignals.OnPlayerRemoved(Quantum.PlayerRef)
  id: OnPlayerRemoved(Quantum.PlayerRef)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnPlayerRemoved(PlayerRef)
  nameWithType: Frame.FrameSignals.OnPlayerRemoved(PlayerRef)
  fullName: Quantum.Frame.FrameSignals.OnPlayerRemoved(Quantum.PlayerRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnPlayerRemoved
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1740
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    This signal is called when a player was removed from the simulation after

    the InputFlags are set to <xref href="Photon.Deterministic.DeterministicInputFlags.PlayerNotPresent" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void OnPlayerRemoved(PlayerRef player)
    parameters:
    - id: player
      type: Quantum.PlayerRef
      description: The player that was removed.
    content.vb: Public Sub OnPlayerRemoved(player As PlayerRef)
  overload: Quantum.Frame.FrameSignals.OnPlayerRemoved*
- uid: Quantum.Frame.FrameSignals.OnMapChanged(Quantum.AssetRef{Quantum.Map})
  commentId: M:Quantum.Frame.FrameSignals.OnMapChanged(Quantum.AssetRef{Quantum.Map})
  id: OnMapChanged(Quantum.AssetRef{Quantum.Map})
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnMapChanged(AssetRef<Map>)
  nameWithType: Frame.FrameSignals.OnMapChanged(AssetRef<Map>)
  fullName: Quantum.Frame.FrameSignals.OnMapChanged(Quantum.AssetRef<Quantum.Map>)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnMapChanged
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1753
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: This signal is called after the map has been changed by assigning a new map to <xref href="Quantum.Frame.Map" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void OnMapChanged(AssetRef<Map> previousMap)
    parameters:
    - id: previousMap
      type: Quantum.AssetRef{Quantum.Map}
      description: The previous map
    content.vb: Public Sub OnMapChanged(previousMap As AssetRef(Of Map))
  overload: Quantum.Frame.FrameSignals.OnMapChanged*
  nameWithType.vb: Frame.FrameSignals.OnMapChanged(AssetRef(Of Map))
  fullName.vb: Quantum.Frame.FrameSignals.OnMapChanged(Quantum.AssetRef(Of Quantum.Map))
  name.vb: OnMapChanged(AssetRef(Of Map))
- uid: Quantum.Frame.FrameSignals.OnEntityPrototypeMaterialized(Quantum.EntityRef,Quantum.EntityPrototypeRef)
  commentId: M:Quantum.Frame.FrameSignals.OnEntityPrototypeMaterialized(Quantum.EntityRef,Quantum.EntityPrototypeRef)
  id: OnEntityPrototypeMaterialized(Quantum.EntityRef,Quantum.EntityPrototypeRef)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnEntityPrototypeMaterialized(EntityRef, EntityPrototypeRef)
  nameWithType: Frame.FrameSignals.OnEntityPrototypeMaterialized(EntityRef, EntityPrototypeRef)
  fullName: Quantum.Frame.FrameSignals.OnEntityPrototypeMaterialized(Quantum.EntityRef, Quantum.EntityPrototypeRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnEntityPrototypeMaterialized
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1764
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    This signal is called after an entity prototype has been materialized.

    <p>During Load Map: the signal is invoked for all Entity and Entity Prototype pairs after all scene prototypes have been materialized.</p><p>Created with Frame.Create(): the signal is invoked immediately after the prototype has been materialized.</p>    /// <param name="f">The frame reference.</param>
  example: []
  syntax:
    content: public void OnEntityPrototypeMaterialized(EntityRef entity, EntityPrototypeRef prototypeRef)
    parameters:
    - id: entity
      type: Quantum.EntityRef
      description: The entity that was created.
    - id: prototypeRef
      type: Quantum.EntityPrototypeRef
      description: The entity prototype that was materialized.
    content.vb: Public Sub OnEntityPrototypeMaterialized(entity As EntityRef, prototypeRef As EntityPrototypeRef)
  overload: Quantum.Frame.FrameSignals.OnEntityPrototypeMaterialized*
- uid: Quantum.Frame.FrameSignals.OnPlayerConnected(Quantum.PlayerRef)
  commentId: M:Quantum.Frame.FrameSignals.OnPlayerConnected(Quantum.PlayerRef)
  id: OnPlayerConnected(Quantum.PlayerRef)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnPlayerConnected(PlayerRef)
  nameWithType: Frame.FrameSignals.OnPlayerConnected(PlayerRef)
  fullName: Quantum.Frame.FrameSignals.OnPlayerConnected(Quantum.PlayerRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnPlayerConnected
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1775
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    The signal is called when a player has successfully joined the simulation.

    <p>It's originating from the <xref href="Quantum.Core.PlayerConnectedSystem" data-throw-if-not-resolved="false"></xref>.</p><p>The connected status is based on the <xref href="Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef)" data-throw-if-not-resolved="false"></xref>.</p><p>The signal is always called from a verified frame.</p>
  example: []
  syntax:
    content: public void OnPlayerConnected(PlayerRef player)
    parameters:
    - id: player
      type: Quantum.PlayerRef
      description: The player that connected.
    content.vb: Public Sub OnPlayerConnected(player As PlayerRef)
  overload: Quantum.Frame.FrameSignals.OnPlayerConnected*
- uid: Quantum.Frame.FrameSignals.OnPlayerDisconnected(Quantum.PlayerRef)
  commentId: M:Quantum.Frame.FrameSignals.OnPlayerDisconnected(Quantum.PlayerRef)
  id: OnPlayerDisconnected(Quantum.PlayerRef)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnPlayerDisconnected(PlayerRef)
  nameWithType: Frame.FrameSignals.OnPlayerDisconnected(PlayerRef)
  fullName: Quantum.Frame.FrameSignals.OnPlayerDisconnected(Quantum.PlayerRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnPlayerDisconnected
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1786
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    The signal is called when a player has been removed and disconnected from the simulation.

    <p>It's originating from the <xref href="Quantum.Core.PlayerConnectedSystem" data-throw-if-not-resolved="false"></xref>.</p><p>The connected status is based on the <xref href="Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef)" data-throw-if-not-resolved="false"></xref>.</p><p>The signal is always called from a verified frame.</p>
  example: []
  syntax:
    content: public void OnPlayerDisconnected(PlayerRef player)
    parameters:
    - id: player
      type: Quantum.PlayerRef
      description: The disconnected player.
    content.vb: Public Sub OnPlayerDisconnected(player As PlayerRef)
  overload: Quantum.Frame.FrameSignals.OnPlayerDisconnected*
- uid: Quantum.Frame.FrameSignals.OnNavMeshWaypointReached(Quantum.EntityRef,Photon.Deterministic.FPVector3,Quantum.Navigation.WaypointFlag,System.Boolean@)
  commentId: M:Quantum.Frame.FrameSignals.OnNavMeshWaypointReached(Quantum.EntityRef,Photon.Deterministic.FPVector3,Quantum.Navigation.WaypointFlag,System.Boolean@)
  id: OnNavMeshWaypointReached(Quantum.EntityRef,Photon.Deterministic.FPVector3,Quantum.Navigation.WaypointFlag,System.Boolean@)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnNavMeshWaypointReached(EntityRef, FPVector3, WaypointFlag, ref bool)
  nameWithType: Frame.FrameSignals.OnNavMeshWaypointReached(EntityRef, FPVector3, Navigation.WaypointFlag, ref bool)
  fullName: Quantum.Frame.FrameSignals.OnNavMeshWaypointReached(Quantum.EntityRef, Photon.Deterministic.FPVector3, Quantum.Navigation.WaypointFlag, ref bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnNavMeshWaypointReached
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1797
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Signal is called when an agent reaches a waypoint.

    <p>Requires enabled <xref href="Quantum.Navigation.Config.EnableNavigationCallbacks" data-throw-if-not-resolved="false"></xref> in <xref href="Quantum.SimulationConfig.Navigation" data-throw-if-not-resolved="false"></xref>.</p>
  example: []
  syntax:
    content: public void OnNavMeshWaypointReached(EntityRef entity, FPVector3 waypoint, Navigation.WaypointFlag waypointFlags, ref bool resetAgent)
    parameters:
    - id: entity
      type: Quantum.EntityRef
      description: The entity the navmesh agent component belongs to
    - id: waypoint
      type: Photon.Deterministic.FPVector3
      description: The current waypoint position
    - id: waypointFlags
      type: Quantum.Navigation.WaypointFlag
      description: The current waypoint flags
    - id: resetAgent
      type: System.Boolean
      description: If set to true the NavMeshPathfinder component will be cleared and stopped. Set to false if NavMeshPathfinder.SetTarget() was called inside the callback.
    content.vb: Public Sub OnNavMeshWaypointReached(entity As EntityRef, waypoint As FPVector3, waypointFlags As Navigation.WaypointFlag, resetAgent As Boolean)
  overload: Quantum.Frame.FrameSignals.OnNavMeshWaypointReached*
  nameWithType.vb: Frame.FrameSignals.OnNavMeshWaypointReached(EntityRef, FPVector3, Navigation.WaypointFlag, Boolean)
  fullName.vb: Quantum.Frame.FrameSignals.OnNavMeshWaypointReached(Quantum.EntityRef, Photon.Deterministic.FPVector3, Quantum.Navigation.WaypointFlag, Boolean)
  name.vb: OnNavMeshWaypointReached(EntityRef, FPVector3, WaypointFlag, Boolean)
- uid: Quantum.Frame.FrameSignals.OnNavMeshSearchFailed(Quantum.EntityRef,System.Boolean@)
  commentId: M:Quantum.Frame.FrameSignals.OnNavMeshSearchFailed(Quantum.EntityRef,System.Boolean@)
  id: OnNavMeshSearchFailed(Quantum.EntityRef,System.Boolean@)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnNavMeshSearchFailed(EntityRef, ref bool)
  nameWithType: Frame.FrameSignals.OnNavMeshSearchFailed(EntityRef, ref bool)
  fullName: Quantum.Frame.FrameSignals.OnNavMeshSearchFailed(Quantum.EntityRef, ref bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnNavMeshSearchFailed
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1808
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Signal is called when the agent could not find a path in the agent update after using <xref href="Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase%2cPhoton.Deterministic.FPVector3%2cQuantum.NavMesh)" data-throw-if-not-resolved="false"></xref><p>Requires enabled <xref href="Quantum.Navigation.Config.EnableNavigationCallbacks" data-throw-if-not-resolved="false"></xref> in <xref href="Quantum.SimulationConfig.Navigation" data-throw-if-not-resolved="false"></xref>.</p>
  example: []
  syntax:
    content: public void OnNavMeshSearchFailed(EntityRef entity, ref bool resetAgent)
    parameters:
    - id: entity
      type: Quantum.EntityRef
      description: The entity the navmesh agent component belongs to
    - id: resetAgent
      type: System.Boolean
      description: Set this to true if the agent should reset its internal state (default is true).
    content.vb: Public Sub OnNavMeshSearchFailed(entity As EntityRef, resetAgent As Boolean)
  overload: Quantum.Frame.FrameSignals.OnNavMeshSearchFailed*
  nameWithType.vb: Frame.FrameSignals.OnNavMeshSearchFailed(EntityRef, Boolean)
  fullName.vb: Quantum.Frame.FrameSignals.OnNavMeshSearchFailed(Quantum.EntityRef, Boolean)
  name.vb: OnNavMeshSearchFailed(EntityRef, Boolean)
- uid: Quantum.Frame.FrameSignals.OnNavMeshMoveAgent(Quantum.EntityRef,Photon.Deterministic.FPVector2)
  commentId: M:Quantum.Frame.FrameSignals.OnNavMeshMoveAgent(Quantum.EntityRef,Photon.Deterministic.FPVector2)
  id: OnNavMeshMoveAgent(Quantum.EntityRef,Photon.Deterministic.FPVector2)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnNavMeshMoveAgent(EntityRef, FPVector2)
  nameWithType: Frame.FrameSignals.OnNavMeshMoveAgent(EntityRef, FPVector2)
  fullName: Quantum.Frame.FrameSignals.OnNavMeshMoveAgent(Quantum.EntityRef, Photon.Deterministic.FPVector2)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnNavMeshMoveAgent
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1819
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Signal is called when the agent should move. The desired direction is influence by avoidance.

    <p>The agent velocity should be set in the callback.</p><p>Requires enabled <xref href="Quantum.NavMeshAgentConfig.MovementType" data-throw-if-not-resolved="false"></xref> to be set to Callback.</p><p>Requires enabled <xref href="Quantum.Navigation.Config.EnableNavigationCallbacks" data-throw-if-not-resolved="false"></xref> in <xref href="Quantum.SimulationConfig.Navigation" data-throw-if-not-resolved="false"></xref>.</p>
  example: []
  syntax:
    content: public void OnNavMeshMoveAgent(EntityRef entity, FPVector2 desiredDirection)
    parameters:
    - id: entity
      type: Quantum.EntityRef
      description: The entity the navmesh agent component belongs to.
    - id: desiredDirection
      type: Photon.Deterministic.FPVector2
      description: The normalized direction that the internal steering and avoidance thinks the agent movement vector should be.
    content.vb: Public Sub OnNavMeshMoveAgent(entity As EntityRef, desiredDirection As FPVector2)
  overload: Quantum.Frame.FrameSignals.OnNavMeshMoveAgent*
- uid: Quantum.Frame.FrameSignals.OnCollision2D(Quantum.CollisionInfo2D)
  commentId: M:Quantum.Frame.FrameSignals.OnCollision2D(Quantum.CollisionInfo2D)
  id: OnCollision2D(Quantum.CollisionInfo2D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnCollision2D(CollisionInfo2D)
  nameWithType: Frame.FrameSignals.OnCollision2D(CollisionInfo2D)
  fullName: Quantum.Frame.FrameSignals.OnCollision2D(Quantum.CollisionInfo2D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnCollision2D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1830
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once per frame while two non-trigger 2D colliders are touching.
  example: []
  syntax:
    content: public void OnCollision2D(CollisionInfo2D info)
    parameters:
    - id: info
      type: Quantum.CollisionInfo2D
      description: The <xref href="Quantum.CollisionInfo2D" data-throw-if-not-resolved="false"></xref> with data about the collision.
    content.vb: Public Sub OnCollision2D(info As CollisionInfo2D)
  overload: Quantum.Frame.FrameSignals.OnCollision2D*
- uid: Quantum.Frame.FrameSignals.OnCollisionEnter2D(Quantum.CollisionInfo2D)
  commentId: M:Quantum.Frame.FrameSignals.OnCollisionEnter2D(Quantum.CollisionInfo2D)
  id: OnCollisionEnter2D(Quantum.CollisionInfo2D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnCollisionEnter2D(CollisionInfo2D)
  nameWithType: Frame.FrameSignals.OnCollisionEnter2D(CollisionInfo2D)
  fullName: Quantum.Frame.FrameSignals.OnCollisionEnter2D(Quantum.CollisionInfo2D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnCollisionEnter2D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1841
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once two non-trigger 2D colliders start touching.
  example: []
  syntax:
    content: public void OnCollisionEnter2D(CollisionInfo2D info)
    parameters:
    - id: info
      type: Quantum.CollisionInfo2D
      description: The <xref href="Quantum.CollisionInfo2D" data-throw-if-not-resolved="false"></xref> with data about the collision.
    content.vb: Public Sub OnCollisionEnter2D(info As CollisionInfo2D)
  overload: Quantum.Frame.FrameSignals.OnCollisionEnter2D*
- uid: Quantum.Frame.FrameSignals.OnCollisionExit2D(Quantum.ExitInfo2D)
  commentId: M:Quantum.Frame.FrameSignals.OnCollisionExit2D(Quantum.ExitInfo2D)
  id: OnCollisionExit2D(Quantum.ExitInfo2D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnCollisionExit2D(ExitInfo2D)
  nameWithType: Frame.FrameSignals.OnCollisionExit2D(ExitInfo2D)
  fullName: Quantum.Frame.FrameSignals.OnCollisionExit2D(Quantum.ExitInfo2D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnCollisionExit2D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1852
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once two non-trigger 2D colliders stop touching.
  example: []
  syntax:
    content: public void OnCollisionExit2D(ExitInfo2D info)
    parameters:
    - id: info
      type: Quantum.ExitInfo2D
      description: The <xref href="Quantum.ExitInfo2D" data-throw-if-not-resolved="false"></xref> with the entities that were touching.
    content.vb: Public Sub OnCollisionExit2D(info As ExitInfo2D)
  overload: Quantum.Frame.FrameSignals.OnCollisionExit2D*
- uid: Quantum.Frame.FrameSignals.OnTrigger2D(Quantum.TriggerInfo2D)
  commentId: M:Quantum.Frame.FrameSignals.OnTrigger2D(Quantum.TriggerInfo2D)
  id: OnTrigger2D(Quantum.TriggerInfo2D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnTrigger2D(TriggerInfo2D)
  nameWithType: Frame.FrameSignals.OnTrigger2D(TriggerInfo2D)
  fullName: Quantum.Frame.FrameSignals.OnTrigger2D(Quantum.TriggerInfo2D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnTrigger2D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1863
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once per frame while a non-trigger and a trigger 2D colliders are touching.
  example: []
  syntax:
    content: public void OnTrigger2D(TriggerInfo2D info)
    parameters:
    - id: info
      type: Quantum.TriggerInfo2D
      description: The <xref href="Quantum.TriggerInfo2D" data-throw-if-not-resolved="false"></xref> with data about the trigger collision.
    content.vb: Public Sub OnTrigger2D(info As TriggerInfo2D)
  overload: Quantum.Frame.FrameSignals.OnTrigger2D*
- uid: Quantum.Frame.FrameSignals.OnTriggerEnter2D(Quantum.TriggerInfo2D)
  commentId: M:Quantum.Frame.FrameSignals.OnTriggerEnter2D(Quantum.TriggerInfo2D)
  id: OnTriggerEnter2D(Quantum.TriggerInfo2D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnTriggerEnter2D(TriggerInfo2D)
  nameWithType: Frame.FrameSignals.OnTriggerEnter2D(TriggerInfo2D)
  fullName: Quantum.Frame.FrameSignals.OnTriggerEnter2D(Quantum.TriggerInfo2D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnTriggerEnter2D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1874
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once a non-trigger and a trigger 2D colliders start touching.
  example: []
  syntax:
    content: public void OnTriggerEnter2D(TriggerInfo2D info)
    parameters:
    - id: info
      type: Quantum.TriggerInfo2D
      description: The <xref href="Quantum.TriggerInfo2D" data-throw-if-not-resolved="false"></xref> with data about the trigger collision.
    content.vb: Public Sub OnTriggerEnter2D(info As TriggerInfo2D)
  overload: Quantum.Frame.FrameSignals.OnTriggerEnter2D*
- uid: Quantum.Frame.FrameSignals.OnTriggerExit2D(Quantum.ExitInfo2D)
  commentId: M:Quantum.Frame.FrameSignals.OnTriggerExit2D(Quantum.ExitInfo2D)
  id: OnTriggerExit2D(Quantum.ExitInfo2D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnTriggerExit2D(ExitInfo2D)
  nameWithType: Frame.FrameSignals.OnTriggerExit2D(ExitInfo2D)
  fullName: Quantum.Frame.FrameSignals.OnTriggerExit2D(Quantum.ExitInfo2D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnTriggerExit2D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1885
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once a non-trigger and a trigger 2D colliders stop touching.
  example: []
  syntax:
    content: public void OnTriggerExit2D(ExitInfo2D info)
    parameters:
    - id: info
      type: Quantum.ExitInfo2D
      description: The <xref href="Quantum.ExitInfo2D" data-throw-if-not-resolved="false"></xref> with the entities that were touching.
    content.vb: Public Sub OnTriggerExit2D(info As ExitInfo2D)
  overload: Quantum.Frame.FrameSignals.OnTriggerExit2D*
- uid: Quantum.Frame.FrameSignals.OnCollision3D(Quantum.CollisionInfo3D)
  commentId: M:Quantum.Frame.FrameSignals.OnCollision3D(Quantum.CollisionInfo3D)
  id: OnCollision3D(Quantum.CollisionInfo3D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnCollision3D(CollisionInfo3D)
  nameWithType: Frame.FrameSignals.OnCollision3D(CollisionInfo3D)
  fullName: Quantum.Frame.FrameSignals.OnCollision3D(Quantum.CollisionInfo3D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnCollision3D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1896
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once per frame while two non-trigger 3D colliders are touching.
  example: []
  syntax:
    content: public void OnCollision3D(CollisionInfo3D info)
    parameters:
    - id: info
      type: Quantum.CollisionInfo3D
      description: The <xref href="Quantum.CollisionInfo3D" data-throw-if-not-resolved="false"></xref> with data about the collision.
    content.vb: Public Sub OnCollision3D(info As CollisionInfo3D)
  overload: Quantum.Frame.FrameSignals.OnCollision3D*
- uid: Quantum.Frame.FrameSignals.OnCollisionEnter3D(Quantum.CollisionInfo3D)
  commentId: M:Quantum.Frame.FrameSignals.OnCollisionEnter3D(Quantum.CollisionInfo3D)
  id: OnCollisionEnter3D(Quantum.CollisionInfo3D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnCollisionEnter3D(CollisionInfo3D)
  nameWithType: Frame.FrameSignals.OnCollisionEnter3D(CollisionInfo3D)
  fullName: Quantum.Frame.FrameSignals.OnCollisionEnter3D(Quantum.CollisionInfo3D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnCollisionEnter3D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1907
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once two non-trigger 3D colliders start touching.
  example: []
  syntax:
    content: public void OnCollisionEnter3D(CollisionInfo3D info)
    parameters:
    - id: info
      type: Quantum.CollisionInfo3D
      description: The <xref href="Quantum.CollisionInfo3D" data-throw-if-not-resolved="false"></xref> with data about the collision.
    content.vb: Public Sub OnCollisionEnter3D(info As CollisionInfo3D)
  overload: Quantum.Frame.FrameSignals.OnCollisionEnter3D*
- uid: Quantum.Frame.FrameSignals.OnCollisionExit3D(Quantum.ExitInfo3D)
  commentId: M:Quantum.Frame.FrameSignals.OnCollisionExit3D(Quantum.ExitInfo3D)
  id: OnCollisionExit3D(Quantum.ExitInfo3D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnCollisionExit3D(ExitInfo3D)
  nameWithType: Frame.FrameSignals.OnCollisionExit3D(ExitInfo3D)
  fullName: Quantum.Frame.FrameSignals.OnCollisionExit3D(Quantum.ExitInfo3D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnCollisionExit3D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1918
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once two non-trigger 3D colliders stop touching.
  example: []
  syntax:
    content: public void OnCollisionExit3D(ExitInfo3D info)
    parameters:
    - id: info
      type: Quantum.ExitInfo3D
      description: The <xref href="Quantum.ExitInfo3D" data-throw-if-not-resolved="false"></xref> with the entities that were touching.
    content.vb: Public Sub OnCollisionExit3D(info As ExitInfo3D)
  overload: Quantum.Frame.FrameSignals.OnCollisionExit3D*
- uid: Quantum.Frame.FrameSignals.OnTrigger3D(Quantum.TriggerInfo3D)
  commentId: M:Quantum.Frame.FrameSignals.OnTrigger3D(Quantum.TriggerInfo3D)
  id: OnTrigger3D(Quantum.TriggerInfo3D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnTrigger3D(TriggerInfo3D)
  nameWithType: Frame.FrameSignals.OnTrigger3D(TriggerInfo3D)
  fullName: Quantum.Frame.FrameSignals.OnTrigger3D(Quantum.TriggerInfo3D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnTrigger3D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1929
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once per frame while a non-trigger and a trigger 3D colliders are touching.
  example: []
  syntax:
    content: public void OnTrigger3D(TriggerInfo3D info)
    parameters:
    - id: info
      type: Quantum.TriggerInfo3D
      description: The <xref href="Quantum.TriggerInfo3D" data-throw-if-not-resolved="false"></xref> with data about the trigger collision.
    content.vb: Public Sub OnTrigger3D(info As TriggerInfo3D)
  overload: Quantum.Frame.FrameSignals.OnTrigger3D*
- uid: Quantum.Frame.FrameSignals.OnTriggerEnter3D(Quantum.TriggerInfo3D)
  commentId: M:Quantum.Frame.FrameSignals.OnTriggerEnter3D(Quantum.TriggerInfo3D)
  id: OnTriggerEnter3D(Quantum.TriggerInfo3D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnTriggerEnter3D(TriggerInfo3D)
  nameWithType: Frame.FrameSignals.OnTriggerEnter3D(TriggerInfo3D)
  fullName: Quantum.Frame.FrameSignals.OnTriggerEnter3D(Quantum.TriggerInfo3D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnTriggerEnter3D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1940
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once a non-trigger and a trigger 3D colliders start touching.
  example: []
  syntax:
    content: public void OnTriggerEnter3D(TriggerInfo3D info)
    parameters:
    - id: info
      type: Quantum.TriggerInfo3D
      description: The <xref href="Quantum.TriggerInfo3D" data-throw-if-not-resolved="false"></xref> with data about the trigger collision.
    content.vb: Public Sub OnTriggerEnter3D(info As TriggerInfo3D)
  overload: Quantum.Frame.FrameSignals.OnTriggerEnter3D*
- uid: Quantum.Frame.FrameSignals.OnTriggerExit3D(Quantum.ExitInfo3D)
  commentId: M:Quantum.Frame.FrameSignals.OnTriggerExit3D(Quantum.ExitInfo3D)
  id: OnTriggerExit3D(Quantum.ExitInfo3D)
  parent: Quantum.Frame.FrameSignals
  langs:
  - csharp
  - vb
  name: OnTriggerExit3D(ExitInfo3D)
  nameWithType: Frame.FrameSignals.OnTriggerExit3D(ExitInfo3D)
  fullName: Quantum.Frame.FrameSignals.OnTriggerExit3D(Quantum.ExitInfo3D)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnTriggerExit3D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1951
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Called once a non-trigger and a trigger 3D colliders stop touching.
  example: []
  syntax:
    content: public void OnTriggerExit3D(ExitInfo3D info)
    parameters:
    - id: info
      type: Quantum.ExitInfo3D
      description: The <xref href="Quantum.ExitInfo3D" data-throw-if-not-resolved="false"></xref> with the entities that were touching.
    content.vb: Public Sub OnTriggerExit3D(info As ExitInfo3D)
  overload: Quantum.Frame.FrameSignals.OnTriggerExit3D*
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: Quantum.Frame.FrameSignals.AuraDecreased*
  commentId: Overload:Quantum.Frame.FrameSignals.AuraDecreased
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_AuraDecreased_Quantum_EntityRef_System_Int32_System_Int32_
  name: AuraDecreased
  nameWithType: Frame.FrameSignals.AuraDecreased
  fullName: Quantum.Frame.FrameSignals.AuraDecreased
- uid: Quantum.EntityRef
  commentId: T:Quantum.EntityRef
  parent: Quantum
  isExternal: true
  name: EntityRef
  nameWithType: EntityRef
  fullName: Quantum.EntityRef
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quantum.Frame.FrameSignals.AuraIncreased*
  commentId: Overload:Quantum.Frame.FrameSignals.AuraIncreased
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_AuraIncreased_Quantum_EntityRef_System_Int32_System_Int32_
  name: AuraIncreased
  nameWithType: Frame.FrameSignals.AuraIncreased
  fullName: Quantum.Frame.FrameSignals.AuraIncreased
- uid: Quantum.Frame.FrameSignals.DespawnFighter*
  commentId: Overload:Quantum.Frame.FrameSignals.DespawnFighter
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_DespawnFighter_Quantum_EntityRef_
  name: DespawnFighter
  nameWithType: Frame.FrameSignals.DespawnFighter
  fullName: Quantum.Frame.FrameSignals.DespawnFighter
- uid: Quantum.Frame.FrameSignals.GamemodeStateChanged*
  commentId: Overload:Quantum.Frame.FrameSignals.GamemodeStateChanged
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_GamemodeStateChanged_Quantum_GenericGamemodeStates_Quantum_GenericGamemodeStates_
  name: GamemodeStateChanged
  nameWithType: Frame.FrameSignals.GamemodeStateChanged
  fullName: Quantum.Frame.FrameSignals.GamemodeStateChanged
- uid: Quantum.GenericGamemodeStates
  commentId: T:Quantum.GenericGamemodeStates
  parent: Quantum
  href: Quantum.GenericGamemodeStates.html
  name: GenericGamemodeStates
  nameWithType: GenericGamemodeStates
  fullName: Quantum.GenericGamemodeStates
- uid: Quantum.Frame.FrameSignals.GamemodeTeamScoreChanged*
  commentId: Overload:Quantum.Frame.FrameSignals.GamemodeTeamScoreChanged
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_GamemodeTeamScoreChanged_System_Int32_System_Int32_System_Int32_
  name: GamemodeTeamScoreChanged
  nameWithType: Frame.FrameSignals.GamemodeTeamScoreChanged
  fullName: Quantum.Frame.FrameSignals.GamemodeTeamScoreChanged
- uid: Quantum.Frame.FrameSignals.HealthDecreased*
  commentId: Overload:Quantum.Frame.FrameSignals.HealthDecreased
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_HealthDecreased_Quantum_EntityRef_System_Int32_System_Int32_
  name: HealthDecreased
  nameWithType: Frame.FrameSignals.HealthDecreased
  fullName: Quantum.Frame.FrameSignals.HealthDecreased
- uid: Quantum.Frame.FrameSignals.HealthIncreased*
  commentId: Overload:Quantum.Frame.FrameSignals.HealthIncreased
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_HealthIncreased_Quantum_EntityRef_System_Int32_System_Int32_
  name: HealthIncreased
  nameWithType: Frame.FrameSignals.HealthIncreased
  fullName: Quantum.Frame.FrameSignals.HealthIncreased
- uid: Quantum.Frame.FrameSignals.#ctor*
  commentId: Overload:Quantum.Frame.FrameSignals.#ctor
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals__ctor_Quantum_Frame_
  name: FrameSignals
  nameWithType: Frame.FrameSignals.FrameSignals
  fullName: Quantum.Frame.FrameSignals.FrameSignals
  nameWithType.vb: Frame.FrameSignals.New
  fullName.vb: Quantum.Frame.FrameSignals.New
  name.vb: New
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Quantum.Frame.FrameSignals.OnPlayerAdded*
  commentId: Overload:Quantum.Frame.FrameSignals.OnPlayerAdded
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnPlayerAdded_Quantum_PlayerRef_System_Boolean_
  name: OnPlayerAdded
  nameWithType: Frame.FrameSignals.OnPlayerAdded
  fullName: Quantum.Frame.FrameSignals.OnPlayerAdded
- uid: Quantum.PlayerRef
  commentId: T:Quantum.PlayerRef
  parent: Quantum
  isExternal: true
  name: PlayerRef
  nameWithType: PlayerRef
  fullName: Quantum.PlayerRef
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Photon.Deterministic.DeterministicInputFlags.PlayerNotPresent
  commentId: F:Photon.Deterministic.DeterministicInputFlags.PlayerNotPresent
  isExternal: true
  name: PlayerNotPresent
  nameWithType: DeterministicInputFlags.PlayerNotPresent
  fullName: Photon.Deterministic.DeterministicInputFlags.PlayerNotPresent
- uid: Quantum.Frame.FrameSignals.OnPlayerRemoved*
  commentId: Overload:Quantum.Frame.FrameSignals.OnPlayerRemoved
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnPlayerRemoved_Quantum_PlayerRef_
  name: OnPlayerRemoved
  nameWithType: Frame.FrameSignals.OnPlayerRemoved
  fullName: Quantum.Frame.FrameSignals.OnPlayerRemoved
- uid: Quantum.Frame.Map
  commentId: P:Quantum.Frame.Map
  href: Quantum.Frame.html#Quantum_Frame_Map
  name: Map
  nameWithType: Frame.Map
  fullName: Quantum.Frame.Map
- uid: Quantum.Frame.FrameSignals.OnMapChanged*
  commentId: Overload:Quantum.Frame.FrameSignals.OnMapChanged
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnMapChanged_Quantum_AssetRef_Quantum_Map__
  name: OnMapChanged
  nameWithType: Frame.FrameSignals.OnMapChanged
  fullName: Quantum.Frame.FrameSignals.OnMapChanged
- uid: Quantum.AssetRef{Quantum.Map}
  commentId: T:Quantum.AssetRef{Quantum.Map}
  parent: Quantum
  definition: Quantum.AssetRef`1
  name: AssetRef<Map>
  nameWithType: AssetRef<Map>
  fullName: Quantum.AssetRef<Quantum.Map>
  nameWithType.vb: AssetRef(Of Map)
  fullName.vb: Quantum.AssetRef(Of Quantum.Map)
  name.vb: AssetRef(Of Map)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.Map
    name: Map
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.Map
    name: Map
    isExternal: true
  - name: )
- uid: Quantum.AssetRef`1
  commentId: T:Quantum.AssetRef`1
  isExternal: true
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Frame.FrameSignals.OnEntityPrototypeMaterialized*
  commentId: Overload:Quantum.Frame.FrameSignals.OnEntityPrototypeMaterialized
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnEntityPrototypeMaterialized_Quantum_EntityRef_Quantum_EntityPrototypeRef_
  name: OnEntityPrototypeMaterialized
  nameWithType: Frame.FrameSignals.OnEntityPrototypeMaterialized
  fullName: Quantum.Frame.FrameSignals.OnEntityPrototypeMaterialized
- uid: Quantum.EntityPrototypeRef
  commentId: T:Quantum.EntityPrototypeRef
  parent: Quantum
  isExternal: true
  name: EntityPrototypeRef
  nameWithType: EntityPrototypeRef
  fullName: Quantum.EntityPrototypeRef
- uid: Quantum.Core.PlayerConnectedSystem
  commentId: T:Quantum.Core.PlayerConnectedSystem
  href: Quantum.Core.PlayerConnectedSystem.html
  name: PlayerConnectedSystem
  nameWithType: PlayerConnectedSystem
  fullName: Quantum.Core.PlayerConnectedSystem
- uid: Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef)
  commentId: M:Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef)
  isExternal: true
  name: GetPlayerInputFlags(PlayerRef)
  nameWithType: DeterministicFrame.GetPlayerInputFlags(PlayerRef)
  fullName: Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef)
  spec.csharp:
  - uid: Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef)
    name: GetPlayerInputFlags
    isExternal: true
  - name: (
  - uid: Quantum.PlayerRef
    name: PlayerRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef)
    name: GetPlayerInputFlags
    isExternal: true
  - name: (
  - uid: Quantum.PlayerRef
    name: PlayerRef
    isExternal: true
  - name: )
- uid: Quantum.Frame.FrameSignals.OnPlayerConnected*
  commentId: Overload:Quantum.Frame.FrameSignals.OnPlayerConnected
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnPlayerConnected_Quantum_PlayerRef_
  name: OnPlayerConnected
  nameWithType: Frame.FrameSignals.OnPlayerConnected
  fullName: Quantum.Frame.FrameSignals.OnPlayerConnected
- uid: Quantum.Frame.FrameSignals.OnPlayerDisconnected*
  commentId: Overload:Quantum.Frame.FrameSignals.OnPlayerDisconnected
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnPlayerDisconnected_Quantum_PlayerRef_
  name: OnPlayerDisconnected
  nameWithType: Frame.FrameSignals.OnPlayerDisconnected
  fullName: Quantum.Frame.FrameSignals.OnPlayerDisconnected
- uid: Quantum.Navigation.Config.EnableNavigationCallbacks
  commentId: F:Quantum.Navigation.Config.EnableNavigationCallbacks
  isExternal: true
  name: EnableNavigationCallbacks
  nameWithType: Navigation.Config.EnableNavigationCallbacks
  fullName: Quantum.Navigation.Config.EnableNavigationCallbacks
- uid: Quantum.SimulationConfig.Navigation
  commentId: F:Quantum.SimulationConfig.Navigation
  href: Quantum.SimulationConfig.html#Quantum_SimulationConfig_Navigation
  name: Navigation
  nameWithType: SimulationConfig.Navigation
  fullName: Quantum.SimulationConfig.Navigation
- uid: Quantum.Frame.FrameSignals.OnNavMeshWaypointReached*
  commentId: Overload:Quantum.Frame.FrameSignals.OnNavMeshWaypointReached
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnNavMeshWaypointReached_Quantum_EntityRef_Photon_Deterministic_FPVector3_Quantum_Navigation_WaypointFlag_System_Boolean__
  name: OnNavMeshWaypointReached
  nameWithType: Frame.FrameSignals.OnNavMeshWaypointReached
  fullName: Quantum.Frame.FrameSignals.OnNavMeshWaypointReached
- uid: Photon.Deterministic.FPVector3
  commentId: T:Photon.Deterministic.FPVector3
  parent: Photon.Deterministic
  isExternal: true
  name: FPVector3
  nameWithType: FPVector3
  fullName: Photon.Deterministic.FPVector3
- uid: Quantum.Navigation.WaypointFlag
  commentId: T:Quantum.Navigation.WaypointFlag
  parent: Quantum
  isExternal: true
  name: Navigation.WaypointFlag
  nameWithType: Navigation.WaypointFlag
  fullName: Quantum.Navigation.WaypointFlag
  spec.csharp:
  - uid: Quantum.Navigation
    name: Navigation
    isExternal: true
  - name: .
  - uid: Quantum.Navigation.WaypointFlag
    name: WaypointFlag
    isExternal: true
  spec.vb:
  - uid: Quantum.Navigation
    name: Navigation
    isExternal: true
  - name: .
  - uid: Quantum.Navigation.WaypointFlag
    name: WaypointFlag
    isExternal: true
- uid: Photon.Deterministic
  commentId: N:Photon.Deterministic
  isExternal: true
  name: Photon.Deterministic
  nameWithType: Photon.Deterministic
  fullName: Photon.Deterministic
  spec.csharp:
  - uid: Photon
    name: Photon
    isExternal: true
  - name: .
  - uid: Photon.Deterministic
    name: Deterministic
    isExternal: true
  spec.vb:
  - uid: Photon
    name: Photon
    isExternal: true
  - name: .
  - uid: Photon.Deterministic
    name: Deterministic
    isExternal: true
- uid: Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase,Photon.Deterministic.FPVector3,Quantum.NavMesh)
  commentId: M:Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase,Photon.Deterministic.FPVector3,Quantum.NavMesh)
  isExternal: true
  name: SetTarget(FrameBase, FPVector3, NavMesh)
  nameWithType: NavMeshPathfinder.SetTarget(FrameBase, FPVector3, NavMesh)
  fullName: Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase, Photon.Deterministic.FPVector3, Quantum.NavMesh)
  spec.csharp:
  - uid: Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase,Photon.Deterministic.FPVector3,Quantum.NavMesh)
    name: SetTarget
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.FPVector3
    name: FPVector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.NavMesh
    name: NavMesh
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase,Photon.Deterministic.FPVector3,Quantum.NavMesh)
    name: SetTarget
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.FPVector3
    name: FPVector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.NavMesh
    name: NavMesh
    isExternal: true
  - name: )
- uid: Quantum.Frame.FrameSignals.OnNavMeshSearchFailed*
  commentId: Overload:Quantum.Frame.FrameSignals.OnNavMeshSearchFailed
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnNavMeshSearchFailed_Quantum_EntityRef_System_Boolean__
  name: OnNavMeshSearchFailed
  nameWithType: Frame.FrameSignals.OnNavMeshSearchFailed
  fullName: Quantum.Frame.FrameSignals.OnNavMeshSearchFailed
- uid: Quantum.NavMeshAgentConfig.MovementType
  commentId: F:Quantum.NavMeshAgentConfig.MovementType
  isExternal: true
  name: MovementType
  nameWithType: NavMeshAgentConfig.MovementType
  fullName: Quantum.NavMeshAgentConfig.MovementType
- uid: Quantum.Frame.FrameSignals.OnNavMeshMoveAgent*
  commentId: Overload:Quantum.Frame.FrameSignals.OnNavMeshMoveAgent
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnNavMeshMoveAgent_Quantum_EntityRef_Photon_Deterministic_FPVector2_
  name: OnNavMeshMoveAgent
  nameWithType: Frame.FrameSignals.OnNavMeshMoveAgent
  fullName: Quantum.Frame.FrameSignals.OnNavMeshMoveAgent
- uid: Photon.Deterministic.FPVector2
  commentId: T:Photon.Deterministic.FPVector2
  parent: Photon.Deterministic
  isExternal: true
  name: FPVector2
  nameWithType: FPVector2
  fullName: Photon.Deterministic.FPVector2
- uid: Quantum.CollisionInfo2D
  commentId: T:Quantum.CollisionInfo2D
  parent: Quantum
  isExternal: true
  name: CollisionInfo2D
  nameWithType: CollisionInfo2D
  fullName: Quantum.CollisionInfo2D
- uid: Quantum.Frame.FrameSignals.OnCollision2D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnCollision2D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnCollision2D_Quantum_CollisionInfo2D_
  name: OnCollision2D
  nameWithType: Frame.FrameSignals.OnCollision2D
  fullName: Quantum.Frame.FrameSignals.OnCollision2D
- uid: Quantum.Frame.FrameSignals.OnCollisionEnter2D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnCollisionEnter2D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnCollisionEnter2D_Quantum_CollisionInfo2D_
  name: OnCollisionEnter2D
  nameWithType: Frame.FrameSignals.OnCollisionEnter2D
  fullName: Quantum.Frame.FrameSignals.OnCollisionEnter2D
- uid: Quantum.ExitInfo2D
  commentId: T:Quantum.ExitInfo2D
  parent: Quantum
  isExternal: true
  name: ExitInfo2D
  nameWithType: ExitInfo2D
  fullName: Quantum.ExitInfo2D
- uid: Quantum.Frame.FrameSignals.OnCollisionExit2D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnCollisionExit2D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnCollisionExit2D_Quantum_ExitInfo2D_
  name: OnCollisionExit2D
  nameWithType: Frame.FrameSignals.OnCollisionExit2D
  fullName: Quantum.Frame.FrameSignals.OnCollisionExit2D
- uid: Quantum.TriggerInfo2D
  commentId: T:Quantum.TriggerInfo2D
  parent: Quantum
  isExternal: true
  name: TriggerInfo2D
  nameWithType: TriggerInfo2D
  fullName: Quantum.TriggerInfo2D
- uid: Quantum.Frame.FrameSignals.OnTrigger2D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnTrigger2D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnTrigger2D_Quantum_TriggerInfo2D_
  name: OnTrigger2D
  nameWithType: Frame.FrameSignals.OnTrigger2D
  fullName: Quantum.Frame.FrameSignals.OnTrigger2D
- uid: Quantum.Frame.FrameSignals.OnTriggerEnter2D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnTriggerEnter2D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnTriggerEnter2D_Quantum_TriggerInfo2D_
  name: OnTriggerEnter2D
  nameWithType: Frame.FrameSignals.OnTriggerEnter2D
  fullName: Quantum.Frame.FrameSignals.OnTriggerEnter2D
- uid: Quantum.Frame.FrameSignals.OnTriggerExit2D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnTriggerExit2D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnTriggerExit2D_Quantum_ExitInfo2D_
  name: OnTriggerExit2D
  nameWithType: Frame.FrameSignals.OnTriggerExit2D
  fullName: Quantum.Frame.FrameSignals.OnTriggerExit2D
- uid: Quantum.CollisionInfo3D
  commentId: T:Quantum.CollisionInfo3D
  parent: Quantum
  isExternal: true
  name: CollisionInfo3D
  nameWithType: CollisionInfo3D
  fullName: Quantum.CollisionInfo3D
- uid: Quantum.Frame.FrameSignals.OnCollision3D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnCollision3D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnCollision3D_Quantum_CollisionInfo3D_
  name: OnCollision3D
  nameWithType: Frame.FrameSignals.OnCollision3D
  fullName: Quantum.Frame.FrameSignals.OnCollision3D
- uid: Quantum.Frame.FrameSignals.OnCollisionEnter3D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnCollisionEnter3D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnCollisionEnter3D_Quantum_CollisionInfo3D_
  name: OnCollisionEnter3D
  nameWithType: Frame.FrameSignals.OnCollisionEnter3D
  fullName: Quantum.Frame.FrameSignals.OnCollisionEnter3D
- uid: Quantum.ExitInfo3D
  commentId: T:Quantum.ExitInfo3D
  parent: Quantum
  isExternal: true
  name: ExitInfo3D
  nameWithType: ExitInfo3D
  fullName: Quantum.ExitInfo3D
- uid: Quantum.Frame.FrameSignals.OnCollisionExit3D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnCollisionExit3D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnCollisionExit3D_Quantum_ExitInfo3D_
  name: OnCollisionExit3D
  nameWithType: Frame.FrameSignals.OnCollisionExit3D
  fullName: Quantum.Frame.FrameSignals.OnCollisionExit3D
- uid: Quantum.TriggerInfo3D
  commentId: T:Quantum.TriggerInfo3D
  parent: Quantum
  isExternal: true
  name: TriggerInfo3D
  nameWithType: TriggerInfo3D
  fullName: Quantum.TriggerInfo3D
- uid: Quantum.Frame.FrameSignals.OnTrigger3D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnTrigger3D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnTrigger3D_Quantum_TriggerInfo3D_
  name: OnTrigger3D
  nameWithType: Frame.FrameSignals.OnTrigger3D
  fullName: Quantum.Frame.FrameSignals.OnTrigger3D
- uid: Quantum.Frame.FrameSignals.OnTriggerEnter3D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnTriggerEnter3D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnTriggerEnter3D_Quantum_TriggerInfo3D_
  name: OnTriggerEnter3D
  nameWithType: Frame.FrameSignals.OnTriggerEnter3D
  fullName: Quantum.Frame.FrameSignals.OnTriggerEnter3D
- uid: Quantum.Frame.FrameSignals.OnTriggerExit3D*
  commentId: Overload:Quantum.Frame.FrameSignals.OnTriggerExit3D
  href: Quantum.Frame.FrameSignals.html#Quantum_Frame_FrameSignals_OnTriggerExit3D_Quantum_ExitInfo3D_
  name: OnTriggerExit3D
  nameWithType: Frame.FrameSignals.OnTriggerExit3D
  fullName: Quantum.Frame.FrameSignals.OnTriggerExit3D
