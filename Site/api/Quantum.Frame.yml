### YamlMime:ManagedReference
items:
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  id: Frame
  parent: Quantum
  children:
  - Quantum.Frame.#ctor(Quantum.Core.FrameContext,Quantum.SystemBase[],Quantum.SystemBase[],Photon.Deterministic.DeterministicSessionConfig,Quantum.RuntimeConfig,Quantum.SimulationConfig,Photon.Deterministic.FP)
  - Quantum.Frame.ActorIdToAllPlayers(System.Int32)
  - Quantum.Frame.ActorIdToFirstPlayer(System.Int32)
  - Quantum.Frame.CalculateChecksum
  - Quantum.Frame.CalculateChecksum(System.Boolean)
  - Quantum.Frame.CommitCommandsMode
  - Quantum.Frame.Context
  - Quantum.Frame.Copy(Photon.Deterministic.DeterministicFrame)
  - Quantum.Frame.DeltaTime
  - Quantum.Frame.Deserialize(System.Byte[])
  - Quantum.Frame.DumpFlag_AssetDBCheckums
  - Quantum.Frame.DumpFlag_ComponentChecksums
  - Quantum.Frame.DumpFlag_NoDeterministicSessionConfig
  - Quantum.Frame.DumpFlag_NoDynamicDB
  - Quantum.Frame.DumpFlag_NoIsVerified
  - Quantum.Frame.DumpFlag_NoRuntimeConfig
  - Quantum.Frame.DumpFlag_NoRuntimePlayers
  - Quantum.Frame.DumpFlag_NoSimulationConfig
  - Quantum.Frame.DumpFlag_PrintRawValues
  - Quantum.Frame.DumpFlag_ReadableDynamicDB
  - Quantum.Frame.DumpFrame(System.Int32)
  - Quantum.Frame.Events
  - Quantum.Frame.FrameMetaData
  - Quantum.Frame.Free
  - Quantum.Frame.GetPlayerData(Quantum.PlayerRef)
  - Quantum.Frame.GetPlayerInput(Quantum.PlayerRef)
  - Quantum.Frame.Global
  - Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector2)
  - Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector3)
  - Quantum.Frame.InitStatic
  - Quantum.Frame.Map
  - Quantum.Frame.MapAssetRef
  - Quantum.Frame.NavMeshRegionMask
  - Quantum.Frame.PhysicsSceneSettings
  - Quantum.Frame.PlayerConnectedCount
  - Quantum.Frame.PlayerCount
  - Quantum.Frame.PlayerToActorId(Quantum.PlayerRef)
  - Quantum.Frame.RNG
  - Quantum.Frame.RuntimeConfig
  - Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
  - Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode,System.Byte[],Quantum.FrameSerializer@,System.Int32,System.Boolean)
  - Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode,System.Byte[],System.Int32,System.Boolean)
  - Quantum.Frame.SessionConfig
  - Quantum.Frame.SetPlayerInput(Quantum.PlayerRef,Quantum.Input)
  - Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector2,Photon.Deterministic.FP)
  - Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector3,Photon.Deterministic.FP)
  - Quantum.Frame.Signals
  - Quantum.Frame.SimulationConfig
  - Quantum.Frame.SystemDisable(System.Type)
  - Quantum.Frame.SystemDisable``1
  - Quantum.Frame.SystemDisable``1(``0)
  - Quantum.Frame.SystemEnable(System.Type)
  - Quantum.Frame.SystemEnable``1
  - Quantum.Frame.SystemIsEnabledInHierarchy(Quantum.SystemBase)
  - Quantum.Frame.SystemIsEnabledInHierarchy(System.Type)
  - Quantum.Frame.SystemIsEnabledInHierarchy``1
  - Quantum.Frame.SystemIsEnabledSelf(Quantum.SystemBase)
  - Quantum.Frame.SystemIsEnabledSelf(System.Type)
  - Quantum.Frame.SystemIsEnabledSelf``1
  - Quantum.Frame.SystemsAll
  - Quantum.Frame.UpdatePlayerData(Photon.Deterministic.IDeterministicGame)
  - Quantum.Frame.UpdateRate
  - Quantum.Frame._physicsState2D
  - Quantum.Frame._physicsState3D
  langs:
  - csharp
  - vb
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Frame
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1698
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: The user implementation of <xref href="Quantum.Core.FrameBase" data-throw-if-not-resolved="false"></xref> that resides in the project quantum_state and has access to all user relevant classes.
  example: []
  syntax:
    content: 'public class Frame : FrameBase'
    content.vb: Public Class Frame Inherits FrameBase
  inheritance:
  - System.Object
  - Photon.Deterministic.DeterministicFrame
  - Quantum.Core.FrameBase
  inheritedMembers:
  - Quantum.Core.FrameBase._ComponentSignalsOnAdded
  - Quantum.Core.FrameBase._ComponentSignalsOnRemoved
  - Quantum.Core.FrameBase._SignalOnEntityPrototypeMaterialized
  - Quantum.Core.FrameBase._frameHeap
  - Quantum.Core.FrameBase.Unsafe
  - Quantum.Core.FrameBase.Physics2D
  - Quantum.Core.FrameBase.Physics3D
  - Quantum.Core.FrameBase.DefaultInitialCollectionCapacity
  - Quantum.Core.FrameBase.Filter``1(Quantum.ComponentSet,Quantum.ComponentSet)
  - Quantum.Core.FrameBase.Filter``2(Quantum.ComponentSet,Quantum.ComponentSet)
  - Quantum.Core.FrameBase.Filter``3(Quantum.ComponentSet,Quantum.ComponentSet)
  - Quantum.Core.FrameBase.Filter``4(Quantum.ComponentSet,Quantum.ComponentSet)
  - Quantum.Core.FrameBase.Filter``5(Quantum.ComponentSet,Quantum.ComponentSet)
  - Quantum.Core.FrameBase.Filter``6(Quantum.ComponentSet,Quantum.ComponentSet)
  - Quantum.Core.FrameBase.Filter``7(Quantum.ComponentSet,Quantum.ComponentSet)
  - Quantum.Core.FrameBase.Filter``8(Quantum.ComponentSet,Quantum.ComponentSet)
  - Quantum.Core.FrameBase.IsPlayerVerifiedOrLocal(Quantum.PlayerRef)
  - Quantum.Core.FrameBase.GetMemoryStats
  - Quantum.Core.FrameBase.OnFrameSimulateBegin
  - Quantum.Core.FrameBase.OnFrameSimulateEnd
  - Quantum.Core.FrameBase.Culled(Quantum.EntityRef)
  - Quantum.Core.FrameBase.ComponentCount``1(System.Boolean)
  - Quantum.Core.FrameBase.ComponentCount(System.Int32,System.Boolean)
  - Quantum.Core.FrameBase.Add``1(Quantum.EntityRef)
  - Quantum.Core.FrameBase.Has(Quantum.EntityRef,Quantum.ComponentSet)
  - Quantum.Core.FrameBase.AddAsset(Quantum.AssetObject)
  - Quantum.Core.FrameBase.ReplaceAsset(Quantum.AssetGuid,Quantum.AssetObject)
  - Quantum.Core.FrameBase.LoadAsset(Quantum.AssetGuid)
  - Quantum.Core.FrameBase.DisposeAsset(Quantum.AssetGuid)
  - Quantum.Core.FrameBase.DisposeAsset(System.String,Quantum.DatabaseType)
  - Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetGuid)
  - Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef)
  - Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef,{T}@)
  - Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef{{T}})
  - Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetGuid,{T}@)
  - Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef,{T}@)
  - Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef{{T}},{T}@)
  - Quantum.Core.FrameBase.FindAsset``1(System.String,Quantum.DatabaseType)
  - Quantum.Core.FrameBase.TryFindAsset``1(System.String,{T}@,Quantum.DatabaseType)
  - Quantum.Core.FrameBase.FindPrototype(Quantum.EntityPrototypeRef)
  - Quantum.Core.FrameBase.FindPrototype(Quantum.ComponentPrototypeRef)
  - Quantum.Core.FrameBase.FindPrototype``1(Quantum.ComponentPrototypeRef)
  - Quantum.Core.FrameBase.FindPrototype``2({TPrototypeRef})
  - Quantum.Core.FrameBase.FindPrototype``2({TPrototypeRef},{TPrototype}@)
  - Quantum.Core.FrameBase.ClearAllNavMeshRegions
  - Quantum.Core.FrameBase.GetAllEntityRefs(System.Collections.Generic.List{Quantum.EntityRef})
  - Quantum.Core.FrameBase.ClearCulledState
  - Quantum.Core.FrameBase.Cull(Quantum.EntityRef)
  - Quantum.Core.FrameBase.IsCulled(Quantum.EntityRef)
  - Quantum.Core.FrameBase.SetCullable(Quantum.EntityRef,System.Boolean)
  - Quantum.Core.FrameBase.IsCullable(Quantum.EntityRef)
  - Quantum.Core.FrameBase.Exists(Quantum.EntityRef)
  - Quantum.Core.FrameBase.GetComponentIterator``1
  - Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,{T})
  - Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,{T}*@)
  - Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,{T},{T}*@)
  - Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*)
  - Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*@)
  - Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*,System.Void*@)
  - Quantum.Core.FrameBase.AddOrGet``1(Quantum.EntityRef,{T}*@)
  - Quantum.Core.FrameBase.AddOrGet(Quantum.EntityRef,System.Int32,System.Void*@)
  - Quantum.Core.FrameBase.Set``1(Quantum.EntityRef,{T})
  - Quantum.Core.FrameBase.Set(Quantum.EntityRef,System.Int32,System.Void*)
  - Quantum.Core.FrameBase.Get``1(Quantum.EntityRef)
  - Quantum.Core.FrameBase.Has(Quantum.EntityRef,System.Int32)
  - Quantum.Core.FrameBase.Has``1(Quantum.EntityRef)
  - Quantum.Core.FrameBase.TryGet``1(Quantum.EntityRef,{T}@)
  - Quantum.Core.FrameBase.Remove``1(Quantum.EntityRef)
  - Quantum.Core.FrameBase.Remove(Quantum.EntityRef,System.Type)
  - Quantum.Core.FrameBase.Remove(Quantum.EntityRef,System.Int32)
  - Quantum.Core.FrameBase.GetComponentSet(Quantum.EntityRef)
  - Quantum.Core.FrameBase.TryGetComponentSet(Quantum.EntityRef,Quantum.ComponentSet@)
  - Quantum.Core.FrameBase.DestroyPending(Quantum.EntityRef)
  - Quantum.Core.FrameBase.Destroy(Quantum.EntityRef)
  - Quantum.Core.FrameBase.Create(Quantum.AssetRef{Quantum.EntityPrototype})
  - Quantum.Core.FrameBase.Create(Quantum.EntityPrototype)
  - Quantum.Core.FrameBase.Create(Quantum.ComponentPrototypeSet[],Quantum.Map)
  - Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.AssetRef{Quantum.EntityPrototype})
  - Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.EntityPrototype)
  - Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.AssetRef{Quantum.EntityPrototype},Quantum.ComponentSet@)
  - Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.EntityPrototype,Quantum.ComponentSet@)
  - Quantum.Core.FrameBase.Create
  - Quantum.Core.FrameBase.GetSingleton``1
  - Quantum.Core.FrameBase.GetSingletonEntityRef``1
  - Quantum.Core.FrameBase.GetSingletonEntityRef(System.Int32)
  - Quantum.Core.FrameBase.SetSingleton``1({T},Quantum.EntityRef)
  - Quantum.Core.FrameBase.SetSingleton(System.Int32,System.Void*,Quantum.EntityRef)
  - Quantum.Core.FrameBase.RemoveSingleton``1
  - Quantum.Core.FrameBase.RemoveSingleton(System.Type)
  - Quantum.Core.FrameBase.RemoveSingleton(System.Int32)
  - Quantum.Core.FrameBase.TryGetSingletonEntityRef``1(Quantum.EntityRef@)
  - Quantum.Core.FrameBase.TryGetSingletonEntityRef(System.Int32,Quantum.EntityRef@)
  - Quantum.Core.FrameBase.TryGetSingleton``1({T}@)
  - Quantum.Core.FrameBase.GetOrAddSingleton``1(Quantum.EntityRef)
  - Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{{T}})
  - Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{{T}}@)
  - Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{{T}})
  - Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{{T}}@)
  - Quantum.Core.FrameBase.ResolveList``1(Quantum.Collections.QListPtr{{T}})
  - Quantum.Core.FrameBase.TryResolveList``1(Quantum.Collections.QListPtr{{T}},Quantum.Collections.QList{{T}}@)
  - Quantum.Core.FrameBase.AllocateList``1(System.Int32)
  - Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{{T}},System.Int32)
  - Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{{T}}@,System.Int32)
  - Quantum.Core.FrameBase.TryAllocateList``1(Quantum.Collections.QListPtr{{T}}@,System.Int32)
  - Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{{T}})
  - Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{{T}}@)
  - Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{{T}})
  - Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{{T}}@)
  - Quantum.Core.FrameBase.ResolveHashSet``1(Quantum.Collections.QHashSetPtr{{T}})
  - Quantum.Core.FrameBase.TryResolveHashSet``1(Quantum.Collections.QHashSetPtr{{T}},Quantum.Collections.QHashSet{{T}}@)
  - Quantum.Core.FrameBase.AllocateHashSet``1(System.Int32)
  - Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{{T}},System.Int32)
  - Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{{T}}@,System.Int32)
  - Quantum.Core.FrameBase.TryAllocateHashSet``1(Quantum.Collections.QHashSetPtr{{T}}@,System.Int32)
  - Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}})
  - Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@)
  - Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}})
  - Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@)
  - Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}})
  - Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}},Quantum.Collections.QDictionary{{K},{V}}@)
  - Quantum.Core.FrameBase.AllocateDictionary``2(System.Int32)
  - Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}},System.Int32)
  - Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@,System.Int32)
  - Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@,System.Int32)
  - Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}},Quantum.EnumEqualityComparer.Tag)
  - Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}},Quantum.Collections.QEnumDictionary{{K},{V}}@,Quantum.EnumEqualityComparer.Tag)
  - Quantum.Core.FrameBase.AllocateDictionary``2(System.Int32,Quantum.EnumEqualityComparer.Tag)
  - Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}},System.Int32,Quantum.EnumEqualityComparer.Tag)
  - Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  - Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  - Quantum.Core.FrameBase.Print(Quantum.Core.FrameBase,Quantum.FramePrinter,System.Boolean)
  - Quantum.Core.FrameBase.Serialize(Quantum.Core.FrameBase,Quantum.FrameSerializer)
  - Quantum.Core.FrameBase.Copy(Quantum.Core.FrameBase,Quantum.Core.FrameBase)
  - Quantum.Core.FrameBase.Initialize(Quantum.Core.FrameBase,Quantum.Core.FrameBase.EntitiesConfig,System.Int32)
  - Quantum.Core.FrameBase.DynamicAssetDB
  - Quantum.Core.FrameBase.Navigation
  - Quantum.Core.FrameBase.Layers
  - Quantum.Core.FrameBase.Heap
  extensionMethods:
  - Quantum.Frame.Quantum.BotSDKUtils.CalculateBotSDKGameTime
- uid: Quantum.Frame.GetPlayerInput(Quantum.PlayerRef)
  commentId: M:Quantum.Frame.GetPlayerInput(Quantum.PlayerRef)
  id: GetPlayerInput(Quantum.PlayerRef)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: GetPlayerInput(PlayerRef)
  nameWithType: Frame.GetPlayerInput(PlayerRef)
  fullName: Quantum.Frame.GetPlayerInput(Quantum.PlayerRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetPlayerInput
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 3173
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public Input* GetPlayerInput(PlayerRef player)
    parameters:
    - id: player
      type: Quantum.PlayerRef
    return:
      type: Quantum.Input*
    content.vb: Public Function GetPlayerInput(player As PlayerRef) As Input*
  overload: Quantum.Frame.GetPlayerInput*
- uid: Quantum.Frame.SetPlayerInput(Quantum.PlayerRef,Quantum.Input)
  commentId: M:Quantum.Frame.SetPlayerInput(Quantum.PlayerRef,Quantum.Input)
  id: SetPlayerInput(Quantum.PlayerRef,Quantum.Input)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SetPlayerInput(PlayerRef, Input)
  nameWithType: Frame.SetPlayerInput(PlayerRef, Input)
  fullName: Quantum.Frame.SetPlayerInput(Quantum.PlayerRef, Quantum.Input)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetPlayerInput
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 75
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void SetPlayerInput(PlayerRef player, Input input)
    parameters:
    - id: player
      type: Quantum.PlayerRef
    - id: input
      type: Quantum.Input
    content.vb: Public Sub SetPlayerInput(player As PlayerRef, input As Input)
  overload: Quantum.Frame.SetPlayerInput*
- uid: Quantum.Frame.DumpFlag_NoSimulationConfig
  commentId: F:Quantum.Frame.DumpFlag_NoSimulationConfig
  id: DumpFlag_NoSimulationConfig
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFlag_NoSimulationConfig
  nameWithType: Frame.DumpFlag_NoSimulationConfig
  fullName: Quantum.Frame.DumpFlag_NoSimulationConfig
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFlag_NoSimulationConfig
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 400
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: If set the <xref href="Quantum.SimulationConfig" data-throw-if-not-resolved="false"></xref> will not be printed in the frame dump during <xref href="Quantum.Frame.DumpFrame(System.Int32)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const int DumpFlag_NoSimulationConfig = 2
    return:
      type: System.Int32
    content.vb: Public Const DumpFlag_NoSimulationConfig As Integer = 2
- uid: Quantum.Frame.DumpFlag_NoRuntimeConfig
  commentId: F:Quantum.Frame.DumpFlag_NoRuntimeConfig
  id: DumpFlag_NoRuntimeConfig
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFlag_NoRuntimeConfig
  nameWithType: Frame.DumpFlag_NoRuntimeConfig
  fullName: Quantum.Frame.DumpFlag_NoRuntimeConfig
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFlag_NoRuntimeConfig
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 404
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: If set the <xref href="Quantum.RuntimeConfig" data-throw-if-not-resolved="false"></xref> will not be printed in the frame dump during <xref href="Quantum.Frame.DumpFrame(System.Int32)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const int DumpFlag_NoRuntimeConfig = 8
    return:
      type: System.Int32
    content.vb: Public Const DumpFlag_NoRuntimeConfig As Integer = 8
- uid: Quantum.Frame.DumpFlag_NoDeterministicSessionConfig
  commentId: F:Quantum.Frame.DumpFlag_NoDeterministicSessionConfig
  id: DumpFlag_NoDeterministicSessionConfig
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFlag_NoDeterministicSessionConfig
  nameWithType: Frame.DumpFlag_NoDeterministicSessionConfig
  fullName: Quantum.Frame.DumpFlag_NoDeterministicSessionConfig
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFlag_NoDeterministicSessionConfig
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 408
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: If set the <xref href="Photon.Deterministic.DeterministicSessionConfig" data-throw-if-not-resolved="false"></xref> will not be printed in the frame dump during <xref href="Quantum.Frame.DumpFrame(System.Int32)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const int DumpFlag_NoDeterministicSessionConfig = 16
    return:
      type: System.Int32
    content.vb: Public Const DumpFlag_NoDeterministicSessionConfig As Integer = 16
- uid: Quantum.Frame.DumpFlag_NoRuntimePlayers
  commentId: F:Quantum.Frame.DumpFlag_NoRuntimePlayers
  id: DumpFlag_NoRuntimePlayers
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFlag_NoRuntimePlayers
  nameWithType: Frame.DumpFlag_NoRuntimePlayers
  fullName: Quantum.Frame.DumpFlag_NoRuntimePlayers
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFlag_NoRuntimePlayers
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 412
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: If set the <xref href="Quantum.RuntimePlayer" data-throw-if-not-resolved="false"></xref>s will not be printed in the frame dump during <xref href="Quantum.Frame.DumpFrame(System.Int32)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const int DumpFlag_NoRuntimePlayers = 32
    return:
      type: System.Int32
    content.vb: Public Const DumpFlag_NoRuntimePlayers As Integer = 32
- uid: Quantum.Frame.DumpFlag_NoDynamicDB
  commentId: F:Quantum.Frame.DumpFlag_NoDynamicDB
  id: DumpFlag_NoDynamicDB
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFlag_NoDynamicDB
  nameWithType: Frame.DumpFlag_NoDynamicDB
  fullName: Quantum.Frame.DumpFlag_NoDynamicDB
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFlag_NoDynamicDB
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 416
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: If set the Dynamic Asset DB will not be printed in the frame dump during <xref href="Quantum.Frame.DumpFrame(System.Int32)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const int DumpFlag_NoDynamicDB = 64
    return:
      type: System.Int32
    content.vb: Public Const DumpFlag_NoDynamicDB As Integer = 64
- uid: Quantum.Frame.DumpFlag_ReadableDynamicDB
  commentId: F:Quantum.Frame.DumpFlag_ReadableDynamicDB
  id: DumpFlag_ReadableDynamicDB
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFlag_ReadableDynamicDB
  nameWithType: Frame.DumpFlag_ReadableDynamicDB
  fullName: Quantum.Frame.DumpFlag_ReadableDynamicDB
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFlag_ReadableDynamicDB
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 420
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: If set the Dynamic Asset DB will be dumped in readable form during <xref href="Quantum.Frame.DumpFrame(System.Int32)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const int DumpFlag_ReadableDynamicDB = 128
    return:
      type: System.Int32
    content.vb: Public Const DumpFlag_ReadableDynamicDB As Integer = 128
- uid: Quantum.Frame.DumpFlag_PrintRawValues
  commentId: F:Quantum.Frame.DumpFlag_PrintRawValues
  id: DumpFlag_PrintRawValues
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFlag_PrintRawValues
  nameWithType: Frame.DumpFlag_PrintRawValues
  fullName: Quantum.Frame.DumpFlag_PrintRawValues
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFlag_PrintRawValues
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 424
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: If set the frame dump will print more raw values like pointers.
  example: []
  syntax:
    content: public const int DumpFlag_PrintRawValues = 256
    return:
      type: System.Int32
    content.vb: Public Const DumpFlag_PrintRawValues As Integer = 256
- uid: Quantum.Frame.DumpFlag_ComponentChecksums
  commentId: F:Quantum.Frame.DumpFlag_ComponentChecksums
  id: DumpFlag_ComponentChecksums
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFlag_ComponentChecksums
  nameWithType: Frame.DumpFlag_ComponentChecksums
  fullName: Quantum.Frame.DumpFlag_ComponentChecksums
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFlag_ComponentChecksums
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 428
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: If set the frame dump will print component checksums.
  example: []
  syntax:
    content: public const int DumpFlag_ComponentChecksums = 512
    return:
      type: System.Int32
    content.vb: Public Const DumpFlag_ComponentChecksums As Integer = 512
- uid: Quantum.Frame.DumpFlag_AssetDBCheckums
  commentId: F:Quantum.Frame.DumpFlag_AssetDBCheckums
  id: DumpFlag_AssetDBCheckums
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFlag_AssetDBCheckums
  nameWithType: Frame.DumpFlag_AssetDBCheckums
  fullName: Quantum.Frame.DumpFlag_AssetDBCheckums
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFlag_AssetDBCheckums
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 432
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: If set the frame dump will print Asset DB checksums.
  example: []
  syntax:
    content: public const int DumpFlag_AssetDBCheckums = 1024
    return:
      type: System.Int32
    content.vb: Public Const DumpFlag_AssetDBCheckums As Integer = 1024
- uid: Quantum.Frame.DumpFlag_NoIsVerified
  commentId: F:Quantum.Frame.DumpFlag_NoIsVerified
  id: DumpFlag_NoIsVerified
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFlag_NoIsVerified
  nameWithType: Frame.DumpFlag_NoIsVerified
  fullName: Quantum.Frame.DumpFlag_NoIsVerified
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFlag_NoIsVerified
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 436
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Is set the frame dump will not print the IsVerified information.
  example: []
  syntax:
    content: public const int DumpFlag_NoIsVerified = 2048
    return:
      type: System.Int32
    content.vb: Public Const DumpFlag_NoIsVerified As Integer = 2048
- uid: Quantum.Frame.Global
  commentId: P:Quantum.Frame.Global
  id: Global
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Global
  nameWithType: Frame.Global
  fullName: Quantum.Frame.Global
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Global
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 509
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Access the global read and write struct with generated variables by the Quantum DSL compiler.

    <p>Globals can be declared in any .qtn file by using the global scope.</p><p>Like all things DSL-defined, global variables are part of the state and are fully compatible with the predict-rollback system.</p><p>An alternative to global variables are the Singleton Components.</p><example>
                                                                                                                                                                                                                                                                                                   <pre><code class="lang-csharp">global {
                                                                                                                                                                                                                                                                                                     FPVector3 Foo;
                                                                                                                                                                                                                                                                                                   }</code></pre></example>
  example: []
  syntax:
    content: public _globals_* Global { get; }
    parameters: []
    return:
      type: Quantum._globals_*
    content.vb: Public ReadOnly Property [Global] As _globals_*
  overload: Quantum.Frame.Global*
- uid: Quantum.Frame.RNG
  commentId: P:Quantum.Frame.RNG
  id: RNG
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: RNG
  nameWithType: Frame.RNG
  fullName: Quantum.Frame.RNG
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: RNG
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 522
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: The randomization session started with the seed from the <xref href="Quantum.Frame.RuntimeConfig" data-throw-if-not-resolved="false"></xref> used to start the simulation with.
  example: []
  syntax:
    content: public RNGSession* RNG { get; }
    parameters: []
    return:
      type: Photon.Deterministic.RNGSession*
    content.vb: Public ReadOnly Property RNG As RNGSession*
  overload: Quantum.Frame.RNG*
- uid: Quantum.Frame.PlayerCount
  commentId: P:Quantum.Frame.PlayerCount
  id: PlayerCount
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: PlayerCount
  nameWithType: Frame.PlayerCount
  fullName: Quantum.Frame.PlayerCount
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: PlayerCount
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 528
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns the max player count that the simulation was started with <xref href="Photon.Deterministic.DeterministicSessionConfig.PlayerCount" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int PlayerCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PlayerCount As Integer
  overload: Quantum.Frame.PlayerCount*
- uid: Quantum.Frame.PlayerConnectedCount
  commentId: P:Quantum.Frame.PlayerConnectedCount
  id: PlayerConnectedCount
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: PlayerConnectedCount
  nameWithType: Frame.PlayerConnectedCount
  fullName: Quantum.Frame.PlayerConnectedCount
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: PlayerConnectedCount
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 533
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns the number of players that are currently connected, requires the <xref href="Quantum.Core.PlayerConnectedSystem" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int PlayerConnectedCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PlayerConnectedCount As Integer
  overload: Quantum.Frame.PlayerConnectedCount*
- uid: Quantum.Frame.NavMeshRegionMask
  commentId: P:Quantum.Frame.NavMeshRegionMask
  id: NavMeshRegionMask
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: NavMeshRegionMask
  nameWithType: Frame.NavMeshRegionMask
  fullName: Quantum.Frame.NavMeshRegionMask
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: NavMeshRegionMask
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 541
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns the global navmesh region mask that controls toggling on/off regions.
  example: []
  syntax:
    content: public override NavMeshRegionMask* NavMeshRegionMask { get; }
    parameters: []
    return:
      type: Quantum.NavMeshRegionMask*
    content.vb: Public Overrides ReadOnly Property NavMeshRegionMask As NavMeshRegionMask*
  overridden: Quantum.Core.FrameBase.NavMeshRegionMask
  overload: Quantum.Frame.NavMeshRegionMask*
- uid: Quantum.Frame.FrameMetaData
  commentId: P:Quantum.Frame.FrameMetaData
  id: FrameMetaData
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: FrameMetaData
  nameWithType: Frame.FrameMetaData
  fullName: Quantum.Frame.FrameMetaData
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: FrameMetaData
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 546
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns the frame meta data.
  example: []
  syntax:
    content: public override FrameMetaData* FrameMetaData { get; }
    parameters: []
    return:
      type: Quantum.FrameMetaData*
    content.vb: Public Overrides ReadOnly Property FrameMetaData As FrameMetaData*
  overridden: Quantum.Core.FrameBase.FrameMetaData
  overload: Quantum.Frame.FrameMetaData*
- uid: Quantum.Frame._physicsState2D
  commentId: P:Quantum.Frame._physicsState2D
  id: _physicsState2D
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: _physicsState2D
  nameWithType: Frame._physicsState2D
  fullName: Quantum.Frame._physicsState2D
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: _physicsState2D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 551
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns the physics 2D engine state.
  example: []
  syntax:
    content: protected override PhysicsEngineState* _physicsState2D { get; }
    parameters: []
    return:
      type: Quantum.PhysicsEngineState*
    content.vb: Protected Overrides ReadOnly Property _physicsState2D As PhysicsEngineState*
  overridden: Quantum.Core.FrameBase._physicsState2D
  overload: Quantum.Frame._physicsState2D*
- uid: Quantum.Frame._physicsState3D
  commentId: P:Quantum.Frame._physicsState3D
  id: _physicsState3D
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: _physicsState3D
  nameWithType: Frame._physicsState3D
  fullName: Quantum.Frame._physicsState3D
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: _physicsState3D
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 556
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns the physics 3d engine state.
  example: []
  syntax:
    content: protected override PhysicsEngineState* _physicsState3D { get; }
    parameters: []
    return:
      type: Quantum.PhysicsEngineState*
    content.vb: Protected Overrides ReadOnly Property _physicsState3D As PhysicsEngineState*
  overridden: Quantum.Core.FrameBase._physicsState3D
  overload: Quantum.Frame._physicsState3D*
- uid: Quantum.Frame.CommitCommandsMode
  commentId: P:Quantum.Frame.CommitCommandsMode
  id: CommitCommandsMode
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: CommitCommandsMode
  nameWithType: Frame.CommitCommandsMode
  fullName: Quantum.Frame.CommitCommandsMode
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: CommitCommandsMode
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 561
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns the mode that commands are committed to the simulation.
  example: []
  syntax:
    content: public override CommitCommandsModes CommitCommandsMode { get; }
    parameters: []
    return:
      type: Quantum.CommitCommandsModes
    content.vb: Public Overrides ReadOnly Property CommitCommandsMode As CommitCommandsModes
  overridden: Quantum.Core.FrameBase.CommitCommandsMode
  overload: Quantum.Frame.CommitCommandsMode*
- uid: Quantum.Frame.Signals
  commentId: F:Quantum.Frame.Signals
  id: Signals
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Signals
  nameWithType: Frame.Signals
  fullName: Quantum.Frame.Signals
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Signals
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 568
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Access the Quantum signal API.

    <p>Signals are function signatures used as a decoupled inter-system communication API similar to a publisher/subscriber API or observer pattern.</p><p>Custom signals are defined in the DSL.</p>
  example: []
  syntax:
    content: public Frame.FrameSignals Signals
    return:
      type: Quantum.Frame.FrameSignals
    content.vb: Public Signals As Frame.FrameSignals
- uid: Quantum.Frame.Events
  commentId: F:Quantum.Frame.Events
  id: Events
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: Frame.Events
  fullName: Quantum.Frame.Events
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Events
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 576
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Access the Quantum event API.

    <p>Events are a fine-grained solution to communicate from the simulation to the view. </p><p>Events should never be used to modify/update part of the game state.</p><p>Custom events are defined in the DSL.</p>
  example: []
  syntax:
    content: public Frame.FrameEvents Events
    return:
      type: Quantum.Frame.FrameEvents
    content.vb: Public Events As Frame.FrameEvents
- uid: Quantum.Frame.Context
  commentId: P:Quantum.Frame.Context
  id: Context
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: Frame.Context
  fullName: Quantum.Frame.Context
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Context
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 581
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: The frame user context
  example: []
  syntax:
    content: public FrameContextUser Context { get; }
    parameters: []
    return:
      type: Quantum.FrameContextUser
    content.vb: Public ReadOnly Property Context As FrameContextUser
  overload: Quantum.Frame.Context*
- uid: Quantum.Frame.RuntimeConfig
  commentId: P:Quantum.Frame.RuntimeConfig
  id: RuntimeConfig
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: RuntimeConfig
  nameWithType: Frame.RuntimeConfig
  fullName: Quantum.Frame.RuntimeConfig
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: RuntimeConfig
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 586
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: The deserialized <xref href="Quantum.Frame.RuntimeConfig" data-throw-if-not-resolved="false"></xref> used for this session.
  example: []
  syntax:
    content: public RuntimeConfig RuntimeConfig { get; }
    parameters: []
    return:
      type: Quantum.RuntimeConfig
    content.vb: Public Property RuntimeConfig As RuntimeConfig
  overload: Quantum.Frame.RuntimeConfig*
- uid: Quantum.Frame.SimulationConfig
  commentId: P:Quantum.Frame.SimulationConfig
  id: SimulationConfig
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SimulationConfig
  nameWithType: Frame.SimulationConfig
  fullName: Quantum.Frame.SimulationConfig
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SimulationConfig
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 595
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: The <xref href="Quantum.Frame.SimulationConfig" data-throw-if-not-resolved="false"></xref> used for this session.
  example: []
  syntax:
    content: public SimulationConfig SimulationConfig { get; }
    parameters: []
    return:
      type: Quantum.SimulationConfig
    content.vb: Public Property SimulationConfig As SimulationConfig
  overload: Quantum.Frame.SimulationConfig*
- uid: Quantum.Frame.SessionConfig
  commentId: P:Quantum.Frame.SessionConfig
  id: SessionConfig
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SessionConfig
  nameWithType: Frame.SessionConfig
  fullName: Quantum.Frame.SessionConfig
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SessionConfig
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 604
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: The <xref href="Photon.Deterministic.DeterministicSessionConfig" data-throw-if-not-resolved="false"></xref> used for this session.
  example: []
  syntax:
    content: public DeterministicSessionConfig SessionConfig { get; }
    parameters: []
    return:
      type: Photon.Deterministic.DeterministicSessionConfig
    content.vb: Public Property SessionConfig As DeterministicSessionConfig
  overload: Quantum.Frame.SessionConfig*
- uid: Quantum.Frame.SystemsAll
  commentId: P:Quantum.Frame.SystemsAll
  id: SystemsAll
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemsAll
  nameWithType: Frame.SystemsAll
  fullName: Quantum.Frame.SystemsAll
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemsAll
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 613
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: All systems running in the session.
  example: []
  syntax:
    content: public SystemBase[] SystemsAll { get; }
    parameters: []
    return:
      type: Quantum.SystemBase[]
    content.vb: Public ReadOnly Property SystemsAll As SystemBase()
  overload: Quantum.Frame.SystemsAll*
- uid: Quantum.Frame.UpdateRate
  commentId: P:Quantum.Frame.UpdateRate
  id: UpdateRate
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: UpdateRate
  nameWithType: Frame.UpdateRate
  fullName: Quantum.Frame.UpdateRate
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: UpdateRate
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 618
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: See <xref href="Photon.Deterministic.DeterministicSession.SimulationRate" data-throw-if-not-resolved="false"></xref>. This getter acquires the value from the <xref href="Quantum.Frame.SessionConfig" data-throw-if-not-resolved="false"></xref> though.
  example: []
  syntax:
    content: public override int UpdateRate { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property UpdateRate As Integer
  overridden: Quantum.Core.FrameBase.UpdateRate
  overload: Quantum.Frame.UpdateRate*
- uid: Quantum.Frame.PhysicsSceneSettings
  commentId: P:Quantum.Frame.PhysicsSceneSettings
  id: PhysicsSceneSettings
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: PhysicsSceneSettings
  nameWithType: Frame.PhysicsSceneSettings
  fullName: Quantum.Frame.PhysicsSceneSettings
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: PhysicsSceneSettings
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 623
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Globally access the physics settings which are taken from the <xref href="Quantum.Frame.SimulationConfig" data-throw-if-not-resolved="false"></xref> during the Frame constructor.
  example: []
  syntax:
    content: public override sealed PhysicsSceneSettings* PhysicsSceneSettings { get; }
    parameters: []
    return:
      type: Quantum.PhysicsSceneSettings*
    content.vb: Public NotOverridable Overrides ReadOnly Property PhysicsSceneSettings As PhysicsSceneSettings*
  overridden: Quantum.Core.FrameBase.PhysicsSceneSettings
  overload: Quantum.Frame.PhysicsSceneSettings*
- uid: Quantum.Frame.DeltaTime
  commentId: P:Quantum.Frame.DeltaTime
  id: DeltaTime
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DeltaTime
  nameWithType: Frame.DeltaTime
  fullName: Quantum.Frame.DeltaTime
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DeltaTime
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 628
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Delta time in seconds. Can be set during run-time.
  example: []
  syntax:
    content: public override FP DeltaTime { get; set; }
    parameters: []
    return:
      type: Photon.Deterministic.FP
    content.vb: Public Overrides Property DeltaTime As FP
  overridden: Quantum.Core.FrameBase.DeltaTime
  overload: Quantum.Frame.DeltaTime*
- uid: Quantum.Frame.Map
  commentId: P:Quantum.Frame.Map
  id: Map
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: Frame.Map
  fullName: Quantum.Frame.Map
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Map
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 638
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Retrieves the Quantum map asset. Can be set during run-time.

    <p>If assigned value is different than the current one, signal <xref href="Quantum.ISignalOnMapChanged" data-throw-if-not-resolved="false"></xref> is raised.</p>
  example: []
  syntax:
    content: public override sealed Map Map { get; set; }
    parameters: []
    return:
      type: Quantum.Map
    content.vb: Public NotOverridable Overrides Property Map As Map
  overridden: Quantum.Core.FrameBase.Map
  overload: Quantum.Frame.Map*
- uid: Quantum.Frame.MapAssetRef
  commentId: P:Quantum.Frame.MapAssetRef
  id: MapAssetRef
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: MapAssetRef
  nameWithType: Frame.MapAssetRef
  fullName: Quantum.Frame.MapAssetRef
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: MapAssetRef
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 648
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Get or set the map asset reference. Can be set during run-time.

    <p>If assigned value is different than the current one, signal <xref href="Quantum.ISignalOnMapChanged" data-throw-if-not-resolved="false"></xref> is raised.</p>
  example: []
  syntax:
    content: public AssetRef<Map> MapAssetRef { get; set; }
    parameters: []
    return:
      type: Quantum.AssetRef{Quantum.Map}
    content.vb: Public Property MapAssetRef As AssetRef(Of Map)
  overload: Quantum.Frame.MapAssetRef*
- uid: Quantum.Frame.#ctor(Quantum.Core.FrameContext,Quantum.SystemBase[],Quantum.SystemBase[],Photon.Deterministic.DeterministicSessionConfig,Quantum.RuntimeConfig,Quantum.SimulationConfig,Photon.Deterministic.FP)
  commentId: M:Quantum.Frame.#ctor(Quantum.Core.FrameContext,Quantum.SystemBase[],Quantum.SystemBase[],Photon.Deterministic.DeterministicSessionConfig,Quantum.RuntimeConfig,Quantum.SimulationConfig,Photon.Deterministic.FP)
  id: '#ctor(Quantum.Core.FrameContext,Quantum.SystemBase[],Quantum.SystemBase[],Photon.Deterministic.DeterministicSessionConfig,Quantum.RuntimeConfig,Quantum.SimulationConfig,Photon.Deterministic.FP)'
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Frame(FrameContext, SystemBase[], SystemBase[], DeterministicSessionConfig, RuntimeConfig, SimulationConfig, FP)
  nameWithType: Frame.Frame(FrameContext, SystemBase[], SystemBase[], DeterministicSessionConfig, RuntimeConfig, SimulationConfig, FP)
  fullName: Quantum.Frame.Frame(Quantum.Core.FrameContext, Quantum.SystemBase[], Quantum.SystemBase[], Photon.Deterministic.DeterministicSessionConfig, Quantum.RuntimeConfig, Quantum.SimulationConfig, Photon.Deterministic.FP)
  type: Constructor
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: .ctor
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 671
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Create a new frame object.
  example: []
  syntax:
    content: public Frame(FrameContext context, SystemBase[] systemsAll, SystemBase[] systemsRoots, DeterministicSessionConfig sessionConfig, RuntimeConfig runtimeConfig, SimulationConfig simulationConfig, FP deltaTime)
    parameters:
    - id: context
      type: Quantum.Core.FrameContext
    - id: systemsAll
      type: Quantum.SystemBase[]
    - id: systemsRoots
      type: Quantum.SystemBase[]
    - id: sessionConfig
      type: Photon.Deterministic.DeterministicSessionConfig
    - id: runtimeConfig
      type: Quantum.RuntimeConfig
    - id: simulationConfig
      type: Quantum.SimulationConfig
    - id: deltaTime
      type: Photon.Deterministic.FP
    content.vb: Public Sub New(context As FrameContext, systemsAll As SystemBase(), systemsRoots As SystemBase(), sessionConfig As DeterministicSessionConfig, runtimeConfig As RuntimeConfig, simulationConfig As SimulationConfig, deltaTime As FP)
  overload: Quantum.Frame.#ctor*
  nameWithType.vb: Frame.New(FrameContext, SystemBase(), SystemBase(), DeterministicSessionConfig, RuntimeConfig, SimulationConfig, FP)
  fullName.vb: Quantum.Frame.New(Quantum.Core.FrameContext, Quantum.SystemBase(), Quantum.SystemBase(), Photon.Deterministic.DeterministicSessionConfig, Quantum.RuntimeConfig, Quantum.SimulationConfig, Photon.Deterministic.FP)
  name.vb: New(FrameContext, SystemBase(), SystemBase(), DeterministicSessionConfig, RuntimeConfig, SimulationConfig, FP)
- uid: Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector3,Photon.Deterministic.FP)
  commentId: M:Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector3,Photon.Deterministic.FP)
  id: SetPredictionArea(Photon.Deterministic.FPVector3,Photon.Deterministic.FP)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SetPredictionArea(FPVector3, FP)
  nameWithType: Frame.SetPredictionArea(FPVector3, FP)
  fullName: Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector3, Photon.Deterministic.FP)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetPredictionArea
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 782
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Set the prediction area.
  example: []
  syntax:
    content: public void SetPredictionArea(FPVector3 position, FP radius)
    parameters:
    - id: position
      type: Photon.Deterministic.FPVector3
      description: Center of the prediction area
    - id: radius
      type: Photon.Deterministic.FP
      description: Radius of the prediction area
    content.vb: Public Sub SetPredictionArea(position As FPVector3, radius As FP)
  overload: Quantum.Frame.SetPredictionArea*
- uid: Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector2,Photon.Deterministic.FP)
  commentId: M:Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector2,Photon.Deterministic.FP)
  id: SetPredictionArea(Photon.Deterministic.FPVector2,Photon.Deterministic.FP)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SetPredictionArea(FPVector2, FP)
  nameWithType: Frame.SetPredictionArea(FPVector2, FP)
  fullName: Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector2, Photon.Deterministic.FP)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetPredictionArea
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 791
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: See <xref href="Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector3%2cPhoton.Deterministic.FP)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void SetPredictionArea(FPVector2 position, FP radius)
    parameters:
    - id: position
      type: Photon.Deterministic.FPVector2
      description: ''
    - id: radius
      type: Photon.Deterministic.FP
      description: ''
    content.vb: Public Sub SetPredictionArea(position As FPVector2, radius As FP)
  overload: Quantum.Frame.SetPredictionArea*
- uid: Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector3)
  id: InPredictionArea(Photon.Deterministic.FPVector3)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: InPredictionArea(FPVector3)
  nameWithType: Frame.InPredictionArea(FPVector3)
  fullName: Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: InPredictionArea
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 800
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Test is a position is inside the prediction area.
  example: []
  syntax:
    content: public bool InPredictionArea(FPVector3 position)
    parameters:
    - id: position
      type: Photon.Deterministic.FPVector3
      description: Position
    return:
      type: System.Boolean
      description: True if the position is inside the prediction area.
    content.vb: Public Function InPredictionArea(position As FPVector3) As Boolean
  overload: Quantum.Frame.InPredictionArea*
- uid: Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector2)
  commentId: M:Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector2)
  id: InPredictionArea(Photon.Deterministic.FPVector2)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: InPredictionArea(FPVector2)
  nameWithType: Frame.InPredictionArea(FPVector2)
  fullName: Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector2)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: InPredictionArea
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 809
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: See <xref href="Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector3)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool InPredictionArea(FPVector2 position)
    parameters:
    - id: position
      type: Photon.Deterministic.FPVector2
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function InPredictionArea(position As FPVector2) As Boolean
  overload: Quantum.Frame.InPredictionArea*
- uid: Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
  commentId: M:Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
  id: Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Serialize(DeterministicFrameSerializeMode)
  nameWithType: Frame.Serialize(DeterministicFrameSerializeMode)
  fullName: Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Serialize
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 819
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Serializes the frame using a temporary buffer (20MB).
  example: []
  syntax:
    content: public override byte[] Serialize(DeterministicFrameSerializeMode mode)
    parameters:
    - id: mode
      type: Photon.Deterministic.DeterministicFrameSerializeMode
      description: ''
    return:
      type: System.Byte[]
      description: ''
    content.vb: Public Overrides Function Serialize(mode As DeterministicFrameSerializeMode) As Byte()
  overridden: Photon.Deterministic.DeterministicFrame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
  overload: Quantum.Frame.Serialize*
- uid: Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode,System.Byte[],System.Int32,System.Boolean)
  commentId: M:Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode,System.Byte[],System.Int32,System.Boolean)
  id: Serialize(Photon.Deterministic.DeterministicFrameSerializeMode,System.Byte[],System.Int32,System.Boolean)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Serialize(DeterministicFrameSerializeMode, byte[], int, bool)
  nameWithType: Frame.Serialize(DeterministicFrameSerializeMode, byte[], int, bool)
  fullName: Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode, byte[], int, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Serialize
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 841
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Serializes the frame using <code class="paramref">buffer</code> as a buffer for temporary data. 


    If <code class="paramref">allocOutput</code> is set to false, then <code class="paramref">buffer</code> is also used for the final data - use offset and count from the result to access

    the part of <code class="paramref">buffer</code> where serialized frame is stored.


    If <code class="paramref">allocOutput</code> is set to true then a new array is allocated for the result.


    Despite accepting a buffer, this method still allocates a few small temporary objects. 

    <xref href="Quantum.IAssetSerializer.SerializeAssets(System.IO.Stream%2cQuantum.AssetObject%5b%5d)" data-throw-if-not-resolved="false"></xref> is also going

    to allocate when serializing DynamicAssetDB, but how much depends on the serializer itself and the number of dynamic assets.
  remarks: Do not serialize during GameStart callback because systems have not been initialized, yet. Rather use CallbackSimulateFinished to wait for the first update.
  example: []
  syntax:
    content: public ArraySegment<byte> Serialize(DeterministicFrameSerializeMode mode, byte[] buffer, int offset = 0, bool allocOutput = false)
    parameters:
    - id: mode
      type: Photon.Deterministic.DeterministicFrameSerializeMode
      description: ''
    - id: buffer
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    - id: allocOutput
      type: System.Boolean
      description: ''
    return:
      type: System.ArraySegment{System.Byte}
      description: Segment of <code class="paramref">buffer</code> where the serialized frame is stored
    content.vb: Public Function Serialize(mode As DeterministicFrameSerializeMode, buffer As Byte(), offset As Integer = 0, allocOutput As Boolean = False) As ArraySegment(Of Byte)
  overload: Quantum.Frame.Serialize*
  nameWithType.vb: Frame.Serialize(DeterministicFrameSerializeMode, Byte(), Integer, Boolean)
  fullName.vb: Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode, Byte(), Integer, Boolean)
  name.vb: Serialize(DeterministicFrameSerializeMode, Byte(), Integer, Boolean)
- uid: Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode,System.Byte[],Quantum.FrameSerializer@,System.Int32,System.Boolean)
  commentId: M:Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode,System.Byte[],Quantum.FrameSerializer@,System.Int32,System.Boolean)
  id: Serialize(Photon.Deterministic.DeterministicFrameSerializeMode,System.Byte[],Quantum.FrameSerializer@,System.Int32,System.Boolean)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Serialize(DeterministicFrameSerializeMode, byte[], out FrameSerializer, int, bool)
  nameWithType: Frame.Serialize(DeterministicFrameSerializeMode, byte[], out FrameSerializer, int, bool)
  fullName: Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode, byte[], out Quantum.FrameSerializer, int, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Serialize
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 846
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public ArraySegment<byte> Serialize(DeterministicFrameSerializeMode mode, byte[] buffer, out FrameSerializer serializer, int offset = 0, bool allocOutput = false)
    parameters:
    - id: mode
      type: Photon.Deterministic.DeterministicFrameSerializeMode
    - id: buffer
      type: System.Byte[]
    - id: serializer
      type: Quantum.FrameSerializer
    - id: offset
      type: System.Int32
    - id: allocOutput
      type: System.Boolean
    return:
      type: System.ArraySegment{System.Byte}
    content.vb: Public Function Serialize(mode As DeterministicFrameSerializeMode, buffer As Byte(), serializer As FrameSerializer, offset As Integer = 0, allocOutput As Boolean = False) As ArraySegment(Of Byte)
  overload: Quantum.Frame.Serialize*
  nameWithType.vb: Frame.Serialize(DeterministicFrameSerializeMode, Byte(), FrameSerializer, Integer, Boolean)
  fullName.vb: Quantum.Frame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode, Byte(), Quantum.FrameSerializer, Integer, Boolean)
  name.vb: Serialize(DeterministicFrameSerializeMode, Byte(), FrameSerializer, Integer, Boolean)
- uid: Quantum.Frame.Deserialize(System.Byte[])
  commentId: M:Quantum.Frame.Deserialize(System.Byte[])
  id: Deserialize(System.Byte[])
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Deserialize(byte[])
  nameWithType: Frame.Deserialize(byte[])
  fullName: Quantum.Frame.Deserialize(byte[])
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Deserialize
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 903
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Load all frame data from the serialized frame.
  example: []
  syntax:
    content: public override void Deserialize(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
      description: Serialized frame.
    content.vb: Public Overrides Sub Deserialize(data As Byte())
  overridden: Photon.Deterministic.DeterministicFrame.Deserialize(System.Byte[])
  overload: Quantum.Frame.Deserialize*
  nameWithType.vb: Frame.Deserialize(Byte())
  fullName.vb: Quantum.Frame.Deserialize(Byte())
  name.vb: Deserialize(Byte())
- uid: Quantum.Frame.DumpFrame(System.Int32)
  commentId: M:Quantum.Frame.DumpFrame(System.Int32)
  id: DumpFrame(System.Int32)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: DumpFrame(int)
  nameWithType: Frame.DumpFrame(int)
  fullName: Quantum.Frame.DumpFrame(int)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DumpFrame
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 972
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Dump the frame in human readable form into a string.
  example: []
  syntax:
    content: public override sealed string DumpFrame(int dumpFlags = 0)
    parameters:
    - id: dumpFlags
      type: System.Int32
      description: Flags to control the output for example <xref href="Quantum.Frame.DumpFlag_AssetDBCheckums" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.String
      description: Frame string representation.
    content.vb: Public NotOverridable Overrides Function DumpFrame(dumpFlags As Integer = 0) As String
  overridden: Photon.Deterministic.DeterministicFrame.DumpFrame(System.Int32)
  overload: Quantum.Frame.DumpFrame*
  nameWithType.vb: Frame.DumpFrame(Integer)
  fullName.vb: Quantum.Frame.DumpFrame(Integer)
  name.vb: DumpFrame(Integer)
- uid: Quantum.Frame.CalculateChecksum
  commentId: M:Quantum.Frame.CalculateChecksum
  id: CalculateChecksum
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: CalculateChecksum()
  nameWithType: Frame.CalculateChecksum()
  fullName: Quantum.Frame.CalculateChecksum()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: CalculateChecksum
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1102
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Calculates a checksum for the current game state. If the game is not started with <xref href="Quantum.QuantumGameFlags.DisableSharedChecksumSerializer" data-throw-if-not-resolved="false"></xref> 

    flag, this method is not thread-safe, i.e. calling it from multiple threads for frames from the same simulation is going to break.
  example: []
  syntax:
    content: public override sealed ulong CalculateChecksum()
    return:
      type: System.UInt64
    content.vb: Public NotOverridable Overrides Function CalculateChecksum() As ULong
  overridden: Photon.Deterministic.DeterministicFrame.CalculateChecksum
  overload: Quantum.Frame.CalculateChecksum*
- uid: Quantum.Frame.CalculateChecksum(System.Boolean)
  commentId: M:Quantum.Frame.CalculateChecksum(System.Boolean)
  id: CalculateChecksum(System.Boolean)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: CalculateChecksum(bool)
  nameWithType: Frame.CalculateChecksum(bool)
  fullName: Quantum.Frame.CalculateChecksum(bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: CalculateChecksum
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1111
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Calculates a checksum for the current game state.
  example: []
  syntax:
    content: public ulong CalculateChecksum(bool useSharedSerializer)
    parameters:
    - id: useSharedSerializer
      type: System.Boolean
      description: True - use shared checksum serializer to avoid allocs (not thread-safe).
    return:
      type: System.UInt64
      description: ''
    content.vb: Public Function CalculateChecksum(useSharedSerializer As Boolean) As ULong
  overload: Quantum.Frame.CalculateChecksum*
  nameWithType.vb: Frame.CalculateChecksum(Boolean)
  fullName.vb: Quantum.Frame.CalculateChecksum(Boolean)
  name.vb: CalculateChecksum(Boolean)
- uid: Quantum.Frame.Copy(Photon.Deterministic.DeterministicFrame)
  commentId: M:Quantum.Frame.Copy(Photon.Deterministic.DeterministicFrame)
  id: Copy(Photon.Deterministic.DeterministicFrame)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Copy(DeterministicFrame)
  nameWithType: Frame.Copy(DeterministicFrame)
  fullName: Quantum.Frame.Copy(Photon.Deterministic.DeterministicFrame)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Copy
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1163
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Copies the complete frame memory.
  example: []
  syntax:
    content: protected override sealed void Copy(DeterministicFrame frame)
    parameters:
    - id: frame
      type: Photon.Deterministic.DeterministicFrame
      description: Input frame object
    content.vb: Protected NotOverridable Overrides Sub Copy(frame As DeterministicFrame)
  overridden: Photon.Deterministic.DeterministicFrame.Copy(Photon.Deterministic.DeterministicFrame)
  overload: Quantum.Frame.Copy*
- uid: Quantum.Frame.Free
  commentId: M:Quantum.Frame.Free
  id: Free
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: Free()
  nameWithType: Frame.Free()
  fullName: Quantum.Frame.Free()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Free
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1204
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Frees the resources used by the frame.
  example: []
  syntax:
    content: public override sealed void Free()
    content.vb: Public NotOverridable Overrides Sub Free()
  overridden: Quantum.Core.FrameBase.Free
  overload: Quantum.Frame.Free*
- uid: Quantum.Frame.SystemIsEnabledSelf``1
  commentId: M:Quantum.Frame.SystemIsEnabledSelf``1
  id: SystemIsEnabledSelf``1
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemIsEnabledSelf<T>()
  nameWithType: Frame.SystemIsEnabledSelf<T>()
  fullName: Quantum.Frame.SystemIsEnabledSelf<T>()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemIsEnabledSelf
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1217
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Test if a system is enabled.
  example: []
  syntax:
    content: 'public bool SystemIsEnabledSelf<T>() where T : SystemBase'
    typeParameters:
    - id: T
      description: System type
    return:
      type: System.Boolean
      description: True if the system is enabled
    content.vb: Public Function SystemIsEnabledSelf(Of T As SystemBase)() As Boolean
  overload: Quantum.Frame.SystemIsEnabledSelf*
  nameWithType.vb: Frame.SystemIsEnabledSelf(Of T)()
  fullName.vb: Quantum.Frame.SystemIsEnabledSelf(Of T)()
  name.vb: SystemIsEnabledSelf(Of T)()
- uid: Quantum.Frame.SystemIsEnabledSelf(System.Type)
  commentId: M:Quantum.Frame.SystemIsEnabledSelf(System.Type)
  id: SystemIsEnabledSelf(System.Type)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemIsEnabledSelf(Type)
  nameWithType: Frame.SystemIsEnabledSelf(Type)
  fullName: Quantum.Frame.SystemIsEnabledSelf(System.Type)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemIsEnabledSelf
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1226
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool SystemIsEnabledSelf(Type t)
    parameters:
    - id: t
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function SystemIsEnabledSelf(t As Type) As Boolean
  overload: Quantum.Frame.SystemIsEnabledSelf*
- uid: Quantum.Frame.SystemIsEnabledSelf(Quantum.SystemBase)
  commentId: M:Quantum.Frame.SystemIsEnabledSelf(Quantum.SystemBase)
  id: SystemIsEnabledSelf(Quantum.SystemBase)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemIsEnabledSelf(SystemBase)
  nameWithType: Frame.SystemIsEnabledSelf(SystemBase)
  fullName: Quantum.Frame.SystemIsEnabledSelf(Quantum.SystemBase)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemIsEnabledSelf
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1235
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool SystemIsEnabledSelf(SystemBase s)
    parameters:
    - id: s
      type: Quantum.SystemBase
    return:
      type: System.Boolean
    content.vb: Public Function SystemIsEnabledSelf(s As SystemBase) As Boolean
  overload: Quantum.Frame.SystemIsEnabledSelf*
- uid: Quantum.Frame.SystemIsEnabledInHierarchy``1
  commentId: M:Quantum.Frame.SystemIsEnabledInHierarchy``1
  id: SystemIsEnabledInHierarchy``1
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemIsEnabledInHierarchy<T>()
  nameWithType: Frame.SystemIsEnabledInHierarchy<T>()
  fullName: Quantum.Frame.SystemIsEnabledInHierarchy<T>()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemIsEnabledInHierarchy
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1243
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: 'public bool SystemIsEnabledInHierarchy<T>() where T : SystemBase'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function SystemIsEnabledInHierarchy(Of T As SystemBase)() As Boolean
  overload: Quantum.Frame.SystemIsEnabledInHierarchy*
  nameWithType.vb: Frame.SystemIsEnabledInHierarchy(Of T)()
  fullName.vb: Quantum.Frame.SystemIsEnabledInHierarchy(Of T)()
  name.vb: SystemIsEnabledInHierarchy(Of T)()
- uid: Quantum.Frame.SystemIsEnabledInHierarchy(System.Type)
  commentId: M:Quantum.Frame.SystemIsEnabledInHierarchy(System.Type)
  id: SystemIsEnabledInHierarchy(System.Type)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemIsEnabledInHierarchy(Type)
  nameWithType: Frame.SystemIsEnabledInHierarchy(Type)
  fullName: Quantum.Frame.SystemIsEnabledInHierarchy(System.Type)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemIsEnabledInHierarchy
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1248
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool SystemIsEnabledInHierarchy(Type t)
    parameters:
    - id: t
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function SystemIsEnabledInHierarchy(t As Type) As Boolean
  overload: Quantum.Frame.SystemIsEnabledInHierarchy*
- uid: Quantum.Frame.SystemIsEnabledInHierarchy(Quantum.SystemBase)
  commentId: M:Quantum.Frame.SystemIsEnabledInHierarchy(Quantum.SystemBase)
  id: SystemIsEnabledInHierarchy(Quantum.SystemBase)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemIsEnabledInHierarchy(SystemBase)
  nameWithType: Frame.SystemIsEnabledInHierarchy(SystemBase)
  fullName: Quantum.Frame.SystemIsEnabledInHierarchy(Quantum.SystemBase)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemIsEnabledInHierarchy
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1253
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool SystemIsEnabledInHierarchy(SystemBase system)
    parameters:
    - id: system
      type: Quantum.SystemBase
    return:
      type: System.Boolean
    content.vb: Public Function SystemIsEnabledInHierarchy(system As SystemBase) As Boolean
  overload: Quantum.Frame.SystemIsEnabledInHierarchy*
- uid: Quantum.Frame.SystemEnable``1
  commentId: M:Quantum.Frame.SystemEnable``1
  id: SystemEnable``1
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemEnable<T>()
  nameWithType: Frame.SystemEnable<T>()
  fullName: Quantum.Frame.SystemEnable<T>()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemEnable
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1270
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Enable a system.
  example: []
  syntax:
    content: 'public void SystemEnable<T>() where T : SystemBase'
    typeParameters:
    - id: T
      description: System type
    content.vb: Public Sub SystemEnable(Of T As SystemBase)()
  overload: Quantum.Frame.SystemEnable*
  nameWithType.vb: Frame.SystemEnable(Of T)()
  fullName.vb: Quantum.Frame.SystemEnable(Of T)()
  name.vb: SystemEnable(Of T)()
- uid: Quantum.Frame.SystemEnable(System.Type)
  commentId: M:Quantum.Frame.SystemEnable(System.Type)
  id: SystemEnable(System.Type)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemEnable(Type)
  nameWithType: Frame.SystemEnable(Type)
  fullName: Quantum.Frame.SystemEnable(System.Type)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemEnable
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1274
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void SystemEnable(Type t)
    parameters:
    - id: t
      type: System.Type
    content.vb: Public Sub SystemEnable(t As Type)
  overload: Quantum.Frame.SystemEnable*
- uid: Quantum.Frame.SystemDisable``1
  commentId: M:Quantum.Frame.SystemDisable``1
  id: SystemDisable``1
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemDisable<T>()
  nameWithType: Frame.SystemDisable<T>()
  fullName: Quantum.Frame.SystemDisable<T>()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemDisable
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1311
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Disables a system.
  example:
  - >-
    <pre><code class="lang-csharp">// test for a certain asset and disable the system during its OnInit method

    public override void OnInit(Frame f) {
      var testSettings = f.FindAsset&lt;NavMeshAgentsSettings&gt;(f.Map.UserAsset.Id);
      if (testSettings == null) {
        f.SystemDisable&lt;NavMeshAgentTestSystem&gt;();
        return;
       }
       //..
     }</code></pre>
  syntax:
    content: 'public void SystemDisable<T>() where T : SystemBase'
    typeParameters:
    - id: T
      description: System type
    content.vb: Public Sub SystemDisable(Of T As SystemBase)()
  overload: Quantum.Frame.SystemDisable*
  nameWithType.vb: Frame.SystemDisable(Of T)()
  fullName.vb: Quantum.Frame.SystemDisable(Of T)()
  name.vb: SystemDisable(Of T)()
- uid: Quantum.Frame.SystemDisable``1(``0)
  commentId: M:Quantum.Frame.SystemDisable``1(``0)
  id: SystemDisable``1(``0)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemDisable<T>(T)
  nameWithType: Frame.SystemDisable<T>(T)
  fullName: Quantum.Frame.SystemDisable<T>(T)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemDisable
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1315
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: 'public void SystemDisable<T>(T system) where T : SystemBase'
    parameters:
    - id: system
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub SystemDisable(Of T As SystemBase)(system As T)
  overload: Quantum.Frame.SystemDisable*
  nameWithType.vb: Frame.SystemDisable(Of T)(T)
  fullName.vb: Quantum.Frame.SystemDisable(Of T)(T)
  name.vb: SystemDisable(Of T)(T)
- uid: Quantum.Frame.SystemDisable(System.Type)
  commentId: M:Quantum.Frame.SystemDisable(System.Type)
  id: SystemDisable(System.Type)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: SystemDisable(Type)
  nameWithType: Frame.SystemDisable(Type)
  fullName: Quantum.Frame.SystemDisable(System.Type)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SystemDisable
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1319
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void SystemDisable(Type t)
    parameters:
    - id: t
      type: System.Type
    content.vb: Public Sub SystemDisable(t As Type)
  overload: Quantum.Frame.SystemDisable*
- uid: Quantum.Frame.InitStatic
  commentId: M:Quantum.Frame.InitStatic
  id: InitStatic
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: InitStatic()
  nameWithType: Frame.InitStatic()
  fullName: Quantum.Frame.InitStatic()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: InitStatic
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1407
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Initialized Quantum static type registry.
  example: []
  syntax:
    content: public static void InitStatic()
    content.vb: Public Shared Sub InitStatic()
  overload: Quantum.Frame.InitStatic*
- uid: Quantum.Frame.GetPlayerData(Quantum.PlayerRef)
  commentId: M:Quantum.Frame.GetPlayerData(Quantum.PlayerRef)
  id: GetPlayerData(Quantum.PlayerRef)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: GetPlayerData(PlayerRef)
  nameWithType: Frame.GetPlayerData(PlayerRef)
  fullName: Quantum.Frame.GetPlayerData(Quantum.PlayerRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetPlayerData
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1432
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Gets the runtime player configuration data for a certain player.
  example: []
  syntax:
    content: public RuntimePlayer GetPlayerData(PlayerRef player)
    parameters:
    - id: player
      type: Quantum.PlayerRef
      description: Player ref
    return:
      type: Quantum.RuntimePlayer
      description: Player config or null if player was not found
    content.vb: Public Function GetPlayerData(player As PlayerRef) As RuntimePlayer
  overload: Quantum.Frame.GetPlayerData*
- uid: Quantum.Frame.PlayerToActorId(Quantum.PlayerRef)
  commentId: M:Quantum.Frame.PlayerToActorId(Quantum.PlayerRef)
  id: PlayerToActorId(Quantum.PlayerRef)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: PlayerToActorId(PlayerRef)
  nameWithType: Frame.PlayerToActorId(PlayerRef)
  fullName: Quantum.Frame.PlayerToActorId(Quantum.PlayerRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: PlayerToActorId
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1447
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Converts a Quantum PlayerRef to an ActorId (Photon client id).
  example: []
  syntax:
    content: public int? PlayerToActorId(PlayerRef player)
    parameters:
    - id: player
      type: Quantum.PlayerRef
      description: Player reference
    return:
      type: System.Nullable{System.Int32}
      description: ActorId or null if payer was not found
    content.vb: Public Function PlayerToActorId(player As PlayerRef) As Integer?
  overload: Quantum.Frame.PlayerToActorId*
- uid: Quantum.Frame.ActorIdToFirstPlayer(System.Int32)
  commentId: M:Quantum.Frame.ActorIdToFirstPlayer(System.Int32)
  id: ActorIdToFirstPlayer(System.Int32)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: ActorIdToFirstPlayer(int)
  nameWithType: Frame.ActorIdToFirstPlayer(int)
  fullName: Quantum.Frame.ActorIdToFirstPlayer(int)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ActorIdToFirstPlayer
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1463
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns the first player that is using a certain ActorId (Photon client id).
  example: []
  syntax:
    content: public PlayerRef? ActorIdToFirstPlayer(int actorId)
    parameters:
    - id: actorId
      type: System.Int32
      description: Actor id
    return:
      type: System.Nullable{Quantum.PlayerRef}
      description: Player reference or null if actor id was not found
    content.vb: Public Function ActorIdToFirstPlayer(actorId As Integer) As PlayerRef?
  overload: Quantum.Frame.ActorIdToFirstPlayer*
  nameWithType.vb: Frame.ActorIdToFirstPlayer(Integer)
  fullName.vb: Quantum.Frame.ActorIdToFirstPlayer(Integer)
  name.vb: ActorIdToFirstPlayer(Integer)
- uid: Quantum.Frame.ActorIdToAllPlayers(System.Int32)
  commentId: M:Quantum.Frame.ActorIdToAllPlayers(System.Int32)
  id: ActorIdToAllPlayers(System.Int32)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: ActorIdToAllPlayers(int)
  nameWithType: Frame.ActorIdToAllPlayers(int)
  fullName: Quantum.Frame.ActorIdToAllPlayers(int)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ActorIdToAllPlayers
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1481
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns all players with a certain ActorId (Photon client id).
  example: []
  syntax:
    content: public PlayerRef[] ActorIdToAllPlayers(int actorId)
    parameters:
    - id: actorId
      type: System.Int32
      description: Actor id
    return:
      type: Quantum.PlayerRef[]
      description: Array of player references
    content.vb: Public Function ActorIdToAllPlayers(actorId As Integer) As PlayerRef()
  overload: Quantum.Frame.ActorIdToAllPlayers*
  nameWithType.vb: Frame.ActorIdToAllPlayers(Integer)
  fullName.vb: Quantum.Frame.ActorIdToAllPlayers(Integer)
  name.vb: ActorIdToAllPlayers(Integer)
- uid: Quantum.Frame.UpdatePlayerData(Photon.Deterministic.IDeterministicGame)
  commentId: M:Quantum.Frame.UpdatePlayerData(Photon.Deterministic.IDeterministicGame)
  id: UpdatePlayerData(Photon.Deterministic.IDeterministicGame)
  parent: Quantum.Frame
  langs:
  - csharp
  - vb
  name: UpdatePlayerData(IDeterministicGame)
  nameWithType: Frame.UpdatePlayerData(IDeterministicGame)
  fullName: Quantum.Frame.UpdatePlayerData(Photon.Deterministic.IDeterministicGame)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: UpdatePlayerData
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1491
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void UpdatePlayerData(IDeterministicGame game)
    parameters:
    - id: game
      type: Photon.Deterministic.IDeterministicGame
    content.vb: Public Sub UpdatePlayerData(game As IDeterministicGame)
  overload: Quantum.Frame.UpdatePlayerData*
references:
- uid: Quantum.Core.FrameBase
  commentId: T:Quantum.Core.FrameBase
  parent: Quantum.Core
  isExternal: true
  name: FrameBase
  nameWithType: FrameBase
  fullName: Quantum.Core.FrameBase
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Photon.Deterministic.DeterministicFrame
  commentId: T:Photon.Deterministic.DeterministicFrame
  parent: Photon.Deterministic
  isExternal: true
  name: DeterministicFrame
  nameWithType: DeterministicFrame
  fullName: Photon.Deterministic.DeterministicFrame
- uid: Quantum.Core.FrameBase._ComponentSignalsOnAdded
  commentId: F:Quantum.Core.FrameBase._ComponentSignalsOnAdded
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: _ComponentSignalsOnAdded
  nameWithType: FrameBase._ComponentSignalsOnAdded
  fullName: Quantum.Core.FrameBase._ComponentSignalsOnAdded
- uid: Quantum.Core.FrameBase._ComponentSignalsOnRemoved
  commentId: F:Quantum.Core.FrameBase._ComponentSignalsOnRemoved
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: _ComponentSignalsOnRemoved
  nameWithType: FrameBase._ComponentSignalsOnRemoved
  fullName: Quantum.Core.FrameBase._ComponentSignalsOnRemoved
- uid: Quantum.Core.FrameBase._SignalOnEntityPrototypeMaterialized
  commentId: F:Quantum.Core.FrameBase._SignalOnEntityPrototypeMaterialized
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: _SignalOnEntityPrototypeMaterialized
  nameWithType: FrameBase._SignalOnEntityPrototypeMaterialized
  fullName: Quantum.Core.FrameBase._SignalOnEntityPrototypeMaterialized
- uid: Quantum.Core.FrameBase._frameHeap
  commentId: F:Quantum.Core.FrameBase._frameHeap
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: _frameHeap
  nameWithType: FrameBase._frameHeap
  fullName: Quantum.Core.FrameBase._frameHeap
- uid: Quantum.Core.FrameBase.Unsafe
  commentId: F:Quantum.Core.FrameBase.Unsafe
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Unsafe
  nameWithType: FrameBase.Unsafe
  fullName: Quantum.Core.FrameBase.Unsafe
- uid: Quantum.Core.FrameBase.Physics2D
  commentId: F:Quantum.Core.FrameBase.Physics2D
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Physics2D
  nameWithType: FrameBase.Physics2D
  fullName: Quantum.Core.FrameBase.Physics2D
- uid: Quantum.Core.FrameBase.Physics3D
  commentId: F:Quantum.Core.FrameBase.Physics3D
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Physics3D
  nameWithType: FrameBase.Physics3D
  fullName: Quantum.Core.FrameBase.Physics3D
- uid: Quantum.Core.FrameBase.DefaultInitialCollectionCapacity
  commentId: F:Quantum.Core.FrameBase.DefaultInitialCollectionCapacity
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: DefaultInitialCollectionCapacity
  nameWithType: FrameBase.DefaultInitialCollectionCapacity
  fullName: Quantum.Core.FrameBase.DefaultInitialCollectionCapacity
- uid: Quantum.Core.FrameBase.Filter``1(Quantum.ComponentSet,Quantum.ComponentSet)
  commentId: M:Quantum.Core.FrameBase.Filter``1(Quantum.ComponentSet,Quantum.ComponentSet)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Filter<T0>(ComponentSet, ComponentSet)
  nameWithType: FrameBase.Filter<T0>(ComponentSet, ComponentSet)
  fullName: Quantum.Core.FrameBase.Filter<T0>(Quantum.ComponentSet, Quantum.ComponentSet)
  nameWithType.vb: FrameBase.Filter(Of T0)(ComponentSet, ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.Filter(Of T0)(Quantum.ComponentSet, Quantum.ComponentSet)
  name.vb: Filter(Of T0)(ComponentSet, ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Filter``1(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: <
  - name: T0
  - name: '>'
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Filter``1(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: )
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Filter``2(Quantum.ComponentSet,Quantum.ComponentSet)
  commentId: M:Quantum.Core.FrameBase.Filter``2(Quantum.ComponentSet,Quantum.ComponentSet)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Filter<T0, T1>(ComponentSet, ComponentSet)
  nameWithType: FrameBase.Filter<T0, T1>(ComponentSet, ComponentSet)
  fullName: Quantum.Core.FrameBase.Filter<T0, T1>(Quantum.ComponentSet, Quantum.ComponentSet)
  nameWithType.vb: FrameBase.Filter(Of T0, T1)(ComponentSet, ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.Filter(Of T0, T1)(Quantum.ComponentSet, Quantum.ComponentSet)
  name.vb: Filter(Of T0, T1)(ComponentSet, ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Filter``2(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Filter``2(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Filter``3(Quantum.ComponentSet,Quantum.ComponentSet)
  commentId: M:Quantum.Core.FrameBase.Filter``3(Quantum.ComponentSet,Quantum.ComponentSet)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Filter<T0, T1, T2>(ComponentSet, ComponentSet)
  nameWithType: FrameBase.Filter<T0, T1, T2>(ComponentSet, ComponentSet)
  fullName: Quantum.Core.FrameBase.Filter<T0, T1, T2>(Quantum.ComponentSet, Quantum.ComponentSet)
  nameWithType.vb: FrameBase.Filter(Of T0, T1, T2)(ComponentSet, ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.Filter(Of T0, T1, T2)(Quantum.ComponentSet, Quantum.ComponentSet)
  name.vb: Filter(Of T0, T1, T2)(ComponentSet, ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Filter``3(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Filter``3(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Filter``4(Quantum.ComponentSet,Quantum.ComponentSet)
  commentId: M:Quantum.Core.FrameBase.Filter``4(Quantum.ComponentSet,Quantum.ComponentSet)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Filter<T0, T1, T2, T3>(ComponentSet, ComponentSet)
  nameWithType: FrameBase.Filter<T0, T1, T2, T3>(ComponentSet, ComponentSet)
  fullName: Quantum.Core.FrameBase.Filter<T0, T1, T2, T3>(Quantum.ComponentSet, Quantum.ComponentSet)
  nameWithType.vb: FrameBase.Filter(Of T0, T1, T2, T3)(ComponentSet, ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.Filter(Of T0, T1, T2, T3)(Quantum.ComponentSet, Quantum.ComponentSet)
  name.vb: Filter(Of T0, T1, T2, T3)(ComponentSet, ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Filter``4(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Filter``4(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Filter``5(Quantum.ComponentSet,Quantum.ComponentSet)
  commentId: M:Quantum.Core.FrameBase.Filter``5(Quantum.ComponentSet,Quantum.ComponentSet)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Filter<T0, T1, T2, T3, T4>(ComponentSet, ComponentSet)
  nameWithType: FrameBase.Filter<T0, T1, T2, T3, T4>(ComponentSet, ComponentSet)
  fullName: Quantum.Core.FrameBase.Filter<T0, T1, T2, T3, T4>(Quantum.ComponentSet, Quantum.ComponentSet)
  nameWithType.vb: FrameBase.Filter(Of T0, T1, T2, T3, T4)(ComponentSet, ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.Filter(Of T0, T1, T2, T3, T4)(Quantum.ComponentSet, Quantum.ComponentSet)
  name.vb: Filter(Of T0, T1, T2, T3, T4)(ComponentSet, ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Filter``5(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: '>'
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Filter``5(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Filter``6(Quantum.ComponentSet,Quantum.ComponentSet)
  commentId: M:Quantum.Core.FrameBase.Filter``6(Quantum.ComponentSet,Quantum.ComponentSet)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Filter<T0, T1, T2, T3, T4, T5>(ComponentSet, ComponentSet)
  nameWithType: FrameBase.Filter<T0, T1, T2, T3, T4, T5>(ComponentSet, ComponentSet)
  fullName: Quantum.Core.FrameBase.Filter<T0, T1, T2, T3, T4, T5>(Quantum.ComponentSet, Quantum.ComponentSet)
  nameWithType.vb: FrameBase.Filter(Of T0, T1, T2, T3, T4, T5)(ComponentSet, ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.Filter(Of T0, T1, T2, T3, T4, T5)(Quantum.ComponentSet, Quantum.ComponentSet)
  name.vb: Filter(Of T0, T1, T2, T3, T4, T5)(ComponentSet, ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Filter``6(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: '>'
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Filter``6(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: )
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Filter``7(Quantum.ComponentSet,Quantum.ComponentSet)
  commentId: M:Quantum.Core.FrameBase.Filter``7(Quantum.ComponentSet,Quantum.ComponentSet)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Filter<T0, T1, T2, T3, T4, T5, T6>(ComponentSet, ComponentSet)
  nameWithType: FrameBase.Filter<T0, T1, T2, T3, T4, T5, T6>(ComponentSet, ComponentSet)
  fullName: Quantum.Core.FrameBase.Filter<T0, T1, T2, T3, T4, T5, T6>(Quantum.ComponentSet, Quantum.ComponentSet)
  nameWithType.vb: FrameBase.Filter(Of T0, T1, T2, T3, T4, T5, T6)(ComponentSet, ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.Filter(Of T0, T1, T2, T3, T4, T5, T6)(Quantum.ComponentSet, Quantum.ComponentSet)
  name.vb: Filter(Of T0, T1, T2, T3, T4, T5, T6)(ComponentSet, ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Filter``7(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: '>'
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Filter``7(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: )
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Filter``8(Quantum.ComponentSet,Quantum.ComponentSet)
  commentId: M:Quantum.Core.FrameBase.Filter``8(Quantum.ComponentSet,Quantum.ComponentSet)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Filter<T0, T1, T2, T3, T4, T5, T6, T7>(ComponentSet, ComponentSet)
  nameWithType: FrameBase.Filter<T0, T1, T2, T3, T4, T5, T6, T7>(ComponentSet, ComponentSet)
  fullName: Quantum.Core.FrameBase.Filter<T0, T1, T2, T3, T4, T5, T6, T7>(Quantum.ComponentSet, Quantum.ComponentSet)
  nameWithType.vb: FrameBase.Filter(Of T0, T1, T2, T3, T4, T5, T6, T7)(ComponentSet, ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.Filter(Of T0, T1, T2, T3, T4, T5, T6, T7)(Quantum.ComponentSet, Quantum.ComponentSet)
  name.vb: Filter(Of T0, T1, T2, T3, T4, T5, T6, T7)(ComponentSet, ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Filter``8(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: '>'
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Filter``8(Quantum.ComponentSet,Quantum.ComponentSet)
    name: Filter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: T6
  - name: ','
  - name: " "
  - name: T7
  - name: )
  - name: (
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.IsPlayerVerifiedOrLocal(Quantum.PlayerRef)
  commentId: M:Quantum.Core.FrameBase.IsPlayerVerifiedOrLocal(Quantum.PlayerRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: IsPlayerVerifiedOrLocal(PlayerRef)
  nameWithType: FrameBase.IsPlayerVerifiedOrLocal(PlayerRef)
  fullName: Quantum.Core.FrameBase.IsPlayerVerifiedOrLocal(Quantum.PlayerRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.IsPlayerVerifiedOrLocal(Quantum.PlayerRef)
    name: IsPlayerVerifiedOrLocal
    isExternal: true
  - name: (
  - uid: Quantum.PlayerRef
    name: PlayerRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.IsPlayerVerifiedOrLocal(Quantum.PlayerRef)
    name: IsPlayerVerifiedOrLocal
    isExternal: true
  - name: (
  - uid: Quantum.PlayerRef
    name: PlayerRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.GetMemoryStats
  commentId: M:Quantum.Core.FrameBase.GetMemoryStats
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: GetMemoryStats()
  nameWithType: FrameBase.GetMemoryStats()
  fullName: Quantum.Core.FrameBase.GetMemoryStats()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.GetMemoryStats
    name: GetMemoryStats
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.GetMemoryStats
    name: GetMemoryStats
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.Core.FrameBase.OnFrameSimulateBegin
  commentId: M:Quantum.Core.FrameBase.OnFrameSimulateBegin
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: OnFrameSimulateBegin()
  nameWithType: FrameBase.OnFrameSimulateBegin()
  fullName: Quantum.Core.FrameBase.OnFrameSimulateBegin()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.OnFrameSimulateBegin
    name: OnFrameSimulateBegin
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.OnFrameSimulateBegin
    name: OnFrameSimulateBegin
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.Core.FrameBase.OnFrameSimulateEnd
  commentId: M:Quantum.Core.FrameBase.OnFrameSimulateEnd
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: OnFrameSimulateEnd()
  nameWithType: FrameBase.OnFrameSimulateEnd()
  fullName: Quantum.Core.FrameBase.OnFrameSimulateEnd()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.OnFrameSimulateEnd
    name: OnFrameSimulateEnd
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.OnFrameSimulateEnd
    name: OnFrameSimulateEnd
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.Core.FrameBase.Culled(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.Culled(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Culled(EntityRef)
  nameWithType: FrameBase.Culled(EntityRef)
  fullName: Quantum.Core.FrameBase.Culled(Quantum.EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Culled(Quantum.EntityRef)
    name: Culled
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Culled(Quantum.EntityRef)
    name: Culled
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.ComponentCount``1(System.Boolean)
  commentId: M:Quantum.Core.FrameBase.ComponentCount``1(System.Boolean)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: ComponentCount<T>(bool)
  nameWithType: FrameBase.ComponentCount<T>(bool)
  fullName: Quantum.Core.FrameBase.ComponentCount<T>(bool)
  nameWithType.vb: FrameBase.ComponentCount(Of T)(Boolean)
  fullName.vb: Quantum.Core.FrameBase.ComponentCount(Of T)(Boolean)
  name.vb: ComponentCount(Of T)(Boolean)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ComponentCount``1(System.Boolean)
    name: ComponentCount
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ComponentCount``1(System.Boolean)
    name: ComponentCount
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Quantum.Core.FrameBase.ComponentCount(System.Int32,System.Boolean)
  commentId: M:Quantum.Core.FrameBase.ComponentCount(System.Int32,System.Boolean)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: ComponentCount(int, bool)
  nameWithType: FrameBase.ComponentCount(int, bool)
  fullName: Quantum.Core.FrameBase.ComponentCount(int, bool)
  nameWithType.vb: FrameBase.ComponentCount(Integer, Boolean)
  fullName.vb: Quantum.Core.FrameBase.ComponentCount(Integer, Boolean)
  name.vb: ComponentCount(Integer, Boolean)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ComponentCount(System.Int32,System.Boolean)
    name: ComponentCount
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ComponentCount(System.Int32,System.Boolean)
    name: ComponentCount
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.Add``1(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Add<T>(EntityRef)
  nameWithType: FrameBase.Add<T>(EntityRef)
  fullName: Quantum.Core.FrameBase.Add<T>(Quantum.EntityRef)
  nameWithType.vb: FrameBase.Add(Of T)(EntityRef)
  fullName.vb: Quantum.Core.FrameBase.Add(Of T)(Quantum.EntityRef)
  name.vb: Add(Of T)(EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef)
    name: Add
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef)
    name: Add
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Has(Quantum.EntityRef,Quantum.ComponentSet)
  commentId: M:Quantum.Core.FrameBase.Has(Quantum.EntityRef,Quantum.ComponentSet)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Has(EntityRef, ComponentSet)
  nameWithType: FrameBase.Has(EntityRef, ComponentSet)
  fullName: Quantum.Core.FrameBase.Has(Quantum.EntityRef, Quantum.ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Has(Quantum.EntityRef,Quantum.ComponentSet)
    name: Has
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Has(Quantum.EntityRef,Quantum.ComponentSet)
    name: Has
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.AddAsset(Quantum.AssetObject)
  commentId: M:Quantum.Core.FrameBase.AddAsset(Quantum.AssetObject)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: AddAsset(AssetObject)
  nameWithType: FrameBase.AddAsset(AssetObject)
  fullName: Quantum.Core.FrameBase.AddAsset(Quantum.AssetObject)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AddAsset(Quantum.AssetObject)
    name: AddAsset
    isExternal: true
  - name: (
  - uid: Quantum.AssetObject
    name: AssetObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AddAsset(Quantum.AssetObject)
    name: AddAsset
    isExternal: true
  - name: (
  - uid: Quantum.AssetObject
    name: AssetObject
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.ReplaceAsset(Quantum.AssetGuid,Quantum.AssetObject)
  commentId: M:Quantum.Core.FrameBase.ReplaceAsset(Quantum.AssetGuid,Quantum.AssetObject)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: ReplaceAsset(AssetGuid, AssetObject)
  nameWithType: FrameBase.ReplaceAsset(AssetGuid, AssetObject)
  fullName: Quantum.Core.FrameBase.ReplaceAsset(Quantum.AssetGuid, Quantum.AssetObject)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ReplaceAsset(Quantum.AssetGuid,Quantum.AssetObject)
    name: ReplaceAsset
    isExternal: true
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.AssetObject
    name: AssetObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ReplaceAsset(Quantum.AssetGuid,Quantum.AssetObject)
    name: ReplaceAsset
    isExternal: true
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.AssetObject
    name: AssetObject
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.LoadAsset(Quantum.AssetGuid)
  commentId: M:Quantum.Core.FrameBase.LoadAsset(Quantum.AssetGuid)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: LoadAsset(AssetGuid)
  nameWithType: FrameBase.LoadAsset(AssetGuid)
  fullName: Quantum.Core.FrameBase.LoadAsset(Quantum.AssetGuid)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.LoadAsset(Quantum.AssetGuid)
    name: LoadAsset
    isExternal: true
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.LoadAsset(Quantum.AssetGuid)
    name: LoadAsset
    isExternal: true
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.DisposeAsset(Quantum.AssetGuid)
  commentId: M:Quantum.Core.FrameBase.DisposeAsset(Quantum.AssetGuid)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: DisposeAsset(AssetGuid)
  nameWithType: FrameBase.DisposeAsset(AssetGuid)
  fullName: Quantum.Core.FrameBase.DisposeAsset(Quantum.AssetGuid)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.DisposeAsset(Quantum.AssetGuid)
    name: DisposeAsset
    isExternal: true
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.DisposeAsset(Quantum.AssetGuid)
    name: DisposeAsset
    isExternal: true
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.DisposeAsset(System.String,Quantum.DatabaseType)
  commentId: M:Quantum.Core.FrameBase.DisposeAsset(System.String,Quantum.DatabaseType)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: DisposeAsset(string, DatabaseType)
  nameWithType: FrameBase.DisposeAsset(string, DatabaseType)
  fullName: Quantum.Core.FrameBase.DisposeAsset(string, Quantum.DatabaseType)
  nameWithType.vb: FrameBase.DisposeAsset(String, DatabaseType)
  fullName.vb: Quantum.Core.FrameBase.DisposeAsset(String, Quantum.DatabaseType)
  name.vb: DisposeAsset(String, DatabaseType)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.DisposeAsset(System.String,Quantum.DatabaseType)
    name: DisposeAsset
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Quantum.DatabaseType
    name: DatabaseType
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.DisposeAsset(System.String,Quantum.DatabaseType)
    name: DisposeAsset
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Quantum.DatabaseType
    name: DatabaseType
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetGuid)
  commentId: M:Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetGuid)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: FindAsset<T>(AssetGuid)
  nameWithType: FrameBase.FindAsset<T>(AssetGuid)
  fullName: Quantum.Core.FrameBase.FindAsset<T>(Quantum.AssetGuid)
  nameWithType.vb: FrameBase.FindAsset(Of T)(AssetGuid)
  fullName.vb: Quantum.Core.FrameBase.FindAsset(Of T)(Quantum.AssetGuid)
  name.vb: FindAsset(Of T)(AssetGuid)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetGuid)
    name: FindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetGuid)
    name: FindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef)
  commentId: M:Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: FindAsset<T>(AssetRef)
  nameWithType: FrameBase.FindAsset<T>(AssetRef)
  fullName: Quantum.Core.FrameBase.FindAsset<T>(Quantum.AssetRef)
  nameWithType.vb: FrameBase.FindAsset(Of T)(AssetRef)
  fullName.vb: Quantum.Core.FrameBase.FindAsset(Of T)(Quantum.AssetRef)
  name.vb: FindAsset(Of T)(AssetRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef)
    name: FindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetRef
    name: AssetRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef)
    name: FindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetRef
    name: AssetRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef,{T}@)
  commentId: M:Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef,``0@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef,``0@)
  name: FindAsset<T>(AssetRef, out T)
  nameWithType: FrameBase.FindAsset<T>(AssetRef, out T)
  fullName: Quantum.Core.FrameBase.FindAsset<T>(Quantum.AssetRef, out T)
  nameWithType.vb: FrameBase.FindAsset(Of T)(AssetRef, T)
  fullName.vb: Quantum.Core.FrameBase.FindAsset(Of T)(Quantum.AssetRef, T)
  name.vb: FindAsset(Of T)(AssetRef, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef,``0@)
    name: FindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetRef
    name: AssetRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef,``0@)
    name: FindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetRef
    name: AssetRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef{{T}})
  commentId: M:Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef{``0})
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef{``0})
  name: FindAsset<T>(AssetRef<T>)
  nameWithType: FrameBase.FindAsset<T>(AssetRef<T>)
  fullName: Quantum.Core.FrameBase.FindAsset<T>(Quantum.AssetRef<T>)
  nameWithType.vb: FrameBase.FindAsset(Of T)(AssetRef(Of T))
  fullName.vb: Quantum.Core.FrameBase.FindAsset(Of T)(Quantum.AssetRef(Of T))
  name.vb: FindAsset(Of T)(AssetRef(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef{``0})
    name: FindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef{``0})
    name: FindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetGuid,{T}@)
  commentId: M:Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetGuid,``0@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetGuid,``0@)
  name: TryFindAsset<T>(AssetGuid, out T)
  nameWithType: FrameBase.TryFindAsset<T>(AssetGuid, out T)
  fullName: Quantum.Core.FrameBase.TryFindAsset<T>(Quantum.AssetGuid, out T)
  nameWithType.vb: FrameBase.TryFindAsset(Of T)(AssetGuid, T)
  fullName.vb: Quantum.Core.FrameBase.TryFindAsset(Of T)(Quantum.AssetGuid, T)
  name.vb: TryFindAsset(Of T)(AssetGuid, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetGuid,``0@)
    name: TryFindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetGuid,``0@)
    name: TryFindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef,{T}@)
  commentId: M:Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef,``0@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef,``0@)
  name: TryFindAsset<T>(AssetRef, out T)
  nameWithType: FrameBase.TryFindAsset<T>(AssetRef, out T)
  fullName: Quantum.Core.FrameBase.TryFindAsset<T>(Quantum.AssetRef, out T)
  nameWithType.vb: FrameBase.TryFindAsset(Of T)(AssetRef, T)
  fullName.vb: Quantum.Core.FrameBase.TryFindAsset(Of T)(Quantum.AssetRef, T)
  name.vb: TryFindAsset(Of T)(AssetRef, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef,``0@)
    name: TryFindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetRef
    name: AssetRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef,``0@)
    name: TryFindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetRef
    name: AssetRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef{{T}},{T}@)
  commentId: M:Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef{``0},``0@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef{``0},``0@)
  name: TryFindAsset<T>(AssetRef<T>, out T)
  nameWithType: FrameBase.TryFindAsset<T>(AssetRef<T>, out T)
  fullName: Quantum.Core.FrameBase.TryFindAsset<T>(Quantum.AssetRef<T>, out T)
  nameWithType.vb: FrameBase.TryFindAsset(Of T)(AssetRef(Of T), T)
  fullName.vb: Quantum.Core.FrameBase.TryFindAsset(Of T)(Quantum.AssetRef(Of T), T)
  name.vb: TryFindAsset(Of T)(AssetRef(Of T), T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef{``0},``0@)
    name: TryFindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef{``0},``0@)
    name: TryFindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.FindAsset``1(System.String,Quantum.DatabaseType)
  commentId: M:Quantum.Core.FrameBase.FindAsset``1(System.String,Quantum.DatabaseType)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FindAsset<T>(string, DatabaseType)
  nameWithType: FrameBase.FindAsset<T>(string, DatabaseType)
  fullName: Quantum.Core.FrameBase.FindAsset<T>(string, Quantum.DatabaseType)
  nameWithType.vb: FrameBase.FindAsset(Of T)(String, DatabaseType)
  fullName.vb: Quantum.Core.FrameBase.FindAsset(Of T)(String, Quantum.DatabaseType)
  name.vb: FindAsset(Of T)(String, DatabaseType)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindAsset``1(System.String,Quantum.DatabaseType)
    name: FindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Quantum.DatabaseType
    name: DatabaseType
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindAsset``1(System.String,Quantum.DatabaseType)
    name: FindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Quantum.DatabaseType
    name: DatabaseType
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.TryFindAsset``1(System.String,{T}@,Quantum.DatabaseType)
  commentId: M:Quantum.Core.FrameBase.TryFindAsset``1(System.String,``0@,Quantum.DatabaseType)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryFindAsset``1(System.String,``0@,Quantum.DatabaseType)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: TryFindAsset<T>(string, out T, DatabaseType)
  nameWithType: FrameBase.TryFindAsset<T>(string, out T, DatabaseType)
  fullName: Quantum.Core.FrameBase.TryFindAsset<T>(string, out T, Quantum.DatabaseType)
  nameWithType.vb: FrameBase.TryFindAsset(Of T)(String, T, DatabaseType)
  fullName.vb: Quantum.Core.FrameBase.TryFindAsset(Of T)(String, T, Quantum.DatabaseType)
  name.vb: TryFindAsset(Of T)(String, T, DatabaseType)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(System.String,``0@,Quantum.DatabaseType)
    name: TryFindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Quantum.DatabaseType
    name: DatabaseType
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(System.String,``0@,Quantum.DatabaseType)
    name: TryFindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Quantum.DatabaseType
    name: DatabaseType
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.FindPrototype(Quantum.EntityPrototypeRef)
  commentId: M:Quantum.Core.FrameBase.FindPrototype(Quantum.EntityPrototypeRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: FindPrototype(EntityPrototypeRef)
  nameWithType: FrameBase.FindPrototype(EntityPrototypeRef)
  fullName: Quantum.Core.FrameBase.FindPrototype(Quantum.EntityPrototypeRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindPrototype(Quantum.EntityPrototypeRef)
    name: FindPrototype
    isExternal: true
  - name: (
  - uid: Quantum.EntityPrototypeRef
    name: EntityPrototypeRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindPrototype(Quantum.EntityPrototypeRef)
    name: FindPrototype
    isExternal: true
  - name: (
  - uid: Quantum.EntityPrototypeRef
    name: EntityPrototypeRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.FindPrototype(Quantum.ComponentPrototypeRef)
  commentId: M:Quantum.Core.FrameBase.FindPrototype(Quantum.ComponentPrototypeRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: FindPrototype(ComponentPrototypeRef)
  nameWithType: FrameBase.FindPrototype(ComponentPrototypeRef)
  fullName: Quantum.Core.FrameBase.FindPrototype(Quantum.ComponentPrototypeRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindPrototype(Quantum.ComponentPrototypeRef)
    name: FindPrototype
    isExternal: true
  - name: (
  - uid: Quantum.ComponentPrototypeRef
    name: ComponentPrototypeRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindPrototype(Quantum.ComponentPrototypeRef)
    name: FindPrototype
    isExternal: true
  - name: (
  - uid: Quantum.ComponentPrototypeRef
    name: ComponentPrototypeRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.FindPrototype``1(Quantum.ComponentPrototypeRef)
  commentId: M:Quantum.Core.FrameBase.FindPrototype``1(Quantum.ComponentPrototypeRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: FindPrototype<T>(ComponentPrototypeRef)
  nameWithType: FrameBase.FindPrototype<T>(ComponentPrototypeRef)
  fullName: Quantum.Core.FrameBase.FindPrototype<T>(Quantum.ComponentPrototypeRef)
  nameWithType.vb: FrameBase.FindPrototype(Of T)(ComponentPrototypeRef)
  fullName.vb: Quantum.Core.FrameBase.FindPrototype(Of T)(Quantum.ComponentPrototypeRef)
  name.vb: FindPrototype(Of T)(ComponentPrototypeRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindPrototype``1(Quantum.ComponentPrototypeRef)
    name: FindPrototype
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.ComponentPrototypeRef
    name: ComponentPrototypeRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindPrototype``1(Quantum.ComponentPrototypeRef)
    name: FindPrototype
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.ComponentPrototypeRef
    name: ComponentPrototypeRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.FindPrototype``2({TPrototypeRef})
  commentId: M:Quantum.Core.FrameBase.FindPrototype``2(``0)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.FindPrototype``2(``0)
  name: FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef)
  nameWithType: FrameBase.FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef)
  fullName: Quantum.Core.FrameBase.FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef)
  nameWithType.vb: FrameBase.FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef)
  fullName.vb: Quantum.Core.FrameBase.FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef)
  name.vb: FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindPrototype``2(``0)
    name: FindPrototype
    isExternal: true
  - name: <
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: TPrototype
  - name: '>'
  - name: (
  - name: TPrototypeRef
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindPrototype``2(``0)
    name: FindPrototype
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: TPrototype
  - name: )
  - name: (
  - name: TPrototypeRef
  - name: )
- uid: Quantum.Core.FrameBase.FindPrototype``2({TPrototypeRef},{TPrototype}@)
  commentId: M:Quantum.Core.FrameBase.FindPrototype``2(``0,``1@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.FindPrototype``2(``0,``1@)
  name: FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef, out TPrototype)
  nameWithType: FrameBase.FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef, out TPrototype)
  fullName: Quantum.Core.FrameBase.FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef, out TPrototype)
  nameWithType.vb: FrameBase.FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef, TPrototype)
  fullName.vb: Quantum.Core.FrameBase.FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef, TPrototype)
  name.vb: FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef, TPrototype)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindPrototype``2(``0,``1@)
    name: FindPrototype
    isExternal: true
  - name: <
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: TPrototype
  - name: '>'
  - name: (
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TPrototype
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindPrototype``2(``0,``1@)
    name: FindPrototype
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: TPrototype
  - name: )
  - name: (
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: TPrototype
  - name: )
- uid: Quantum.Core.FrameBase.ClearAllNavMeshRegions
  commentId: M:Quantum.Core.FrameBase.ClearAllNavMeshRegions
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: ClearAllNavMeshRegions()
  nameWithType: FrameBase.ClearAllNavMeshRegions()
  fullName: Quantum.Core.FrameBase.ClearAllNavMeshRegions()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ClearAllNavMeshRegions
    name: ClearAllNavMeshRegions
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ClearAllNavMeshRegions
    name: ClearAllNavMeshRegions
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.Core.FrameBase.GetAllEntityRefs(System.Collections.Generic.List{Quantum.EntityRef})
  commentId: M:Quantum.Core.FrameBase.GetAllEntityRefs(System.Collections.Generic.List{Quantum.EntityRef})
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: GetAllEntityRefs(List<EntityRef>)
  nameWithType: FrameBase.GetAllEntityRefs(List<EntityRef>)
  fullName: Quantum.Core.FrameBase.GetAllEntityRefs(System.Collections.Generic.List<Quantum.EntityRef>)
  nameWithType.vb: FrameBase.GetAllEntityRefs(List(Of EntityRef))
  fullName.vb: Quantum.Core.FrameBase.GetAllEntityRefs(System.Collections.Generic.List(Of Quantum.EntityRef))
  name.vb: GetAllEntityRefs(List(Of EntityRef))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.GetAllEntityRefs(System.Collections.Generic.List{Quantum.EntityRef})
    name: GetAllEntityRefs
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.GetAllEntityRefs(System.Collections.Generic.List{Quantum.EntityRef})
    name: GetAllEntityRefs
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.ClearCulledState
  commentId: M:Quantum.Core.FrameBase.ClearCulledState
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: ClearCulledState()
  nameWithType: FrameBase.ClearCulledState()
  fullName: Quantum.Core.FrameBase.ClearCulledState()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ClearCulledState
    name: ClearCulledState
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ClearCulledState
    name: ClearCulledState
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.Core.FrameBase.Cull(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.Cull(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Cull(EntityRef)
  nameWithType: FrameBase.Cull(EntityRef)
  fullName: Quantum.Core.FrameBase.Cull(Quantum.EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Cull(Quantum.EntityRef)
    name: Cull
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Cull(Quantum.EntityRef)
    name: Cull
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.IsCulled(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.IsCulled(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: IsCulled(EntityRef)
  nameWithType: FrameBase.IsCulled(EntityRef)
  fullName: Quantum.Core.FrameBase.IsCulled(Quantum.EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.IsCulled(Quantum.EntityRef)
    name: IsCulled
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.IsCulled(Quantum.EntityRef)
    name: IsCulled
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.SetCullable(Quantum.EntityRef,System.Boolean)
  commentId: M:Quantum.Core.FrameBase.SetCullable(Quantum.EntityRef,System.Boolean)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetCullable(EntityRef, bool)
  nameWithType: FrameBase.SetCullable(EntityRef, bool)
  fullName: Quantum.Core.FrameBase.SetCullable(Quantum.EntityRef, bool)
  nameWithType.vb: FrameBase.SetCullable(EntityRef, Boolean)
  fullName.vb: Quantum.Core.FrameBase.SetCullable(Quantum.EntityRef, Boolean)
  name.vb: SetCullable(EntityRef, Boolean)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.SetCullable(Quantum.EntityRef,System.Boolean)
    name: SetCullable
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.SetCullable(Quantum.EntityRef,System.Boolean)
    name: SetCullable
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Quantum.Core.FrameBase.IsCullable(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.IsCullable(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: IsCullable(EntityRef)
  nameWithType: FrameBase.IsCullable(EntityRef)
  fullName: Quantum.Core.FrameBase.IsCullable(Quantum.EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.IsCullable(Quantum.EntityRef)
    name: IsCullable
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.IsCullable(Quantum.EntityRef)
    name: IsCullable
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Exists(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.Exists(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Exists(EntityRef)
  nameWithType: FrameBase.Exists(EntityRef)
  fullName: Quantum.Core.FrameBase.Exists(Quantum.EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Exists(Quantum.EntityRef)
    name: Exists
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Exists(Quantum.EntityRef)
    name: Exists
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.GetComponentIterator``1
  commentId: M:Quantum.Core.FrameBase.GetComponentIterator``1
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: GetComponentIterator<T>()
  nameWithType: FrameBase.GetComponentIterator<T>()
  fullName: Quantum.Core.FrameBase.GetComponentIterator<T>()
  nameWithType.vb: FrameBase.GetComponentIterator(Of T)()
  fullName.vb: Quantum.Core.FrameBase.GetComponentIterator(Of T)()
  name.vb: GetComponentIterator(Of T)()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.GetComponentIterator``1
    name: GetComponentIterator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.GetComponentIterator``1
    name: GetComponentIterator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,{T})
  commentId: M:Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0)
  name: Add<T>(EntityRef, T)
  nameWithType: FrameBase.Add<T>(EntityRef, T)
  fullName: Quantum.Core.FrameBase.Add<T>(Quantum.EntityRef, T)
  nameWithType.vb: FrameBase.Add(Of T)(EntityRef, T)
  fullName.vb: Quantum.Core.FrameBase.Add(Of T)(Quantum.EntityRef, T)
  name.vb: Add(Of T)(EntityRef, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0)
    name: Add
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0)
    name: Add
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,{T}*@)
  commentId: M:Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0*@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0*@)
  name: Add<T>(EntityRef, out T*)
  nameWithType: FrameBase.Add<T>(EntityRef, out T*)
  fullName: Quantum.Core.FrameBase.Add<T>(Quantum.EntityRef, out T*)
  nameWithType.vb: FrameBase.Add(Of T)(EntityRef, T*)
  fullName.vb: Quantum.Core.FrameBase.Add(Of T)(Quantum.EntityRef, T*)
  name.vb: Add(Of T)(EntityRef, T*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0*@)
    name: Add
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0*@)
    name: Add
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,{T},{T}*@)
  commentId: M:Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0,``0*@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0,``0*@)
  name: Add<T>(EntityRef, T, out T*)
  nameWithType: FrameBase.Add<T>(EntityRef, T, out T*)
  fullName: Quantum.Core.FrameBase.Add<T>(Quantum.EntityRef, T, out T*)
  nameWithType.vb: FrameBase.Add(Of T)(EntityRef, T, T*)
  fullName.vb: Quantum.Core.FrameBase.Add(Of T)(Quantum.EntityRef, T, T*)
  name.vb: Add(Of T)(EntityRef, T, T*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0,``0*@)
    name: Add
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0,``0*@)
    name: Add
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*)
  commentId: M:Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Add(EntityRef, int, void*)
  nameWithType: FrameBase.Add(EntityRef, int, void*)
  fullName: Quantum.Core.FrameBase.Add(Quantum.EntityRef, int, void*)
  nameWithType.vb: FrameBase.Add(EntityRef, Integer, Void*)
  fullName.vb: Quantum.Core.FrameBase.Add(Quantum.EntityRef, Integer, Void*)
  name.vb: Add(EntityRef, Integer, Void*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*)
    name: Add
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Void
    name: void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*)
    name: Add
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Void
    name: Void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*@)
  commentId: M:Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*@)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Add(EntityRef, int, out void*)
  nameWithType: FrameBase.Add(EntityRef, int, out void*)
  fullName: Quantum.Core.FrameBase.Add(Quantum.EntityRef, int, out void*)
  nameWithType.vb: FrameBase.Add(EntityRef, Integer, Void*)
  fullName.vb: Quantum.Core.FrameBase.Add(Quantum.EntityRef, Integer, Void*)
  name.vb: Add(EntityRef, Integer, Void*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*@)
    name: Add
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Void
    name: void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*@)
    name: Add
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Void
    name: Void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*,System.Void*@)
  commentId: M:Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*,System.Void*@)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Add(EntityRef, int, void*, out void*)
  nameWithType: FrameBase.Add(EntityRef, int, void*, out void*)
  fullName: Quantum.Core.FrameBase.Add(Quantum.EntityRef, int, void*, out void*)
  nameWithType.vb: FrameBase.Add(EntityRef, Integer, Void*, Void*)
  fullName.vb: Quantum.Core.FrameBase.Add(Quantum.EntityRef, Integer, Void*, Void*)
  name.vb: Add(EntityRef, Integer, Void*, Void*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*,System.Void*@)
    name: Add
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Void
    name: void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Void
    name: void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Add(Quantum.EntityRef,System.Int32,System.Void*,System.Void*@)
    name: Add
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Void
    name: Void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: ','
  - name: " "
  - uid: System.Void
    name: Void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.AddOrGet``1(Quantum.EntityRef,{T}*@)
  commentId: M:Quantum.Core.FrameBase.AddOrGet``1(Quantum.EntityRef,``0*@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.AddOrGet``1(Quantum.EntityRef,``0*@)
  name: AddOrGet<T>(EntityRef, out T*)
  nameWithType: FrameBase.AddOrGet<T>(EntityRef, out T*)
  fullName: Quantum.Core.FrameBase.AddOrGet<T>(Quantum.EntityRef, out T*)
  nameWithType.vb: FrameBase.AddOrGet(Of T)(EntityRef, T*)
  fullName.vb: Quantum.Core.FrameBase.AddOrGet(Of T)(Quantum.EntityRef, T*)
  name.vb: AddOrGet(Of T)(EntityRef, T*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AddOrGet``1(Quantum.EntityRef,``0*@)
    name: AddOrGet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AddOrGet``1(Quantum.EntityRef,``0*@)
    name: AddOrGet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.AddOrGet(Quantum.EntityRef,System.Int32,System.Void*@)
  commentId: M:Quantum.Core.FrameBase.AddOrGet(Quantum.EntityRef,System.Int32,System.Void*@)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AddOrGet(EntityRef, int, out void*)
  nameWithType: FrameBase.AddOrGet(EntityRef, int, out void*)
  fullName: Quantum.Core.FrameBase.AddOrGet(Quantum.EntityRef, int, out void*)
  nameWithType.vb: FrameBase.AddOrGet(EntityRef, Integer, Void*)
  fullName.vb: Quantum.Core.FrameBase.AddOrGet(Quantum.EntityRef, Integer, Void*)
  name.vb: AddOrGet(EntityRef, Integer, Void*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AddOrGet(Quantum.EntityRef,System.Int32,System.Void*@)
    name: AddOrGet
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Void
    name: void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AddOrGet(Quantum.EntityRef,System.Int32,System.Void*@)
    name: AddOrGet
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Void
    name: Void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.Set``1(Quantum.EntityRef,{T})
  commentId: M:Quantum.Core.FrameBase.Set``1(Quantum.EntityRef,``0)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.Set``1(Quantum.EntityRef,``0)
  name: Set<T>(EntityRef, T)
  nameWithType: FrameBase.Set<T>(EntityRef, T)
  fullName: Quantum.Core.FrameBase.Set<T>(Quantum.EntityRef, T)
  nameWithType.vb: FrameBase.Set(Of T)(EntityRef, T)
  fullName.vb: Quantum.Core.FrameBase.Set(Of T)(Quantum.EntityRef, T)
  name.vb: Set(Of T)(EntityRef, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Set``1(Quantum.EntityRef,``0)
    name: Set
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Set``1(Quantum.EntityRef,``0)
    name: Set
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,System.Int32,System.Void*)
  commentId: M:Quantum.Core.FrameBase.Set(Quantum.EntityRef,System.Int32,System.Void*)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Set(EntityRef, int, void*)
  nameWithType: FrameBase.Set(EntityRef, int, void*)
  fullName: Quantum.Core.FrameBase.Set(Quantum.EntityRef, int, void*)
  nameWithType.vb: FrameBase.Set(EntityRef, Integer, Void*)
  fullName.vb: Quantum.Core.FrameBase.Set(Quantum.EntityRef, Integer, Void*)
  name.vb: Set(EntityRef, Integer, Void*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,System.Int32,System.Void*)
    name: Set
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Void
    name: void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,System.Int32,System.Void*)
    name: Set
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Void
    name: Void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.Get``1(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.Get``1(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Get<T>(EntityRef)
  nameWithType: FrameBase.Get<T>(EntityRef)
  fullName: Quantum.Core.FrameBase.Get<T>(Quantum.EntityRef)
  nameWithType.vb: FrameBase.Get(Of T)(EntityRef)
  fullName.vb: Quantum.Core.FrameBase.Get(Of T)(Quantum.EntityRef)
  name.vb: Get(Of T)(EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Get``1(Quantum.EntityRef)
    name: Get
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Get``1(Quantum.EntityRef)
    name: Get
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Has(Quantum.EntityRef,System.Int32)
  commentId: M:Quantum.Core.FrameBase.Has(Quantum.EntityRef,System.Int32)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Has(EntityRef, int)
  nameWithType: FrameBase.Has(EntityRef, int)
  fullName: Quantum.Core.FrameBase.Has(Quantum.EntityRef, int)
  nameWithType.vb: FrameBase.Has(EntityRef, Integer)
  fullName.vb: Quantum.Core.FrameBase.Has(Quantum.EntityRef, Integer)
  name.vb: Has(EntityRef, Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Has(Quantum.EntityRef,System.Int32)
    name: Has
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Has(Quantum.EntityRef,System.Int32)
    name: Has
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.Has``1(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.Has``1(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Has<T>(EntityRef)
  nameWithType: FrameBase.Has<T>(EntityRef)
  fullName: Quantum.Core.FrameBase.Has<T>(Quantum.EntityRef)
  nameWithType.vb: FrameBase.Has(Of T)(EntityRef)
  fullName.vb: Quantum.Core.FrameBase.Has(Of T)(Quantum.EntityRef)
  name.vb: Has(Of T)(EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Has``1(Quantum.EntityRef)
    name: Has
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Has``1(Quantum.EntityRef)
    name: Has
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.TryGet``1(Quantum.EntityRef,{T}@)
  commentId: M:Quantum.Core.FrameBase.TryGet``1(Quantum.EntityRef,``0@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryGet``1(Quantum.EntityRef,``0@)
  name: TryGet<T>(EntityRef, out T)
  nameWithType: FrameBase.TryGet<T>(EntityRef, out T)
  fullName: Quantum.Core.FrameBase.TryGet<T>(Quantum.EntityRef, out T)
  nameWithType.vb: FrameBase.TryGet(Of T)(EntityRef, T)
  fullName.vb: Quantum.Core.FrameBase.TryGet(Of T)(Quantum.EntityRef, T)
  name.vb: TryGet(Of T)(EntityRef, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryGet``1(Quantum.EntityRef,``0@)
    name: TryGet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryGet``1(Quantum.EntityRef,``0@)
    name: TryGet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.Remove``1(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.Remove``1(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Remove<T>(EntityRef)
  nameWithType: FrameBase.Remove<T>(EntityRef)
  fullName: Quantum.Core.FrameBase.Remove<T>(Quantum.EntityRef)
  nameWithType.vb: FrameBase.Remove(Of T)(EntityRef)
  fullName.vb: Quantum.Core.FrameBase.Remove(Of T)(Quantum.EntityRef)
  name.vb: Remove(Of T)(EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Remove``1(Quantum.EntityRef)
    name: Remove
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Remove``1(Quantum.EntityRef)
    name: Remove
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Remove(Quantum.EntityRef,System.Type)
  commentId: M:Quantum.Core.FrameBase.Remove(Quantum.EntityRef,System.Type)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Remove(EntityRef, Type)
  nameWithType: FrameBase.Remove(EntityRef, Type)
  fullName: Quantum.Core.FrameBase.Remove(Quantum.EntityRef, System.Type)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Remove(Quantum.EntityRef,System.Type)
    name: Remove
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Remove(Quantum.EntityRef,System.Type)
    name: Remove
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Quantum.Core.FrameBase.Remove(Quantum.EntityRef,System.Int32)
  commentId: M:Quantum.Core.FrameBase.Remove(Quantum.EntityRef,System.Int32)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Remove(EntityRef, int)
  nameWithType: FrameBase.Remove(EntityRef, int)
  fullName: Quantum.Core.FrameBase.Remove(Quantum.EntityRef, int)
  nameWithType.vb: FrameBase.Remove(EntityRef, Integer)
  fullName.vb: Quantum.Core.FrameBase.Remove(Quantum.EntityRef, Integer)
  name.vb: Remove(EntityRef, Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Remove(Quantum.EntityRef,System.Int32)
    name: Remove
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Remove(Quantum.EntityRef,System.Int32)
    name: Remove
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.GetComponentSet(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.GetComponentSet(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: GetComponentSet(EntityRef)
  nameWithType: FrameBase.GetComponentSet(EntityRef)
  fullName: Quantum.Core.FrameBase.GetComponentSet(Quantum.EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.GetComponentSet(Quantum.EntityRef)
    name: GetComponentSet
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.GetComponentSet(Quantum.EntityRef)
    name: GetComponentSet
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.TryGetComponentSet(Quantum.EntityRef,Quantum.ComponentSet@)
  commentId: M:Quantum.Core.FrameBase.TryGetComponentSet(Quantum.EntityRef,Quantum.ComponentSet@)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: TryGetComponentSet(EntityRef, out ComponentSet)
  nameWithType: FrameBase.TryGetComponentSet(EntityRef, out ComponentSet)
  fullName: Quantum.Core.FrameBase.TryGetComponentSet(Quantum.EntityRef, out Quantum.ComponentSet)
  nameWithType.vb: FrameBase.TryGetComponentSet(EntityRef, ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.TryGetComponentSet(Quantum.EntityRef, Quantum.ComponentSet)
  name.vb: TryGetComponentSet(EntityRef, ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryGetComponentSet(Quantum.EntityRef,Quantum.ComponentSet@)
    name: TryGetComponentSet
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryGetComponentSet(Quantum.EntityRef,Quantum.ComponentSet@)
    name: TryGetComponentSet
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.DestroyPending(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.DestroyPending(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: DestroyPending(EntityRef)
  nameWithType: FrameBase.DestroyPending(EntityRef)
  fullName: Quantum.Core.FrameBase.DestroyPending(Quantum.EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.DestroyPending(Quantum.EntityRef)
    name: DestroyPending
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.DestroyPending(Quantum.EntityRef)
    name: DestroyPending
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Destroy(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.Destroy(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Destroy(EntityRef)
  nameWithType: FrameBase.Destroy(EntityRef)
  fullName: Quantum.Core.FrameBase.Destroy(Quantum.EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Destroy(Quantum.EntityRef)
    name: Destroy
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Destroy(Quantum.EntityRef)
    name: Destroy
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Create(Quantum.AssetRef{Quantum.EntityPrototype})
  commentId: M:Quantum.Core.FrameBase.Create(Quantum.AssetRef{Quantum.EntityPrototype})
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Create(AssetRef<EntityPrototype>)
  nameWithType: FrameBase.Create(AssetRef<EntityPrototype>)
  fullName: Quantum.Core.FrameBase.Create(Quantum.AssetRef<Quantum.EntityPrototype>)
  nameWithType.vb: FrameBase.Create(AssetRef(Of EntityPrototype))
  fullName.vb: Quantum.Core.FrameBase.Create(Quantum.AssetRef(Of Quantum.EntityPrototype))
  name.vb: Create(AssetRef(Of EntityPrototype))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Create(Quantum.AssetRef{Quantum.EntityPrototype})
    name: Create
    isExternal: true
  - name: (
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Create(Quantum.AssetRef{Quantum.EntityPrototype})
    name: Create
    isExternal: true
  - name: (
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.Create(Quantum.EntityPrototype)
  commentId: M:Quantum.Core.FrameBase.Create(Quantum.EntityPrototype)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Create(EntityPrototype)
  nameWithType: FrameBase.Create(EntityPrototype)
  fullName: Quantum.Core.FrameBase.Create(Quantum.EntityPrototype)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Create(Quantum.EntityPrototype)
    name: Create
    isExternal: true
  - name: (
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Create(Quantum.EntityPrototype)
    name: Create
    isExternal: true
  - name: (
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Create(Quantum.ComponentPrototypeSet[],Quantum.Map)
  commentId: M:Quantum.Core.FrameBase.Create(Quantum.ComponentPrototypeSet[],Quantum.Map)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Create(ComponentPrototypeSet[], Map)
  nameWithType: FrameBase.Create(ComponentPrototypeSet[], Map)
  fullName: Quantum.Core.FrameBase.Create(Quantum.ComponentPrototypeSet[], Quantum.Map)
  nameWithType.vb: FrameBase.Create(ComponentPrototypeSet(), Map)
  fullName.vb: Quantum.Core.FrameBase.Create(Quantum.ComponentPrototypeSet(), Quantum.Map)
  name.vb: Create(ComponentPrototypeSet(), Map)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Create(Quantum.ComponentPrototypeSet[],Quantum.Map)
    name: Create
    isExternal: true
  - name: (
  - uid: Quantum.ComponentPrototypeSet
    name: ComponentPrototypeSet
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Quantum.Map
    name: Map
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Create(Quantum.ComponentPrototypeSet[],Quantum.Map)
    name: Create
    isExternal: true
  - name: (
  - uid: Quantum.ComponentPrototypeSet
    name: ComponentPrototypeSet
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.Map
    name: Map
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.AssetRef{Quantum.EntityPrototype})
  commentId: M:Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.AssetRef{Quantum.EntityPrototype})
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Set(EntityRef, AssetRef<EntityPrototype>)
  nameWithType: FrameBase.Set(EntityRef, AssetRef<EntityPrototype>)
  fullName: Quantum.Core.FrameBase.Set(Quantum.EntityRef, Quantum.AssetRef<Quantum.EntityPrototype>)
  nameWithType.vb: FrameBase.Set(EntityRef, AssetRef(Of EntityPrototype))
  fullName.vb: Quantum.Core.FrameBase.Set(Quantum.EntityRef, Quantum.AssetRef(Of Quantum.EntityPrototype))
  name.vb: Set(EntityRef, AssetRef(Of EntityPrototype))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.AssetRef{Quantum.EntityPrototype})
    name: Set
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.AssetRef{Quantum.EntityPrototype})
    name: Set
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.EntityPrototype)
  commentId: M:Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.EntityPrototype)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Set(EntityRef, EntityPrototype)
  nameWithType: FrameBase.Set(EntityRef, EntityPrototype)
  fullName: Quantum.Core.FrameBase.Set(Quantum.EntityRef, Quantum.EntityPrototype)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.EntityPrototype)
    name: Set
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.EntityPrototype)
    name: Set
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.AssetRef{Quantum.EntityPrototype},Quantum.ComponentSet@)
  commentId: M:Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.AssetRef{Quantum.EntityPrototype},Quantum.ComponentSet@)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Set(EntityRef, AssetRef<EntityPrototype>, out ComponentSet)
  nameWithType: FrameBase.Set(EntityRef, AssetRef<EntityPrototype>, out ComponentSet)
  fullName: Quantum.Core.FrameBase.Set(Quantum.EntityRef, Quantum.AssetRef<Quantum.EntityPrototype>, out Quantum.ComponentSet)
  nameWithType.vb: FrameBase.Set(EntityRef, AssetRef(Of EntityPrototype), ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.Set(Quantum.EntityRef, Quantum.AssetRef(Of Quantum.EntityPrototype), Quantum.ComponentSet)
  name.vb: Set(EntityRef, AssetRef(Of EntityPrototype), ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.AssetRef{Quantum.EntityPrototype},Quantum.ComponentSet@)
    name: Set
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.AssetRef{Quantum.EntityPrototype},Quantum.ComponentSet@)
    name: Set
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.EntityPrototype,Quantum.ComponentSet@)
  commentId: M:Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.EntityPrototype,Quantum.ComponentSet@)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Set(EntityRef, EntityPrototype, out ComponentSet)
  nameWithType: FrameBase.Set(EntityRef, EntityPrototype, out ComponentSet)
  fullName: Quantum.Core.FrameBase.Set(Quantum.EntityRef, Quantum.EntityPrototype, out Quantum.ComponentSet)
  nameWithType.vb: FrameBase.Set(EntityRef, EntityPrototype, ComponentSet)
  fullName.vb: Quantum.Core.FrameBase.Set(Quantum.EntityRef, Quantum.EntityPrototype, Quantum.ComponentSet)
  name.vb: Set(EntityRef, EntityPrototype, ComponentSet)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.EntityPrototype,Quantum.ComponentSet@)
    name: Set
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Set(Quantum.EntityRef,Quantum.EntityPrototype,Quantum.ComponentSet@)
    name: Set
    isExternal: true
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.EntityPrototype
    name: EntityPrototype
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.ComponentSet
    name: ComponentSet
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Create
  commentId: M:Quantum.Core.FrameBase.Create
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Create()
  nameWithType: FrameBase.Create()
  fullName: Quantum.Core.FrameBase.Create()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Create
    name: Create
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Create
    name: Create
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.Core.FrameBase.GetSingleton``1
  commentId: M:Quantum.Core.FrameBase.GetSingleton``1
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: GetSingleton<T>()
  nameWithType: FrameBase.GetSingleton<T>()
  fullName: Quantum.Core.FrameBase.GetSingleton<T>()
  nameWithType.vb: FrameBase.GetSingleton(Of T)()
  fullName.vb: Quantum.Core.FrameBase.GetSingleton(Of T)()
  name.vb: GetSingleton(Of T)()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.GetSingleton``1
    name: GetSingleton
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.GetSingleton``1
    name: GetSingleton
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Quantum.Core.FrameBase.GetSingletonEntityRef``1
  commentId: M:Quantum.Core.FrameBase.GetSingletonEntityRef``1
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: GetSingletonEntityRef<T>()
  nameWithType: FrameBase.GetSingletonEntityRef<T>()
  fullName: Quantum.Core.FrameBase.GetSingletonEntityRef<T>()
  nameWithType.vb: FrameBase.GetSingletonEntityRef(Of T)()
  fullName.vb: Quantum.Core.FrameBase.GetSingletonEntityRef(Of T)()
  name.vb: GetSingletonEntityRef(Of T)()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.GetSingletonEntityRef``1
    name: GetSingletonEntityRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.GetSingletonEntityRef``1
    name: GetSingletonEntityRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Quantum.Core.FrameBase.GetSingletonEntityRef(System.Int32)
  commentId: M:Quantum.Core.FrameBase.GetSingletonEntityRef(System.Int32)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetSingletonEntityRef(int)
  nameWithType: FrameBase.GetSingletonEntityRef(int)
  fullName: Quantum.Core.FrameBase.GetSingletonEntityRef(int)
  nameWithType.vb: FrameBase.GetSingletonEntityRef(Integer)
  fullName.vb: Quantum.Core.FrameBase.GetSingletonEntityRef(Integer)
  name.vb: GetSingletonEntityRef(Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.GetSingletonEntityRef(System.Int32)
    name: GetSingletonEntityRef
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.GetSingletonEntityRef(System.Int32)
    name: GetSingletonEntityRef
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.SetSingleton``1({T},Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.SetSingleton``1(``0,Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.SetSingleton``1(``0,Quantum.EntityRef)
  name: SetSingleton<T>(T, EntityRef)
  nameWithType: FrameBase.SetSingleton<T>(T, EntityRef)
  fullName: Quantum.Core.FrameBase.SetSingleton<T>(T, Quantum.EntityRef)
  nameWithType.vb: FrameBase.SetSingleton(Of T)(T, EntityRef)
  fullName.vb: Quantum.Core.FrameBase.SetSingleton(Of T)(T, Quantum.EntityRef)
  name.vb: SetSingleton(Of T)(T, EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.SetSingleton``1(``0,Quantum.EntityRef)
    name: SetSingleton
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.SetSingleton``1(``0,Quantum.EntityRef)
    name: SetSingleton
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.SetSingleton(System.Int32,System.Void*,Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.SetSingleton(System.Int32,System.Void*,Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SetSingleton(int, void*, EntityRef)
  nameWithType: FrameBase.SetSingleton(int, void*, EntityRef)
  fullName: Quantum.Core.FrameBase.SetSingleton(int, void*, Quantum.EntityRef)
  nameWithType.vb: FrameBase.SetSingleton(Integer, Void*, EntityRef)
  fullName.vb: Quantum.Core.FrameBase.SetSingleton(Integer, Void*, Quantum.EntityRef)
  name.vb: SetSingleton(Integer, Void*, EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.SetSingleton(System.Int32,System.Void*,Quantum.EntityRef)
    name: SetSingleton
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Void
    name: void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.SetSingleton(System.Int32,System.Void*,Quantum.EntityRef)
    name: SetSingleton
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Void
    name: Void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.RemoveSingleton``1
  commentId: M:Quantum.Core.FrameBase.RemoveSingleton``1
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: RemoveSingleton<T>()
  nameWithType: FrameBase.RemoveSingleton<T>()
  fullName: Quantum.Core.FrameBase.RemoveSingleton<T>()
  nameWithType.vb: FrameBase.RemoveSingleton(Of T)()
  fullName.vb: Quantum.Core.FrameBase.RemoveSingleton(Of T)()
  name.vb: RemoveSingleton(Of T)()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.RemoveSingleton``1
    name: RemoveSingleton
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.RemoveSingleton``1
    name: RemoveSingleton
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Quantum.Core.FrameBase.RemoveSingleton(System.Type)
  commentId: M:Quantum.Core.FrameBase.RemoveSingleton(System.Type)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: RemoveSingleton(Type)
  nameWithType: FrameBase.RemoveSingleton(Type)
  fullName: Quantum.Core.FrameBase.RemoveSingleton(System.Type)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.RemoveSingleton(System.Type)
    name: RemoveSingleton
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.RemoveSingleton(System.Type)
    name: RemoveSingleton
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Quantum.Core.FrameBase.RemoveSingleton(System.Int32)
  commentId: M:Quantum.Core.FrameBase.RemoveSingleton(System.Int32)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: RemoveSingleton(int)
  nameWithType: FrameBase.RemoveSingleton(int)
  fullName: Quantum.Core.FrameBase.RemoveSingleton(int)
  nameWithType.vb: FrameBase.RemoveSingleton(Integer)
  fullName.vb: Quantum.Core.FrameBase.RemoveSingleton(Integer)
  name.vb: RemoveSingleton(Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.RemoveSingleton(System.Int32)
    name: RemoveSingleton
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.RemoveSingleton(System.Int32)
    name: RemoveSingleton
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.TryGetSingletonEntityRef``1(Quantum.EntityRef@)
  commentId: M:Quantum.Core.FrameBase.TryGetSingletonEntityRef``1(Quantum.EntityRef@)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: TryGetSingletonEntityRef<T>(out EntityRef)
  nameWithType: FrameBase.TryGetSingletonEntityRef<T>(out EntityRef)
  fullName: Quantum.Core.FrameBase.TryGetSingletonEntityRef<T>(out Quantum.EntityRef)
  nameWithType.vb: FrameBase.TryGetSingletonEntityRef(Of T)(EntityRef)
  fullName.vb: Quantum.Core.FrameBase.TryGetSingletonEntityRef(Of T)(Quantum.EntityRef)
  name.vb: TryGetSingletonEntityRef(Of T)(EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryGetSingletonEntityRef``1(Quantum.EntityRef@)
    name: TryGetSingletonEntityRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryGetSingletonEntityRef``1(Quantum.EntityRef@)
    name: TryGetSingletonEntityRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.TryGetSingletonEntityRef(System.Int32,Quantum.EntityRef@)
  commentId: M:Quantum.Core.FrameBase.TryGetSingletonEntityRef(System.Int32,Quantum.EntityRef@)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TryGetSingletonEntityRef(int, out EntityRef)
  nameWithType: FrameBase.TryGetSingletonEntityRef(int, out EntityRef)
  fullName: Quantum.Core.FrameBase.TryGetSingletonEntityRef(int, out Quantum.EntityRef)
  nameWithType.vb: FrameBase.TryGetSingletonEntityRef(Integer, EntityRef)
  fullName.vb: Quantum.Core.FrameBase.TryGetSingletonEntityRef(Integer, Quantum.EntityRef)
  name.vb: TryGetSingletonEntityRef(Integer, EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryGetSingletonEntityRef(System.Int32,Quantum.EntityRef@)
    name: TryGetSingletonEntityRef
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryGetSingletonEntityRef(System.Int32,Quantum.EntityRef@)
    name: TryGetSingletonEntityRef
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.TryGetSingleton``1({T}@)
  commentId: M:Quantum.Core.FrameBase.TryGetSingleton``1(``0@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryGetSingleton``1(``0@)
  name: TryGetSingleton<T>(out T)
  nameWithType: FrameBase.TryGetSingleton<T>(out T)
  fullName: Quantum.Core.FrameBase.TryGetSingleton<T>(out T)
  nameWithType.vb: FrameBase.TryGetSingleton(Of T)(T)
  fullName.vb: Quantum.Core.FrameBase.TryGetSingleton(Of T)(T)
  name.vb: TryGetSingleton(Of T)(T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryGetSingleton``1(``0@)
    name: TryGetSingleton
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryGetSingleton``1(``0@)
    name: TryGetSingleton
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.GetOrAddSingleton``1(Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.GetOrAddSingleton``1(Quantum.EntityRef)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: GetOrAddSingleton<T>(EntityRef)
  nameWithType: FrameBase.GetOrAddSingleton<T>(EntityRef)
  fullName: Quantum.Core.FrameBase.GetOrAddSingleton<T>(Quantum.EntityRef)
  nameWithType.vb: FrameBase.GetOrAddSingleton(Of T)(EntityRef)
  fullName.vb: Quantum.Core.FrameBase.GetOrAddSingleton(Of T)(Quantum.EntityRef)
  name.vb: GetOrAddSingleton(Of T)(EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.GetOrAddSingleton``1(Quantum.EntityRef)
    name: GetOrAddSingleton
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.GetOrAddSingleton``1(Quantum.EntityRef)
    name: GetOrAddSingleton
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{{T}})
  commentId: M:Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0})
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0})
  name: FreeList<T>(QListPtr<T>)
  nameWithType: FrameBase.FreeList<T>(QListPtr<T>)
  fullName: Quantum.Core.FrameBase.FreeList<T>(Quantum.Collections.QListPtr<T>)
  nameWithType.vb: FrameBase.FreeList(Of T)(QListPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.FreeList(Of T)(Quantum.Collections.QListPtr(Of T))
  name.vb: FreeList(Of T)(QListPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0})
    name: FreeList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0})
    name: FreeList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{{T}}@)
  commentId: M:Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0}@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0}@)
  name: FreeList<T>(ref QListPtr<T>)
  nameWithType: FrameBase.FreeList<T>(ref QListPtr<T>)
  fullName: Quantum.Core.FrameBase.FreeList<T>(ref Quantum.Collections.QListPtr<T>)
  nameWithType.vb: FrameBase.FreeList(Of T)(QListPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.FreeList(Of T)(Quantum.Collections.QListPtr(Of T))
  name.vb: FreeList(Of T)(QListPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0}@)
    name: FreeList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0}@)
    name: FreeList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{{T}})
  commentId: M:Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0})
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0})
  name: TryFreeList<T>(QListPtr<T>)
  nameWithType: FrameBase.TryFreeList<T>(QListPtr<T>)
  fullName: Quantum.Core.FrameBase.TryFreeList<T>(Quantum.Collections.QListPtr<T>)
  nameWithType.vb: FrameBase.TryFreeList(Of T)(QListPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryFreeList(Of T)(Quantum.Collections.QListPtr(Of T))
  name.vb: TryFreeList(Of T)(QListPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0})
    name: TryFreeList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0})
    name: TryFreeList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{{T}}@)
  commentId: M:Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0}@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0}@)
  name: TryFreeList<T>(ref QListPtr<T>)
  nameWithType: FrameBase.TryFreeList<T>(ref QListPtr<T>)
  fullName: Quantum.Core.FrameBase.TryFreeList<T>(ref Quantum.Collections.QListPtr<T>)
  nameWithType.vb: FrameBase.TryFreeList(Of T)(QListPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryFreeList(Of T)(Quantum.Collections.QListPtr(Of T))
  name.vb: TryFreeList(Of T)(QListPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0}@)
    name: TryFreeList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0}@)
    name: TryFreeList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.ResolveList``1(Quantum.Collections.QListPtr{{T}})
  commentId: M:Quantum.Core.FrameBase.ResolveList``1(Quantum.Collections.QListPtr{``0})
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.ResolveList``1(Quantum.Collections.QListPtr{``0})
  name: ResolveList<T>(QListPtr<T>)
  nameWithType: FrameBase.ResolveList<T>(QListPtr<T>)
  fullName: Quantum.Core.FrameBase.ResolveList<T>(Quantum.Collections.QListPtr<T>)
  nameWithType.vb: FrameBase.ResolveList(Of T)(QListPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.ResolveList(Of T)(Quantum.Collections.QListPtr(Of T))
  name.vb: ResolveList(Of T)(QListPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ResolveList``1(Quantum.Collections.QListPtr{``0})
    name: ResolveList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ResolveList``1(Quantum.Collections.QListPtr{``0})
    name: ResolveList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryResolveList``1(Quantum.Collections.QListPtr{{T}},Quantum.Collections.QList{{T}}@)
  commentId: M:Quantum.Core.FrameBase.TryResolveList``1(Quantum.Collections.QListPtr{``0},Quantum.Collections.QList{``0}@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryResolveList``1(Quantum.Collections.QListPtr{``0},Quantum.Collections.QList{``0}@)
  name: TryResolveList<T>(QListPtr<T>, out QList<T>)
  nameWithType: FrameBase.TryResolveList<T>(QListPtr<T>, out QList<T>)
  fullName: Quantum.Core.FrameBase.TryResolveList<T>(Quantum.Collections.QListPtr<T>, out Quantum.Collections.QList<T>)
  nameWithType.vb: FrameBase.TryResolveList(Of T)(QListPtr(Of T), QList(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryResolveList(Of T)(Quantum.Collections.QListPtr(Of T), Quantum.Collections.QList(Of T))
  name.vb: TryResolveList(Of T)(QListPtr(Of T), QList(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryResolveList``1(Quantum.Collections.QListPtr{``0},Quantum.Collections.QList{``0}@)
    name: TryResolveList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.Collections.QList`1
    name: QList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryResolveList``1(Quantum.Collections.QListPtr{``0},Quantum.Collections.QList{``0}@)
    name: TryResolveList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.Collections.QList`1
    name: QList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.AllocateList``1(System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateList``1(System.Int32)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateList<T>(int)
  nameWithType: FrameBase.AllocateList<T>(int)
  fullName: Quantum.Core.FrameBase.AllocateList<T>(int)
  nameWithType.vb: FrameBase.AllocateList(Of T)(Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateList(Of T)(Integer)
  name.vb: AllocateList(Of T)(Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateList``1(System.Int32)
    name: AllocateList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateList``1(System.Int32)
    name: AllocateList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{{T}},System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0},System.Int32)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0},System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateList<T>(QListPtr<T>, int)
  nameWithType: FrameBase.AllocateList<T>(QListPtr<T>, int)
  fullName: Quantum.Core.FrameBase.AllocateList<T>(Quantum.Collections.QListPtr<T>, int)
  nameWithType.vb: FrameBase.AllocateList(Of T)(QListPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateList(Of T)(Quantum.Collections.QListPtr(Of T), Integer)
  name.vb: AllocateList(Of T)(QListPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0},System.Int32)
    name: AllocateList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0},System.Int32)
    name: AllocateList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{{T}}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateList<T>(out QListPtr<T>, int)
  nameWithType: FrameBase.AllocateList<T>(out QListPtr<T>, int)
  fullName: Quantum.Core.FrameBase.AllocateList<T>(out Quantum.Collections.QListPtr<T>, int)
  nameWithType.vb: FrameBase.AllocateList(Of T)(QListPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateList(Of T)(Quantum.Collections.QListPtr(Of T), Integer)
  name.vb: AllocateList(Of T)(QListPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
    name: AllocateList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
    name: AllocateList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.TryAllocateList``1(Quantum.Collections.QListPtr{{T}}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.TryAllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryAllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TryAllocateList<T>(ref QListPtr<T>, int)
  nameWithType: FrameBase.TryAllocateList<T>(ref QListPtr<T>, int)
  fullName: Quantum.Core.FrameBase.TryAllocateList<T>(ref Quantum.Collections.QListPtr<T>, int)
  nameWithType.vb: FrameBase.TryAllocateList(Of T)(QListPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.TryAllocateList(Of T)(Quantum.Collections.QListPtr(Of T), Integer)
  name.vb: TryAllocateList(Of T)(QListPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryAllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
    name: TryAllocateList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryAllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
    name: TryAllocateList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{{T}})
  commentId: M:Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  name: FreeHashSet<T>(QHashSetPtr<T>)
  nameWithType: FrameBase.FreeHashSet<T>(QHashSetPtr<T>)
  fullName: Quantum.Core.FrameBase.FreeHashSet<T>(Quantum.Collections.QHashSetPtr<T>)
  nameWithType.vb: FrameBase.FreeHashSet(Of T)(QHashSetPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.FreeHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T))
  name.vb: FreeHashSet(Of T)(QHashSetPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: FreeHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: FreeHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{{T}}@)
  commentId: M:Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
  name: FreeHashSet<T>(ref QHashSetPtr<T>)
  nameWithType: FrameBase.FreeHashSet<T>(ref QHashSetPtr<T>)
  fullName: Quantum.Core.FrameBase.FreeHashSet<T>(ref Quantum.Collections.QHashSetPtr<T>)
  nameWithType.vb: FrameBase.FreeHashSet(Of T)(QHashSetPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.FreeHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T))
  name.vb: FreeHashSet(Of T)(QHashSetPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
    name: FreeHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
    name: FreeHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{{T}})
  commentId: M:Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  name: TryFreeHashSet<T>(QHashSetPtr<T>)
  nameWithType: FrameBase.TryFreeHashSet<T>(QHashSetPtr<T>)
  fullName: Quantum.Core.FrameBase.TryFreeHashSet<T>(Quantum.Collections.QHashSetPtr<T>)
  nameWithType.vb: FrameBase.TryFreeHashSet(Of T)(QHashSetPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryFreeHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T))
  name.vb: TryFreeHashSet(Of T)(QHashSetPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: TryFreeHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: TryFreeHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{{T}}@)
  commentId: M:Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
  name: TryFreeHashSet<T>(ref QHashSetPtr<T>)
  nameWithType: FrameBase.TryFreeHashSet<T>(ref QHashSetPtr<T>)
  fullName: Quantum.Core.FrameBase.TryFreeHashSet<T>(ref Quantum.Collections.QHashSetPtr<T>)
  nameWithType.vb: FrameBase.TryFreeHashSet(Of T)(QHashSetPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryFreeHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T))
  name.vb: TryFreeHashSet(Of T)(QHashSetPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
    name: TryFreeHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
    name: TryFreeHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.ResolveHashSet``1(Quantum.Collections.QHashSetPtr{{T}})
  commentId: M:Quantum.Core.FrameBase.ResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.ResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  name: ResolveHashSet<T>(QHashSetPtr<T>)
  nameWithType: FrameBase.ResolveHashSet<T>(QHashSetPtr<T>)
  fullName: Quantum.Core.FrameBase.ResolveHashSet<T>(Quantum.Collections.QHashSetPtr<T>)
  nameWithType.vb: FrameBase.ResolveHashSet(Of T)(QHashSetPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.ResolveHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T))
  name.vb: ResolveHashSet(Of T)(QHashSetPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: ResolveHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: ResolveHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryResolveHashSet``1(Quantum.Collections.QHashSetPtr{{T}},Quantum.Collections.QHashSet{{T}}@)
  commentId: M:Quantum.Core.FrameBase.TryResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0},Quantum.Collections.QHashSet{``0}@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0},Quantum.Collections.QHashSet{``0}@)
  name: TryResolveHashSet<T>(QHashSetPtr<T>, out QHashSet<T>)
  nameWithType: FrameBase.TryResolveHashSet<T>(QHashSetPtr<T>, out QHashSet<T>)
  fullName: Quantum.Core.FrameBase.TryResolveHashSet<T>(Quantum.Collections.QHashSetPtr<T>, out Quantum.Collections.QHashSet<T>)
  nameWithType.vb: FrameBase.TryResolveHashSet(Of T)(QHashSetPtr(Of T), QHashSet(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryResolveHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T), Quantum.Collections.QHashSet(Of T))
  name.vb: TryResolveHashSet(Of T)(QHashSetPtr(Of T), QHashSet(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0},Quantum.Collections.QHashSet{``0}@)
    name: TryResolveHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.Collections.QHashSet`1
    name: QHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0},Quantum.Collections.QHashSet{``0}@)
    name: TryResolveHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.Collections.QHashSet`1
    name: QHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.AllocateHashSet``1(System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateHashSet``1(System.Int32)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateHashSet<T>(int)
  nameWithType: FrameBase.AllocateHashSet<T>(int)
  fullName: Quantum.Core.FrameBase.AllocateHashSet<T>(int)
  nameWithType.vb: FrameBase.AllocateHashSet(Of T)(Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateHashSet(Of T)(Integer)
  name.vb: AllocateHashSet(Of T)(Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateHashSet``1(System.Int32)
    name: AllocateHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateHashSet``1(System.Int32)
    name: AllocateHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{{T}},System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0},System.Int32)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0},System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateHashSet<T>(QHashSetPtr<T>, int)
  nameWithType: FrameBase.AllocateHashSet<T>(QHashSetPtr<T>, int)
  fullName: Quantum.Core.FrameBase.AllocateHashSet<T>(Quantum.Collections.QHashSetPtr<T>, int)
  nameWithType.vb: FrameBase.AllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T), Integer)
  name.vb: AllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0},System.Int32)
    name: AllocateHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0},System.Int32)
    name: AllocateHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{{T}}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateHashSet<T>(out QHashSetPtr<T>, int)
  nameWithType: FrameBase.AllocateHashSet<T>(out QHashSetPtr<T>, int)
  fullName: Quantum.Core.FrameBase.AllocateHashSet<T>(out Quantum.Collections.QHashSetPtr<T>, int)
  nameWithType.vb: FrameBase.AllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T), Integer)
  name.vb: AllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
    name: AllocateHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
    name: AllocateHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.TryAllocateHashSet``1(Quantum.Collections.QHashSetPtr{{T}}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.TryAllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryAllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TryAllocateHashSet<T>(ref QHashSetPtr<T>, int)
  nameWithType: FrameBase.TryAllocateHashSet<T>(ref QHashSetPtr<T>, int)
  fullName: Quantum.Core.FrameBase.TryAllocateHashSet<T>(ref Quantum.Collections.QHashSetPtr<T>, int)
  nameWithType.vb: FrameBase.TryAllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.TryAllocateHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T), Integer)
  name.vb: TryAllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryAllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
    name: TryAllocateHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryAllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
    name: TryAllocateHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}})
  commentId: M:Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  name: FreeDictionary<K, V>(QDictionaryPtr<K, V>)
  nameWithType: FrameBase.FreeDictionary<K, V>(QDictionaryPtr<K, V>)
  fullName: Quantum.Core.FrameBase.FreeDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>)
  nameWithType.vb: FrameBase.FreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.FreeDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V))
  name.vb: FreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: FreeDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: FreeDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@)
  commentId: M:Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
  name: FreeDictionary<K, V>(ref QDictionaryPtr<K, V>)
  nameWithType: FrameBase.FreeDictionary<K, V>(ref QDictionaryPtr<K, V>)
  fullName: Quantum.Core.FrameBase.FreeDictionary<K, V>(ref Quantum.Collections.QDictionaryPtr<K, V>)
  nameWithType.vb: FrameBase.FreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.FreeDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V))
  name.vb: FreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
    name: FreeDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
    name: FreeDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}})
  commentId: M:Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  name: TryFreeDictionary<K, V>(QDictionaryPtr<K, V>)
  nameWithType: FrameBase.TryFreeDictionary<K, V>(QDictionaryPtr<K, V>)
  fullName: Quantum.Core.FrameBase.TryFreeDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>)
  nameWithType.vb: FrameBase.TryFreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.TryFreeDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V))
  name.vb: TryFreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: TryFreeDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: TryFreeDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@)
  commentId: M:Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
  name: TryFreeDictionary<K, V>(ref QDictionaryPtr<K, V>)
  nameWithType: FrameBase.TryFreeDictionary<K, V>(ref QDictionaryPtr<K, V>)
  fullName: Quantum.Core.FrameBase.TryFreeDictionary<K, V>(ref Quantum.Collections.QDictionaryPtr<K, V>)
  nameWithType.vb: FrameBase.TryFreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.TryFreeDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V))
  name.vb: TryFreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
    name: TryFreeDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
    name: TryFreeDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}})
  commentId: M:Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  name: ResolveDictionary<K, V>(QDictionaryPtr<K, V>)
  nameWithType: FrameBase.ResolveDictionary<K, V>(QDictionaryPtr<K, V>)
  fullName: Quantum.Core.FrameBase.ResolveDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>)
  nameWithType.vb: FrameBase.ResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.ResolveDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V))
  name.vb: ResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: ResolveDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: ResolveDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}},Quantum.Collections.QDictionary{{K},{V}}@)
  commentId: M:Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QDictionary{``0,``1}@)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QDictionary{``0,``1}@)
  name: TryResolveDictionary<K, V>(QDictionaryPtr<K, V>, out QDictionary<K, V>)
  nameWithType: FrameBase.TryResolveDictionary<K, V>(QDictionaryPtr<K, V>, out QDictionary<K, V>)
  fullName: Quantum.Core.FrameBase.TryResolveDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>, out Quantum.Collections.QDictionary<K, V>)
  nameWithType.vb: FrameBase.TryResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), QDictionary(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.TryResolveDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Quantum.Collections.QDictionary(Of K, V))
  name.vb: TryResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), QDictionary(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QDictionary{``0,``1}@)
    name: TryResolveDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.Collections.QDictionary`2
    name: QDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QDictionary{``0,``1}@)
    name: TryResolveDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.Collections.QDictionary`2
    name: QDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.AllocateDictionary``2(System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateDictionary``2(System.Int32)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateDictionary<K, V>(int)
  nameWithType: FrameBase.AllocateDictionary<K, V>(int)
  fullName: Quantum.Core.FrameBase.AllocateDictionary<K, V>(int)
  nameWithType.vb: FrameBase.AllocateDictionary(Of K, V)(Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateDictionary(Of K, V)(Integer)
  name.vb: AllocateDictionary(Of K, V)(Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(System.Int32)
    name: AllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(System.Int32)
    name: AllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}},System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateDictionary<K, V>(QDictionaryPtr<K, V>, int)
  nameWithType: FrameBase.AllocateDictionary<K, V>(QDictionaryPtr<K, V>, int)
  fullName: Quantum.Core.FrameBase.AllocateDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>, int)
  nameWithType.vb: FrameBase.AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer)
  name.vb: AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32)
    name: AllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32)
    name: AllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateDictionary<K, V>(out QDictionaryPtr<K, V>, int)
  nameWithType: FrameBase.AllocateDictionary<K, V>(out QDictionaryPtr<K, V>, int)
  fullName: Quantum.Core.FrameBase.AllocateDictionary<K, V>(out Quantum.Collections.QDictionaryPtr<K, V>, int)
  nameWithType.vb: FrameBase.AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer)
  name.vb: AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
    name: AllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
    name: AllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TryAllocateDictionary<K, V>(ref QDictionaryPtr<K, V>, int)
  nameWithType: FrameBase.TryAllocateDictionary<K, V>(ref QDictionaryPtr<K, V>, int)
  fullName: Quantum.Core.FrameBase.TryAllocateDictionary<K, V>(ref Quantum.Collections.QDictionaryPtr<K, V>, int)
  nameWithType.vb: FrameBase.TryAllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  fullName.vb: Quantum.Core.FrameBase.TryAllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer)
  name.vb: TryAllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
    name: TryAllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
    name: TryAllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}},Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.EnumEqualityComparer.Tag)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.EnumEqualityComparer.Tag)
  name: ResolveDictionary<K, V>(QDictionaryPtr<K, V>, Tag)
  nameWithType: FrameBase.ResolveDictionary<K, V>(QDictionaryPtr<K, V>, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.ResolveDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.ResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.ResolveDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Quantum.EnumEqualityComparer.Tag)
  name.vb: ResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.EnumEqualityComparer.Tag)
    name: ResolveDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.EnumEqualityComparer.Tag)
    name: ResolveDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}},Quantum.Collections.QEnumDictionary{{K},{V}}@,Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QEnumDictionary{``0,``1}@,Quantum.EnumEqualityComparer.Tag)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QEnumDictionary{``0,``1}@,Quantum.EnumEqualityComparer.Tag)
  name: TryResolveDictionary<K, V>(QDictionaryPtr<K, V>, out QEnumDictionary<K, V>, Tag)
  nameWithType: FrameBase.TryResolveDictionary<K, V>(QDictionaryPtr<K, V>, out QEnumDictionary<K, V>, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.TryResolveDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>, out Quantum.Collections.QEnumDictionary<K, V>, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.TryResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), QEnumDictionary(Of K, V), EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.TryResolveDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Quantum.Collections.QEnumDictionary(Of K, V), Quantum.EnumEqualityComparer.Tag)
  name.vb: TryResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), QEnumDictionary(Of K, V), Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QEnumDictionary{``0,``1}@,Quantum.EnumEqualityComparer.Tag)
    name: TryResolveDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.Collections.QEnumDictionary`2
    name: QEnumDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QEnumDictionary{``0,``1}@,Quantum.EnumEqualityComparer.Tag)
    name: TryResolveDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.Collections.QEnumDictionary`2
    name: QEnumDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.AllocateDictionary``2(System.Int32,Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.AllocateDictionary``2(System.Int32,Quantum.EnumEqualityComparer.Tag)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateDictionary<K, V>(int, Tag)
  nameWithType: FrameBase.AllocateDictionary<K, V>(int, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.AllocateDictionary<K, V>(int, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.AllocateDictionary(Of K, V)(Integer, EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.AllocateDictionary(Of K, V)(Integer, Quantum.EnumEqualityComparer.Tag)
  name.vb: AllocateDictionary(Of K, V)(Integer, Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: AllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: AllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}},System.Int32,Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32,Quantum.EnumEqualityComparer.Tag)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32,Quantum.EnumEqualityComparer.Tag)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateDictionary<K, V>(QDictionaryPtr<K, V>, int, Tag)
  nameWithType: FrameBase.AllocateDictionary<K, V>(QDictionaryPtr<K, V>, int, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.AllocateDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>, int, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.AllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer, Quantum.EnumEqualityComparer.Tag)
  name.vb: AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: AllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: AllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateDictionary<K, V>(out QDictionaryPtr<K, V>, int, Tag)
  nameWithType: FrameBase.AllocateDictionary<K, V>(out QDictionaryPtr<K, V>, int, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.AllocateDictionary<K, V>(out Quantum.Collections.QDictionaryPtr<K, V>, int, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.AllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer, Quantum.EnumEqualityComparer.Tag)
  name.vb: AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: AllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: AllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{{K},{V}}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  parent: Quantum.Core.FrameBase
  definition: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TryAllocateDictionary<K, V>(ref QDictionaryPtr<K, V>, int, Tag)
  nameWithType: FrameBase.TryAllocateDictionary<K, V>(ref QDictionaryPtr<K, V>, int, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.TryAllocateDictionary<K, V>(ref Quantum.Collections.QDictionaryPtr<K, V>, int, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.TryAllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.TryAllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer, Quantum.EnumEqualityComparer.Tag)
  name.vb: TryAllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: TryAllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: TryAllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Print(Quantum.Core.FrameBase,Quantum.FramePrinter,System.Boolean)
  commentId: M:Quantum.Core.FrameBase.Print(Quantum.Core.FrameBase,Quantum.FramePrinter,System.Boolean)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Print(FrameBase, FramePrinter, bool)
  nameWithType: FrameBase.Print(FrameBase, FramePrinter, bool)
  fullName: Quantum.Core.FrameBase.Print(Quantum.Core.FrameBase, Quantum.FramePrinter, bool)
  nameWithType.vb: FrameBase.Print(FrameBase, FramePrinter, Boolean)
  fullName.vb: Quantum.Core.FrameBase.Print(Quantum.Core.FrameBase, Quantum.FramePrinter, Boolean)
  name.vb: Print(FrameBase, FramePrinter, Boolean)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Print(Quantum.Core.FrameBase,Quantum.FramePrinter,System.Boolean)
    name: Print
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.FramePrinter
    name: FramePrinter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Print(Quantum.Core.FrameBase,Quantum.FramePrinter,System.Boolean)
    name: Print
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.FramePrinter
    name: FramePrinter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Quantum.Core.FrameBase.Serialize(Quantum.Core.FrameBase,Quantum.FrameSerializer)
  commentId: M:Quantum.Core.FrameBase.Serialize(Quantum.Core.FrameBase,Quantum.FrameSerializer)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Serialize(FrameBase, FrameSerializer)
  nameWithType: FrameBase.Serialize(FrameBase, FrameSerializer)
  fullName: Quantum.Core.FrameBase.Serialize(Quantum.Core.FrameBase, Quantum.FrameSerializer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Serialize(Quantum.Core.FrameBase,Quantum.FrameSerializer)
    name: Serialize
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.FrameSerializer
    name: FrameSerializer
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Serialize(Quantum.Core.FrameBase,Quantum.FrameSerializer)
    name: Serialize
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.FrameSerializer
    name: FrameSerializer
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Copy(Quantum.Core.FrameBase,Quantum.Core.FrameBase)
  commentId: M:Quantum.Core.FrameBase.Copy(Quantum.Core.FrameBase,Quantum.Core.FrameBase)
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Copy(FrameBase, FrameBase)
  nameWithType: FrameBase.Copy(FrameBase, FrameBase)
  fullName: Quantum.Core.FrameBase.Copy(Quantum.Core.FrameBase, Quantum.Core.FrameBase)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Copy(Quantum.Core.FrameBase,Quantum.Core.FrameBase)
    name: Copy
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Copy(Quantum.Core.FrameBase,Quantum.Core.FrameBase)
    name: Copy
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.Initialize(Quantum.Core.FrameBase,Quantum.Core.FrameBase.EntitiesConfig,System.Int32)
  commentId: M:Quantum.Core.FrameBase.Initialize(Quantum.Core.FrameBase,Quantum.Core.FrameBase.EntitiesConfig,System.Int32)
  parent: Quantum.Core.FrameBase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Initialize(FrameBase, EntitiesConfig, int)
  nameWithType: FrameBase.Initialize(FrameBase, FrameBase.EntitiesConfig, int)
  fullName: Quantum.Core.FrameBase.Initialize(Quantum.Core.FrameBase, Quantum.Core.FrameBase.EntitiesConfig, int)
  nameWithType.vb: FrameBase.Initialize(FrameBase, FrameBase.EntitiesConfig, Integer)
  fullName.vb: Quantum.Core.FrameBase.Initialize(Quantum.Core.FrameBase, Quantum.Core.FrameBase.EntitiesConfig, Integer)
  name.vb: Initialize(FrameBase, EntitiesConfig, Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Initialize(Quantum.Core.FrameBase,Quantum.Core.FrameBase.EntitiesConfig,System.Int32)
    name: Initialize
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.Core.FrameBase.EntitiesConfig
    name: EntitiesConfig
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Initialize(Quantum.Core.FrameBase,Quantum.Core.FrameBase.EntitiesConfig,System.Int32)
    name: Initialize
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.Core.FrameBase.EntitiesConfig
    name: EntitiesConfig
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.DynamicAssetDB
  commentId: P:Quantum.Core.FrameBase.DynamicAssetDB
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: DynamicAssetDB
  nameWithType: FrameBase.DynamicAssetDB
  fullName: Quantum.Core.FrameBase.DynamicAssetDB
- uid: Quantum.Core.FrameBase.Navigation
  commentId: P:Quantum.Core.FrameBase.Navigation
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Navigation
  nameWithType: FrameBase.Navigation
  fullName: Quantum.Core.FrameBase.Navigation
- uid: Quantum.Core.FrameBase.Layers
  commentId: P:Quantum.Core.FrameBase.Layers
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Layers
  nameWithType: FrameBase.Layers
  fullName: Quantum.Core.FrameBase.Layers
- uid: Quantum.Core.FrameBase.Heap
  commentId: P:Quantum.Core.FrameBase.Heap
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Heap
  nameWithType: FrameBase.Heap
  fullName: Quantum.Core.FrameBase.Heap
- uid: Quantum.Frame.Quantum.BotSDKUtils.CalculateBotSDKGameTime
  commentId: M:Quantum.BotSDKUtils.CalculateBotSDKGameTime(Quantum.Frame)
  parent: Quantum.BotSDKUtils
  definition: Quantum.BotSDKUtils.CalculateBotSDKGameTime(Quantum.Frame)
  href: Quantum.BotSDKUtils.html#Quantum_BotSDKUtils_CalculateBotSDKGameTime_Quantum_Frame_
  name: CalculateBotSDKGameTime(Frame)
  nameWithType: BotSDKUtils.CalculateBotSDKGameTime(Frame)
  fullName: Quantum.BotSDKUtils.CalculateBotSDKGameTime(Quantum.Frame)
  spec.csharp:
  - uid: Quantum.BotSDKUtils.CalculateBotSDKGameTime(Quantum.Frame)
    name: CalculateBotSDKGameTime
    href: Quantum.BotSDKUtils.html#Quantum_BotSDKUtils_CalculateBotSDKGameTime_Quantum_Frame_
  - name: (
  - uid: Quantum.Frame
    name: Frame
    href: Quantum.Frame.html
  - name: )
  spec.vb:
  - uid: Quantum.BotSDKUtils.CalculateBotSDKGameTime(Quantum.Frame)
    name: CalculateBotSDKGameTime
    href: Quantum.BotSDKUtils.html#Quantum_BotSDKUtils_CalculateBotSDKGameTime_Quantum_Frame_
  - name: (
  - uid: Quantum.Frame
    name: Frame
    href: Quantum.Frame.html
  - name: )
- uid: Quantum.Core
  commentId: N:Quantum.Core
  href: Quantum.html
  name: Quantum.Core
  nameWithType: Quantum.Core
  fullName: Quantum.Core
  spec.csharp:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Core
    name: Core
    href: Quantum.Core.html
  spec.vb:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Core
    name: Core
    href: Quantum.Core.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Photon.Deterministic
  commentId: N:Photon.Deterministic
  isExternal: true
  name: Photon.Deterministic
  nameWithType: Photon.Deterministic
  fullName: Photon.Deterministic
  spec.csharp:
  - uid: Photon
    name: Photon
    isExternal: true
  - name: .
  - uid: Photon.Deterministic
    name: Deterministic
    isExternal: true
  spec.vb:
  - uid: Photon
    name: Photon
    isExternal: true
  - name: .
  - uid: Photon.Deterministic
    name: Deterministic
    isExternal: true
- uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef,``0@)
  commentId: M:Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef,``0@)
  isExternal: true
  name: FindAsset<T>(AssetRef, out T)
  nameWithType: FrameBase.FindAsset<T>(AssetRef, out T)
  fullName: Quantum.Core.FrameBase.FindAsset<T>(Quantum.AssetRef, out T)
  nameWithType.vb: FrameBase.FindAsset(Of T)(AssetRef, T)
  fullName.vb: Quantum.Core.FrameBase.FindAsset(Of T)(Quantum.AssetRef, T)
  name.vb: FindAsset(Of T)(AssetRef, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef,``0@)
    name: FindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetRef
    name: AssetRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef,``0@)
    name: FindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetRef
    name: AssetRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef{``0})
  commentId: M:Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef{``0})
  isExternal: true
  name: FindAsset<T>(AssetRef<T>)
  nameWithType: FrameBase.FindAsset<T>(AssetRef<T>)
  fullName: Quantum.Core.FrameBase.FindAsset<T>(Quantum.AssetRef<T>)
  nameWithType.vb: FrameBase.FindAsset(Of T)(AssetRef(Of T))
  fullName.vb: Quantum.Core.FrameBase.FindAsset(Of T)(Quantum.AssetRef(Of T))
  name.vb: FindAsset(Of T)(AssetRef(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef{``0})
    name: FindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindAsset``1(Quantum.AssetRef{``0})
    name: FindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetGuid,``0@)
  commentId: M:Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetGuid,``0@)
  isExternal: true
  name: TryFindAsset<T>(AssetGuid, out T)
  nameWithType: FrameBase.TryFindAsset<T>(AssetGuid, out T)
  fullName: Quantum.Core.FrameBase.TryFindAsset<T>(Quantum.AssetGuid, out T)
  nameWithType.vb: FrameBase.TryFindAsset(Of T)(AssetGuid, T)
  fullName.vb: Quantum.Core.FrameBase.TryFindAsset(Of T)(Quantum.AssetGuid, T)
  name.vb: TryFindAsset(Of T)(AssetGuid, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetGuid,``0@)
    name: TryFindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetGuid,``0@)
    name: TryFindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetGuid
    name: AssetGuid
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef,``0@)
  commentId: M:Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef,``0@)
  isExternal: true
  name: TryFindAsset<T>(AssetRef, out T)
  nameWithType: FrameBase.TryFindAsset<T>(AssetRef, out T)
  fullName: Quantum.Core.FrameBase.TryFindAsset<T>(Quantum.AssetRef, out T)
  nameWithType.vb: FrameBase.TryFindAsset(Of T)(AssetRef, T)
  fullName.vb: Quantum.Core.FrameBase.TryFindAsset(Of T)(Quantum.AssetRef, T)
  name.vb: TryFindAsset(Of T)(AssetRef, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef,``0@)
    name: TryFindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetRef
    name: AssetRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef,``0@)
    name: TryFindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetRef
    name: AssetRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef{``0},``0@)
  commentId: M:Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef{``0},``0@)
  isExternal: true
  name: TryFindAsset<T>(AssetRef<T>, out T)
  nameWithType: FrameBase.TryFindAsset<T>(AssetRef<T>, out T)
  fullName: Quantum.Core.FrameBase.TryFindAsset<T>(Quantum.AssetRef<T>, out T)
  nameWithType.vb: FrameBase.TryFindAsset(Of T)(AssetRef(Of T), T)
  fullName.vb: Quantum.Core.FrameBase.TryFindAsset(Of T)(Quantum.AssetRef(Of T), T)
  name.vb: TryFindAsset(Of T)(AssetRef(Of T), T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef{``0},``0@)
    name: TryFindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(Quantum.AssetRef{``0},``0@)
    name: TryFindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.TryFindAsset``1(System.String,``0@,Quantum.DatabaseType)
  commentId: M:Quantum.Core.FrameBase.TryFindAsset``1(System.String,``0@,Quantum.DatabaseType)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: TryFindAsset<T>(string, out T, DatabaseType)
  nameWithType: FrameBase.TryFindAsset<T>(string, out T, DatabaseType)
  fullName: Quantum.Core.FrameBase.TryFindAsset<T>(string, out T, Quantum.DatabaseType)
  nameWithType.vb: FrameBase.TryFindAsset(Of T)(String, T, DatabaseType)
  fullName.vb: Quantum.Core.FrameBase.TryFindAsset(Of T)(String, T, Quantum.DatabaseType)
  name.vb: TryFindAsset(Of T)(String, T, DatabaseType)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(System.String,``0@,Quantum.DatabaseType)
    name: TryFindAsset
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Quantum.DatabaseType
    name: DatabaseType
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFindAsset``1(System.String,``0@,Quantum.DatabaseType)
    name: TryFindAsset
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Quantum.DatabaseType
    name: DatabaseType
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.FindPrototype``2(``0)
  commentId: M:Quantum.Core.FrameBase.FindPrototype``2(``0)
  isExternal: true
  name: FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef)
  nameWithType: FrameBase.FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef)
  fullName: Quantum.Core.FrameBase.FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef)
  nameWithType.vb: FrameBase.FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef)
  fullName.vb: Quantum.Core.FrameBase.FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef)
  name.vb: FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindPrototype``2(``0)
    name: FindPrototype
    isExternal: true
  - name: <
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: TPrototype
  - name: '>'
  - name: (
  - name: TPrototypeRef
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindPrototype``2(``0)
    name: FindPrototype
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: TPrototype
  - name: )
  - name: (
  - name: TPrototypeRef
  - name: )
- uid: Quantum.Core.FrameBase.FindPrototype``2(``0,``1@)
  commentId: M:Quantum.Core.FrameBase.FindPrototype``2(``0,``1@)
  isExternal: true
  name: FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef, out TPrototype)
  nameWithType: FrameBase.FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef, out TPrototype)
  fullName: Quantum.Core.FrameBase.FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef, out TPrototype)
  nameWithType.vb: FrameBase.FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef, TPrototype)
  fullName.vb: Quantum.Core.FrameBase.FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef, TPrototype)
  name.vb: FindPrototype(Of TPrototypeRef, TPrototype)(TPrototypeRef, TPrototype)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FindPrototype``2(``0,``1@)
    name: FindPrototype
    isExternal: true
  - name: <
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: TPrototype
  - name: '>'
  - name: (
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TPrototype
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FindPrototype``2(``0,``1@)
    name: FindPrototype
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: TPrototype
  - name: )
  - name: (
  - name: TPrototypeRef
  - name: ','
  - name: " "
  - name: TPrototype
  - name: )
- uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0)
  commentId: M:Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0)
  isExternal: true
  name: Add<T>(EntityRef, T)
  nameWithType: FrameBase.Add<T>(EntityRef, T)
  fullName: Quantum.Core.FrameBase.Add<T>(Quantum.EntityRef, T)
  nameWithType.vb: FrameBase.Add(Of T)(EntityRef, T)
  fullName.vb: Quantum.Core.FrameBase.Add(Of T)(Quantum.EntityRef, T)
  name.vb: Add(Of T)(EntityRef, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0)
    name: Add
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0)
    name: Add
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0*@)
  commentId: M:Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0*@)
  isExternal: true
  name: Add<T>(EntityRef, out T*)
  nameWithType: FrameBase.Add<T>(EntityRef, out T*)
  fullName: Quantum.Core.FrameBase.Add<T>(Quantum.EntityRef, out T*)
  nameWithType.vb: FrameBase.Add(Of T)(EntityRef, T*)
  fullName.vb: Quantum.Core.FrameBase.Add(Of T)(Quantum.EntityRef, T*)
  name.vb: Add(Of T)(EntityRef, T*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0*@)
    name: Add
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0*@)
    name: Add
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0,``0*@)
  commentId: M:Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0,``0*@)
  isExternal: true
  name: Add<T>(EntityRef, T, out T*)
  nameWithType: FrameBase.Add<T>(EntityRef, T, out T*)
  fullName: Quantum.Core.FrameBase.Add<T>(Quantum.EntityRef, T, out T*)
  nameWithType.vb: FrameBase.Add(Of T)(EntityRef, T, T*)
  fullName.vb: Quantum.Core.FrameBase.Add(Of T)(Quantum.EntityRef, T, T*)
  name.vb: Add(Of T)(EntityRef, T, T*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0,``0*@)
    name: Add
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Add``1(Quantum.EntityRef,``0,``0*@)
    name: Add
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.AddOrGet``1(Quantum.EntityRef,``0*@)
  commentId: M:Quantum.Core.FrameBase.AddOrGet``1(Quantum.EntityRef,``0*@)
  isExternal: true
  name: AddOrGet<T>(EntityRef, out T*)
  nameWithType: FrameBase.AddOrGet<T>(EntityRef, out T*)
  fullName: Quantum.Core.FrameBase.AddOrGet<T>(Quantum.EntityRef, out T*)
  nameWithType.vb: FrameBase.AddOrGet(Of T)(EntityRef, T*)
  fullName.vb: Quantum.Core.FrameBase.AddOrGet(Of T)(Quantum.EntityRef, T*)
  name.vb: AddOrGet(Of T)(EntityRef, T*)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AddOrGet``1(Quantum.EntityRef,``0*@)
    name: AddOrGet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: '*'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AddOrGet``1(Quantum.EntityRef,``0*@)
    name: AddOrGet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: '*'
  - name: )
- uid: Quantum.Core.FrameBase.Set``1(Quantum.EntityRef,``0)
  commentId: M:Quantum.Core.FrameBase.Set``1(Quantum.EntityRef,``0)
  isExternal: true
  name: Set<T>(EntityRef, T)
  nameWithType: FrameBase.Set<T>(EntityRef, T)
  fullName: Quantum.Core.FrameBase.Set<T>(Quantum.EntityRef, T)
  nameWithType.vb: FrameBase.Set(Of T)(EntityRef, T)
  fullName.vb: Quantum.Core.FrameBase.Set(Of T)(Quantum.EntityRef, T)
  name.vb: Set(Of T)(EntityRef, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Set``1(Quantum.EntityRef,``0)
    name: Set
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Set``1(Quantum.EntityRef,``0)
    name: Set
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.TryGet``1(Quantum.EntityRef,``0@)
  commentId: M:Quantum.Core.FrameBase.TryGet``1(Quantum.EntityRef,``0@)
  isExternal: true
  name: TryGet<T>(EntityRef, out T)
  nameWithType: FrameBase.TryGet<T>(EntityRef, out T)
  fullName: Quantum.Core.FrameBase.TryGet<T>(Quantum.EntityRef, out T)
  nameWithType.vb: FrameBase.TryGet(Of T)(EntityRef, T)
  fullName.vb: Quantum.Core.FrameBase.TryGet(Of T)(Quantum.EntityRef, T)
  name.vb: TryGet(Of T)(EntityRef, T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryGet``1(Quantum.EntityRef,``0@)
    name: TryGet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryGet``1(Quantum.EntityRef,``0@)
    name: TryGet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.SetSingleton``1(``0,Quantum.EntityRef)
  commentId: M:Quantum.Core.FrameBase.SetSingleton``1(``0,Quantum.EntityRef)
  isExternal: true
  name: SetSingleton<T>(T, EntityRef)
  nameWithType: FrameBase.SetSingleton<T>(T, EntityRef)
  fullName: Quantum.Core.FrameBase.SetSingleton<T>(T, Quantum.EntityRef)
  nameWithType.vb: FrameBase.SetSingleton(Of T)(T, EntityRef)
  fullName.vb: Quantum.Core.FrameBase.SetSingleton(Of T)(T, Quantum.EntityRef)
  name.vb: SetSingleton(Of T)(T, EntityRef)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.SetSingleton``1(``0,Quantum.EntityRef)
    name: SetSingleton
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.SetSingleton``1(``0,Quantum.EntityRef)
    name: SetSingleton
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.TryGetSingleton``1(``0@)
  commentId: M:Quantum.Core.FrameBase.TryGetSingleton``1(``0@)
  isExternal: true
  name: TryGetSingleton<T>(out T)
  nameWithType: FrameBase.TryGetSingleton<T>(out T)
  fullName: Quantum.Core.FrameBase.TryGetSingleton<T>(out T)
  nameWithType.vb: FrameBase.TryGetSingleton(Of T)(T)
  fullName.vb: Quantum.Core.FrameBase.TryGetSingleton(Of T)(T)
  name.vb: TryGetSingleton(Of T)(T)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryGetSingleton``1(``0@)
    name: TryGetSingleton
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryGetSingleton``1(``0@)
    name: TryGetSingleton
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0})
  commentId: M:Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0})
  isExternal: true
  name: FreeList<T>(QListPtr<T>)
  nameWithType: FrameBase.FreeList<T>(QListPtr<T>)
  fullName: Quantum.Core.FrameBase.FreeList<T>(Quantum.Collections.QListPtr<T>)
  nameWithType.vb: FrameBase.FreeList(Of T)(QListPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.FreeList(Of T)(Quantum.Collections.QListPtr(Of T))
  name.vb: FreeList(Of T)(QListPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0})
    name: FreeList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0})
    name: FreeList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0}@)
  commentId: M:Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0}@)
  isExternal: true
  name: FreeList<T>(ref QListPtr<T>)
  nameWithType: FrameBase.FreeList<T>(ref QListPtr<T>)
  fullName: Quantum.Core.FrameBase.FreeList<T>(ref Quantum.Collections.QListPtr<T>)
  nameWithType.vb: FrameBase.FreeList(Of T)(QListPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.FreeList(Of T)(Quantum.Collections.QListPtr(Of T))
  name.vb: FreeList(Of T)(QListPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0}@)
    name: FreeList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeList``1(Quantum.Collections.QListPtr{``0}@)
    name: FreeList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0})
  commentId: M:Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0})
  isExternal: true
  name: TryFreeList<T>(QListPtr<T>)
  nameWithType: FrameBase.TryFreeList<T>(QListPtr<T>)
  fullName: Quantum.Core.FrameBase.TryFreeList<T>(Quantum.Collections.QListPtr<T>)
  nameWithType.vb: FrameBase.TryFreeList(Of T)(QListPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryFreeList(Of T)(Quantum.Collections.QListPtr(Of T))
  name.vb: TryFreeList(Of T)(QListPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0})
    name: TryFreeList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0})
    name: TryFreeList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0}@)
  commentId: M:Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0}@)
  isExternal: true
  name: TryFreeList<T>(ref QListPtr<T>)
  nameWithType: FrameBase.TryFreeList<T>(ref QListPtr<T>)
  fullName: Quantum.Core.FrameBase.TryFreeList<T>(ref Quantum.Collections.QListPtr<T>)
  nameWithType.vb: FrameBase.TryFreeList(Of T)(QListPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryFreeList(Of T)(Quantum.Collections.QListPtr(Of T))
  name.vb: TryFreeList(Of T)(QListPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0}@)
    name: TryFreeList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeList``1(Quantum.Collections.QListPtr{``0}@)
    name: TryFreeList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.ResolveList``1(Quantum.Collections.QListPtr{``0})
  commentId: M:Quantum.Core.FrameBase.ResolveList``1(Quantum.Collections.QListPtr{``0})
  isExternal: true
  name: ResolveList<T>(QListPtr<T>)
  nameWithType: FrameBase.ResolveList<T>(QListPtr<T>)
  fullName: Quantum.Core.FrameBase.ResolveList<T>(Quantum.Collections.QListPtr<T>)
  nameWithType.vb: FrameBase.ResolveList(Of T)(QListPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.ResolveList(Of T)(Quantum.Collections.QListPtr(Of T))
  name.vb: ResolveList(Of T)(QListPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ResolveList``1(Quantum.Collections.QListPtr{``0})
    name: ResolveList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ResolveList``1(Quantum.Collections.QListPtr{``0})
    name: ResolveList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryResolveList``1(Quantum.Collections.QListPtr{``0},Quantum.Collections.QList{``0}@)
  commentId: M:Quantum.Core.FrameBase.TryResolveList``1(Quantum.Collections.QListPtr{``0},Quantum.Collections.QList{``0}@)
  isExternal: true
  name: TryResolveList<T>(QListPtr<T>, out QList<T>)
  nameWithType: FrameBase.TryResolveList<T>(QListPtr<T>, out QList<T>)
  fullName: Quantum.Core.FrameBase.TryResolveList<T>(Quantum.Collections.QListPtr<T>, out Quantum.Collections.QList<T>)
  nameWithType.vb: FrameBase.TryResolveList(Of T)(QListPtr(Of T), QList(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryResolveList(Of T)(Quantum.Collections.QListPtr(Of T), Quantum.Collections.QList(Of T))
  name.vb: TryResolveList(Of T)(QListPtr(Of T), QList(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryResolveList``1(Quantum.Collections.QListPtr{``0},Quantum.Collections.QList{``0}@)
    name: TryResolveList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.Collections.QList`1
    name: QList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryResolveList``1(Quantum.Collections.QListPtr{``0},Quantum.Collections.QList{``0}@)
    name: TryResolveList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.Collections.QList`1
    name: QList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0},System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0},System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateList<T>(QListPtr<T>, int)
  nameWithType: FrameBase.AllocateList<T>(QListPtr<T>, int)
  fullName: Quantum.Core.FrameBase.AllocateList<T>(Quantum.Collections.QListPtr<T>, int)
  nameWithType.vb: FrameBase.AllocateList(Of T)(QListPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateList(Of T)(Quantum.Collections.QListPtr(Of T), Integer)
  name.vb: AllocateList(Of T)(QListPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0},System.Int32)
    name: AllocateList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0},System.Int32)
    name: AllocateList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateList<T>(out QListPtr<T>, int)
  nameWithType: FrameBase.AllocateList<T>(out QListPtr<T>, int)
  fullName: Quantum.Core.FrameBase.AllocateList<T>(out Quantum.Collections.QListPtr<T>, int)
  nameWithType.vb: FrameBase.AllocateList(Of T)(QListPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateList(Of T)(Quantum.Collections.QListPtr(Of T), Integer)
  name.vb: AllocateList(Of T)(QListPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
    name: AllocateList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
    name: AllocateList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.TryAllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.TryAllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TryAllocateList<T>(ref QListPtr<T>, int)
  nameWithType: FrameBase.TryAllocateList<T>(ref QListPtr<T>, int)
  fullName: Quantum.Core.FrameBase.TryAllocateList<T>(ref Quantum.Collections.QListPtr<T>, int)
  nameWithType.vb: FrameBase.TryAllocateList(Of T)(QListPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.TryAllocateList(Of T)(Quantum.Collections.QListPtr(Of T), Integer)
  name.vb: TryAllocateList(Of T)(QListPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryAllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
    name: TryAllocateList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryAllocateList``1(Quantum.Collections.QListPtr{``0}@,System.Int32)
    name: TryAllocateList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  commentId: M:Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  isExternal: true
  name: FreeHashSet<T>(QHashSetPtr<T>)
  nameWithType: FrameBase.FreeHashSet<T>(QHashSetPtr<T>)
  fullName: Quantum.Core.FrameBase.FreeHashSet<T>(Quantum.Collections.QHashSetPtr<T>)
  nameWithType.vb: FrameBase.FreeHashSet(Of T)(QHashSetPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.FreeHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T))
  name.vb: FreeHashSet(Of T)(QHashSetPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: FreeHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: FreeHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
  commentId: M:Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
  isExternal: true
  name: FreeHashSet<T>(ref QHashSetPtr<T>)
  nameWithType: FrameBase.FreeHashSet<T>(ref QHashSetPtr<T>)
  fullName: Quantum.Core.FrameBase.FreeHashSet<T>(ref Quantum.Collections.QHashSetPtr<T>)
  nameWithType.vb: FrameBase.FreeHashSet(Of T)(QHashSetPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.FreeHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T))
  name.vb: FreeHashSet(Of T)(QHashSetPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
    name: FreeHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
    name: FreeHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  commentId: M:Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  isExternal: true
  name: TryFreeHashSet<T>(QHashSetPtr<T>)
  nameWithType: FrameBase.TryFreeHashSet<T>(QHashSetPtr<T>)
  fullName: Quantum.Core.FrameBase.TryFreeHashSet<T>(Quantum.Collections.QHashSetPtr<T>)
  nameWithType.vb: FrameBase.TryFreeHashSet(Of T)(QHashSetPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryFreeHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T))
  name.vb: TryFreeHashSet(Of T)(QHashSetPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: TryFreeHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: TryFreeHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
  commentId: M:Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
  isExternal: true
  name: TryFreeHashSet<T>(ref QHashSetPtr<T>)
  nameWithType: FrameBase.TryFreeHashSet<T>(ref QHashSetPtr<T>)
  fullName: Quantum.Core.FrameBase.TryFreeHashSet<T>(ref Quantum.Collections.QHashSetPtr<T>)
  nameWithType.vb: FrameBase.TryFreeHashSet(Of T)(QHashSetPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryFreeHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T))
  name.vb: TryFreeHashSet(Of T)(QHashSetPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
    name: TryFreeHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeHashSet``1(Quantum.Collections.QHashSetPtr{``0}@)
    name: TryFreeHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.ResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  commentId: M:Quantum.Core.FrameBase.ResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0})
  isExternal: true
  name: ResolveHashSet<T>(QHashSetPtr<T>)
  nameWithType: FrameBase.ResolveHashSet<T>(QHashSetPtr<T>)
  fullName: Quantum.Core.FrameBase.ResolveHashSet<T>(Quantum.Collections.QHashSetPtr<T>)
  nameWithType.vb: FrameBase.ResolveHashSet(Of T)(QHashSetPtr(Of T))
  fullName.vb: Quantum.Core.FrameBase.ResolveHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T))
  name.vb: ResolveHashSet(Of T)(QHashSetPtr(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: ResolveHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0})
    name: ResolveHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0},Quantum.Collections.QHashSet{``0}@)
  commentId: M:Quantum.Core.FrameBase.TryResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0},Quantum.Collections.QHashSet{``0}@)
  isExternal: true
  name: TryResolveHashSet<T>(QHashSetPtr<T>, out QHashSet<T>)
  nameWithType: FrameBase.TryResolveHashSet<T>(QHashSetPtr<T>, out QHashSet<T>)
  fullName: Quantum.Core.FrameBase.TryResolveHashSet<T>(Quantum.Collections.QHashSetPtr<T>, out Quantum.Collections.QHashSet<T>)
  nameWithType.vb: FrameBase.TryResolveHashSet(Of T)(QHashSetPtr(Of T), QHashSet(Of T))
  fullName.vb: Quantum.Core.FrameBase.TryResolveHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T), Quantum.Collections.QHashSet(Of T))
  name.vb: TryResolveHashSet(Of T)(QHashSetPtr(Of T), QHashSet(Of T))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0},Quantum.Collections.QHashSet{``0}@)
    name: TryResolveHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.Collections.QHashSet`1
    name: QHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryResolveHashSet``1(Quantum.Collections.QHashSetPtr{``0},Quantum.Collections.QHashSet{``0}@)
    name: TryResolveHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.Collections.QHashSet`1
    name: QHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0},System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0},System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateHashSet<T>(QHashSetPtr<T>, int)
  nameWithType: FrameBase.AllocateHashSet<T>(QHashSetPtr<T>, int)
  fullName: Quantum.Core.FrameBase.AllocateHashSet<T>(Quantum.Collections.QHashSetPtr<T>, int)
  nameWithType.vb: FrameBase.AllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T), Integer)
  name.vb: AllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0},System.Int32)
    name: AllocateHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0},System.Int32)
    name: AllocateHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateHashSet<T>(out QHashSetPtr<T>, int)
  nameWithType: FrameBase.AllocateHashSet<T>(out QHashSetPtr<T>, int)
  fullName: Quantum.Core.FrameBase.AllocateHashSet<T>(out Quantum.Collections.QHashSetPtr<T>, int)
  nameWithType.vb: FrameBase.AllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T), Integer)
  name.vb: AllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
    name: AllocateHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
    name: AllocateHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.TryAllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.TryAllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TryAllocateHashSet<T>(ref QHashSetPtr<T>, int)
  nameWithType: FrameBase.TryAllocateHashSet<T>(ref QHashSetPtr<T>, int)
  fullName: Quantum.Core.FrameBase.TryAllocateHashSet<T>(ref Quantum.Collections.QHashSetPtr<T>, int)
  nameWithType.vb: FrameBase.TryAllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  fullName.vb: Quantum.Core.FrameBase.TryAllocateHashSet(Of T)(Quantum.Collections.QHashSetPtr(Of T), Integer)
  name.vb: TryAllocateHashSet(Of T)(QHashSetPtr(Of T), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryAllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
    name: TryAllocateHashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryAllocateHashSet``1(Quantum.Collections.QHashSetPtr{``0}@,System.Int32)
    name: TryAllocateHashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  commentId: M:Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  isExternal: true
  name: FreeDictionary<K, V>(QDictionaryPtr<K, V>)
  nameWithType: FrameBase.FreeDictionary<K, V>(QDictionaryPtr<K, V>)
  fullName: Quantum.Core.FrameBase.FreeDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>)
  nameWithType.vb: FrameBase.FreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.FreeDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V))
  name.vb: FreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: FreeDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: FreeDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
  commentId: M:Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
  isExternal: true
  name: FreeDictionary<K, V>(ref QDictionaryPtr<K, V>)
  nameWithType: FrameBase.FreeDictionary<K, V>(ref QDictionaryPtr<K, V>)
  fullName: Quantum.Core.FrameBase.FreeDictionary<K, V>(ref Quantum.Collections.QDictionaryPtr<K, V>)
  nameWithType.vb: FrameBase.FreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.FreeDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V))
  name.vb: FreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
    name: FreeDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.FreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
    name: FreeDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  commentId: M:Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  isExternal: true
  name: TryFreeDictionary<K, V>(QDictionaryPtr<K, V>)
  nameWithType: FrameBase.TryFreeDictionary<K, V>(QDictionaryPtr<K, V>)
  fullName: Quantum.Core.FrameBase.TryFreeDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>)
  nameWithType.vb: FrameBase.TryFreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.TryFreeDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V))
  name.vb: TryFreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: TryFreeDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: TryFreeDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
  commentId: M:Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
  isExternal: true
  name: TryFreeDictionary<K, V>(ref QDictionaryPtr<K, V>)
  nameWithType: FrameBase.TryFreeDictionary<K, V>(ref QDictionaryPtr<K, V>)
  fullName: Quantum.Core.FrameBase.TryFreeDictionary<K, V>(ref Quantum.Collections.QDictionaryPtr<K, V>)
  nameWithType.vb: FrameBase.TryFreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.TryFreeDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V))
  name.vb: TryFreeDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
    name: TryFreeDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryFreeDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@)
    name: TryFreeDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  commentId: M:Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
  isExternal: true
  name: ResolveDictionary<K, V>(QDictionaryPtr<K, V>)
  nameWithType: FrameBase.ResolveDictionary<K, V>(QDictionaryPtr<K, V>)
  fullName: Quantum.Core.FrameBase.ResolveDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>)
  nameWithType.vb: FrameBase.ResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.ResolveDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V))
  name.vb: ResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: ResolveDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1})
    name: ResolveDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QDictionary{``0,``1}@)
  commentId: M:Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QDictionary{``0,``1}@)
  isExternal: true
  name: TryResolveDictionary<K, V>(QDictionaryPtr<K, V>, out QDictionary<K, V>)
  nameWithType: FrameBase.TryResolveDictionary<K, V>(QDictionaryPtr<K, V>, out QDictionary<K, V>)
  fullName: Quantum.Core.FrameBase.TryResolveDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>, out Quantum.Collections.QDictionary<K, V>)
  nameWithType.vb: FrameBase.TryResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), QDictionary(Of K, V))
  fullName.vb: Quantum.Core.FrameBase.TryResolveDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Quantum.Collections.QDictionary(Of K, V))
  name.vb: TryResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), QDictionary(Of K, V))
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QDictionary{``0,``1}@)
    name: TryResolveDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.Collections.QDictionary`2
    name: QDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QDictionary{``0,``1}@)
    name: TryResolveDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.Collections.QDictionary`2
    name: QDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: )
- uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateDictionary<K, V>(QDictionaryPtr<K, V>, int)
  nameWithType: FrameBase.AllocateDictionary<K, V>(QDictionaryPtr<K, V>, int)
  fullName: Quantum.Core.FrameBase.AllocateDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>, int)
  nameWithType.vb: FrameBase.AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer)
  name.vb: AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32)
    name: AllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32)
    name: AllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateDictionary<K, V>(out QDictionaryPtr<K, V>, int)
  nameWithType: FrameBase.AllocateDictionary<K, V>(out QDictionaryPtr<K, V>, int)
  fullName: Quantum.Core.FrameBase.AllocateDictionary<K, V>(out Quantum.Collections.QDictionaryPtr<K, V>, int)
  nameWithType.vb: FrameBase.AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  fullName.vb: Quantum.Core.FrameBase.AllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer)
  name.vb: AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
    name: AllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
    name: AllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
  commentId: M:Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TryAllocateDictionary<K, V>(ref QDictionaryPtr<K, V>, int)
  nameWithType: FrameBase.TryAllocateDictionary<K, V>(ref QDictionaryPtr<K, V>, int)
  fullName: Quantum.Core.FrameBase.TryAllocateDictionary<K, V>(ref Quantum.Collections.QDictionaryPtr<K, V>, int)
  nameWithType.vb: FrameBase.TryAllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  fullName.vb: Quantum.Core.FrameBase.TryAllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer)
  name.vb: TryAllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
    name: TryAllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32)
    name: TryAllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.EnumEqualityComparer.Tag)
  isExternal: true
  name: ResolveDictionary<K, V>(QDictionaryPtr<K, V>, Tag)
  nameWithType: FrameBase.ResolveDictionary<K, V>(QDictionaryPtr<K, V>, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.ResolveDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.ResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.ResolveDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Quantum.EnumEqualityComparer.Tag)
  name.vb: ResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.EnumEqualityComparer.Tag)
    name: ResolveDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.ResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.EnumEqualityComparer.Tag)
    name: ResolveDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QEnumDictionary{``0,``1}@,Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QEnumDictionary{``0,``1}@,Quantum.EnumEqualityComparer.Tag)
  isExternal: true
  name: TryResolveDictionary<K, V>(QDictionaryPtr<K, V>, out QEnumDictionary<K, V>, Tag)
  nameWithType: FrameBase.TryResolveDictionary<K, V>(QDictionaryPtr<K, V>, out QEnumDictionary<K, V>, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.TryResolveDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>, out Quantum.Collections.QEnumDictionary<K, V>, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.TryResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), QEnumDictionary(Of K, V), EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.TryResolveDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Quantum.Collections.QEnumDictionary(Of K, V), Quantum.EnumEqualityComparer.Tag)
  name.vb: TryResolveDictionary(Of K, V)(QDictionaryPtr(Of K, V), QEnumDictionary(Of K, V), Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QEnumDictionary{``0,``1}@,Quantum.EnumEqualityComparer.Tag)
    name: TryResolveDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Quantum.Collections.QEnumDictionary`2
    name: QEnumDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryResolveDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},Quantum.Collections.QEnumDictionary{``0,``1}@,Quantum.EnumEqualityComparer.Tag)
    name: TryResolveDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.Collections.QEnumDictionary`2
    name: QEnumDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32,Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32,Quantum.EnumEqualityComparer.Tag)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateDictionary<K, V>(QDictionaryPtr<K, V>, int, Tag)
  nameWithType: FrameBase.AllocateDictionary<K, V>(QDictionaryPtr<K, V>, int, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.AllocateDictionary<K, V>(Quantum.Collections.QDictionaryPtr<K, V>, int, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.AllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer, Quantum.EnumEqualityComparer.Tag)
  name.vb: AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: AllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1},System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: AllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AllocateDictionary<K, V>(out QDictionaryPtr<K, V>, int, Tag)
  nameWithType: FrameBase.AllocateDictionary<K, V>(out QDictionaryPtr<K, V>, int, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.AllocateDictionary<K, V>(out Quantum.Collections.QDictionaryPtr<K, V>, int, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.AllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer, Quantum.EnumEqualityComparer.Tag)
  name.vb: AllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: AllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: out
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.AllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: AllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  commentId: M:Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TryAllocateDictionary<K, V>(ref QDictionaryPtr<K, V>, int, Tag)
  nameWithType: FrameBase.TryAllocateDictionary<K, V>(ref QDictionaryPtr<K, V>, int, EnumEqualityComparer.Tag)
  fullName: Quantum.Core.FrameBase.TryAllocateDictionary<K, V>(ref Quantum.Collections.QDictionaryPtr<K, V>, int, Quantum.EnumEqualityComparer.Tag)
  nameWithType.vb: FrameBase.TryAllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, EnumEqualityComparer.Tag)
  fullName.vb: Quantum.Core.FrameBase.TryAllocateDictionary(Of K, V)(Quantum.Collections.QDictionaryPtr(Of K, V), Integer, Quantum.EnumEqualityComparer.Tag)
  name.vb: TryAllocateDictionary(Of K, V)(QDictionaryPtr(Of K, V), Integer, Tag)
  spec.csharp:
  - uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: TryAllocateDictionary
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.TryAllocateDictionary``2(Quantum.Collections.QDictionaryPtr{``0,``1}@,System.Int32,Quantum.EnumEqualityComparer.Tag)
    name: TryAllocateDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: (
  - uid: Quantum.Collections.QDictionaryPtr`2
    name: QDictionaryPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Quantum.EnumEqualityComparer.Tag
    name: Tag
    isExternal: true
  - name: )
- uid: Quantum.BotSDKUtils.CalculateBotSDKGameTime(Quantum.Frame)
  commentId: M:Quantum.BotSDKUtils.CalculateBotSDKGameTime(Quantum.Frame)
  href: Quantum.BotSDKUtils.html#Quantum_BotSDKUtils_CalculateBotSDKGameTime_Quantum_Frame_
  name: CalculateBotSDKGameTime(Frame)
  nameWithType: BotSDKUtils.CalculateBotSDKGameTime(Frame)
  fullName: Quantum.BotSDKUtils.CalculateBotSDKGameTime(Quantum.Frame)
  spec.csharp:
  - uid: Quantum.BotSDKUtils.CalculateBotSDKGameTime(Quantum.Frame)
    name: CalculateBotSDKGameTime
    href: Quantum.BotSDKUtils.html#Quantum_BotSDKUtils_CalculateBotSDKGameTime_Quantum_Frame_
  - name: (
  - uid: Quantum.Frame
    name: Frame
    href: Quantum.Frame.html
  - name: )
  spec.vb:
  - uid: Quantum.BotSDKUtils.CalculateBotSDKGameTime(Quantum.Frame)
    name: CalculateBotSDKGameTime
    href: Quantum.BotSDKUtils.html#Quantum_BotSDKUtils_CalculateBotSDKGameTime_Quantum_Frame_
  - name: (
  - uid: Quantum.Frame
    name: Frame
    href: Quantum.Frame.html
  - name: )
- uid: Quantum.BotSDKUtils
  commentId: T:Quantum.BotSDKUtils
  parent: Quantum
  href: Quantum.BotSDKUtils.html
  name: BotSDKUtils
  nameWithType: BotSDKUtils
  fullName: Quantum.BotSDKUtils
- uid: Quantum.Frame.GetPlayerInput*
  commentId: Overload:Quantum.Frame.GetPlayerInput
  href: Quantum.Frame.html#Quantum_Frame_GetPlayerInput_Quantum_PlayerRef_
  name: GetPlayerInput
  nameWithType: Frame.GetPlayerInput
  fullName: Quantum.Frame.GetPlayerInput
- uid: Quantum.PlayerRef
  commentId: T:Quantum.PlayerRef
  parent: Quantum
  isExternal: true
  name: PlayerRef
  nameWithType: PlayerRef
  fullName: Quantum.PlayerRef
- uid: Quantum.Input*
  isExternal: true
  href: Quantum.Input.html
  name: Input*
  nameWithType: Input*
  fullName: Quantum.Input*
  spec.csharp:
  - uid: Quantum.Input
    name: Input
    href: Quantum.Input.html
  - name: '*'
  spec.vb:
  - uid: Quantum.Input
    name: Input
    href: Quantum.Input.html
  - name: '*'
- uid: Quantum.Frame.SetPlayerInput*
  commentId: Overload:Quantum.Frame.SetPlayerInput
  href: Quantum.Frame.html#Quantum_Frame_SetPlayerInput_Quantum_PlayerRef_Quantum_Input_
  name: SetPlayerInput
  nameWithType: Frame.SetPlayerInput
  fullName: Quantum.Frame.SetPlayerInput
- uid: Quantum.Input
  commentId: T:Quantum.Input
  parent: Quantum
  href: Quantum.Input.html
  name: Input
  nameWithType: Input
  fullName: Quantum.Input
- uid: Quantum.SimulationConfig
  commentId: T:Quantum.SimulationConfig
  parent: Quantum
  href: Quantum.SimulationConfig.html
  name: SimulationConfig
  nameWithType: SimulationConfig
  fullName: Quantum.SimulationConfig
- uid: Quantum.Frame.DumpFrame(System.Int32)
  commentId: M:Quantum.Frame.DumpFrame(System.Int32)
  isExternal: true
  href: Quantum.Frame.html#Quantum_Frame_DumpFrame_System_Int32_
  name: DumpFrame(int)
  nameWithType: Frame.DumpFrame(int)
  fullName: Quantum.Frame.DumpFrame(int)
  nameWithType.vb: Frame.DumpFrame(Integer)
  fullName.vb: Quantum.Frame.DumpFrame(Integer)
  name.vb: DumpFrame(Integer)
  spec.csharp:
  - uid: Quantum.Frame.DumpFrame(System.Int32)
    name: DumpFrame
    href: Quantum.Frame.html#Quantum_Frame_DumpFrame_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Quantum.Frame.DumpFrame(System.Int32)
    name: DumpFrame
    href: Quantum.Frame.html#Quantum_Frame_DumpFrame_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Quantum.RuntimeConfig
  commentId: T:Quantum.RuntimeConfig
  parent: Quantum
  href: Quantum.RuntimeConfig.html
  name: RuntimeConfig
  nameWithType: RuntimeConfig
  fullName: Quantum.RuntimeConfig
- uid: Photon.Deterministic.DeterministicSessionConfig
  commentId: T:Photon.Deterministic.DeterministicSessionConfig
  parent: Photon.Deterministic
  isExternal: true
  name: DeterministicSessionConfig
  nameWithType: DeterministicSessionConfig
  fullName: Photon.Deterministic.DeterministicSessionConfig
- uid: Quantum.RuntimePlayer
  commentId: T:Quantum.RuntimePlayer
  parent: Quantum
  href: Quantum.RuntimePlayer.html
  name: RuntimePlayer
  nameWithType: RuntimePlayer
  fullName: Quantum.RuntimePlayer
- uid: Quantum.Frame.Global*
  commentId: Overload:Quantum.Frame.Global
  href: Quantum.Frame.html#Quantum_Frame_Global
  name: Global
  nameWithType: Frame.Global
  fullName: Quantum.Frame.Global
- uid: Quantum._globals_*
  isExternal: true
  href: Quantum._globals_.html
  name: _globals_*
  nameWithType: _globals_*
  fullName: Quantum._globals_*
  spec.csharp:
  - uid: Quantum._globals_
    name: _globals_
    href: Quantum._globals_.html
  - name: '*'
  spec.vb:
  - uid: Quantum._globals_
    name: _globals_
    href: Quantum._globals_.html
  - name: '*'
- uid: Quantum.Frame.RuntimeConfig
  commentId: P:Quantum.Frame.RuntimeConfig
  href: Quantum.Frame.html#Quantum_Frame_RuntimeConfig
  name: RuntimeConfig
  nameWithType: Frame.RuntimeConfig
  fullName: Quantum.Frame.RuntimeConfig
- uid: Quantum.Frame.RNG*
  commentId: Overload:Quantum.Frame.RNG
  href: Quantum.Frame.html#Quantum_Frame_RNG
  name: RNG
  nameWithType: Frame.RNG
  fullName: Quantum.Frame.RNG
- uid: Photon.Deterministic.RNGSession*
  isExternal: true
  name: RNGSession*
  nameWithType: RNGSession*
  fullName: Photon.Deterministic.RNGSession*
  spec.csharp:
  - uid: Photon.Deterministic.RNGSession
    name: RNGSession
    isExternal: true
  - name: '*'
  spec.vb:
  - uid: Photon.Deterministic.RNGSession
    name: RNGSession
    isExternal: true
  - name: '*'
- uid: Photon.Deterministic.DeterministicSessionConfig.PlayerCount
  commentId: F:Photon.Deterministic.DeterministicSessionConfig.PlayerCount
  isExternal: true
  name: PlayerCount
  nameWithType: DeterministicSessionConfig.PlayerCount
  fullName: Photon.Deterministic.DeterministicSessionConfig.PlayerCount
- uid: Quantum.Frame.PlayerCount*
  commentId: Overload:Quantum.Frame.PlayerCount
  href: Quantum.Frame.html#Quantum_Frame_PlayerCount
  name: PlayerCount
  nameWithType: Frame.PlayerCount
  fullName: Quantum.Frame.PlayerCount
- uid: Quantum.Core.PlayerConnectedSystem
  commentId: T:Quantum.Core.PlayerConnectedSystem
  href: Quantum.Core.PlayerConnectedSystem.html
  name: PlayerConnectedSystem
  nameWithType: PlayerConnectedSystem
  fullName: Quantum.Core.PlayerConnectedSystem
- uid: Quantum.Frame.PlayerConnectedCount*
  commentId: Overload:Quantum.Frame.PlayerConnectedCount
  href: Quantum.Frame.html#Quantum_Frame_PlayerConnectedCount
  name: PlayerConnectedCount
  nameWithType: Frame.PlayerConnectedCount
  fullName: Quantum.Frame.PlayerConnectedCount
- uid: Quantum.Core.FrameBase.NavMeshRegionMask
  commentId: P:Quantum.Core.FrameBase.NavMeshRegionMask
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: NavMeshRegionMask
  nameWithType: FrameBase.NavMeshRegionMask
  fullName: Quantum.Core.FrameBase.NavMeshRegionMask
- uid: Quantum.Frame.NavMeshRegionMask*
  commentId: Overload:Quantum.Frame.NavMeshRegionMask
  href: Quantum.Frame.html#Quantum_Frame_NavMeshRegionMask
  name: NavMeshRegionMask
  nameWithType: Frame.NavMeshRegionMask
  fullName: Quantum.Frame.NavMeshRegionMask
- uid: Quantum.NavMeshRegionMask*
  isExternal: true
  name: NavMeshRegionMask*
  nameWithType: NavMeshRegionMask*
  fullName: Quantum.NavMeshRegionMask*
  spec.csharp:
  - uid: Quantum.NavMeshRegionMask
    name: NavMeshRegionMask
    isExternal: true
  - name: '*'
  spec.vb:
  - uid: Quantum.NavMeshRegionMask
    name: NavMeshRegionMask
    isExternal: true
  - name: '*'
- uid: Quantum.Core.FrameBase.FrameMetaData
  commentId: P:Quantum.Core.FrameBase.FrameMetaData
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: FrameMetaData
  nameWithType: FrameBase.FrameMetaData
  fullName: Quantum.Core.FrameBase.FrameMetaData
- uid: Quantum.Frame.FrameMetaData*
  commentId: Overload:Quantum.Frame.FrameMetaData
  href: Quantum.Frame.html#Quantum_Frame_FrameMetaData
  name: FrameMetaData
  nameWithType: Frame.FrameMetaData
  fullName: Quantum.Frame.FrameMetaData
- uid: Quantum.FrameMetaData*
  isExternal: true
  name: FrameMetaData*
  nameWithType: FrameMetaData*
  fullName: Quantum.FrameMetaData*
  spec.csharp:
  - uid: Quantum.FrameMetaData
    name: FrameMetaData
    isExternal: true
  - name: '*'
  spec.vb:
  - uid: Quantum.FrameMetaData
    name: FrameMetaData
    isExternal: true
  - name: '*'
- uid: Quantum.Core.FrameBase._physicsState2D
  commentId: P:Quantum.Core.FrameBase._physicsState2D
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: _physicsState2D
  nameWithType: FrameBase._physicsState2D
  fullName: Quantum.Core.FrameBase._physicsState2D
- uid: Quantum.Frame._physicsState2D*
  commentId: Overload:Quantum.Frame._physicsState2D
  href: Quantum.Frame.html#Quantum_Frame__physicsState2D
  name: _physicsState2D
  nameWithType: Frame._physicsState2D
  fullName: Quantum.Frame._physicsState2D
- uid: Quantum.PhysicsEngineState*
  isExternal: true
  name: PhysicsEngineState*
  nameWithType: PhysicsEngineState*
  fullName: Quantum.PhysicsEngineState*
  spec.csharp:
  - uid: Quantum.PhysicsEngineState
    name: PhysicsEngineState
    isExternal: true
  - name: '*'
  spec.vb:
  - uid: Quantum.PhysicsEngineState
    name: PhysicsEngineState
    isExternal: true
  - name: '*'
- uid: Quantum.Core.FrameBase._physicsState3D
  commentId: P:Quantum.Core.FrameBase._physicsState3D
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: _physicsState3D
  nameWithType: FrameBase._physicsState3D
  fullName: Quantum.Core.FrameBase._physicsState3D
- uid: Quantum.Frame._physicsState3D*
  commentId: Overload:Quantum.Frame._physicsState3D
  href: Quantum.Frame.html#Quantum_Frame__physicsState3D
  name: _physicsState3D
  nameWithType: Frame._physicsState3D
  fullName: Quantum.Frame._physicsState3D
- uid: Quantum.Core.FrameBase.CommitCommandsMode
  commentId: P:Quantum.Core.FrameBase.CommitCommandsMode
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: CommitCommandsMode
  nameWithType: FrameBase.CommitCommandsMode
  fullName: Quantum.Core.FrameBase.CommitCommandsMode
- uid: Quantum.Frame.CommitCommandsMode*
  commentId: Overload:Quantum.Frame.CommitCommandsMode
  href: Quantum.Frame.html#Quantum_Frame_CommitCommandsMode
  name: CommitCommandsMode
  nameWithType: Frame.CommitCommandsMode
  fullName: Quantum.Frame.CommitCommandsMode
- uid: Quantum.CommitCommandsModes
  commentId: T:Quantum.CommitCommandsModes
  parent: Quantum
  isExternal: true
  name: CommitCommandsModes
  nameWithType: CommitCommandsModes
  fullName: Quantum.CommitCommandsModes
- uid: Quantum.Frame.FrameSignals
  commentId: T:Quantum.Frame.FrameSignals
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame.FrameSignals
  nameWithType: Frame.FrameSignals
  fullName: Quantum.Frame.FrameSignals
  spec.csharp:
  - uid: Quantum.Frame
    name: Frame
    href: Quantum.Frame.html
  - name: .
  - uid: Quantum.Frame.FrameSignals
    name: FrameSignals
    href: Quantum.Frame.FrameSignals.html
  spec.vb:
  - uid: Quantum.Frame
    name: Frame
    href: Quantum.Frame.html
  - name: .
  - uid: Quantum.Frame.FrameSignals
    name: FrameSignals
    href: Quantum.Frame.FrameSignals.html
- uid: Quantum.Frame.FrameEvents
  commentId: T:Quantum.Frame.FrameEvents
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame.FrameEvents
  nameWithType: Frame.FrameEvents
  fullName: Quantum.Frame.FrameEvents
  spec.csharp:
  - uid: Quantum.Frame
    name: Frame
    href: Quantum.Frame.html
  - name: .
  - uid: Quantum.Frame.FrameEvents
    name: FrameEvents
    href: Quantum.Frame.FrameEvents.html
  spec.vb:
  - uid: Quantum.Frame
    name: Frame
    href: Quantum.Frame.html
  - name: .
  - uid: Quantum.Frame.FrameEvents
    name: FrameEvents
    href: Quantum.Frame.FrameEvents.html
- uid: Quantum.Frame.Context*
  commentId: Overload:Quantum.Frame.Context
  href: Quantum.Frame.html#Quantum_Frame_Context
  name: Context
  nameWithType: Frame.Context
  fullName: Quantum.Frame.Context
- uid: Quantum.FrameContextUser
  commentId: T:Quantum.FrameContextUser
  parent: Quantum
  href: Quantum.FrameContextUser.html
  name: FrameContextUser
  nameWithType: FrameContextUser
  fullName: Quantum.FrameContextUser
- uid: Quantum.Frame.RuntimeConfig*
  commentId: Overload:Quantum.Frame.RuntimeConfig
  href: Quantum.Frame.html#Quantum_Frame_RuntimeConfig
  name: RuntimeConfig
  nameWithType: Frame.RuntimeConfig
  fullName: Quantum.Frame.RuntimeConfig
- uid: Quantum.Frame.SimulationConfig
  commentId: P:Quantum.Frame.SimulationConfig
  href: Quantum.Frame.html#Quantum_Frame_SimulationConfig
  name: SimulationConfig
  nameWithType: Frame.SimulationConfig
  fullName: Quantum.Frame.SimulationConfig
- uid: Quantum.Frame.SimulationConfig*
  commentId: Overload:Quantum.Frame.SimulationConfig
  href: Quantum.Frame.html#Quantum_Frame_SimulationConfig
  name: SimulationConfig
  nameWithType: Frame.SimulationConfig
  fullName: Quantum.Frame.SimulationConfig
- uid: Quantum.Frame.SessionConfig*
  commentId: Overload:Quantum.Frame.SessionConfig
  href: Quantum.Frame.html#Quantum_Frame_SessionConfig
  name: SessionConfig
  nameWithType: Frame.SessionConfig
  fullName: Quantum.Frame.SessionConfig
- uid: Quantum.Frame.SystemsAll*
  commentId: Overload:Quantum.Frame.SystemsAll
  href: Quantum.Frame.html#Quantum_Frame_SystemsAll
  name: SystemsAll
  nameWithType: Frame.SystemsAll
  fullName: Quantum.Frame.SystemsAll
- uid: Quantum.SystemBase[]
  isExternal: true
  href: Quantum.SystemBase.html
  name: SystemBase[]
  nameWithType: SystemBase[]
  fullName: Quantum.SystemBase[]
  nameWithType.vb: SystemBase()
  fullName.vb: Quantum.SystemBase()
  name.vb: SystemBase()
  spec.csharp:
  - uid: Quantum.SystemBase
    name: SystemBase
    href: Quantum.SystemBase.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.SystemBase
    name: SystemBase
    href: Quantum.SystemBase.html
  - name: (
  - name: )
- uid: Photon.Deterministic.DeterministicSession.SimulationRate
  commentId: P:Photon.Deterministic.DeterministicSession.SimulationRate
  isExternal: true
  name: SimulationRate
  nameWithType: DeterministicSession.SimulationRate
  fullName: Photon.Deterministic.DeterministicSession.SimulationRate
- uid: Quantum.Frame.SessionConfig
  commentId: P:Quantum.Frame.SessionConfig
  href: Quantum.Frame.html#Quantum_Frame_SessionConfig
  name: SessionConfig
  nameWithType: Frame.SessionConfig
  fullName: Quantum.Frame.SessionConfig
- uid: Quantum.Core.FrameBase.UpdateRate
  commentId: P:Quantum.Core.FrameBase.UpdateRate
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: UpdateRate
  nameWithType: FrameBase.UpdateRate
  fullName: Quantum.Core.FrameBase.UpdateRate
- uid: Quantum.Frame.UpdateRate*
  commentId: Overload:Quantum.Frame.UpdateRate
  href: Quantum.Frame.html#Quantum_Frame_UpdateRate
  name: UpdateRate
  nameWithType: Frame.UpdateRate
  fullName: Quantum.Frame.UpdateRate
- uid: Quantum.Core.FrameBase.PhysicsSceneSettings
  commentId: P:Quantum.Core.FrameBase.PhysicsSceneSettings
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: PhysicsSceneSettings
  nameWithType: FrameBase.PhysicsSceneSettings
  fullName: Quantum.Core.FrameBase.PhysicsSceneSettings
- uid: Quantum.Frame.PhysicsSceneSettings*
  commentId: Overload:Quantum.Frame.PhysicsSceneSettings
  href: Quantum.Frame.html#Quantum_Frame_PhysicsSceneSettings
  name: PhysicsSceneSettings
  nameWithType: Frame.PhysicsSceneSettings
  fullName: Quantum.Frame.PhysicsSceneSettings
- uid: Quantum.PhysicsSceneSettings*
  isExternal: true
  name: PhysicsSceneSettings*
  nameWithType: PhysicsSceneSettings*
  fullName: Quantum.PhysicsSceneSettings*
  spec.csharp:
  - uid: Quantum.PhysicsSceneSettings
    name: PhysicsSceneSettings
    isExternal: true
  - name: '*'
  spec.vb:
  - uid: Quantum.PhysicsSceneSettings
    name: PhysicsSceneSettings
    isExternal: true
  - name: '*'
- uid: Quantum.Core.FrameBase.DeltaTime
  commentId: P:Quantum.Core.FrameBase.DeltaTime
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: DeltaTime
  nameWithType: FrameBase.DeltaTime
  fullName: Quantum.Core.FrameBase.DeltaTime
- uid: Quantum.Frame.DeltaTime*
  commentId: Overload:Quantum.Frame.DeltaTime
  href: Quantum.Frame.html#Quantum_Frame_DeltaTime
  name: DeltaTime
  nameWithType: Frame.DeltaTime
  fullName: Quantum.Frame.DeltaTime
- uid: Photon.Deterministic.FP
  commentId: T:Photon.Deterministic.FP
  parent: Photon.Deterministic
  isExternal: true
  name: FP
  nameWithType: FP
  fullName: Photon.Deterministic.FP
- uid: Quantum.ISignalOnMapChanged
  commentId: T:Quantum.ISignalOnMapChanged
  parent: Quantum
  href: Quantum.ISignalOnMapChanged.html
  name: ISignalOnMapChanged
  nameWithType: ISignalOnMapChanged
  fullName: Quantum.ISignalOnMapChanged
- uid: Quantum.Core.FrameBase.Map
  commentId: P:Quantum.Core.FrameBase.Map
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Map
  nameWithType: FrameBase.Map
  fullName: Quantum.Core.FrameBase.Map
- uid: Quantum.Frame.Map*
  commentId: Overload:Quantum.Frame.Map
  href: Quantum.Frame.html#Quantum_Frame_Map
  name: Map
  nameWithType: Frame.Map
  fullName: Quantum.Frame.Map
- uid: Quantum.Map
  commentId: T:Quantum.Map
  parent: Quantum
  isExternal: true
  name: Map
  nameWithType: Map
  fullName: Quantum.Map
- uid: Quantum.Frame.MapAssetRef*
  commentId: Overload:Quantum.Frame.MapAssetRef
  href: Quantum.Frame.html#Quantum_Frame_MapAssetRef
  name: MapAssetRef
  nameWithType: Frame.MapAssetRef
  fullName: Quantum.Frame.MapAssetRef
- uid: Quantum.AssetRef{Quantum.Map}
  commentId: T:Quantum.AssetRef{Quantum.Map}
  parent: Quantum
  definition: Quantum.AssetRef`1
  name: AssetRef<Map>
  nameWithType: AssetRef<Map>
  fullName: Quantum.AssetRef<Quantum.Map>
  nameWithType.vb: AssetRef(Of Map)
  fullName.vb: Quantum.AssetRef(Of Quantum.Map)
  name.vb: AssetRef(Of Map)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.Map
    name: Map
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.Map
    name: Map
    isExternal: true
  - name: )
- uid: Quantum.AssetRef`1
  commentId: T:Quantum.AssetRef`1
  isExternal: true
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Frame.#ctor*
  commentId: Overload:Quantum.Frame.#ctor
  href: Quantum.Frame.html#Quantum_Frame__ctor_Quantum_Core_FrameContext_Quantum_SystemBase___Quantum_SystemBase___Photon_Deterministic_DeterministicSessionConfig_Quantum_RuntimeConfig_Quantum_SimulationConfig_Photon_Deterministic_FP_
  name: Frame
  nameWithType: Frame.Frame
  fullName: Quantum.Frame.Frame
  nameWithType.vb: Frame.New
  fullName.vb: Quantum.Frame.New
  name.vb: New
- uid: Quantum.Core.FrameContext
  commentId: T:Quantum.Core.FrameContext
  parent: Quantum.Core
  isExternal: true
  name: FrameContext
  nameWithType: FrameContext
  fullName: Quantum.Core.FrameContext
- uid: Quantum.Frame.SetPredictionArea*
  commentId: Overload:Quantum.Frame.SetPredictionArea
  href: Quantum.Frame.html#Quantum_Frame_SetPredictionArea_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_
  name: SetPredictionArea
  nameWithType: Frame.SetPredictionArea
  fullName: Quantum.Frame.SetPredictionArea
- uid: Photon.Deterministic.FPVector3
  commentId: T:Photon.Deterministic.FPVector3
  parent: Photon.Deterministic
  isExternal: true
  name: FPVector3
  nameWithType: FPVector3
  fullName: Photon.Deterministic.FPVector3
- uid: Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector3,Photon.Deterministic.FP)
  commentId: M:Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector3,Photon.Deterministic.FP)
  isExternal: true
  href: Quantum.Frame.html#Quantum_Frame_SetPredictionArea_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_
  name: SetPredictionArea(FPVector3, FP)
  nameWithType: Frame.SetPredictionArea(FPVector3, FP)
  fullName: Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector3, Photon.Deterministic.FP)
  spec.csharp:
  - uid: Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector3,Photon.Deterministic.FP)
    name: SetPredictionArea
    href: Quantum.Frame.html#Quantum_Frame_SetPredictionArea_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_
  - name: (
  - uid: Photon.Deterministic.FPVector3
    name: FPVector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.FP
    name: FP
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Frame.SetPredictionArea(Photon.Deterministic.FPVector3,Photon.Deterministic.FP)
    name: SetPredictionArea
    href: Quantum.Frame.html#Quantum_Frame_SetPredictionArea_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_
  - name: (
  - uid: Photon.Deterministic.FPVector3
    name: FPVector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.FP
    name: FP
    isExternal: true
  - name: )
- uid: Photon.Deterministic.FPVector2
  commentId: T:Photon.Deterministic.FPVector2
  parent: Photon.Deterministic
  isExternal: true
  name: FPVector2
  nameWithType: FPVector2
  fullName: Photon.Deterministic.FPVector2
- uid: Quantum.Frame.InPredictionArea*
  commentId: Overload:Quantum.Frame.InPredictionArea
  href: Quantum.Frame.html#Quantum_Frame_InPredictionArea_Photon_Deterministic_FPVector3_
  name: InPredictionArea
  nameWithType: Frame.InPredictionArea
  fullName: Quantum.Frame.InPredictionArea
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector3)
  isExternal: true
  href: Quantum.Frame.html#Quantum_Frame_InPredictionArea_Photon_Deterministic_FPVector3_
  name: InPredictionArea(FPVector3)
  nameWithType: Frame.InPredictionArea(FPVector3)
  fullName: Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector3)
  spec.csharp:
  - uid: Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector3)
    name: InPredictionArea
    href: Quantum.Frame.html#Quantum_Frame_InPredictionArea_Photon_Deterministic_FPVector3_
  - name: (
  - uid: Photon.Deterministic.FPVector3
    name: FPVector3
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.Frame.InPredictionArea(Photon.Deterministic.FPVector3)
    name: InPredictionArea
    href: Quantum.Frame.html#Quantum_Frame_InPredictionArea_Photon_Deterministic_FPVector3_
  - name: (
  - uid: Photon.Deterministic.FPVector3
    name: FPVector3
    isExternal: true
  - name: )
- uid: Photon.Deterministic.DeterministicFrame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
  commentId: M:Photon.Deterministic.DeterministicFrame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
  parent: Photon.Deterministic.DeterministicFrame
  isExternal: true
  name: Serialize(DeterministicFrameSerializeMode)
  nameWithType: DeterministicFrame.Serialize(DeterministicFrameSerializeMode)
  fullName: Photon.Deterministic.DeterministicFrame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
  spec.csharp:
  - uid: Photon.Deterministic.DeterministicFrame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
    name: Serialize
    isExternal: true
  - name: (
  - uid: Photon.Deterministic.DeterministicFrameSerializeMode
    name: DeterministicFrameSerializeMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: Photon.Deterministic.DeterministicFrame.Serialize(Photon.Deterministic.DeterministicFrameSerializeMode)
    name: Serialize
    isExternal: true
  - name: (
  - uid: Photon.Deterministic.DeterministicFrameSerializeMode
    name: DeterministicFrameSerializeMode
    isExternal: true
  - name: )
- uid: Quantum.Frame.Serialize*
  commentId: Overload:Quantum.Frame.Serialize
  href: Quantum.Frame.html#Quantum_Frame_Serialize_Photon_Deterministic_DeterministicFrameSerializeMode_
  name: Serialize
  nameWithType: Frame.Serialize
  fullName: Quantum.Frame.Serialize
- uid: Photon.Deterministic.DeterministicFrameSerializeMode
  commentId: T:Photon.Deterministic.DeterministicFrameSerializeMode
  parent: Photon.Deterministic
  isExternal: true
  name: DeterministicFrameSerializeMode
  nameWithType: DeterministicFrameSerializeMode
  fullName: Photon.Deterministic.DeterministicFrameSerializeMode
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Quantum.IAssetSerializer.SerializeAssets(System.IO.Stream,Quantum.AssetObject[])
  commentId: M:Quantum.IAssetSerializer.SerializeAssets(System.IO.Stream,Quantum.AssetObject[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: SerializeAssets(Stream, AssetObject[])
  nameWithType: IAssetSerializer.SerializeAssets(Stream, AssetObject[])
  fullName: Quantum.IAssetSerializer.SerializeAssets(System.IO.Stream, Quantum.AssetObject[])
  nameWithType.vb: IAssetSerializer.SerializeAssets(Stream, AssetObject())
  fullName.vb: Quantum.IAssetSerializer.SerializeAssets(System.IO.Stream, Quantum.AssetObject())
  name.vb: SerializeAssets(Stream, AssetObject())
  spec.csharp:
  - uid: Quantum.IAssetSerializer.SerializeAssets(System.IO.Stream,Quantum.AssetObject[])
    name: SerializeAssets
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: Quantum.AssetObject
    name: AssetObject
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Quantum.IAssetSerializer.SerializeAssets(System.IO.Stream,Quantum.AssetObject[])
    name: SerializeAssets
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: Quantum.AssetObject
    name: AssetObject
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  name: ArraySegment<byte>
  nameWithType: ArraySegment<byte>
  fullName: System.ArraySegment<byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: System.ArraySegment(Of Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.arraysegment-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.FrameSerializer
  commentId: T:Quantum.FrameSerializer
  parent: Quantum
  isExternal: true
  name: FrameSerializer
  nameWithType: FrameSerializer
  fullName: Quantum.FrameSerializer
- uid: Photon.Deterministic.DeterministicFrame.Deserialize(System.Byte[])
  commentId: M:Photon.Deterministic.DeterministicFrame.Deserialize(System.Byte[])
  parent: Photon.Deterministic.DeterministicFrame
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: Deserialize(byte[])
  nameWithType: DeterministicFrame.Deserialize(byte[])
  fullName: Photon.Deterministic.DeterministicFrame.Deserialize(byte[])
  nameWithType.vb: DeterministicFrame.Deserialize(Byte())
  fullName.vb: Photon.Deterministic.DeterministicFrame.Deserialize(Byte())
  name.vb: Deserialize(Byte())
  spec.csharp:
  - uid: Photon.Deterministic.DeterministicFrame.Deserialize(System.Byte[])
    name: Deserialize
    isExternal: true
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Photon.Deterministic.DeterministicFrame.Deserialize(System.Byte[])
    name: Deserialize
    isExternal: true
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: Quantum.Frame.Deserialize*
  commentId: Overload:Quantum.Frame.Deserialize
  href: Quantum.Frame.html#Quantum_Frame_Deserialize_System_Byte___
  name: Deserialize
  nameWithType: Frame.Deserialize
  fullName: Quantum.Frame.Deserialize
- uid: Quantum.Frame.DumpFlag_AssetDBCheckums
  commentId: F:Quantum.Frame.DumpFlag_AssetDBCheckums
  href: Quantum.Frame.html#Quantum_Frame_DumpFlag_AssetDBCheckums
  name: DumpFlag_AssetDBCheckums
  nameWithType: Frame.DumpFlag_AssetDBCheckums
  fullName: Quantum.Frame.DumpFlag_AssetDBCheckums
- uid: Photon.Deterministic.DeterministicFrame.DumpFrame(System.Int32)
  commentId: M:Photon.Deterministic.DeterministicFrame.DumpFrame(System.Int32)
  parent: Photon.Deterministic.DeterministicFrame
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: DumpFrame(int)
  nameWithType: DeterministicFrame.DumpFrame(int)
  fullName: Photon.Deterministic.DeterministicFrame.DumpFrame(int)
  nameWithType.vb: DeterministicFrame.DumpFrame(Integer)
  fullName.vb: Photon.Deterministic.DeterministicFrame.DumpFrame(Integer)
  name.vb: DumpFrame(Integer)
  spec.csharp:
  - uid: Photon.Deterministic.DeterministicFrame.DumpFrame(System.Int32)
    name: DumpFrame
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Photon.Deterministic.DeterministicFrame.DumpFrame(System.Int32)
    name: DumpFrame
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Quantum.Frame.DumpFrame*
  commentId: Overload:Quantum.Frame.DumpFrame
  href: Quantum.Frame.html#Quantum_Frame_DumpFrame_System_Int32_
  name: DumpFrame
  nameWithType: Frame.DumpFrame
  fullName: Quantum.Frame.DumpFrame
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Quantum.QuantumGameFlags.DisableSharedChecksumSerializer
  commentId: F:Quantum.QuantumGameFlags.DisableSharedChecksumSerializer
  href: Quantum.QuantumGameFlags.html#Quantum_QuantumGameFlags_DisableSharedChecksumSerializer
  name: DisableSharedChecksumSerializer
  nameWithType: QuantumGameFlags.DisableSharedChecksumSerializer
  fullName: Quantum.QuantumGameFlags.DisableSharedChecksumSerializer
- uid: Photon.Deterministic.DeterministicFrame.CalculateChecksum
  commentId: M:Photon.Deterministic.DeterministicFrame.CalculateChecksum
  parent: Photon.Deterministic.DeterministicFrame
  isExternal: true
  name: CalculateChecksum()
  nameWithType: DeterministicFrame.CalculateChecksum()
  fullName: Photon.Deterministic.DeterministicFrame.CalculateChecksum()
  spec.csharp:
  - uid: Photon.Deterministic.DeterministicFrame.CalculateChecksum
    name: CalculateChecksum
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Photon.Deterministic.DeterministicFrame.CalculateChecksum
    name: CalculateChecksum
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.Frame.CalculateChecksum*
  commentId: Overload:Quantum.Frame.CalculateChecksum
  href: Quantum.Frame.html#Quantum_Frame_CalculateChecksum
  name: CalculateChecksum
  nameWithType: Frame.CalculateChecksum
  fullName: Quantum.Frame.CalculateChecksum
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Photon.Deterministic.DeterministicFrame.Copy(Photon.Deterministic.DeterministicFrame)
  commentId: M:Photon.Deterministic.DeterministicFrame.Copy(Photon.Deterministic.DeterministicFrame)
  parent: Photon.Deterministic.DeterministicFrame
  isExternal: true
  name: Copy(DeterministicFrame)
  nameWithType: DeterministicFrame.Copy(DeterministicFrame)
  fullName: Photon.Deterministic.DeterministicFrame.Copy(Photon.Deterministic.DeterministicFrame)
  spec.csharp:
  - uid: Photon.Deterministic.DeterministicFrame.Copy(Photon.Deterministic.DeterministicFrame)
    name: Copy
    isExternal: true
  - name: (
  - uid: Photon.Deterministic.DeterministicFrame
    name: DeterministicFrame
    isExternal: true
  - name: )
  spec.vb:
  - uid: Photon.Deterministic.DeterministicFrame.Copy(Photon.Deterministic.DeterministicFrame)
    name: Copy
    isExternal: true
  - name: (
  - uid: Photon.Deterministic.DeterministicFrame
    name: DeterministicFrame
    isExternal: true
  - name: )
- uid: Quantum.Frame.Copy*
  commentId: Overload:Quantum.Frame.Copy
  href: Quantum.Frame.html#Quantum_Frame_Copy_Photon_Deterministic_DeterministicFrame_
  name: Copy
  nameWithType: Frame.Copy
  fullName: Quantum.Frame.Copy
- uid: Quantum.Core.FrameBase.Free
  commentId: M:Quantum.Core.FrameBase.Free
  parent: Quantum.Core.FrameBase
  isExternal: true
  name: Free()
  nameWithType: FrameBase.Free()
  fullName: Quantum.Core.FrameBase.Free()
  spec.csharp:
  - uid: Quantum.Core.FrameBase.Free
    name: Free
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.Core.FrameBase.Free
    name: Free
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.Frame.Free*
  commentId: Overload:Quantum.Frame.Free
  href: Quantum.Frame.html#Quantum_Frame_Free
  name: Free
  nameWithType: Frame.Free
  fullName: Quantum.Frame.Free
- uid: Quantum.Frame.SystemIsEnabledSelf*
  commentId: Overload:Quantum.Frame.SystemIsEnabledSelf
  href: Quantum.Frame.html#Quantum_Frame_SystemIsEnabledSelf__1
  name: SystemIsEnabledSelf
  nameWithType: Frame.SystemIsEnabledSelf
  fullName: Quantum.Frame.SystemIsEnabledSelf
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Quantum.SystemBase
  commentId: T:Quantum.SystemBase
  parent: Quantum
  href: Quantum.SystemBase.html
  name: SystemBase
  nameWithType: SystemBase
  fullName: Quantum.SystemBase
- uid: Quantum.Frame.SystemIsEnabledInHierarchy*
  commentId: Overload:Quantum.Frame.SystemIsEnabledInHierarchy
  href: Quantum.Frame.html#Quantum_Frame_SystemIsEnabledInHierarchy__1
  name: SystemIsEnabledInHierarchy
  nameWithType: Frame.SystemIsEnabledInHierarchy
  fullName: Quantum.Frame.SystemIsEnabledInHierarchy
- uid: Quantum.Frame.SystemEnable*
  commentId: Overload:Quantum.Frame.SystemEnable
  href: Quantum.Frame.html#Quantum_Frame_SystemEnable__1
  name: SystemEnable
  nameWithType: Frame.SystemEnable
  fullName: Quantum.Frame.SystemEnable
- uid: Quantum.Frame.SystemDisable*
  commentId: Overload:Quantum.Frame.SystemDisable
  href: Quantum.Frame.html#Quantum_Frame_SystemDisable__1
  name: SystemDisable
  nameWithType: Frame.SystemDisable
  fullName: Quantum.Frame.SystemDisable
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Quantum.Frame.InitStatic*
  commentId: Overload:Quantum.Frame.InitStatic
  href: Quantum.Frame.html#Quantum_Frame_InitStatic
  name: InitStatic
  nameWithType: Frame.InitStatic
  fullName: Quantum.Frame.InitStatic
- uid: Quantum.Frame.GetPlayerData*
  commentId: Overload:Quantum.Frame.GetPlayerData
  href: Quantum.Frame.html#Quantum_Frame_GetPlayerData_Quantum_PlayerRef_
  name: GetPlayerData
  nameWithType: Frame.GetPlayerData
  fullName: Quantum.Frame.GetPlayerData
- uid: Quantum.Frame.PlayerToActorId*
  commentId: Overload:Quantum.Frame.PlayerToActorId
  href: Quantum.Frame.html#Quantum_Frame_PlayerToActorId_Quantum_PlayerRef_
  name: PlayerToActorId
  nameWithType: Frame.PlayerToActorId
  fullName: Quantum.Frame.PlayerToActorId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Frame.ActorIdToFirstPlayer*
  commentId: Overload:Quantum.Frame.ActorIdToFirstPlayer
  href: Quantum.Frame.html#Quantum_Frame_ActorIdToFirstPlayer_System_Int32_
  name: ActorIdToFirstPlayer
  nameWithType: Frame.ActorIdToFirstPlayer
  fullName: Quantum.Frame.ActorIdToFirstPlayer
- uid: System.Nullable{Quantum.PlayerRef}
  commentId: T:System.Nullable{Quantum.PlayerRef}
  parent: System
  definition: System.Nullable`1
  name: PlayerRef?
  nameWithType: PlayerRef?
  fullName: Quantum.PlayerRef?
  spec.csharp:
  - uid: Quantum.PlayerRef
    name: PlayerRef
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Quantum.PlayerRef
    name: PlayerRef
    isExternal: true
  - name: '?'
- uid: Quantum.Frame.ActorIdToAllPlayers*
  commentId: Overload:Quantum.Frame.ActorIdToAllPlayers
  href: Quantum.Frame.html#Quantum_Frame_ActorIdToAllPlayers_System_Int32_
  name: ActorIdToAllPlayers
  nameWithType: Frame.ActorIdToAllPlayers
  fullName: Quantum.Frame.ActorIdToAllPlayers
- uid: Quantum.PlayerRef[]
  isExternal: true
  name: PlayerRef[]
  nameWithType: PlayerRef[]
  fullName: Quantum.PlayerRef[]
  nameWithType.vb: PlayerRef()
  fullName.vb: Quantum.PlayerRef()
  name.vb: PlayerRef()
  spec.csharp:
  - uid: Quantum.PlayerRef
    name: PlayerRef
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.PlayerRef
    name: PlayerRef
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.Frame.UpdatePlayerData*
  commentId: Overload:Quantum.Frame.UpdatePlayerData
  href: Quantum.Frame.html#Quantum_Frame_UpdatePlayerData_Photon_Deterministic_IDeterministicGame_
  name: UpdatePlayerData
  nameWithType: Frame.UpdatePlayerData
  fullName: Quantum.Frame.UpdatePlayerData
- uid: Photon.Deterministic.IDeterministicGame
  commentId: T:Photon.Deterministic.IDeterministicGame
  parent: Photon.Deterministic
  isExternal: true
  name: IDeterministicGame
  nameWithType: IDeterministicGame
  fullName: Photon.Deterministic.IDeterministicGame
