### YamlMime:ManagedReference
items:
- uid: Quantum.KCC
  commentId: T:Quantum.KCC
  id: KCC
  parent: Quantum
  children:
  - Quantum.KCC.ALIGNMENT
  - Quantum.KCC.AddExternalDelta(Photon.Deterministic.FPVector3)
  - Quantum.KCC.AddExternalForce(Photon.Deterministic.FPVector3)
  - Quantum.KCC.AddExternalImpulse(Photon.Deterministic.FPVector3)
  - Quantum.KCC.AddLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP)
  - Quantum.KCC.AddLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP)
  - Quantum.KCC.AddLookRotation(Photon.Deterministic.FPVector2)
  - Quantum.KCC.AddLookRotation(Photon.Deterministic.FPVector2,Photon.Deterministic.FP,Photon.Deterministic.FP)
  - Quantum.KCC.AddModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},Quantum.EntityRef,System.Boolean)
  - Quantum.KCC.AddModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},System.Boolean)
  - Quantum.KCC.CapsuleCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  - Quantum.KCC.CapsuleOverlap(Quantum.KCCContext,Quantum.KCCOverlapInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Quantum.QueryOptions)
  - Quantum.KCC.ClearPointers(Quantum.Core.FrameBase,Quantum.EntityRef)
  - Quantum.KCC.Collisions
  - Quantum.KCC.Data
  - Quantum.KCC.Deinitialize(Quantum.KCCContext)
  - Quantum.KCC.GetHashCode
  - Quantum.KCC.GetLookRotation(System.Boolean,System.Boolean)
  - Quantum.KCC.GroundNormal
  - Quantum.KCC.HasJumped
  - Quantum.KCC.Ignores
  - Quantum.KCC.Initialize(Quantum.KCCContext)
  - Quantum.KCC.IsActive
  - Quantum.KCC.IsGrounded
  - Quantum.KCC.IsInitialized
  - Quantum.KCC.IsSnappingToGround
  - Quantum.KCC.IsSteppingUp
  - Quantum.KCC.Jump(Photon.Deterministic.FPVector3)
  - Quantum.KCC.Modifiers
  - Quantum.KCC.OnRemoved(Quantum.Core.FrameBase,Quantum.EntityRef,System.Void*)
  - Quantum.KCC.Position
  - Quantum.KCC.RayCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  - Quantum.KCC.RealSpeed
  - Quantum.KCC.RealVelocity
  - Quantum.KCC.RemoveModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},Quantum.EntityRef,System.Boolean)
  - Quantum.KCC.RemoveModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},System.Boolean)
  - Quantum.KCC.ResetData
  - Quantum.KCC.ResolvePenetration(Quantum.KCCContext,Quantum.KCCOverlapInfo,Quantum.KCCData@,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Quantum.LayerMask,System.Int32)
  - Quantum.KCC.ResolvePenetration(Quantum.KCCContext,Quantum.KCCOverlapInfo,Quantum.KCCData@,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,System.Int32)
  - Quantum.KCC.SIZE
  - Quantum.KCC.Serialize(System.Void*,Quantum.FrameSerializer)
  - Quantum.KCC.SetActive(System.Boolean)
  - Quantum.KCC.SetDynamicVelocity(Photon.Deterministic.FPVector3)
  - Quantum.KCC.SetExternalDelta(Photon.Deterministic.FPVector3)
  - Quantum.KCC.SetExternalForce(Photon.Deterministic.FPVector3)
  - Quantum.KCC.SetExternalImpulse(Photon.Deterministic.FPVector3)
  - Quantum.KCC.SetGravity(Photon.Deterministic.FPVector3)
  - Quantum.KCC.SetIgnoreCollider(Quantum.Frame,Quantum.EntityRef,System.Boolean)
  - Quantum.KCC.SetIgnoreCollider(Quantum.Frame,System.Int32,System.Boolean)
  - Quantum.KCC.SetInputDirection(Photon.Deterministic.FPVector3,System.Boolean)
  - Quantum.KCC.SetKinematicDirection(Photon.Deterministic.FPVector3)
  - Quantum.KCC.SetKinematicSpeed(Photon.Deterministic.FP)
  - Quantum.KCC.SetKinematicVelocity(Photon.Deterministic.FPVector3)
  - Quantum.KCC.SetLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP)
  - Quantum.KCC.SetLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP)
  - Quantum.KCC.SetLookRotation(Photon.Deterministic.FPQuaternion,System.Boolean,System.Boolean)
  - Quantum.KCC.SetLookRotation(Photon.Deterministic.FPVector2)
  - Quantum.KCC.SetLookRotation(Photon.Deterministic.FPVector2,Photon.Deterministic.FP,Photon.Deterministic.FP)
  - Quantum.KCC.Settings
  - Quantum.KCC.SphereCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  - Quantum.KCC.SphereOverlap(Quantum.KCCContext,Quantum.KCCOverlapInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  - Quantum.KCC.Teleport(Photon.Deterministic.FPVector3)
  - Quantum.KCC.TryAddModifier(Quantum.KCCContext,Quantum.AssetRef,System.Boolean)
  - Quantum.KCC.TryAddModifier(Quantum.KCCContext,Quantum.EntityRef,System.Boolean)
  - Quantum.KCC.TryRemoveModifier(Quantum.KCCContext,Quantum.AssetRef,System.Boolean)
  - Quantum.KCC.TryRemoveModifier(Quantum.KCCContext,Quantum.EntityRef,System.Boolean)
  - Quantum.KCC.Update(Quantum.KCCContext)
  langs:
  - csharp
  - vb
  name: KCC
  nameWithType: KCC
  fullName: Quantum.KCC
  type: Struct
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Depenetration.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: KCC
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Depenetration.cs
    startLine: 7
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: 'public struct KCC : IComponent'
    content.vb: Public Structure KCC Implements IComponent
  implements:
  - Quantum.IComponent
- uid: Quantum.KCC.IsActive
  commentId: P:Quantum.KCC.IsActive
  id: IsActive
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: KCC.IsActive
  fullName: Quantum.KCC.IsActive
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: IsActive
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 10
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Controls execution of the KCC.
  example: []
  syntax:
    content: public bool IsActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsActive As Boolean
  overload: Quantum.KCC.IsActive*
- uid: Quantum.KCC.IsGrounded
  commentId: P:Quantum.KCC.IsGrounded
  id: IsGrounded
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: IsGrounded
  nameWithType: KCC.IsGrounded
  fullName: Quantum.KCC.IsGrounded
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: IsGrounded
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 15
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Flag that indicates the KCC is touching a collider with normal angle lower than <code>KCCData.MaxGroundAngle</code>.
  example: []
  syntax:
    content: public bool IsGrounded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsGrounded As Boolean
  overload: Quantum.KCC.IsGrounded*
- uid: Quantum.KCC.IsSteppingUp
  commentId: P:Quantum.KCC.IsSteppingUp
  id: IsSteppingUp
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: IsSteppingUp
  nameWithType: KCC.IsSteppingUp
  fullName: Quantum.KCC.IsSteppingUp
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: IsSteppingUp
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 20
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Indicates the KCC is stepping up.
  example: []
  syntax:
    content: public bool IsSteppingUp { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSteppingUp As Boolean
  overload: Quantum.KCC.IsSteppingUp*
- uid: Quantum.KCC.IsSnappingToGround
  commentId: P:Quantum.KCC.IsSnappingToGround
  id: IsSnappingToGround
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: IsSnappingToGround
  nameWithType: KCC.IsSnappingToGround
  fullName: Quantum.KCC.IsSnappingToGround
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: IsSnappingToGround
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 25
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Indicates the KCC temporarily lost grounded state and is snapping to ground.
  example: []
  syntax:
    content: public bool IsSnappingToGround { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSnappingToGround As Boolean
  overload: Quantum.KCC.IsSnappingToGround*
- uid: Quantum.KCC.HasJumped
  commentId: P:Quantum.KCC.HasJumped
  id: HasJumped
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: HasJumped
  nameWithType: KCC.HasJumped
  fullName: Quantum.KCC.HasJumped
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: HasJumped
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 30
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Flag that indicates the KCC has jumped in current tick.
  example: []
  syntax:
    content: public bool HasJumped { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasJumped As Boolean
  overload: Quantum.KCC.HasJumped*
- uid: Quantum.KCC.Position
  commentId: P:Quantum.KCC.Position
  id: Position
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: KCC.Position
  fullName: Quantum.KCC.Position
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Position
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 35
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Calculated position which is propagated to <code>Transform</code> on the end of KCC.Update().
  example: []
  syntax:
    content: public FPVector3 Position { get; }
    parameters: []
    return:
      type: Photon.Deterministic.FPVector3
    content.vb: Public ReadOnly Property Position As FPVector3
  overload: Quantum.KCC.Position*
- uid: Quantum.KCC.RealSpeed
  commentId: P:Quantum.KCC.RealSpeed
  id: RealSpeed
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: RealSpeed
  nameWithType: KCC.RealSpeed
  fullName: Quantum.KCC.RealSpeed
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: RealSpeed
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 40
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Speed calculated from real position change.
  example: []
  syntax:
    content: public FP RealSpeed { get; }
    parameters: []
    return:
      type: Photon.Deterministic.FP
    content.vb: Public ReadOnly Property RealSpeed As FP
  overload: Quantum.KCC.RealSpeed*
- uid: Quantum.KCC.RealVelocity
  commentId: P:Quantum.KCC.RealVelocity
  id: RealVelocity
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: RealVelocity
  nameWithType: KCC.RealVelocity
  fullName: Quantum.KCC.RealVelocity
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: RealVelocity
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 45
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Velocity calculated from real position change.
  example: []
  syntax:
    content: public FPVector3 RealVelocity { get; }
    parameters: []
    return:
      type: Photon.Deterministic.FPVector3
    content.vb: Public ReadOnly Property RealVelocity As FPVector3
  overload: Quantum.KCC.RealVelocity*
- uid: Quantum.KCC.GroundNormal
  commentId: P:Quantum.KCC.GroundNormal
  id: GroundNormal
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: GroundNormal
  nameWithType: KCC.GroundNormal
  fullName: Quantum.KCC.GroundNormal
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GroundNormal
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 50
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Combined normal of all touching colliders. Normals less distant from up direction have bigger impacton final normal.
  example: []
  syntax:
    content: public FPVector3 GroundNormal { get; }
    parameters: []
    return:
      type: Photon.Deterministic.FPVector3
    content.vb: Public ReadOnly Property GroundNormal As FPVector3
  overload: Quantum.KCC.GroundNormal*
- uid: Quantum.KCC.SetActive(System.Boolean)
  commentId: M:Quantum.KCC.SetActive(System.Boolean)
  id: SetActive(System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetActive(bool)
  nameWithType: KCC.SetActive(bool)
  fullName: Quantum.KCC.SetActive(bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetActive
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 56
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Controls execution of the KCC. No movement/callbacks are executed if the KCC is inactive.

    Setting KCC inactive also forces all tracked collisions being removed in following Update().
  example: []
  syntax:
    content: public void SetActive(bool isActive)
    parameters:
    - id: isActive
      type: System.Boolean
    content.vb: Public Sub SetActive(isActive As Boolean)
  overload: Quantum.KCC.SetActive*
  nameWithType.vb: KCC.SetActive(Boolean)
  fullName.vb: Quantum.KCC.SetActive(Boolean)
  name.vb: SetActive(Boolean)
- uid: Quantum.KCC.SetGravity(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.SetGravity(Photon.Deterministic.FPVector3)
  id: SetGravity(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetGravity(FPVector3)
  nameWithType: KCC.SetGravity(FPVector3)
  fullName: Quantum.KCC.SetGravity(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetGravity
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 65
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Set gravity vector.
  example: []
  syntax:
    content: public void SetGravity(FPVector3 gravity)
    parameters:
    - id: gravity
      type: Photon.Deterministic.FPVector3
      description: Gravity vector.
    content.vb: Public Sub SetGravity(gravity As FPVector3)
  overload: Quantum.KCC.SetGravity*
- uid: Quantum.KCC.SetInputDirection(Photon.Deterministic.FPVector3,System.Boolean)
  commentId: M:Quantum.KCC.SetInputDirection(Photon.Deterministic.FPVector3,System.Boolean)
  id: SetInputDirection(Photon.Deterministic.FPVector3,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetInputDirection(FPVector3, bool)
  nameWithType: KCC.SetInputDirection(FPVector3, bool)
  fullName: Quantum.KCC.SetInputDirection(Photon.Deterministic.FPVector3, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetInputDirection
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 75
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Set input direction of the KCC.
  example: []
  syntax:
    content: public void SetInputDirection(FPVector3 direction, bool clampToNormalized = true)
    parameters:
    - id: direction
      type: Photon.Deterministic.FPVector3
      description: Input direction in world space.
    - id: clampToNormalized
      type: System.Boolean
      description: Vector with magnitude greater than 1.0 is normalized.
    content.vb: Public Sub SetInputDirection(direction As FPVector3, clampToNormalized As Boolean = True)
  overload: Quantum.KCC.SetInputDirection*
  nameWithType.vb: KCC.SetInputDirection(FPVector3, Boolean)
  fullName.vb: Quantum.KCC.SetInputDirection(Photon.Deterministic.FPVector3, Boolean)
  name.vb: SetInputDirection(FPVector3, Boolean)
- uid: Quantum.KCC.GetLookRotation(System.Boolean,System.Boolean)
  commentId: M:Quantum.KCC.GetLookRotation(System.Boolean,System.Boolean)
  id: GetLookRotation(System.Boolean,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: GetLookRotation(bool, bool)
  nameWithType: KCC.GetLookRotation(bool, bool)
  fullName: Quantum.KCC.GetLookRotation(bool, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetLookRotation
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 88
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns current look rotation.
  example: []
  syntax:
    content: public FPVector2 GetLookRotation(bool pitch = true, bool yaw = true)
    parameters:
    - id: pitch
      type: System.Boolean
    - id: yaw
      type: System.Boolean
    return:
      type: Photon.Deterministic.FPVector2
    content.vb: Public Function GetLookRotation(pitch As Boolean = True, yaw As Boolean = True) As FPVector2
  overload: Quantum.KCC.GetLookRotation*
  nameWithType.vb: KCC.GetLookRotation(Boolean, Boolean)
  fullName.vb: Quantum.KCC.GetLookRotation(Boolean, Boolean)
  name.vb: GetLookRotation(Boolean, Boolean)
- uid: Quantum.KCC.AddLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP)
  commentId: M:Quantum.KCC.AddLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP)
  id: AddLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: AddLookRotation(FP, FP)
  nameWithType: KCC.AddLookRotation(FP, FP)
  fullName: Quantum.KCC.AddLookRotation(Photon.Deterministic.FP, Photon.Deterministic.FP)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddLookRotation
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 97
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Add pitch and yaw look rotation. Resulting values are clamped to &lt;-90, 90&gt; (pitch) and &lt;-180, 180&gt; (yaw).

    Changes are propagated to Transform component in following KCC update.
  example: []
  syntax:
    content: public void AddLookRotation(FP pitchDelta, FP yawDelta)
    parameters:
    - id: pitchDelta
      type: Photon.Deterministic.FP
    - id: yawDelta
      type: Photon.Deterministic.FP
    content.vb: Public Sub AddLookRotation(pitchDelta As FP, yawDelta As FP)
  overload: Quantum.KCC.AddLookRotation*
- uid: Quantum.KCC.AddLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP)
  commentId: M:Quantum.KCC.AddLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP)
  id: AddLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: AddLookRotation(FP, FP, FP, FP)
  nameWithType: KCC.AddLookRotation(FP, FP, FP, FP)
  fullName: Quantum.KCC.AddLookRotation(Photon.Deterministic.FP, Photon.Deterministic.FP, Photon.Deterministic.FP, Photon.Deterministic.FP)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddLookRotation
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 106
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Add pitch and yaw look rotation. Resulting values are clamped to &lt;minPitch, maxPitch&gt; (pitch) and &lt;-180, 180&gt; (yaw).

    Changes are propagated to Transform component in following KCC update.
  example: []
  syntax:
    content: public void AddLookRotation(FP pitchDelta, FP yawDelta, FP minPitch, FP maxPitch)
    parameters:
    - id: pitchDelta
      type: Photon.Deterministic.FP
    - id: yawDelta
      type: Photon.Deterministic.FP
    - id: minPitch
      type: Photon.Deterministic.FP
    - id: maxPitch
      type: Photon.Deterministic.FP
    content.vb: Public Sub AddLookRotation(pitchDelta As FP, yawDelta As FP, minPitch As FP, maxPitch As FP)
  overload: Quantum.KCC.AddLookRotation*
- uid: Quantum.KCC.AddLookRotation(Photon.Deterministic.FPVector2)
  commentId: M:Quantum.KCC.AddLookRotation(Photon.Deterministic.FPVector2)
  id: AddLookRotation(Photon.Deterministic.FPVector2)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: AddLookRotation(FPVector2)
  nameWithType: KCC.AddLookRotation(FPVector2)
  fullName: Quantum.KCC.AddLookRotation(Photon.Deterministic.FPVector2)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddLookRotation
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 115
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Add pitch (x) and yaw (y) look rotation. Resulting values are clamped to &lt;-90, 90&gt; (pitch) and &lt;-180, 180&gt; (yaw).

    Changes are propagated to Transform component in following KCC update.
  example: []
  syntax:
    content: public void AddLookRotation(FPVector2 lookRotationDelta)
    parameters:
    - id: lookRotationDelta
      type: Photon.Deterministic.FPVector2
    content.vb: Public Sub AddLookRotation(lookRotationDelta As FPVector2)
  overload: Quantum.KCC.AddLookRotation*
- uid: Quantum.KCC.AddLookRotation(Photon.Deterministic.FPVector2,Photon.Deterministic.FP,Photon.Deterministic.FP)
  commentId: M:Quantum.KCC.AddLookRotation(Photon.Deterministic.FPVector2,Photon.Deterministic.FP,Photon.Deterministic.FP)
  id: AddLookRotation(Photon.Deterministic.FPVector2,Photon.Deterministic.FP,Photon.Deterministic.FP)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: AddLookRotation(FPVector2, FP, FP)
  nameWithType: KCC.AddLookRotation(FPVector2, FP, FP)
  fullName: Quantum.KCC.AddLookRotation(Photon.Deterministic.FPVector2, Photon.Deterministic.FP, Photon.Deterministic.FP)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddLookRotation
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 124
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Add pitch (x) and yaw (y) look rotation. Resulting values are clamped to &lt;minPitch, maxPitch&gt; (pitch) and &lt;-180, 180&gt; (yaw).

    Changes are propagated to Transform component in following KCC update.
  example: []
  syntax:
    content: public void AddLookRotation(FPVector2 lookRotationDelta, FP minPitch, FP maxPitch)
    parameters:
    - id: lookRotationDelta
      type: Photon.Deterministic.FPVector2
    - id: minPitch
      type: Photon.Deterministic.FP
    - id: maxPitch
      type: Photon.Deterministic.FP
    content.vb: Public Sub AddLookRotation(lookRotationDelta As FPVector2, minPitch As FP, maxPitch As FP)
  overload: Quantum.KCC.AddLookRotation*
- uid: Quantum.KCC.SetLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP)
  commentId: M:Quantum.KCC.SetLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP)
  id: SetLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetLookRotation(FP, FP)
  nameWithType: KCC.SetLookRotation(FP, FP)
  fullName: Quantum.KCC.SetLookRotation(Photon.Deterministic.FP, Photon.Deterministic.FP)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetLookRotation
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 133
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Set pitch and yaw look rotation. Values are clamped to &lt;-90, 90&gt; (pitch) and &lt;-180, 180&gt; (yaw).

    Changes are propagated to Transform component in following KCC update.
  example: []
  syntax:
    content: public void SetLookRotation(FP pitch, FP yaw)
    parameters:
    - id: pitch
      type: Photon.Deterministic.FP
    - id: yaw
      type: Photon.Deterministic.FP
    content.vb: Public Sub SetLookRotation(pitch As FP, yaw As FP)
  overload: Quantum.KCC.SetLookRotation*
- uid: Quantum.KCC.SetLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP)
  commentId: M:Quantum.KCC.SetLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP)
  id: SetLookRotation(Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetLookRotation(FP, FP, FP, FP)
  nameWithType: KCC.SetLookRotation(FP, FP, FP, FP)
  fullName: Quantum.KCC.SetLookRotation(Photon.Deterministic.FP, Photon.Deterministic.FP, Photon.Deterministic.FP, Photon.Deterministic.FP)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetLookRotation
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 142
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Set pitch and yaw look rotation. Values are clamped to &lt;minPitch, maxPitch&gt; (pitch) and &lt;-180, 180&gt; (yaw).

    Changes are propagated to Transform component in following KCC update.
  example: []
  syntax:
    content: public void SetLookRotation(FP pitch, FP yaw, FP minPitch, FP maxPitch)
    parameters:
    - id: pitch
      type: Photon.Deterministic.FP
    - id: yaw
      type: Photon.Deterministic.FP
    - id: minPitch
      type: Photon.Deterministic.FP
    - id: maxPitch
      type: Photon.Deterministic.FP
    content.vb: Public Sub SetLookRotation(pitch As FP, yaw As FP, minPitch As FP, maxPitch As FP)
  overload: Quantum.KCC.SetLookRotation*
- uid: Quantum.KCC.SetLookRotation(Photon.Deterministic.FPVector2)
  commentId: M:Quantum.KCC.SetLookRotation(Photon.Deterministic.FPVector2)
  id: SetLookRotation(Photon.Deterministic.FPVector2)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetLookRotation(FPVector2)
  nameWithType: KCC.SetLookRotation(FPVector2)
  fullName: Quantum.KCC.SetLookRotation(Photon.Deterministic.FPVector2)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetLookRotation
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 151
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Set pitch and yaw look rotation. Values are clamped to &lt;-90, 90&gt; (pitch) and &lt;-180, 180&gt; (yaw).

    Changes are propagated to Transform component in following KCC update.
  example: []
  syntax:
    content: public void SetLookRotation(FPVector2 lookRotation)
    parameters:
    - id: lookRotation
      type: Photon.Deterministic.FPVector2
    content.vb: Public Sub SetLookRotation(lookRotation As FPVector2)
  overload: Quantum.KCC.SetLookRotation*
- uid: Quantum.KCC.SetLookRotation(Photon.Deterministic.FPVector2,Photon.Deterministic.FP,Photon.Deterministic.FP)
  commentId: M:Quantum.KCC.SetLookRotation(Photon.Deterministic.FPVector2,Photon.Deterministic.FP,Photon.Deterministic.FP)
  id: SetLookRotation(Photon.Deterministic.FPVector2,Photon.Deterministic.FP,Photon.Deterministic.FP)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetLookRotation(FPVector2, FP, FP)
  nameWithType: KCC.SetLookRotation(FPVector2, FP, FP)
  fullName: Quantum.KCC.SetLookRotation(Photon.Deterministic.FPVector2, Photon.Deterministic.FP, Photon.Deterministic.FP)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetLookRotation
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 160
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Set pitch and yaw look rotation. Values are clamped to &lt;minPitch, maxPitch&gt; (pitch) and &lt;-180, 180&gt; (yaw).

    Changes are propagated to Transform component in following KCC update.
  example: []
  syntax:
    content: public void SetLookRotation(FPVector2 lookRotation, FP minPitch, FP maxPitch)
    parameters:
    - id: lookRotation
      type: Photon.Deterministic.FPVector2
    - id: minPitch
      type: Photon.Deterministic.FP
    - id: maxPitch
      type: Photon.Deterministic.FP
    content.vb: Public Sub SetLookRotation(lookRotation As FPVector2, minPitch As FP, maxPitch As FP)
  overload: Quantum.KCC.SetLookRotation*
- uid: Quantum.KCC.SetLookRotation(Photon.Deterministic.FPQuaternion,System.Boolean,System.Boolean)
  commentId: M:Quantum.KCC.SetLookRotation(Photon.Deterministic.FPQuaternion,System.Boolean,System.Boolean)
  id: SetLookRotation(Photon.Deterministic.FPQuaternion,System.Boolean,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetLookRotation(FPQuaternion, bool, bool)
  nameWithType: KCC.SetLookRotation(FPQuaternion, bool, bool)
  fullName: Quantum.KCC.SetLookRotation(Photon.Deterministic.FPQuaternion, bool, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetLookRotation
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 169
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Set pitch and yaw look rotation. Roll is ignored (not supported). Values are clamped to &lt;-90, 90&gt; (pitch) and &lt;-180, 180&gt; (yaw).

    Changes are propagated to Transform component in following KCC update.
  example: []
  syntax:
    content: public void SetLookRotation(FPQuaternion lookRotation, bool preservePitch = false, bool preserveYaw = false)
    parameters:
    - id: lookRotation
      type: Photon.Deterministic.FPQuaternion
    - id: preservePitch
      type: System.Boolean
    - id: preserveYaw
      type: System.Boolean
    content.vb: Public Sub SetLookRotation(lookRotation As FPQuaternion, preservePitch As Boolean = False, preserveYaw As Boolean = False)
  overload: Quantum.KCC.SetLookRotation*
  nameWithType.vb: KCC.SetLookRotation(FPQuaternion, Boolean, Boolean)
  fullName.vb: Quantum.KCC.SetLookRotation(Photon.Deterministic.FPQuaternion, Boolean, Boolean)
  name.vb: SetLookRotation(FPQuaternion, Boolean, Boolean)
- uid: Quantum.KCC.Jump(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.Jump(Photon.Deterministic.FPVector3)
  id: Jump(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Jump(FPVector3)
  nameWithType: KCC.Jump(FPVector3)
  fullName: Quantum.KCC.Jump(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Jump
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 178
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Add jump impulse, which should be propagated by processors to <code>KCCData.DynamicVelocity</code>.

    The impulse will be processed in following KCC update.
  example: []
  syntax:
    content: public void Jump(FPVector3 impulse)
    parameters:
    - id: impulse
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub Jump(impulse As FPVector3)
  overload: Quantum.KCC.Jump*
- uid: Quantum.KCC.AddExternalImpulse(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.AddExternalImpulse(Photon.Deterministic.FPVector3)
  id: AddExternalImpulse(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: AddExternalImpulse(FPVector3)
  nameWithType: KCC.AddExternalImpulse(FPVector3)
  fullName: Quantum.KCC.AddExternalImpulse(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddExternalImpulse
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 186
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Add impulse from external sources. Should propagate in processors to <code>KCCData.DynamicVelocity</code>.
  example: []
  syntax:
    content: public void AddExternalImpulse(FPVector3 impulse)
    parameters:
    - id: impulse
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub AddExternalImpulse(impulse As FPVector3)
  overload: Quantum.KCC.AddExternalImpulse*
- uid: Quantum.KCC.SetExternalImpulse(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.SetExternalImpulse(Photon.Deterministic.FPVector3)
  id: SetExternalImpulse(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetExternalImpulse(FPVector3)
  nameWithType: KCC.SetExternalImpulse(FPVector3)
  fullName: Quantum.KCC.SetExternalImpulse(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetExternalImpulse
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 194
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Set impulse from external sources. Should propagate in processors to <code>KCCData.DynamicVelocity</code>.
  example: []
  syntax:
    content: public void SetExternalImpulse(FPVector3 impulse)
    parameters:
    - id: impulse
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub SetExternalImpulse(impulse As FPVector3)
  overload: Quantum.KCC.SetExternalImpulse*
- uid: Quantum.KCC.AddExternalForce(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.AddExternalForce(Photon.Deterministic.FPVector3)
  id: AddExternalForce(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: AddExternalForce(FPVector3)
  nameWithType: KCC.AddExternalForce(FPVector3)
  fullName: Quantum.KCC.AddExternalForce(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddExternalForce
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 202
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Add force from external sources. Should propagate in processors to <code>KCCData.DynamicVelocity</code>.
  example: []
  syntax:
    content: public void AddExternalForce(FPVector3 force)
    parameters:
    - id: force
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub AddExternalForce(force As FPVector3)
  overload: Quantum.KCC.AddExternalForce*
- uid: Quantum.KCC.SetExternalForce(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.SetExternalForce(Photon.Deterministic.FPVector3)
  id: SetExternalForce(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetExternalForce(FPVector3)
  nameWithType: KCC.SetExternalForce(FPVector3)
  fullName: Quantum.KCC.SetExternalForce(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetExternalForce
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 210
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Set force from external sources. Should propagate in processors to <code>KCCData.DynamicVelocity</code>.
  example: []
  syntax:
    content: public void SetExternalForce(FPVector3 force)
    parameters:
    - id: force
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub SetExternalForce(force As FPVector3)
  overload: Quantum.KCC.SetExternalForce*
- uid: Quantum.KCC.AddExternalDelta(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.AddExternalDelta(Photon.Deterministic.FPVector3)
  id: AddExternalDelta(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: AddExternalDelta(FPVector3)
  nameWithType: KCC.AddExternalDelta(FPVector3)
  fullName: Quantum.KCC.AddExternalDelta(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddExternalDelta
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 218
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Add position delta from external sources. Will be consumed by following KCC update.
  example: []
  syntax:
    content: public void AddExternalDelta(FPVector3 delta)
    parameters:
    - id: delta
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub AddExternalDelta(delta As FPVector3)
  overload: Quantum.KCC.AddExternalDelta*
- uid: Quantum.KCC.SetExternalDelta(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.SetExternalDelta(Photon.Deterministic.FPVector3)
  id: SetExternalDelta(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetExternalDelta(FPVector3)
  nameWithType: KCC.SetExternalDelta(FPVector3)
  fullName: Quantum.KCC.SetExternalDelta(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetExternalDelta
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 226
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Set position delta from external sources. Will be consumed by following KCC update.
  example: []
  syntax:
    content: public void SetExternalDelta(FPVector3 delta)
    parameters:
    - id: delta
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub SetExternalDelta(delta As FPVector3)
  overload: Quantum.KCC.SetExternalDelta*
- uid: Quantum.KCC.SetDynamicVelocity(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.SetDynamicVelocity(Photon.Deterministic.FPVector3)
  id: SetDynamicVelocity(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetDynamicVelocity(FPVector3)
  nameWithType: KCC.SetDynamicVelocity(FPVector3)
  fullName: Quantum.KCC.SetDynamicVelocity(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetDynamicVelocity
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 234
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Set <code>KCCData.DynamicVelocity</code>.
  example: []
  syntax:
    content: public void SetDynamicVelocity(FPVector3 velocity)
    parameters:
    - id: velocity
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub SetDynamicVelocity(velocity As FPVector3)
  overload: Quantum.KCC.SetDynamicVelocity*
- uid: Quantum.KCC.SetKinematicDirection(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.SetKinematicDirection(Photon.Deterministic.FPVector3)
  id: SetKinematicDirection(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetKinematicDirection(FPVector3)
  nameWithType: KCC.SetKinematicDirection(FPVector3)
  fullName: Quantum.KCC.SetKinematicDirection(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetKinematicDirection
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 242
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Set <code>KCCData.KinematicDirection</code>.
  example: []
  syntax:
    content: public void SetKinematicDirection(FPVector3 direction)
    parameters:
    - id: direction
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub SetKinematicDirection(direction As FPVector3)
  overload: Quantum.KCC.SetKinematicDirection*
- uid: Quantum.KCC.SetKinematicSpeed(Photon.Deterministic.FP)
  commentId: M:Quantum.KCC.SetKinematicSpeed(Photon.Deterministic.FP)
  id: SetKinematicSpeed(Photon.Deterministic.FP)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetKinematicSpeed(FP)
  nameWithType: KCC.SetKinematicSpeed(FP)
  fullName: Quantum.KCC.SetKinematicSpeed(Photon.Deterministic.FP)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetKinematicSpeed
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 250
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Set <code>KCCData.KinematicSpeed</code>.
  example: []
  syntax:
    content: public void SetKinematicSpeed(FP speed)
    parameters:
    - id: speed
      type: Photon.Deterministic.FP
    content.vb: Public Sub SetKinematicSpeed(speed As FP)
  overload: Quantum.KCC.SetKinematicSpeed*
- uid: Quantum.KCC.SetKinematicVelocity(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.SetKinematicVelocity(Photon.Deterministic.FPVector3)
  id: SetKinematicVelocity(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetKinematicVelocity(FPVector3)
  nameWithType: KCC.SetKinematicVelocity(FPVector3)
  fullName: Quantum.KCC.SetKinematicVelocity(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetKinematicVelocity
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 258
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Set <code>KCCData.KinematicVelocity</code>.
  example: []
  syntax:
    content: public void SetKinematicVelocity(FPVector3 velocity)
    parameters:
    - id: velocity
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub SetKinematicVelocity(velocity As FPVector3)
  overload: Quantum.KCC.SetKinematicVelocity*
- uid: Quantum.KCC.Teleport(Photon.Deterministic.FPVector3)
  commentId: M:Quantum.KCC.Teleport(Photon.Deterministic.FPVector3)
  id: Teleport(Photon.Deterministic.FPVector3)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Teleport(FPVector3)
  nameWithType: KCC.Teleport(FPVector3)
  fullName: Quantum.KCC.Teleport(Photon.Deterministic.FPVector3)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Teleport
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 269
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Sets <code>KCCData.DesiredPosition</code>, <code>KCCData.TargetPosition</code>.

    Also sets <code>KCCData.HasTeleported</code> flag to <code>true</code> and clears <code>KCCData.IsSteppingUp</code> and <code>KCCData.IsSnappingToGround</code>.

    Calling this from within a processor stage effectively stops any pending move steps and forces KCC to update hits with new overlap query.

    Calling this from outside of the KCC.Update() has no effect, the change is not propagated to Transform component.
  example: []
  syntax:
    content: public void Teleport(FPVector3 position)
    parameters:
    - id: position
      type: Photon.Deterministic.FPVector3
    content.vb: Public Sub Teleport(position As FPVector3)
  overload: Quantum.KCC.Teleport*
- uid: Quantum.KCC.ResetData
  commentId: M:Quantum.KCC.ResetData
  id: ResetData
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: ResetData()
  nameWithType: KCC.ResetData()
  fullName: Quantum.KCC.ResetData()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ResetData
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 284
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    Resets most of the <code>KCCData</code> properties to default.

    This is a soft reset and won't remove registered modifier processors.

    Active collisions will be removed in following <code>KCC.Update()</code> call.

    For immediate, full cleanup including <code>OnExit()</code> callback on all processors use <code>Deinitialize()</code>.
  example: []
  syntax:
    content: public void ResetData()
    content.vb: Public Sub ResetData()
  overload: Quantum.KCC.ResetData*
- uid: Quantum.KCC.Initialize(Quantum.KCCContext)
  commentId: M:Quantum.KCC.Initialize(Quantum.KCCContext)
  id: Initialize(Quantum.KCCContext)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Initialize(KCCContext)
  nameWithType: KCC.Initialize(KCCContext)
  fullName: Quantum.KCC.Initialize(Quantum.KCCContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Initialize
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 307
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Initialize KCC component. Called when the entity is created.
  example: []
  syntax:
    content: public void Initialize(KCCContext context)
    parameters:
    - id: context
      type: Quantum.KCCContext
    content.vb: Public Sub Initialize(context As KCCContext)
  overload: Quantum.KCC.Initialize*
- uid: Quantum.KCC.Deinitialize(Quantum.KCCContext)
  commentId: M:Quantum.KCC.Deinitialize(Quantum.KCCContext)
  id: Deinitialize(Quantum.KCCContext)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Deinitialize(KCCContext)
  nameWithType: KCC.Deinitialize(KCCContext)
  fullName: Quantum.KCC.Deinitialize(Quantum.KCCContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Deinitialize
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 339
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Deinitialize KCC component. Called when the entity is destroyed.
  example: []
  syntax:
    content: public void Deinitialize(KCCContext context)
    parameters:
    - id: context
      type: Quantum.KCCContext
    content.vb: Public Sub Deinitialize(context As KCCContext)
  overload: Quantum.KCC.Deinitialize*
- uid: Quantum.KCC.Update(Quantum.KCCContext)
  commentId: M:Quantum.KCC.Update(Quantum.KCCContext)
  id: Update(Quantum.KCCContext)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Update(KCCContext)
  nameWithType: KCC.Update(KCCContext)
  fullName: Quantum.KCC.Update(Quantum.KCCContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Update
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.cs
    startLine: 364
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void Update(KCCContext context)
    parameters:
    - id: context
      type: Quantum.KCCContext
    content.vb: Public Sub Update(context As KCCContext)
  overload: Quantum.KCC.Update*
- uid: Quantum.KCC.SphereOverlap(Quantum.KCCContext,Quantum.KCCOverlapInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  commentId: M:Quantum.KCC.SphereOverlap(Quantum.KCCContext,Quantum.KCCOverlapInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  id: SphereOverlap(Quantum.KCCContext,Quantum.KCCOverlapInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SphereOverlap(KCCContext, KCCOverlapInfo, FPVector3, FP, QueryOptions)
  nameWithType: KCC.SphereOverlap(KCCContext, KCCOverlapInfo, FPVector3, FP, QueryOptions)
  fullName: Quantum.KCC.SphereOverlap(Quantum.KCCContext, Quantum.KCCOverlapInfo, Photon.Deterministic.FPVector3, Photon.Deterministic.FP, Quantum.QueryOptions)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Physics.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SphereOverlap
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Physics.cs
    startLine: 16
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Sphere overlap using same filtering as for KCC physics query.
  example: []
  syntax:
    content: public bool SphereOverlap(KCCContext context, KCCOverlapInfo overlapInfo, FPVector3 position, FP radius, QueryOptions queryOptions)
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC udpate.
    - id: overlapInfo
      type: Quantum.KCCOverlapInfo
      description: Contains results of the overlap.
    - id: position
      type: Photon.Deterministic.FPVector3
      description: Center position of the sphere.
    - id: radius
      type: Photon.Deterministic.FP
      description: Radius of the sphere.
    - id: queryOptions
      type: Quantum.QueryOptions
      description: Use for custom query filtering.
    return:
      type: System.Boolean
    content.vb: Public Function SphereOverlap(context As KCCContext, overlapInfo As KCCOverlapInfo, position As FPVector3, radius As FP, queryOptions As QueryOptions) As Boolean
  overload: Quantum.KCC.SphereOverlap*
- uid: Quantum.KCC.CapsuleOverlap(Quantum.KCCContext,Quantum.KCCOverlapInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Quantum.QueryOptions)
  commentId: M:Quantum.KCC.CapsuleOverlap(Quantum.KCCContext,Quantum.KCCOverlapInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Quantum.QueryOptions)
  id: CapsuleOverlap(Quantum.KCCContext,Quantum.KCCOverlapInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Quantum.QueryOptions)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: CapsuleOverlap(KCCContext, KCCOverlapInfo, FPVector3, FP, FP, QueryOptions)
  nameWithType: KCC.CapsuleOverlap(KCCContext, KCCOverlapInfo, FPVector3, FP, FP, QueryOptions)
  fullName: Quantum.KCC.CapsuleOverlap(Quantum.KCCContext, Quantum.KCCOverlapInfo, Photon.Deterministic.FPVector3, Photon.Deterministic.FP, Photon.Deterministic.FP, Quantum.QueryOptions)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Physics.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: CapsuleOverlap
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Physics.cs
    startLine: 30
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Capsule overlap using same filtering as for KCC physics query.
  example: []
  syntax:
    content: public bool CapsuleOverlap(KCCContext context, KCCOverlapInfo overlapInfo, FPVector3 position, FP radius, FP height, QueryOptions queryOptions)
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC udpate.
    - id: overlapInfo
      type: Quantum.KCCOverlapInfo
      description: Contains results of the overlap.
    - id: position
      type: Photon.Deterministic.FPVector3
      description: Bottom position of the capsule.
    - id: radius
      type: Photon.Deterministic.FP
      description: Radius of the capsule.
    - id: height
      type: Photon.Deterministic.FP
      description: Height of the capsule.
    - id: queryOptions
      type: Quantum.QueryOptions
      description: Use for custom query filtering.
    return:
      type: System.Boolean
    content.vb: Public Function CapsuleOverlap(context As KCCContext, overlapInfo As KCCOverlapInfo, position As FPVector3, radius As FP, height As FP, queryOptions As QueryOptions) As Boolean
  overload: Quantum.KCC.CapsuleOverlap*
- uid: Quantum.KCC.RayCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  commentId: M:Quantum.KCC.RayCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  id: RayCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: RayCast(KCCContext, KCCShapeCastInfo, FPVector3, FPVector3, FP, QueryOptions)
  nameWithType: KCC.RayCast(KCCContext, KCCShapeCastInfo, FPVector3, FPVector3, FP, QueryOptions)
  fullName: Quantum.KCC.RayCast(Quantum.KCCContext, Quantum.KCCShapeCastInfo, Photon.Deterministic.FPVector3, Photon.Deterministic.FPVector3, Photon.Deterministic.FP, Quantum.QueryOptions)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Physics.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: RayCast
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Physics.cs
    startLine: 44
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Ray cast using same filtering as for KCC physics query.
  example: []
  syntax:
    content: public bool RayCast(KCCContext context, KCCShapeCastInfo shapeCastInfo, FPVector3 position, FPVector3 direction, FP maxDistance, QueryOptions queryOptions)
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC udpate.
    - id: shapeCastInfo
      type: Quantum.KCCShapeCastInfo
      description: Contains results of the cast sorted by distance.
    - id: position
      type: Photon.Deterministic.FPVector3
      description: Origin position of the cast.
    - id: direction
      type: Photon.Deterministic.FPVector3
      description: Direction of the cast.
    - id: maxDistance
      type: Photon.Deterministic.FP
      description: Distance of the cast.
    - id: queryOptions
      type: Quantum.QueryOptions
      description: Use for custom query filtering.
    return:
      type: System.Boolean
    content.vb: Public Function RayCast(context As KCCContext, shapeCastInfo As KCCShapeCastInfo, position As FPVector3, direction As FPVector3, maxDistance As FP, queryOptions As QueryOptions) As Boolean
  overload: Quantum.KCC.RayCast*
- uid: Quantum.KCC.SphereCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  commentId: M:Quantum.KCC.SphereCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  id: SphereCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SphereCast(KCCContext, KCCShapeCastInfo, FPVector3, FP, FPVector3, FP, QueryOptions)
  nameWithType: KCC.SphereCast(KCCContext, KCCShapeCastInfo, FPVector3, FP, FPVector3, FP, QueryOptions)
  fullName: Quantum.KCC.SphereCast(Quantum.KCCContext, Quantum.KCCShapeCastInfo, Photon.Deterministic.FPVector3, Photon.Deterministic.FP, Photon.Deterministic.FPVector3, Photon.Deterministic.FP, Quantum.QueryOptions)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Physics.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SphereCast
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Physics.cs
    startLine: 59
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Sphere cast using same filtering as for KCC physics query.
  example: []
  syntax:
    content: public bool SphereCast(KCCContext context, KCCShapeCastInfo shapeCastInfo, FPVector3 position, FP radius, FPVector3 direction, FP maxDistance, QueryOptions queryOptions)
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC udpate.
    - id: shapeCastInfo
      type: Quantum.KCCShapeCastInfo
      description: Contains results of the cast sorted by distance.
    - id: position
      type: Photon.Deterministic.FPVector3
      description: Center position of the sphere.
    - id: radius
      type: Photon.Deterministic.FP
      description: Radius of the sphere.
    - id: direction
      type: Photon.Deterministic.FPVector3
      description: Direction of the cast.
    - id: maxDistance
      type: Photon.Deterministic.FP
      description: Distance of the cast.
    - id: queryOptions
      type: Quantum.QueryOptions
      description: Use for custom query filtering.
    return:
      type: System.Boolean
    content.vb: Public Function SphereCast(context As KCCContext, shapeCastInfo As KCCShapeCastInfo, position As FPVector3, radius As FP, direction As FPVector3, maxDistance As FP, queryOptions As QueryOptions) As Boolean
  overload: Quantum.KCC.SphereCast*
- uid: Quantum.KCC.CapsuleCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  commentId: M:Quantum.KCC.CapsuleCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  id: CapsuleCast(Quantum.KCCContext,Quantum.KCCShapeCastInfo,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Quantum.QueryOptions)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: CapsuleCast(KCCContext, KCCShapeCastInfo, FPVector3, FP, FP, FPVector3, FP, QueryOptions)
  nameWithType: KCC.CapsuleCast(KCCContext, KCCShapeCastInfo, FPVector3, FP, FP, FPVector3, FP, QueryOptions)
  fullName: Quantum.KCC.CapsuleCast(Quantum.KCCContext, Quantum.KCCShapeCastInfo, Photon.Deterministic.FPVector3, Photon.Deterministic.FP, Photon.Deterministic.FP, Photon.Deterministic.FPVector3, Photon.Deterministic.FP, Quantum.QueryOptions)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Physics.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: CapsuleCast
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Physics.cs
    startLine: 75
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Capsule cast using same filtering as for KCC physics query.
  example: []
  syntax:
    content: public bool CapsuleCast(KCCContext context, KCCShapeCastInfo shapeCastInfo, FPVector3 position, FP radius, FP height, FPVector3 direction, FP maxDistance, QueryOptions queryOptions)
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC udpate.
    - id: shapeCastInfo
      type: Quantum.KCCShapeCastInfo
      description: Contains results of the cast sorted by distance.
    - id: position
      type: Photon.Deterministic.FPVector3
      description: Bottom position of the capsule.
    - id: radius
      type: Photon.Deterministic.FP
      description: Radius of the capsule.
    - id: height
      type: Photon.Deterministic.FP
      description: Height of the capsule.
    - id: direction
      type: Photon.Deterministic.FPVector3
      description: Direction of the cast.
    - id: maxDistance
      type: Photon.Deterministic.FP
      description: Distance of the cast.
    - id: queryOptions
      type: Quantum.QueryOptions
      description: Use for custom query filtering.
    return:
      type: System.Boolean
    content.vb: Public Function CapsuleCast(context As KCCContext, shapeCastInfo As KCCShapeCastInfo, position As FPVector3, radius As FP, height As FP, direction As FPVector3, maxDistance As FP, queryOptions As QueryOptions) As Boolean
  overload: Quantum.KCC.CapsuleCast*
- uid: Quantum.KCC.SIZE
  commentId: F:Quantum.KCC.SIZE
  id: SIZE
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SIZE
  nameWithType: KCC.SIZE
  fullName: Quantum.KCC.SIZE
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SIZE
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2634
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public const int SIZE = 608
    return:
      type: System.Int32
    content.vb: Public Const SIZE As Integer = 608
- uid: Quantum.KCC.ALIGNMENT
  commentId: F:Quantum.KCC.ALIGNMENT
  id: ALIGNMENT
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: ALIGNMENT
  nameWithType: KCC.ALIGNMENT
  fullName: Quantum.KCC.ALIGNMENT
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ALIGNMENT
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2635
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public const int ALIGNMENT = 8
    return:
      type: System.Int32
    content.vb: Public Const ALIGNMENT As Integer = 8
- uid: Quantum.KCC.Settings
  commentId: F:Quantum.KCC.Settings
  id: Settings
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: KCC.Settings
  fullName: Quantum.KCC.Settings
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Settings
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2637
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<KCCSettings> Settings
    return:
      type: Quantum.AssetRef{Quantum.KCCSettings}
    content.vb: Public Settings As AssetRef(Of KCCSettings)
- uid: Quantum.KCC.IsInitialized
  commentId: F:Quantum.KCC.IsInitialized
  id: IsInitialized
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: KCC.IsInitialized
  fullName: Quantum.KCC.IsInitialized
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: IsInitialized
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2640
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: >-
      [ExcludeFromPrototype]

      public QBoolean IsInitialized
    return:
      type: Quantum.QBoolean
    content.vb: >-
      <ExcludeFromPrototype>

      Public IsInitialized As QBoolean
  attributes:
  - type: Quantum.Core.ExcludeFromPrototypeAttribute
    ctor: Quantum.Core.ExcludeFromPrototypeAttribute.#ctor
    arguments: []
- uid: Quantum.KCC.Data
  commentId: F:Quantum.KCC.Data
  id: Data
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: KCC.Data
  fullName: Quantum.KCC.Data
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Data
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2643
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: >-
      [ExcludeFromPrototype]

      public KCCData Data
    return:
      type: Quantum.KCCData
    content.vb: >-
      <ExcludeFromPrototype>

      Public Data As KCCData
  attributes:
  - type: Quantum.Core.ExcludeFromPrototypeAttribute
    ctor: Quantum.Core.ExcludeFromPrototypeAttribute.#ctor
    arguments: []
- uid: Quantum.KCC.Ignores
  commentId: F:Quantum.KCC.Ignores
  id: Ignores
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Ignores
  nameWithType: KCC.Ignores
  fullName: Quantum.KCC.Ignores
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Ignores
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2646
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: >-
      [ExcludeFromPrototype]

      public QHashSetPtr<KCCIgnore> Ignores
    return:
      type: Quantum.Collections.QHashSetPtr{Quantum.KCCIgnore}
    content.vb: >-
      <ExcludeFromPrototype>

      Public Ignores As QHashSetPtr(Of KCCIgnore)
  attributes:
  - type: Quantum.Core.ExcludeFromPrototypeAttribute
    ctor: Quantum.Core.ExcludeFromPrototypeAttribute.#ctor
    arguments: []
- uid: Quantum.KCC.Modifiers
  commentId: F:Quantum.KCC.Modifiers
  id: Modifiers
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Modifiers
  nameWithType: KCC.Modifiers
  fullName: Quantum.KCC.Modifiers
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Modifiers
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2649
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: >-
      [ExcludeFromPrototype]

      public QListPtr<KCCModifier> Modifiers
    return:
      type: Quantum.Collections.QListPtr{Quantum.KCCModifier}
    content.vb: >-
      <ExcludeFromPrototype>

      Public Modifiers As QListPtr(Of KCCModifier)
  attributes:
  - type: Quantum.Core.ExcludeFromPrototypeAttribute
    ctor: Quantum.Core.ExcludeFromPrototypeAttribute.#ctor
    arguments: []
- uid: Quantum.KCC.Collisions
  commentId: F:Quantum.KCC.Collisions
  id: Collisions
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Collisions
  nameWithType: KCC.Collisions
  fullName: Quantum.KCC.Collisions
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Collisions
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2652
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: >-
      [ExcludeFromPrototype]

      public QListPtr<KCCCollision> Collisions
    return:
      type: Quantum.Collections.QListPtr{Quantum.KCCCollision}
    content.vb: >-
      <ExcludeFromPrototype>

      Public Collisions As QListPtr(Of KCCCollision)
  attributes:
  - type: Quantum.Core.ExcludeFromPrototypeAttribute
    ctor: Quantum.Core.ExcludeFromPrototypeAttribute.#ctor
    arguments: []
- uid: Quantum.KCC.GetHashCode
  commentId: M:Quantum.KCC.GetHashCode
  id: GetHashCode
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: KCC.GetHashCode()
  fullName: Quantum.KCC.GetHashCode()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetHashCode
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2653
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Quantum.KCC.GetHashCode*
- uid: Quantum.KCC.ClearPointers(Quantum.Core.FrameBase,Quantum.EntityRef)
  commentId: M:Quantum.KCC.ClearPointers(Quantum.Core.FrameBase,Quantum.EntityRef)
  id: ClearPointers(Quantum.Core.FrameBase,Quantum.EntityRef)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: ClearPointers(FrameBase, EntityRef)
  nameWithType: KCC.ClearPointers(FrameBase, EntityRef)
  fullName: Quantum.KCC.ClearPointers(Quantum.Core.FrameBase, Quantum.EntityRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ClearPointers
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2665
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public void ClearPointers(FrameBase f, EntityRef entity)
    parameters:
    - id: f
      type: Quantum.Core.FrameBase
    - id: entity
      type: Quantum.EntityRef
    content.vb: Public Sub ClearPointers(f As FrameBase, entity As EntityRef)
  overload: Quantum.KCC.ClearPointers*
- uid: Quantum.KCC.OnRemoved(Quantum.Core.FrameBase,Quantum.EntityRef,System.Void*)
  commentId: M:Quantum.KCC.OnRemoved(Quantum.Core.FrameBase,Quantum.EntityRef,System.Void*)
  id: OnRemoved(Quantum.Core.FrameBase,Quantum.EntityRef,System.Void*)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: OnRemoved(FrameBase, EntityRef, void*)
  nameWithType: KCC.OnRemoved(FrameBase, EntityRef, void*)
  fullName: Quantum.KCC.OnRemoved(Quantum.Core.FrameBase, Quantum.EntityRef, void*)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnRemoved
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2670
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr)
    parameters:
    - id: frame
      type: Quantum.Core.FrameBase
    - id: entity
      type: Quantum.EntityRef
    - id: ptr
      type: System.Void*
    content.vb: Public Shared Sub OnRemoved(frame As FrameBase, entity As EntityRef, ptr As Void*)
  overload: Quantum.KCC.OnRemoved*
  nameWithType.vb: KCC.OnRemoved(FrameBase, EntityRef, Void*)
  fullName.vb: Quantum.KCC.OnRemoved(Quantum.Core.FrameBase, Quantum.EntityRef, Void*)
  name.vb: OnRemoved(FrameBase, EntityRef, Void*)
- uid: Quantum.KCC.Serialize(System.Void*,Quantum.FrameSerializer)
  commentId: M:Quantum.KCC.Serialize(System.Void*,Quantum.FrameSerializer)
  id: Serialize(System.Void*,Quantum.FrameSerializer)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: Serialize(void*, FrameSerializer)
  nameWithType: KCC.Serialize(void*, FrameSerializer)
  fullName: Quantum.KCC.Serialize(void*, Quantum.FrameSerializer)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Serialize
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Core.cs
    startLine: 2674
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public static void Serialize(void* ptr, FrameSerializer serializer)
    parameters:
    - id: ptr
      type: System.Void*
    - id: serializer
      type: Quantum.FrameSerializer
    content.vb: Public Shared Sub Serialize(ptr As Void*, serializer As FrameSerializer)
  overload: Quantum.KCC.Serialize*
  nameWithType.vb: KCC.Serialize(Void*, FrameSerializer)
  fullName.vb: Quantum.KCC.Serialize(Void*, Quantum.FrameSerializer)
  name.vb: Serialize(Void*, FrameSerializer)
- uid: Quantum.KCC.SetIgnoreCollider(Quantum.Frame,Quantum.EntityRef,System.Boolean)
  commentId: M:Quantum.KCC.SetIgnoreCollider(Quantum.Frame,Quantum.EntityRef,System.Boolean)
  id: SetIgnoreCollider(Quantum.Frame,Quantum.EntityRef,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetIgnoreCollider(Frame, EntityRef, bool)
  nameWithType: KCC.SetIgnoreCollider(Frame, EntityRef, bool)
  fullName: Quantum.KCC.SetIgnoreCollider(Quantum.Frame, Quantum.EntityRef, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetIgnoreCollider
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
    startLine: 11
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Add/remove entity to/from custom ignore list.
  example: []
  syntax:
    content: public bool SetIgnoreCollider(Frame frame, EntityRef entity, bool ignore)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: entity
      type: Quantum.EntityRef
    - id: ignore
      type: System.Boolean
    return:
      type: System.Boolean
      description: <code>True</code> if there is a change in the ignore list.
    content.vb: Public Function SetIgnoreCollider(frame As Frame, entity As EntityRef, ignore As Boolean) As Boolean
  overload: Quantum.KCC.SetIgnoreCollider*
  nameWithType.vb: KCC.SetIgnoreCollider(Frame, EntityRef, Boolean)
  fullName.vb: Quantum.KCC.SetIgnoreCollider(Quantum.Frame, Quantum.EntityRef, Boolean)
  name.vb: SetIgnoreCollider(Frame, EntityRef, Boolean)
- uid: Quantum.KCC.SetIgnoreCollider(Quantum.Frame,System.Int32,System.Boolean)
  commentId: M:Quantum.KCC.SetIgnoreCollider(Quantum.Frame,System.Int32,System.Boolean)
  id: SetIgnoreCollider(Quantum.Frame,System.Int32,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: SetIgnoreCollider(Frame, int, bool)
  nameWithType: KCC.SetIgnoreCollider(Frame, int, bool)
  fullName: Quantum.KCC.SetIgnoreCollider(Quantum.Frame, int, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: SetIgnoreCollider
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
    startLine: 28
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Add/remove static collider to/from custom ignore list.
  example: []
  syntax:
    content: public bool SetIgnoreCollider(Frame frame, int colliderIndex, bool ignore)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: colliderIndex
      type: System.Int32
    - id: ignore
      type: System.Boolean
    return:
      type: System.Boolean
      description: <code>True</code> if there is a change in the ignore list.
    content.vb: Public Function SetIgnoreCollider(frame As Frame, colliderIndex As Integer, ignore As Boolean) As Boolean
  overload: Quantum.KCC.SetIgnoreCollider*
  nameWithType.vb: KCC.SetIgnoreCollider(Frame, Integer, Boolean)
  fullName.vb: Quantum.KCC.SetIgnoreCollider(Quantum.Frame, Integer, Boolean)
  name.vb: SetIgnoreCollider(Frame, Integer, Boolean)
- uid: Quantum.KCC.AddModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},System.Boolean)
  commentId: M:Quantum.KCC.AddModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},System.Boolean)
  id: AddModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: AddModifier<T>(KCCContext, AssetRef<T>, bool)
  nameWithType: KCC.AddModifier<T>(KCCContext, AssetRef<T>, bool)
  fullName: Quantum.KCC.AddModifier<T>(Quantum.KCCContext, Quantum.AssetRef<T>, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddModifier
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
    startLine: 47
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Register custom modifier processor to <code>KCC.Modifiers</code>.
  example: []
  syntax:
    content: 'public bool AddModifier<T>(KCCContext context, AssetRef<T> processorAsset, bool forceAdd = false) where T : KCCProcessor'
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC update.
    - id: processorAsset
      type: Quantum.AssetRef{{T}}
      description: Reference to a KCCProcessor asset.
    - id: forceAdd
      type: System.Boolean
      description: Ignore result from <code>KCCProcessor.OnEnter()</code> and force add the modifier. Be careful with this option.
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function AddModifier(Of T As KCCProcessor)(context As KCCContext, processorAsset As AssetRef(Of T), forceAdd As Boolean = False) As Boolean
  overload: Quantum.KCC.AddModifier*
  nameWithType.vb: KCC.AddModifier(Of T)(KCCContext, AssetRef(Of T), Boolean)
  fullName.vb: Quantum.KCC.AddModifier(Of T)(Quantum.KCCContext, Quantum.AssetRef(Of T), Boolean)
  name.vb: AddModifier(Of T)(KCCContext, AssetRef(Of T), Boolean)
- uid: Quantum.KCC.AddModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},Quantum.EntityRef,System.Boolean)
  commentId: M:Quantum.KCC.AddModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},Quantum.EntityRef,System.Boolean)
  id: AddModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},Quantum.EntityRef,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: AddModifier<T>(KCCContext, AssetRef<T>, EntityRef, bool)
  nameWithType: KCC.AddModifier<T>(KCCContext, AssetRef<T>, EntityRef, bool)
  fullName: Quantum.KCC.AddModifier<T>(Quantum.KCCContext, Quantum.AssetRef<T>, Quantum.EntityRef, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddModifier
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
    startLine: 72
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Register custom modifier processor to <code>KCC.Modifiers</code>.
  example: []
  syntax:
    content: 'public bool AddModifier<T>(KCCContext context, AssetRef<T> processorAsset, EntityRef entity, bool forceAdd = false) where T : KCCProcessor'
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC update.
    - id: processorAsset
      type: Quantum.AssetRef{{T}}
      description: Reference to a KCCProcessor asset.
    - id: entity
      type: Quantum.EntityRef
      description: Reference to an entity assigned to the processor.
    - id: forceAdd
      type: System.Boolean
      description: Ignore result from <code>KCCProcessor.OnEnter()</code> and force add the modifier. Be careful with this option.
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function AddModifier(Of T As KCCProcessor)(context As KCCContext, processorAsset As AssetRef(Of T), entity As EntityRef, forceAdd As Boolean = False) As Boolean
  overload: Quantum.KCC.AddModifier*
  nameWithType.vb: KCC.AddModifier(Of T)(KCCContext, AssetRef(Of T), EntityRef, Boolean)
  fullName.vb: Quantum.KCC.AddModifier(Of T)(Quantum.KCCContext, Quantum.AssetRef(Of T), Quantum.EntityRef, Boolean)
  name.vb: AddModifier(Of T)(KCCContext, AssetRef(Of T), EntityRef, Boolean)
- uid: Quantum.KCC.TryAddModifier(Quantum.KCCContext,Quantum.AssetRef,System.Boolean)
  commentId: M:Quantum.KCC.TryAddModifier(Quantum.KCCContext,Quantum.AssetRef,System.Boolean)
  id: TryAddModifier(Quantum.KCCContext,Quantum.AssetRef,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: TryAddModifier(KCCContext, AssetRef, bool)
  nameWithType: KCC.TryAddModifier(KCCContext, AssetRef, bool)
  fullName: Quantum.KCC.TryAddModifier(Quantum.KCCContext, Quantum.AssetRef, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: TryAddModifier
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
    startLine: 96
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Try to register custom modifier processor to <code>KCC.Modifiers</code>.
  example: []
  syntax:
    content: public bool TryAddModifier(KCCContext context, AssetRef asset, bool forceAdd = false)
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC update.
    - id: asset
      type: Quantum.AssetRef
      description: Reference to a KCCProcessor asset.
    - id: forceAdd
      type: System.Boolean
      description: Ignore result from <code>KCCProcessor.OnEnter()</code> and force add the modifier. Be careful with this option.
    return:
      type: System.Boolean
    content.vb: Public Function TryAddModifier(context As KCCContext, asset As AssetRef, forceAdd As Boolean = False) As Boolean
  overload: Quantum.KCC.TryAddModifier*
  nameWithType.vb: KCC.TryAddModifier(KCCContext, AssetRef, Boolean)
  fullName.vb: Quantum.KCC.TryAddModifier(Quantum.KCCContext, Quantum.AssetRef, Boolean)
  name.vb: TryAddModifier(KCCContext, AssetRef, Boolean)
- uid: Quantum.KCC.TryAddModifier(Quantum.KCCContext,Quantum.EntityRef,System.Boolean)
  commentId: M:Quantum.KCC.TryAddModifier(Quantum.KCCContext,Quantum.EntityRef,System.Boolean)
  id: TryAddModifier(Quantum.KCCContext,Quantum.EntityRef,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: TryAddModifier(KCCContext, EntityRef, bool)
  nameWithType: KCC.TryAddModifier(KCCContext, EntityRef, bool)
  fullName: Quantum.KCC.TryAddModifier(Quantum.KCCContext, Quantum.EntityRef, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: TryAddModifier
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
    startLine: 120
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Try to register custom modifier processor to <code>KCC.Modifiers</code>.
  example: []
  syntax:
    content: public bool TryAddModifier(KCCContext context, EntityRef entity, bool forceAdd = false)
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC update.
    - id: entity
      type: Quantum.EntityRef
      description: Reference to an entity with <code>KCCProcessorSource</code> component.
    - id: forceAdd
      type: System.Boolean
      description: Ignore result from <code>KCCProcessor.OnEnter()</code> and force add the modifier. Be careful with this option.
    return:
      type: System.Boolean
    content.vb: Public Function TryAddModifier(context As KCCContext, entity As EntityRef, forceAdd As Boolean = False) As Boolean
  overload: Quantum.KCC.TryAddModifier*
  nameWithType.vb: KCC.TryAddModifier(KCCContext, EntityRef, Boolean)
  fullName.vb: Quantum.KCC.TryAddModifier(Quantum.KCCContext, Quantum.EntityRef, Boolean)
  name.vb: TryAddModifier(KCCContext, EntityRef, Boolean)
- uid: Quantum.KCC.RemoveModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},System.Boolean)
  commentId: M:Quantum.KCC.RemoveModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},System.Boolean)
  id: RemoveModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: RemoveModifier<T>(KCCContext, AssetRef<T>, bool)
  nameWithType: KCC.RemoveModifier<T>(KCCContext, AssetRef<T>, bool)
  fullName: Quantum.KCC.RemoveModifier<T>(Quantum.KCCContext, Quantum.AssetRef<T>, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: RemoveModifier
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
    startLine: 149
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Unregister custom modifier processor from <code>KCC.Modifiers</code>. Removed processor won't execute any pending callbacks.
  example: []
  syntax:
    content: 'public bool RemoveModifier<T>(KCCContext context, AssetRef<T> processorAsset, bool forceRemove = false) where T : KCCProcessor'
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC update.
    - id: processorAsset
      type: Quantum.AssetRef{{T}}
      description: Reference to a KCCProcessor asset.
    - id: forceRemove
      type: System.Boolean
      description: Ignore result from <code>KCCProcessor.OnExit()</code> and force remove the modifier. Be careful with this option.
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function RemoveModifier(Of T As KCCProcessor)(context As KCCContext, processorAsset As AssetRef(Of T), forceRemove As Boolean = False) As Boolean
  overload: Quantum.KCC.RemoveModifier*
  nameWithType.vb: KCC.RemoveModifier(Of T)(KCCContext, AssetRef(Of T), Boolean)
  fullName.vb: Quantum.KCC.RemoveModifier(Of T)(Quantum.KCCContext, Quantum.AssetRef(Of T), Boolean)
  name.vb: RemoveModifier(Of T)(KCCContext, AssetRef(Of T), Boolean)
- uid: Quantum.KCC.RemoveModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},Quantum.EntityRef,System.Boolean)
  commentId: M:Quantum.KCC.RemoveModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},Quantum.EntityRef,System.Boolean)
  id: RemoveModifier``1(Quantum.KCCContext,Quantum.AssetRef{``0},Quantum.EntityRef,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: RemoveModifier<T>(KCCContext, AssetRef<T>, EntityRef, bool)
  nameWithType: KCC.RemoveModifier<T>(KCCContext, AssetRef<T>, EntityRef, bool)
  fullName: Quantum.KCC.RemoveModifier<T>(Quantum.KCCContext, Quantum.AssetRef<T>, Quantum.EntityRef, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: RemoveModifier
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
    startLine: 181
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Unregister custom modifier processor from <code>KCC.Modifiers</code>. Removed processor won't execute any pending callbacks.
  example: []
  syntax:
    content: 'public bool RemoveModifier<T>(KCCContext context, AssetRef<T> processorAsset, EntityRef entity, bool forceRemove = false) where T : KCCProcessor'
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC update.
    - id: processorAsset
      type: Quantum.AssetRef{{T}}
      description: Reference to a KCCProcessor asset.
    - id: entity
      type: Quantum.EntityRef
      description: Reference to an entity assigned to the processor.
    - id: forceRemove
      type: System.Boolean
      description: Ignore result from <code>KCCProcessor.OnExit()</code> and force remove the modifier. Be careful with this option.
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function RemoveModifier(Of T As KCCProcessor)(context As KCCContext, processorAsset As AssetRef(Of T), entity As EntityRef, forceRemove As Boolean = False) As Boolean
  overload: Quantum.KCC.RemoveModifier*
  nameWithType.vb: KCC.RemoveModifier(Of T)(KCCContext, AssetRef(Of T), EntityRef, Boolean)
  fullName.vb: Quantum.KCC.RemoveModifier(Of T)(Quantum.KCCContext, Quantum.AssetRef(Of T), Quantum.EntityRef, Boolean)
  name.vb: RemoveModifier(Of T)(KCCContext, AssetRef(Of T), EntityRef, Boolean)
- uid: Quantum.KCC.TryRemoveModifier(Quantum.KCCContext,Quantum.AssetRef,System.Boolean)
  commentId: M:Quantum.KCC.TryRemoveModifier(Quantum.KCCContext,Quantum.AssetRef,System.Boolean)
  id: TryRemoveModifier(Quantum.KCCContext,Quantum.AssetRef,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: TryRemoveModifier(KCCContext, AssetRef, bool)
  nameWithType: KCC.TryRemoveModifier(KCCContext, AssetRef, bool)
  fullName: Quantum.KCC.TryRemoveModifier(Quantum.KCCContext, Quantum.AssetRef, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: TryRemoveModifier
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
    startLine: 212
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Try to unregister custom modifier processor from <code>KCC.Modifiers</code>. Removed processor won't execute any pending callbacks.
  example: []
  syntax:
    content: public bool TryRemoveModifier(KCCContext context, AssetRef asset, bool forceRemove = false)
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC update.
    - id: asset
      type: Quantum.AssetRef
      description: Reference to a KCCProcessor asset.
    - id: forceRemove
      type: System.Boolean
      description: Ignore result from <code>KCCProcessor.OnExit()</code> and force remove the modifier. Be careful with this option.
    return:
      type: System.Boolean
    content.vb: Public Function TryRemoveModifier(context As KCCContext, asset As AssetRef, forceRemove As Boolean = False) As Boolean
  overload: Quantum.KCC.TryRemoveModifier*
  nameWithType.vb: KCC.TryRemoveModifier(KCCContext, AssetRef, Boolean)
  fullName.vb: Quantum.KCC.TryRemoveModifier(Quantum.KCCContext, Quantum.AssetRef, Boolean)
  name.vb: TryRemoveModifier(KCCContext, AssetRef, Boolean)
- uid: Quantum.KCC.TryRemoveModifier(Quantum.KCCContext,Quantum.EntityRef,System.Boolean)
  commentId: M:Quantum.KCC.TryRemoveModifier(Quantum.KCCContext,Quantum.EntityRef,System.Boolean)
  id: TryRemoveModifier(Quantum.KCCContext,Quantum.EntityRef,System.Boolean)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: TryRemoveModifier(KCCContext, EntityRef, bool)
  nameWithType: KCC.TryRemoveModifier(KCCContext, EntityRef, bool)
  fullName: Quantum.KCC.TryRemoveModifier(Quantum.KCCContext, Quantum.EntityRef, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: TryRemoveModifier
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Interactions.cs
    startLine: 243
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Try to unregister custom modifier processor from <code>KCC.Modifiers</code>. Removed processor won't execute any pending callbacks.
  example: []
  syntax:
    content: public bool TryRemoveModifier(KCCContext context, EntityRef entity, bool forceRemove = false)
    parameters:
    - id: context
      type: Quantum.KCCContext
      description: Reference to KCCContext from within KCC update.
    - id: entity
      type: Quantum.EntityRef
      description: Reference to an entity assigned to a modifier.
    - id: forceRemove
      type: System.Boolean
      description: Ignore result from <code>KCCProcessor.OnExit()</code> and force remove the modifier. Be careful with this option.
    return:
      type: System.Boolean
    content.vb: Public Function TryRemoveModifier(context As KCCContext, entity As EntityRef, forceRemove As Boolean = False) As Boolean
  overload: Quantum.KCC.TryRemoveModifier*
  nameWithType.vb: KCC.TryRemoveModifier(KCCContext, EntityRef, Boolean)
  fullName.vb: Quantum.KCC.TryRemoveModifier(Quantum.KCCContext, Quantum.EntityRef, Boolean)
  name.vb: TryRemoveModifier(KCCContext, EntityRef, Boolean)
- uid: Quantum.KCC.ResolvePenetration(Quantum.KCCContext,Quantum.KCCOverlapInfo,Quantum.KCCData@,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,System.Int32)
  commentId: M:Quantum.KCC.ResolvePenetration(Quantum.KCCContext,Quantum.KCCOverlapInfo,Quantum.KCCData@,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,System.Int32)
  id: ResolvePenetration(Quantum.KCCContext,Quantum.KCCOverlapInfo,Quantum.KCCData@,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,System.Int32)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: ResolvePenetration(KCCContext, KCCOverlapInfo, ref KCCData, FPVector3, FPVector3, int)
  nameWithType: KCC.ResolvePenetration(KCCContext, KCCOverlapInfo, ref KCCData, FPVector3, FPVector3, int)
  fullName: Quantum.KCC.ResolvePenetration(Quantum.KCCContext, Quantum.KCCOverlapInfo, ref Quantum.KCCData, Photon.Deterministic.FPVector3, Photon.Deterministic.FPVector3, int)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Depenetration.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ResolvePenetration
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Depenetration.cs
    startLine: 12
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns position depenetrated from all overlapping colliders and updates ground related data in KCCData.
  example: []
  syntax:
    content: public FPVector3 ResolvePenetration(KCCContext context, KCCOverlapInfo overlapInfo, ref KCCData data, FPVector3 basePosition, FPVector3 targetPosition, int maxSteps = 1)
    parameters:
    - id: context
      type: Quantum.KCCContext
    - id: overlapInfo
      type: Quantum.KCCOverlapInfo
    - id: data
      type: Quantum.KCCData
    - id: basePosition
      type: Photon.Deterministic.FPVector3
    - id: targetPosition
      type: Photon.Deterministic.FPVector3
    - id: maxSteps
      type: System.Int32
    return:
      type: Photon.Deterministic.FPVector3
    content.vb: Public Function ResolvePenetration(context As KCCContext, overlapInfo As KCCOverlapInfo, data As KCCData, basePosition As FPVector3, targetPosition As FPVector3, maxSteps As Integer = 1) As FPVector3
  overload: Quantum.KCC.ResolvePenetration*
  nameWithType.vb: KCC.ResolvePenetration(KCCContext, KCCOverlapInfo, KCCData, FPVector3, FPVector3, Integer)
  fullName.vb: Quantum.KCC.ResolvePenetration(Quantum.KCCContext, Quantum.KCCOverlapInfo, Quantum.KCCData, Photon.Deterministic.FPVector3, Photon.Deterministic.FPVector3, Integer)
  name.vb: ResolvePenetration(KCCContext, KCCOverlapInfo, KCCData, FPVector3, FPVector3, Integer)
- uid: Quantum.KCC.ResolvePenetration(Quantum.KCCContext,Quantum.KCCOverlapInfo,Quantum.KCCData@,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Quantum.LayerMask,System.Int32)
  commentId: M:Quantum.KCC.ResolvePenetration(Quantum.KCCContext,Quantum.KCCOverlapInfo,Quantum.KCCData@,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Quantum.LayerMask,System.Int32)
  id: ResolvePenetration(Quantum.KCCContext,Quantum.KCCOverlapInfo,Quantum.KCCData@,Photon.Deterministic.FPVector3,Photon.Deterministic.FPVector3,Photon.Deterministic.FP,Photon.Deterministic.FP,Photon.Deterministic.FP,Quantum.LayerMask,System.Int32)
  parent: Quantum.KCC
  langs:
  - csharp
  - vb
  name: ResolvePenetration(KCCContext, KCCOverlapInfo, ref KCCData, FPVector3, FPVector3, FP, FP, FP, LayerMask, int)
  nameWithType: KCC.ResolvePenetration(KCCContext, KCCOverlapInfo, ref KCCData, FPVector3, FPVector3, FP, FP, FP, LayerMask, int)
  fullName: Quantum.KCC.ResolvePenetration(Quantum.KCCContext, Quantum.KCCOverlapInfo, ref Quantum.KCCData, Photon.Deterministic.FPVector3, Photon.Deterministic.FPVector3, Photon.Deterministic.FP, Photon.Deterministic.FP, Photon.Deterministic.FP, Quantum.LayerMask, int)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Depenetration.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ResolvePenetration
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Core/KCC.Depenetration.cs
    startLine: 20
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Returns position depenetrated from all overlapping colliders and updates ground related data in KCCData.
  example: []
  syntax:
    content: public FPVector3 ResolvePenetration(KCCContext context, KCCOverlapInfo overlapInfo, ref KCCData data, FPVector3 basePosition, FPVector3 targetPosition, FP radius, FP height, FP extent, LayerMask layerMask, int maxSteps)
    parameters:
    - id: context
      type: Quantum.KCCContext
    - id: overlapInfo
      type: Quantum.KCCOverlapInfo
    - id: data
      type: Quantum.KCCData
    - id: basePosition
      type: Photon.Deterministic.FPVector3
    - id: targetPosition
      type: Photon.Deterministic.FPVector3
    - id: radius
      type: Photon.Deterministic.FP
    - id: height
      type: Photon.Deterministic.FP
    - id: extent
      type: Photon.Deterministic.FP
    - id: layerMask
      type: Quantum.LayerMask
    - id: maxSteps
      type: System.Int32
    return:
      type: Photon.Deterministic.FPVector3
    content.vb: Public Function ResolvePenetration(context As KCCContext, overlapInfo As KCCOverlapInfo, data As KCCData, basePosition As FPVector3, targetPosition As FPVector3, radius As FP, height As FP, extent As FP, layerMask As LayerMask, maxSteps As Integer) As FPVector3
  overload: Quantum.KCC.ResolvePenetration*
  nameWithType.vb: KCC.ResolvePenetration(KCCContext, KCCOverlapInfo, KCCData, FPVector3, FPVector3, FP, FP, FP, LayerMask, Integer)
  fullName.vb: Quantum.KCC.ResolvePenetration(Quantum.KCCContext, Quantum.KCCOverlapInfo, Quantum.KCCData, Photon.Deterministic.FPVector3, Photon.Deterministic.FPVector3, Photon.Deterministic.FP, Photon.Deterministic.FP, Photon.Deterministic.FP, Quantum.LayerMask, Integer)
  name.vb: ResolvePenetration(KCCContext, KCCOverlapInfo, KCCData, FPVector3, FPVector3, FP, FP, FP, LayerMask, Integer)
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: Quantum.IComponent
  commentId: T:Quantum.IComponent
  parent: Quantum
  isExternal: true
  name: IComponent
  nameWithType: IComponent
  fullName: Quantum.IComponent
- uid: Quantum.KCC.IsActive*
  commentId: Overload:Quantum.KCC.IsActive
  href: Quantum.KCC.html#Quantum_KCC_IsActive
  name: IsActive
  nameWithType: KCC.IsActive
  fullName: Quantum.KCC.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quantum.KCC.IsGrounded*
  commentId: Overload:Quantum.KCC.IsGrounded
  href: Quantum.KCC.html#Quantum_KCC_IsGrounded
  name: IsGrounded
  nameWithType: KCC.IsGrounded
  fullName: Quantum.KCC.IsGrounded
- uid: Quantum.KCC.IsSteppingUp*
  commentId: Overload:Quantum.KCC.IsSteppingUp
  href: Quantum.KCC.html#Quantum_KCC_IsSteppingUp
  name: IsSteppingUp
  nameWithType: KCC.IsSteppingUp
  fullName: Quantum.KCC.IsSteppingUp
- uid: Quantum.KCC.IsSnappingToGround*
  commentId: Overload:Quantum.KCC.IsSnappingToGround
  href: Quantum.KCC.html#Quantum_KCC_IsSnappingToGround
  name: IsSnappingToGround
  nameWithType: KCC.IsSnappingToGround
  fullName: Quantum.KCC.IsSnappingToGround
- uid: Quantum.KCC.HasJumped*
  commentId: Overload:Quantum.KCC.HasJumped
  href: Quantum.KCC.html#Quantum_KCC_HasJumped
  name: HasJumped
  nameWithType: KCC.HasJumped
  fullName: Quantum.KCC.HasJumped
- uid: Quantum.KCC.Position*
  commentId: Overload:Quantum.KCC.Position
  href: Quantum.KCC.html#Quantum_KCC_Position
  name: Position
  nameWithType: KCC.Position
  fullName: Quantum.KCC.Position
- uid: Photon.Deterministic.FPVector3
  commentId: T:Photon.Deterministic.FPVector3
  parent: Photon.Deterministic
  isExternal: true
  name: FPVector3
  nameWithType: FPVector3
  fullName: Photon.Deterministic.FPVector3
- uid: Photon.Deterministic
  commentId: N:Photon.Deterministic
  isExternal: true
  name: Photon.Deterministic
  nameWithType: Photon.Deterministic
  fullName: Photon.Deterministic
  spec.csharp:
  - uid: Photon
    name: Photon
    isExternal: true
  - name: .
  - uid: Photon.Deterministic
    name: Deterministic
    isExternal: true
  spec.vb:
  - uid: Photon
    name: Photon
    isExternal: true
  - name: .
  - uid: Photon.Deterministic
    name: Deterministic
    isExternal: true
- uid: Quantum.KCC.RealSpeed*
  commentId: Overload:Quantum.KCC.RealSpeed
  href: Quantum.KCC.html#Quantum_KCC_RealSpeed
  name: RealSpeed
  nameWithType: KCC.RealSpeed
  fullName: Quantum.KCC.RealSpeed
- uid: Photon.Deterministic.FP
  commentId: T:Photon.Deterministic.FP
  parent: Photon.Deterministic
  isExternal: true
  name: FP
  nameWithType: FP
  fullName: Photon.Deterministic.FP
- uid: Quantum.KCC.RealVelocity*
  commentId: Overload:Quantum.KCC.RealVelocity
  href: Quantum.KCC.html#Quantum_KCC_RealVelocity
  name: RealVelocity
  nameWithType: KCC.RealVelocity
  fullName: Quantum.KCC.RealVelocity
- uid: Quantum.KCC.GroundNormal*
  commentId: Overload:Quantum.KCC.GroundNormal
  href: Quantum.KCC.html#Quantum_KCC_GroundNormal
  name: GroundNormal
  nameWithType: KCC.GroundNormal
  fullName: Quantum.KCC.GroundNormal
- uid: Quantum.KCC.SetActive*
  commentId: Overload:Quantum.KCC.SetActive
  href: Quantum.KCC.html#Quantum_KCC_SetActive_System_Boolean_
  name: SetActive
  nameWithType: KCC.SetActive
  fullName: Quantum.KCC.SetActive
- uid: Quantum.KCC.SetGravity*
  commentId: Overload:Quantum.KCC.SetGravity
  href: Quantum.KCC.html#Quantum_KCC_SetGravity_Photon_Deterministic_FPVector3_
  name: SetGravity
  nameWithType: KCC.SetGravity
  fullName: Quantum.KCC.SetGravity
- uid: Quantum.KCC.SetInputDirection*
  commentId: Overload:Quantum.KCC.SetInputDirection
  href: Quantum.KCC.html#Quantum_KCC_SetInputDirection_Photon_Deterministic_FPVector3_System_Boolean_
  name: SetInputDirection
  nameWithType: KCC.SetInputDirection
  fullName: Quantum.KCC.SetInputDirection
- uid: Quantum.KCC.GetLookRotation*
  commentId: Overload:Quantum.KCC.GetLookRotation
  href: Quantum.KCC.html#Quantum_KCC_GetLookRotation_System_Boolean_System_Boolean_
  name: GetLookRotation
  nameWithType: KCC.GetLookRotation
  fullName: Quantum.KCC.GetLookRotation
- uid: Photon.Deterministic.FPVector2
  commentId: T:Photon.Deterministic.FPVector2
  parent: Photon.Deterministic
  isExternal: true
  name: FPVector2
  nameWithType: FPVector2
  fullName: Photon.Deterministic.FPVector2
- uid: Quantum.KCC.AddLookRotation*
  commentId: Overload:Quantum.KCC.AddLookRotation
  href: Quantum.KCC.html#Quantum_KCC_AddLookRotation_Photon_Deterministic_FP_Photon_Deterministic_FP_
  name: AddLookRotation
  nameWithType: KCC.AddLookRotation
  fullName: Quantum.KCC.AddLookRotation
- uid: Quantum.KCC.SetLookRotation*
  commentId: Overload:Quantum.KCC.SetLookRotation
  href: Quantum.KCC.html#Quantum_KCC_SetLookRotation_Photon_Deterministic_FP_Photon_Deterministic_FP_
  name: SetLookRotation
  nameWithType: KCC.SetLookRotation
  fullName: Quantum.KCC.SetLookRotation
- uid: Photon.Deterministic.FPQuaternion
  commentId: T:Photon.Deterministic.FPQuaternion
  parent: Photon.Deterministic
  isExternal: true
  name: FPQuaternion
  nameWithType: FPQuaternion
  fullName: Photon.Deterministic.FPQuaternion
- uid: Quantum.KCC.Jump*
  commentId: Overload:Quantum.KCC.Jump
  href: Quantum.KCC.html#Quantum_KCC_Jump_Photon_Deterministic_FPVector3_
  name: Jump
  nameWithType: KCC.Jump
  fullName: Quantum.KCC.Jump
- uid: Quantum.KCC.AddExternalImpulse*
  commentId: Overload:Quantum.KCC.AddExternalImpulse
  href: Quantum.KCC.html#Quantum_KCC_AddExternalImpulse_Photon_Deterministic_FPVector3_
  name: AddExternalImpulse
  nameWithType: KCC.AddExternalImpulse
  fullName: Quantum.KCC.AddExternalImpulse
- uid: Quantum.KCC.SetExternalImpulse*
  commentId: Overload:Quantum.KCC.SetExternalImpulse
  href: Quantum.KCC.html#Quantum_KCC_SetExternalImpulse_Photon_Deterministic_FPVector3_
  name: SetExternalImpulse
  nameWithType: KCC.SetExternalImpulse
  fullName: Quantum.KCC.SetExternalImpulse
- uid: Quantum.KCC.AddExternalForce*
  commentId: Overload:Quantum.KCC.AddExternalForce
  href: Quantum.KCC.html#Quantum_KCC_AddExternalForce_Photon_Deterministic_FPVector3_
  name: AddExternalForce
  nameWithType: KCC.AddExternalForce
  fullName: Quantum.KCC.AddExternalForce
- uid: Quantum.KCC.SetExternalForce*
  commentId: Overload:Quantum.KCC.SetExternalForce
  href: Quantum.KCC.html#Quantum_KCC_SetExternalForce_Photon_Deterministic_FPVector3_
  name: SetExternalForce
  nameWithType: KCC.SetExternalForce
  fullName: Quantum.KCC.SetExternalForce
- uid: Quantum.KCC.AddExternalDelta*
  commentId: Overload:Quantum.KCC.AddExternalDelta
  href: Quantum.KCC.html#Quantum_KCC_AddExternalDelta_Photon_Deterministic_FPVector3_
  name: AddExternalDelta
  nameWithType: KCC.AddExternalDelta
  fullName: Quantum.KCC.AddExternalDelta
- uid: Quantum.KCC.SetExternalDelta*
  commentId: Overload:Quantum.KCC.SetExternalDelta
  href: Quantum.KCC.html#Quantum_KCC_SetExternalDelta_Photon_Deterministic_FPVector3_
  name: SetExternalDelta
  nameWithType: KCC.SetExternalDelta
  fullName: Quantum.KCC.SetExternalDelta
- uid: Quantum.KCC.SetDynamicVelocity*
  commentId: Overload:Quantum.KCC.SetDynamicVelocity
  href: Quantum.KCC.html#Quantum_KCC_SetDynamicVelocity_Photon_Deterministic_FPVector3_
  name: SetDynamicVelocity
  nameWithType: KCC.SetDynamicVelocity
  fullName: Quantum.KCC.SetDynamicVelocity
- uid: Quantum.KCC.SetKinematicDirection*
  commentId: Overload:Quantum.KCC.SetKinematicDirection
  href: Quantum.KCC.html#Quantum_KCC_SetKinematicDirection_Photon_Deterministic_FPVector3_
  name: SetKinematicDirection
  nameWithType: KCC.SetKinematicDirection
  fullName: Quantum.KCC.SetKinematicDirection
- uid: Quantum.KCC.SetKinematicSpeed*
  commentId: Overload:Quantum.KCC.SetKinematicSpeed
  href: Quantum.KCC.html#Quantum_KCC_SetKinematicSpeed_Photon_Deterministic_FP_
  name: SetKinematicSpeed
  nameWithType: KCC.SetKinematicSpeed
  fullName: Quantum.KCC.SetKinematicSpeed
- uid: Quantum.KCC.SetKinematicVelocity*
  commentId: Overload:Quantum.KCC.SetKinematicVelocity
  href: Quantum.KCC.html#Quantum_KCC_SetKinematicVelocity_Photon_Deterministic_FPVector3_
  name: SetKinematicVelocity
  nameWithType: KCC.SetKinematicVelocity
  fullName: Quantum.KCC.SetKinematicVelocity
- uid: Quantum.KCC.Teleport*
  commentId: Overload:Quantum.KCC.Teleport
  href: Quantum.KCC.html#Quantum_KCC_Teleport_Photon_Deterministic_FPVector3_
  name: Teleport
  nameWithType: KCC.Teleport
  fullName: Quantum.KCC.Teleport
- uid: Quantum.KCC.ResetData*
  commentId: Overload:Quantum.KCC.ResetData
  href: Quantum.KCC.html#Quantum_KCC_ResetData
  name: ResetData
  nameWithType: KCC.ResetData
  fullName: Quantum.KCC.ResetData
- uid: Quantum.KCC.Initialize*
  commentId: Overload:Quantum.KCC.Initialize
  href: Quantum.KCC.html#Quantum_KCC_Initialize_Quantum_KCCContext_
  name: Initialize
  nameWithType: KCC.Initialize
  fullName: Quantum.KCC.Initialize
- uid: Quantum.KCCContext
  commentId: T:Quantum.KCCContext
  parent: Quantum
  href: Quantum.KCCContext.html
  name: KCCContext
  nameWithType: KCCContext
  fullName: Quantum.KCCContext
- uid: Quantum.KCC.Deinitialize*
  commentId: Overload:Quantum.KCC.Deinitialize
  href: Quantum.KCC.html#Quantum_KCC_Deinitialize_Quantum_KCCContext_
  name: Deinitialize
  nameWithType: KCC.Deinitialize
  fullName: Quantum.KCC.Deinitialize
- uid: Quantum.KCC.Update*
  commentId: Overload:Quantum.KCC.Update
  href: Quantum.KCC.html#Quantum_KCC_Update_Quantum_KCCContext_
  name: Update
  nameWithType: KCC.Update
  fullName: Quantum.KCC.Update
- uid: Quantum.KCC.SphereOverlap*
  commentId: Overload:Quantum.KCC.SphereOverlap
  href: Quantum.KCC.html#Quantum_KCC_SphereOverlap_Quantum_KCCContext_Quantum_KCCOverlapInfo_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_Quantum_QueryOptions_
  name: SphereOverlap
  nameWithType: KCC.SphereOverlap
  fullName: Quantum.KCC.SphereOverlap
- uid: Quantum.KCCOverlapInfo
  commentId: T:Quantum.KCCOverlapInfo
  parent: Quantum
  href: Quantum.KCCOverlapInfo.html
  name: KCCOverlapInfo
  nameWithType: KCCOverlapInfo
  fullName: Quantum.KCCOverlapInfo
- uid: Quantum.QueryOptions
  commentId: T:Quantum.QueryOptions
  parent: Quantum
  isExternal: true
  name: QueryOptions
  nameWithType: QueryOptions
  fullName: Quantum.QueryOptions
- uid: Quantum.KCC.CapsuleOverlap*
  commentId: Overload:Quantum.KCC.CapsuleOverlap
  href: Quantum.KCC.html#Quantum_KCC_CapsuleOverlap_Quantum_KCCContext_Quantum_KCCOverlapInfo_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_Photon_Deterministic_FP_Quantum_QueryOptions_
  name: CapsuleOverlap
  nameWithType: KCC.CapsuleOverlap
  fullName: Quantum.KCC.CapsuleOverlap
- uid: Quantum.KCC.RayCast*
  commentId: Overload:Quantum.KCC.RayCast
  href: Quantum.KCC.html#Quantum_KCC_RayCast_Quantum_KCCContext_Quantum_KCCShapeCastInfo_Photon_Deterministic_FPVector3_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_Quantum_QueryOptions_
  name: RayCast
  nameWithType: KCC.RayCast
  fullName: Quantum.KCC.RayCast
- uid: Quantum.KCCShapeCastInfo
  commentId: T:Quantum.KCCShapeCastInfo
  parent: Quantum
  href: Quantum.KCCShapeCastInfo.html
  name: KCCShapeCastInfo
  nameWithType: KCCShapeCastInfo
  fullName: Quantum.KCCShapeCastInfo
- uid: Quantum.KCC.SphereCast*
  commentId: Overload:Quantum.KCC.SphereCast
  href: Quantum.KCC.html#Quantum_KCC_SphereCast_Quantum_KCCContext_Quantum_KCCShapeCastInfo_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_Quantum_QueryOptions_
  name: SphereCast
  nameWithType: KCC.SphereCast
  fullName: Quantum.KCC.SphereCast
- uid: Quantum.KCC.CapsuleCast*
  commentId: Overload:Quantum.KCC.CapsuleCast
  href: Quantum.KCC.html#Quantum_KCC_CapsuleCast_Quantum_KCCContext_Quantum_KCCShapeCastInfo_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_Photon_Deterministic_FP_Photon_Deterministic_FPVector3_Photon_Deterministic_FP_Quantum_QueryOptions_
  name: CapsuleCast
  nameWithType: KCC.CapsuleCast
  fullName: Quantum.KCC.CapsuleCast
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Quantum.AssetRef{Quantum.KCCSettings}
  commentId: T:Quantum.AssetRef{Quantum.KCCSettings}
  parent: Quantum
  definition: Quantum.AssetRef`1
  href: Quantum.KCCSettings.html
  name: AssetRef<KCCSettings>
  nameWithType: AssetRef<KCCSettings>
  fullName: Quantum.AssetRef<Quantum.KCCSettings>
  nameWithType.vb: AssetRef(Of KCCSettings)
  fullName.vb: Quantum.AssetRef(Of Quantum.KCCSettings)
  name.vb: AssetRef(Of KCCSettings)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.KCCSettings
    name: KCCSettings
    href: Quantum.KCCSettings.html
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.KCCSettings
    name: KCCSettings
    href: Quantum.KCCSettings.html
  - name: )
- uid: Quantum.AssetRef`1
  commentId: T:Quantum.AssetRef`1
  isExternal: true
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.QBoolean
  commentId: T:Quantum.QBoolean
  parent: Quantum
  isExternal: true
  name: QBoolean
  nameWithType: QBoolean
  fullName: Quantum.QBoolean
- uid: Quantum.KCCData
  commentId: T:Quantum.KCCData
  parent: Quantum
  href: Quantum.KCCData.html
  name: KCCData
  nameWithType: KCCData
  fullName: Quantum.KCCData
- uid: Quantum.Collections.QHashSetPtr{Quantum.KCCIgnore}
  commentId: T:Quantum.Collections.QHashSetPtr{Quantum.KCCIgnore}
  parent: Quantum.Collections
  definition: Quantum.Collections.QHashSetPtr`1
  href: Quantum.KCCIgnore.html
  name: QHashSetPtr<KCCIgnore>
  nameWithType: QHashSetPtr<KCCIgnore>
  fullName: Quantum.Collections.QHashSetPtr<Quantum.KCCIgnore>
  nameWithType.vb: QHashSetPtr(Of KCCIgnore)
  fullName.vb: Quantum.Collections.QHashSetPtr(Of Quantum.KCCIgnore)
  name.vb: QHashSetPtr(Of KCCIgnore)
  spec.csharp:
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - uid: Quantum.KCCIgnore
    name: KCCIgnore
    href: Quantum.KCCIgnore.html
  - name: '>'
  spec.vb:
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.KCCIgnore
    name: KCCIgnore
    href: Quantum.KCCIgnore.html
  - name: )
- uid: Quantum.Collections.QHashSetPtr`1
  commentId: T:Quantum.Collections.QHashSetPtr`1
  isExternal: true
  name: QHashSetPtr<T>
  nameWithType: QHashSetPtr<T>
  fullName: Quantum.Collections.QHashSetPtr<T>
  nameWithType.vb: QHashSetPtr(Of T)
  fullName.vb: Quantum.Collections.QHashSetPtr(Of T)
  name.vb: QHashSetPtr(Of T)
  spec.csharp:
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.Collections.QHashSetPtr`1
    name: QHashSetPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Collections
  commentId: N:Quantum.Collections
  isExternal: true
  name: Quantum.Collections
  nameWithType: Quantum.Collections
  fullName: Quantum.Collections
  spec.csharp:
  - uid: Quantum
    name: Quantum
    isExternal: true
  - name: .
  - uid: Quantum.Collections
    name: Collections
    isExternal: true
  spec.vb:
  - uid: Quantum
    name: Quantum
    isExternal: true
  - name: .
  - uid: Quantum.Collections
    name: Collections
    isExternal: true
- uid: Quantum.Collections.QListPtr{Quantum.KCCModifier}
  commentId: T:Quantum.Collections.QListPtr{Quantum.KCCModifier}
  parent: Quantum.Collections
  definition: Quantum.Collections.QListPtr`1
  href: Quantum.KCCModifier.html
  name: QListPtr<KCCModifier>
  nameWithType: QListPtr<KCCModifier>
  fullName: Quantum.Collections.QListPtr<Quantum.KCCModifier>
  nameWithType.vb: QListPtr(Of KCCModifier)
  fullName.vb: Quantum.Collections.QListPtr(Of Quantum.KCCModifier)
  name.vb: QListPtr(Of KCCModifier)
  spec.csharp:
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - uid: Quantum.KCCModifier
    name: KCCModifier
    href: Quantum.KCCModifier.html
  - name: '>'
  spec.vb:
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.KCCModifier
    name: KCCModifier
    href: Quantum.KCCModifier.html
  - name: )
- uid: Quantum.Collections.QListPtr`1
  commentId: T:Quantum.Collections.QListPtr`1
  isExternal: true
  name: QListPtr<T>
  nameWithType: QListPtr<T>
  fullName: Quantum.Collections.QListPtr<T>
  nameWithType.vb: QListPtr(Of T)
  fullName.vb: Quantum.Collections.QListPtr(Of T)
  name.vb: QListPtr(Of T)
  spec.csharp:
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Collections.QListPtr{Quantum.KCCCollision}
  commentId: T:Quantum.Collections.QListPtr{Quantum.KCCCollision}
  parent: Quantum.Collections
  definition: Quantum.Collections.QListPtr`1
  href: Quantum.KCCCollision.html
  name: QListPtr<KCCCollision>
  nameWithType: QListPtr<KCCCollision>
  fullName: Quantum.Collections.QListPtr<Quantum.KCCCollision>
  nameWithType.vb: QListPtr(Of KCCCollision)
  fullName.vb: Quantum.Collections.QListPtr(Of Quantum.KCCCollision)
  name.vb: QListPtr(Of KCCCollision)
  spec.csharp:
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: <
  - uid: Quantum.KCCCollision
    name: KCCCollision
    href: Quantum.KCCCollision.html
  - name: '>'
  spec.vb:
  - uid: Quantum.Collections.QListPtr`1
    name: QListPtr
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.KCCCollision
    name: KCCCollision
    href: Quantum.KCCCollision.html
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Quantum.KCC.GetHashCode*
  commentId: Overload:Quantum.KCC.GetHashCode
  href: Quantum.KCC.html#Quantum_KCC_GetHashCode
  name: GetHashCode
  nameWithType: KCC.GetHashCode
  fullName: Quantum.KCC.GetHashCode
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: Quantum.KCC.ClearPointers*
  commentId: Overload:Quantum.KCC.ClearPointers
  href: Quantum.KCC.html#Quantum_KCC_ClearPointers_Quantum_Core_FrameBase_Quantum_EntityRef_
  name: ClearPointers
  nameWithType: KCC.ClearPointers
  fullName: Quantum.KCC.ClearPointers
- uid: Quantum.Core.FrameBase
  commentId: T:Quantum.Core.FrameBase
  parent: Quantum.Core
  isExternal: true
  name: FrameBase
  nameWithType: FrameBase
  fullName: Quantum.Core.FrameBase
- uid: Quantum.EntityRef
  commentId: T:Quantum.EntityRef
  parent: Quantum
  isExternal: true
  name: EntityRef
  nameWithType: EntityRef
  fullName: Quantum.EntityRef
- uid: Quantum.Core
  commentId: N:Quantum.Core
  href: Quantum.html
  name: Quantum.Core
  nameWithType: Quantum.Core
  fullName: Quantum.Core
  spec.csharp:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Core
    name: Core
    href: Quantum.Core.html
  spec.vb:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Core
    name: Core
    href: Quantum.Core.html
- uid: Quantum.KCC.OnRemoved*
  commentId: Overload:Quantum.KCC.OnRemoved
  href: Quantum.KCC.html#Quantum_KCC_OnRemoved_Quantum_Core_FrameBase_Quantum_EntityRef_System_Void__
  name: OnRemoved
  nameWithType: KCC.OnRemoved
  fullName: Quantum.KCC.OnRemoved
- uid: System.Void*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.void
  name: void*
  nameWithType: void*
  fullName: void*
  nameWithType.vb: Void*
  fullName.vb: Void*
  name.vb: Void*
  spec.csharp:
  - uid: System.Void
    name: void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
  spec.vb:
  - uid: System.Void
    name: Void
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.void
  - name: '*'
- uid: Quantum.KCC.Serialize*
  commentId: Overload:Quantum.KCC.Serialize
  href: Quantum.KCC.html#Quantum_KCC_Serialize_System_Void__Quantum_FrameSerializer_
  name: Serialize
  nameWithType: KCC.Serialize
  fullName: Quantum.KCC.Serialize
- uid: Quantum.FrameSerializer
  commentId: T:Quantum.FrameSerializer
  parent: Quantum
  isExternal: true
  name: FrameSerializer
  nameWithType: FrameSerializer
  fullName: Quantum.FrameSerializer
- uid: Quantum.KCC.SetIgnoreCollider*
  commentId: Overload:Quantum.KCC.SetIgnoreCollider
  href: Quantum.KCC.html#Quantum_KCC_SetIgnoreCollider_Quantum_Frame_Quantum_EntityRef_System_Boolean_
  name: SetIgnoreCollider
  nameWithType: KCC.SetIgnoreCollider
  fullName: Quantum.KCC.SetIgnoreCollider
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Quantum.KCC.AddModifier*
  commentId: Overload:Quantum.KCC.AddModifier
  href: Quantum.KCC.html#Quantum_KCC_AddModifier__1_Quantum_KCCContext_Quantum_AssetRef___0__System_Boolean_
  name: AddModifier
  nameWithType: KCC.AddModifier
  fullName: Quantum.KCC.AddModifier
- uid: Quantum.AssetRef{{T}}
  commentId: T:Quantum.AssetRef{``0}
  parent: Quantum
  definition: Quantum.AssetRef`1
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.KCC.TryAddModifier*
  commentId: Overload:Quantum.KCC.TryAddModifier
  href: Quantum.KCC.html#Quantum_KCC_TryAddModifier_Quantum_KCCContext_Quantum_AssetRef_System_Boolean_
  name: TryAddModifier
  nameWithType: KCC.TryAddModifier
  fullName: Quantum.KCC.TryAddModifier
- uid: Quantum.AssetRef
  commentId: T:Quantum.AssetRef
  parent: Quantum
  isExternal: true
  name: AssetRef
  nameWithType: AssetRef
  fullName: Quantum.AssetRef
- uid: Quantum.KCC.RemoveModifier*
  commentId: Overload:Quantum.KCC.RemoveModifier
  href: Quantum.KCC.html#Quantum_KCC_RemoveModifier__1_Quantum_KCCContext_Quantum_AssetRef___0__System_Boolean_
  name: RemoveModifier
  nameWithType: KCC.RemoveModifier
  fullName: Quantum.KCC.RemoveModifier
- uid: Quantum.KCC.TryRemoveModifier*
  commentId: Overload:Quantum.KCC.TryRemoveModifier
  href: Quantum.KCC.html#Quantum_KCC_TryRemoveModifier_Quantum_KCCContext_Quantum_AssetRef_System_Boolean_
  name: TryRemoveModifier
  nameWithType: KCC.TryRemoveModifier
  fullName: Quantum.KCC.TryRemoveModifier
- uid: Quantum.KCC.ResolvePenetration*
  commentId: Overload:Quantum.KCC.ResolvePenetration
  href: Quantum.KCC.html#Quantum_KCC_ResolvePenetration_Quantum_KCCContext_Quantum_KCCOverlapInfo_Quantum_KCCData__Photon_Deterministic_FPVector3_Photon_Deterministic_FPVector3_System_Int32_
  name: ResolvePenetration
  nameWithType: KCC.ResolvePenetration
  fullName: Quantum.KCC.ResolvePenetration
- uid: Quantum.LayerMask
  commentId: T:Quantum.LayerMask
  parent: Quantum
  isExternal: true
  name: LayerMask
  nameWithType: LayerMask
  fullName: Quantum.LayerMask
