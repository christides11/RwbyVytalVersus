### YamlMime:ManagedReference
items:
- uid: Global.ModContentManager
  commentId: T:Global.ModContentManager
  id: ModContentManager
  parent: Global
  children:
  - Global.ModContentManager.GetAssetFromMod(LoadedModDefinition,System.String,System.Boolean)
  - Global.ModContentManager.GetAssetFromMod(ModAssetSoftReference,System.Boolean)
  - Global.ModContentManager.GetAssetFromMod``1(LoadedModDefinition,System.String,System.Boolean)
  - Global.ModContentManager.GetAssetFromMod``1(ModAssetSoftReference)
  - Global.ModContentManager.GetAssetFromMod``1(System.String,System.String,System.Boolean)
  - Global.ModContentManager.GetAssetFromMods(System.String,System.Boolean)
  - Global.ModContentManager.GetAssetList
  - Global.ModContentManager.GetLoadedAssetList
  - Global.ModContentManager.Init
  - Global.ModContentManager.LoadAllAssetsByTypeAsync``1
  - Global.ModContentManager.LoadAllAssetsByType``1
  - Global.ModContentManager.LoadAllAssetsFromMod(LoadedModDefinition)
  - Global.ModContentManager.LoadAllAssetsFromModAsync(LoadedModDefinition)
  - Global.ModContentManager.LoadAllAssetsFromModByTypeAsync``1(LoadedModDefinition)
  - Global.ModContentManager.LoadAllAssetsFromModByType``1(LoadedModDefinition)
  - Global.ModContentManager.LoadAssetFromMod(LoadedModDefinition,System.String)
  - Global.ModContentManager.LoadAssetFromModAsync(LoadedModDefinition,System.String)
  - Global.ModContentManager.LoadAssetFromModAsync(ModAssetSoftReference)
  - Global.ModContentManager.LoadAssetFromModAsync(System.String,System.String)
  - Global.ModContentManager.LoadAssetFromModsAsync(System.String)
  - Global.ModContentManager.ModHasAsset(LoadedModDefinition,System.String)
  - Global.ModContentManager.ModHasAsset(System.String,System.String)
  - Global.ModContentManager.PrintAssetList
  - Global.ModContentManager.PrintLoadedAssetList
  - Global.ModContentManager.Refresh
  - Global.ModContentManager.UnloadAllAssetsByType``1
  - Global.ModContentManager.UnloadAllAssetsFromMod(LoadedModDefinition)
  - Global.ModContentManager.UnloadAsset(IContentDefinition)
  - Global.ModContentManager.UnloadAssetFromMod(LoadedModDefinition,System.String)
  - Global.ModContentManager.gameManager
  - Global.ModContentManager.modManager
  langs:
  - csharp
  - vb
  name: ModContentManager
  nameWithType: ModContentManager
  fullName: ModContentManager
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ModContentManager
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 7
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: 'public class ModContentManager : MonoBehaviour'
    content.vb: Public Class ModContentManager Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
- uid: Global.ModContentManager.gameManager
  commentId: F:Global.ModContentManager.gameManager
  id: gameManager
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: gameManager
  nameWithType: ModContentManager.gameManager
  fullName: ModContentManager.gameManager
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: gameManager
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 9
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public GameManager gameManager
    return:
      type: rwby.GameManager
    content.vb: Public gameManager As GameManager
- uid: Global.ModContentManager.modManager
  commentId: F:Global.ModContentManager.modManager
  id: modManager
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: modManager
  nameWithType: ModContentManager.modManager
  fullName: ModContentManager.modManager
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: modManager
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 10
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public ModManager modManager
    return:
      type: Global.ModManager
    content.vb: Public modManager As ModManager
- uid: Global.ModContentManager.Init
  commentId: M:Global.ModContentManager.Init
  id: Init
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: ModContentManager.Init()
  fullName: ModContentManager.Init()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Init
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 12
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public void Init()
    content.vb: Public Sub Init()
  overload: Global.ModContentManager.Init*
- uid: Global.ModContentManager.Refresh
  commentId: M:Global.ModContentManager.Refresh
  id: Refresh
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: ModContentManager.Refresh()
  fullName: ModContentManager.Refresh()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Refresh
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 17
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh()
  overload: Global.ModContentManager.Refresh*
- uid: Global.ModContentManager.PrintAssetList
  commentId: M:Global.ModContentManager.PrintAssetList
  id: PrintAssetList
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: PrintAssetList()
  nameWithType: ModContentManager.PrintAssetList()
  fullName: ModContentManager.PrintAssetList()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: PrintAssetList
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 22
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public void PrintAssetList()
    content.vb: Public Sub PrintAssetList()
  overload: Global.ModContentManager.PrintAssetList*
- uid: Global.ModContentManager.PrintLoadedAssetList
  commentId: M:Global.ModContentManager.PrintLoadedAssetList
  id: PrintLoadedAssetList
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: PrintLoadedAssetList()
  nameWithType: ModContentManager.PrintLoadedAssetList()
  fullName: ModContentManager.PrintLoadedAssetList()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: PrintLoadedAssetList
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 36
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public void PrintLoadedAssetList()
    content.vb: Public Sub PrintLoadedAssetList()
  overload: Global.ModContentManager.PrintLoadedAssetList*
- uid: Global.ModContentManager.GetAssetList
  commentId: M:Global.ModContentManager.GetAssetList
  id: GetAssetList
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: GetAssetList()
  nameWithType: ModContentManager.GetAssetList()
  fullName: ModContentManager.GetAssetList()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetAssetList
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 50
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public List<string> GetAssetList()
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Function GetAssetList() As List(Of String)
  overload: Global.ModContentManager.GetAssetList*
- uid: Global.ModContentManager.ModHasAsset(LoadedModDefinition,System.String)
  commentId: M:Global.ModContentManager.ModHasAsset(LoadedModDefinition,System.String)
  id: ModHasAsset(LoadedModDefinition,System.String)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: ModHasAsset(LoadedModDefinition, string)
  nameWithType: ModContentManager.ModHasAsset(LoadedModDefinition, string)
  fullName: ModContentManager.ModHasAsset(LoadedModDefinition, string)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ModHasAsset
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 62
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public bool ModHasAsset(LoadedModDefinition loadedModDefinition, string assetID)
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    - id: assetID
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ModHasAsset(loadedModDefinition As LoadedModDefinition, assetID As String) As Boolean
  overload: Global.ModContentManager.ModHasAsset*
  nameWithType.vb: ModContentManager.ModHasAsset(LoadedModDefinition, String)
  fullName.vb: ModContentManager.ModHasAsset(LoadedModDefinition, String)
  name.vb: ModHasAsset(LoadedModDefinition, String)
- uid: Global.ModContentManager.ModHasAsset(System.String,System.String)
  commentId: M:Global.ModContentManager.ModHasAsset(System.String,System.String)
  id: ModHasAsset(System.String,System.String)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: ModHasAsset(string, string)
  nameWithType: ModContentManager.ModHasAsset(string, string)
  fullName: ModContentManager.ModHasAsset(string, string)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ModHasAsset
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 67
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public bool ModHasAsset(string modID, string assetID)
    parameters:
    - id: modID
      type: System.String
    - id: assetID
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ModHasAsset(modID As String, assetID As String) As Boolean
  overload: Global.ModContentManager.ModHasAsset*
  nameWithType.vb: ModContentManager.ModHasAsset(String, String)
  fullName.vb: ModContentManager.ModHasAsset(String, String)
  name.vb: ModHasAsset(String, String)
- uid: Global.ModContentManager.GetLoadedAssetList
  commentId: M:Global.ModContentManager.GetLoadedAssetList
  id: GetLoadedAssetList
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: GetLoadedAssetList()
  nameWithType: ModContentManager.GetLoadedAssetList()
  fullName: ModContentManager.GetLoadedAssetList()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetLoadedAssetList
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 75
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public List<string> GetLoadedAssetList()
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Function GetLoadedAssetList() As List(Of String)
  overload: Global.ModContentManager.GetLoadedAssetList*
- uid: Global.ModContentManager.LoadAllAssetsFromMod(LoadedModDefinition)
  commentId: M:Global.ModContentManager.LoadAllAssetsFromMod(LoadedModDefinition)
  id: LoadAllAssetsFromMod(LoadedModDefinition)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAllAssetsFromMod(LoadedModDefinition)
  nameWithType: ModContentManager.LoadAllAssetsFromMod(LoadedModDefinition)
  fullName: ModContentManager.LoadAllAssetsFromMod(LoadedModDefinition)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAllAssetsFromMod
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 87
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public bool LoadAllAssetsFromMod(LoadedModDefinition loadedModDefinition)
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    return:
      type: System.Boolean
    content.vb: Public Function LoadAllAssetsFromMod(loadedModDefinition As LoadedModDefinition) As Boolean
  overload: Global.ModContentManager.LoadAllAssetsFromMod*
- uid: Global.ModContentManager.LoadAllAssetsFromModAsync(LoadedModDefinition)
  commentId: M:Global.ModContentManager.LoadAllAssetsFromModAsync(LoadedModDefinition)
  id: LoadAllAssetsFromModAsync(LoadedModDefinition)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAllAssetsFromModAsync(LoadedModDefinition)
  nameWithType: ModContentManager.LoadAllAssetsFromModAsync(LoadedModDefinition)
  fullName: ModContentManager.LoadAllAssetsFromModAsync(LoadedModDefinition)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAllAssetsFromModAsync
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 99
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public UniTask<bool> LoadAllAssetsFromModAsync(LoadedModDefinition loadedModDefinition)
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    return:
      type: Cysharp.Threading.Tasks.UniTask{System.Boolean}
    content.vb: Public Function LoadAllAssetsFromModAsync(loadedModDefinition As LoadedModDefinition) As UniTask(Of Boolean)
  overload: Global.ModContentManager.LoadAllAssetsFromModAsync*
- uid: Global.ModContentManager.LoadAllAssetsByType``1
  commentId: M:Global.ModContentManager.LoadAllAssetsByType``1
  id: LoadAllAssetsByType``1
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAllAssetsByType<T>()
  nameWithType: ModContentManager.LoadAllAssetsByType<T>()
  fullName: ModContentManager.LoadAllAssetsByType<T>()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAllAssetsByType
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 111
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: 'public void LoadAllAssetsByType<T>() where T : Object'
    typeParameters:
    - id: T
    content.vb: Public Sub LoadAllAssetsByType(Of T As [Object])()
  overload: Global.ModContentManager.LoadAllAssetsByType*
  nameWithType.vb: ModContentManager.LoadAllAssetsByType(Of T)()
  fullName.vb: ModContentManager.LoadAllAssetsByType(Of T)()
  name.vb: LoadAllAssetsByType(Of T)()
- uid: Global.ModContentManager.LoadAllAssetsByTypeAsync``1
  commentId: M:Global.ModContentManager.LoadAllAssetsByTypeAsync``1
  id: LoadAllAssetsByTypeAsync``1
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAllAssetsByTypeAsync<T>()
  nameWithType: ModContentManager.LoadAllAssetsByTypeAsync<T>()
  fullName: ModContentManager.LoadAllAssetsByTypeAsync<T>()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAllAssetsByTypeAsync
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 125
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: 'public UniTask LoadAllAssetsByTypeAsync<T>() where T : Object'
    typeParameters:
    - id: T
    return:
      type: Cysharp.Threading.Tasks.UniTask
    content.vb: Public Function LoadAllAssetsByTypeAsync(Of T As [Object])() As UniTask
  overload: Global.ModContentManager.LoadAllAssetsByTypeAsync*
  nameWithType.vb: ModContentManager.LoadAllAssetsByTypeAsync(Of T)()
  fullName.vb: ModContentManager.LoadAllAssetsByTypeAsync(Of T)()
  name.vb: LoadAllAssetsByTypeAsync(Of T)()
- uid: Global.ModContentManager.LoadAllAssetsFromModByType``1(LoadedModDefinition)
  commentId: M:Global.ModContentManager.LoadAllAssetsFromModByType``1(LoadedModDefinition)
  id: LoadAllAssetsFromModByType``1(LoadedModDefinition)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAllAssetsFromModByType<T>(LoadedModDefinition)
  nameWithType: ModContentManager.LoadAllAssetsFromModByType<T>(LoadedModDefinition)
  fullName: ModContentManager.LoadAllAssetsFromModByType<T>(LoadedModDefinition)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAllAssetsFromModByType
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 139
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: 'public void LoadAllAssetsFromModByType<T>(LoadedModDefinition loadedModDefinition) where T : Object'
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    typeParameters:
    - id: T
    content.vb: Public Sub LoadAllAssetsFromModByType(Of T As [Object])(loadedModDefinition As LoadedModDefinition)
  overload: Global.ModContentManager.LoadAllAssetsFromModByType*
  nameWithType.vb: ModContentManager.LoadAllAssetsFromModByType(Of T)(LoadedModDefinition)
  fullName.vb: ModContentManager.LoadAllAssetsFromModByType(Of T)(LoadedModDefinition)
  name.vb: LoadAllAssetsFromModByType(Of T)(LoadedModDefinition)
- uid: Global.ModContentManager.LoadAllAssetsFromModByTypeAsync``1(LoadedModDefinition)
  commentId: M:Global.ModContentManager.LoadAllAssetsFromModByTypeAsync``1(LoadedModDefinition)
  id: LoadAllAssetsFromModByTypeAsync``1(LoadedModDefinition)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAllAssetsFromModByTypeAsync<T>(LoadedModDefinition)
  nameWithType: ModContentManager.LoadAllAssetsFromModByTypeAsync<T>(LoadedModDefinition)
  fullName: ModContentManager.LoadAllAssetsFromModByTypeAsync<T>(LoadedModDefinition)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAllAssetsFromModByTypeAsync
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 150
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: 'public UniTask LoadAllAssetsFromModByTypeAsync<T>(LoadedModDefinition loadedModDefinition) where T : Object'
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    typeParameters:
    - id: T
    return:
      type: Cysharp.Threading.Tasks.UniTask
    content.vb: Public Function LoadAllAssetsFromModByTypeAsync(Of T As [Object])(loadedModDefinition As LoadedModDefinition) As UniTask
  overload: Global.ModContentManager.LoadAllAssetsFromModByTypeAsync*
  nameWithType.vb: ModContentManager.LoadAllAssetsFromModByTypeAsync(Of T)(LoadedModDefinition)
  fullName.vb: ModContentManager.LoadAllAssetsFromModByTypeAsync(Of T)(LoadedModDefinition)
  name.vb: LoadAllAssetsFromModByTypeAsync(Of T)(LoadedModDefinition)
- uid: Global.ModContentManager.LoadAssetFromMod(LoadedModDefinition,System.String)
  commentId: M:Global.ModContentManager.LoadAssetFromMod(LoadedModDefinition,System.String)
  id: LoadAssetFromMod(LoadedModDefinition,System.String)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAssetFromMod(LoadedModDefinition, string)
  nameWithType: ModContentManager.LoadAssetFromMod(LoadedModDefinition, string)
  fullName: ModContentManager.LoadAssetFromMod(LoadedModDefinition, string)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAssetFromMod
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 161
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public bool LoadAssetFromMod(LoadedModDefinition loadedModDefinition, string assetID)
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    - id: assetID
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function LoadAssetFromMod(loadedModDefinition As LoadedModDefinition, assetID As String) As Boolean
  overload: Global.ModContentManager.LoadAssetFromMod*
  nameWithType.vb: ModContentManager.LoadAssetFromMod(LoadedModDefinition, String)
  fullName.vb: ModContentManager.LoadAssetFromMod(LoadedModDefinition, String)
  name.vb: LoadAssetFromMod(LoadedModDefinition, String)
- uid: Global.ModContentManager.LoadAssetFromModAsync(ModAssetSoftReference)
  commentId: M:Global.ModContentManager.LoadAssetFromModAsync(ModAssetSoftReference)
  id: LoadAssetFromModAsync(ModAssetSoftReference)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAssetFromModAsync(ModAssetSoftReference)
  nameWithType: ModContentManager.LoadAssetFromModAsync(ModAssetSoftReference)
  fullName: ModContentManager.LoadAssetFromModAsync(ModAssetSoftReference)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAssetFromModAsync
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 167
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public UniTask<bool> LoadAssetFromModAsync(ModAssetSoftReference loadedModDefinition)
    parameters:
    - id: loadedModDefinition
      type: Global.ModAssetSoftReference
    return:
      type: Cysharp.Threading.Tasks.UniTask{System.Boolean}
    content.vb: Public Function LoadAssetFromModAsync(loadedModDefinition As ModAssetSoftReference) As UniTask(Of Boolean)
  overload: Global.ModContentManager.LoadAssetFromModAsync*
- uid: Global.ModContentManager.LoadAssetFromModAsync(LoadedModDefinition,System.String)
  commentId: M:Global.ModContentManager.LoadAssetFromModAsync(LoadedModDefinition,System.String)
  id: LoadAssetFromModAsync(LoadedModDefinition,System.String)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAssetFromModAsync(LoadedModDefinition, string)
  nameWithType: ModContentManager.LoadAssetFromModAsync(LoadedModDefinition, string)
  fullName: ModContentManager.LoadAssetFromModAsync(LoadedModDefinition, string)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAssetFromModAsync
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 172
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public UniTask<bool> LoadAssetFromModAsync(LoadedModDefinition loadedModDefinition, string assetID)
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    - id: assetID
      type: System.String
    return:
      type: Cysharp.Threading.Tasks.UniTask{System.Boolean}
    content.vb: Public Function LoadAssetFromModAsync(loadedModDefinition As LoadedModDefinition, assetID As String) As UniTask(Of Boolean)
  overload: Global.ModContentManager.LoadAssetFromModAsync*
  nameWithType.vb: ModContentManager.LoadAssetFromModAsync(LoadedModDefinition, String)
  fullName.vb: ModContentManager.LoadAssetFromModAsync(LoadedModDefinition, String)
  name.vb: LoadAssetFromModAsync(LoadedModDefinition, String)
- uid: Global.ModContentManager.LoadAssetFromModAsync(System.String,System.String)
  commentId: M:Global.ModContentManager.LoadAssetFromModAsync(System.String,System.String)
  id: LoadAssetFromModAsync(System.String,System.String)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAssetFromModAsync(string, string)
  nameWithType: ModContentManager.LoadAssetFromModAsync(string, string)
  fullName: ModContentManager.LoadAssetFromModAsync(string, string)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAssetFromModAsync
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 178
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public UniTask<bool> LoadAssetFromModAsync(string modID, string assetID)
    parameters:
    - id: modID
      type: System.String
    - id: assetID
      type: System.String
    return:
      type: Cysharp.Threading.Tasks.UniTask{System.Boolean}
    content.vb: Public Function LoadAssetFromModAsync(modID As String, assetID As String) As UniTask(Of Boolean)
  overload: Global.ModContentManager.LoadAssetFromModAsync*
  nameWithType.vb: ModContentManager.LoadAssetFromModAsync(String, String)
  fullName.vb: ModContentManager.LoadAssetFromModAsync(String, String)
  name.vb: LoadAssetFromModAsync(String, String)
- uid: Global.ModContentManager.LoadAssetFromModsAsync(System.String)
  commentId: M:Global.ModContentManager.LoadAssetFromModsAsync(System.String)
  id: LoadAssetFromModsAsync(System.String)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: LoadAssetFromModsAsync(string)
  nameWithType: ModContentManager.LoadAssetFromModsAsync(string)
  fullName: ModContentManager.LoadAssetFromModsAsync(string)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: LoadAssetFromModsAsync
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 186
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public UniTask LoadAssetFromModsAsync(string assetID)
    parameters:
    - id: assetID
      type: System.String
    return:
      type: Cysharp.Threading.Tasks.UniTask
    content.vb: Public Function LoadAssetFromModsAsync(assetID As String) As UniTask
  overload: Global.ModContentManager.LoadAssetFromModsAsync*
  nameWithType.vb: ModContentManager.LoadAssetFromModsAsync(String)
  fullName.vb: ModContentManager.LoadAssetFromModsAsync(String)
  name.vb: LoadAssetFromModsAsync(String)
- uid: Global.ModContentManager.GetAssetFromMod(ModAssetSoftReference,System.Boolean)
  commentId: M:Global.ModContentManager.GetAssetFromMod(ModAssetSoftReference,System.Boolean)
  id: GetAssetFromMod(ModAssetSoftReference,System.Boolean)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: GetAssetFromMod(ModAssetSoftReference, bool)
  nameWithType: ModContentManager.GetAssetFromMod(ModAssetSoftReference, bool)
  fullName: ModContentManager.GetAssetFromMod(ModAssetSoftReference, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetAssetFromMod
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 194
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public Object GetAssetFromMod(ModAssetSoftReference softReference, bool autoLoad = false)
    parameters:
    - id: softReference
      type: Global.ModAssetSoftReference
    - id: autoLoad
      type: System.Boolean
    return:
      type: UnityEngine.Object
    content.vb: Public Function GetAssetFromMod(softReference As ModAssetSoftReference, autoLoad As Boolean = False) As [Object]
  overload: Global.ModContentManager.GetAssetFromMod*
  nameWithType.vb: ModContentManager.GetAssetFromMod(ModAssetSoftReference, Boolean)
  fullName.vb: ModContentManager.GetAssetFromMod(ModAssetSoftReference, Boolean)
  name.vb: GetAssetFromMod(ModAssetSoftReference, Boolean)
- uid: Global.ModContentManager.GetAssetFromMod(LoadedModDefinition,System.String,System.Boolean)
  commentId: M:Global.ModContentManager.GetAssetFromMod(LoadedModDefinition,System.String,System.Boolean)
  id: GetAssetFromMod(LoadedModDefinition,System.String,System.Boolean)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: GetAssetFromMod(LoadedModDefinition, string, bool)
  nameWithType: ModContentManager.GetAssetFromMod(LoadedModDefinition, string, bool)
  fullName: ModContentManager.GetAssetFromMod(LoadedModDefinition, string, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetAssetFromMod
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 201
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public Object GetAssetFromMod(LoadedModDefinition loadedModDefinition, string assetID, bool autoLoad = false)
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    - id: assetID
      type: System.String
    - id: autoLoad
      type: System.Boolean
    return:
      type: UnityEngine.Object
    content.vb: Public Function GetAssetFromMod(loadedModDefinition As LoadedModDefinition, assetID As String, autoLoad As Boolean = False) As [Object]
  overload: Global.ModContentManager.GetAssetFromMod*
  nameWithType.vb: ModContentManager.GetAssetFromMod(LoadedModDefinition, String, Boolean)
  fullName.vb: ModContentManager.GetAssetFromMod(LoadedModDefinition, String, Boolean)
  name.vb: GetAssetFromMod(LoadedModDefinition, String, Boolean)
- uid: Global.ModContentManager.GetAssetFromMod``1(ModAssetSoftReference)
  commentId: M:Global.ModContentManager.GetAssetFromMod``1(ModAssetSoftReference)
  id: GetAssetFromMod``1(ModAssetSoftReference)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: GetAssetFromMod<T>(ModAssetSoftReference)
  nameWithType: ModContentManager.GetAssetFromMod<T>(ModAssetSoftReference)
  fullName: ModContentManager.GetAssetFromMod<T>(ModAssetSoftReference)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetAssetFromMod
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 206
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: 'public T GetAssetFromMod<T>(ModAssetSoftReference softReference) where T : Object'
    parameters:
    - id: softReference
      type: Global.ModAssetSoftReference
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetAssetFromMod(Of T As [Object])(softReference As ModAssetSoftReference) As T
  overload: Global.ModContentManager.GetAssetFromMod*
  nameWithType.vb: ModContentManager.GetAssetFromMod(Of T)(ModAssetSoftReference)
  fullName.vb: ModContentManager.GetAssetFromMod(Of T)(ModAssetSoftReference)
  name.vb: GetAssetFromMod(Of T)(ModAssetSoftReference)
- uid: Global.ModContentManager.GetAssetFromMod``1(LoadedModDefinition,System.String,System.Boolean)
  commentId: M:Global.ModContentManager.GetAssetFromMod``1(LoadedModDefinition,System.String,System.Boolean)
  id: GetAssetFromMod``1(LoadedModDefinition,System.String,System.Boolean)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: GetAssetFromMod<T>(LoadedModDefinition, string, bool)
  nameWithType: ModContentManager.GetAssetFromMod<T>(LoadedModDefinition, string, bool)
  fullName: ModContentManager.GetAssetFromMod<T>(LoadedModDefinition, string, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetAssetFromMod
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 211
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: 'public T GetAssetFromMod<T>(LoadedModDefinition loadedModDefinition, string assetID, bool autoLoad = false) where T : Object'
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    - id: assetID
      type: System.String
    - id: autoLoad
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetAssetFromMod(Of T As [Object])(loadedModDefinition As LoadedModDefinition, assetID As String, autoLoad As Boolean = False) As T
  overload: Global.ModContentManager.GetAssetFromMod*
  nameWithType.vb: ModContentManager.GetAssetFromMod(Of T)(LoadedModDefinition, String, Boolean)
  fullName.vb: ModContentManager.GetAssetFromMod(Of T)(LoadedModDefinition, String, Boolean)
  name.vb: GetAssetFromMod(Of T)(LoadedModDefinition, String, Boolean)
- uid: Global.ModContentManager.GetAssetFromMod``1(System.String,System.String,System.Boolean)
  commentId: M:Global.ModContentManager.GetAssetFromMod``1(System.String,System.String,System.Boolean)
  id: GetAssetFromMod``1(System.String,System.String,System.Boolean)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: GetAssetFromMod<T>(string, string, bool)
  nameWithType: ModContentManager.GetAssetFromMod<T>(string, string, bool)
  fullName: ModContentManager.GetAssetFromMod<T>(string, string, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetAssetFromMod
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 216
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: 'public T GetAssetFromMod<T>(string modId, string assetID, bool autoLoad = false) where T : Object'
    parameters:
    - id: modId
      type: System.String
    - id: assetID
      type: System.String
    - id: autoLoad
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetAssetFromMod(Of T As [Object])(modId As String, assetID As String, autoLoad As Boolean = False) As T
  overload: Global.ModContentManager.GetAssetFromMod*
  nameWithType.vb: ModContentManager.GetAssetFromMod(Of T)(String, String, Boolean)
  fullName.vb: ModContentManager.GetAssetFromMod(Of T)(String, String, Boolean)
  name.vb: GetAssetFromMod(Of T)(String, String, Boolean)
- uid: Global.ModContentManager.GetAssetFromMods(System.String,System.Boolean)
  commentId: M:Global.ModContentManager.GetAssetFromMods(System.String,System.Boolean)
  id: GetAssetFromMods(System.String,System.Boolean)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: GetAssetFromMods(string, bool)
  nameWithType: ModContentManager.GetAssetFromMods(string, bool)
  fullName: ModContentManager.GetAssetFromMods(string, bool)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetAssetFromMods
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 224
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public List<Object> GetAssetFromMods(string assetID, bool autoLoad = false)
    parameters:
    - id: assetID
      type: System.String
    - id: autoLoad
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{UnityEngine.Object}
    content.vb: Public Function GetAssetFromMods(assetID As String, autoLoad As Boolean = False) As List(Of [Object])
  overload: Global.ModContentManager.GetAssetFromMods*
  nameWithType.vb: ModContentManager.GetAssetFromMods(String, Boolean)
  fullName.vb: ModContentManager.GetAssetFromMods(String, Boolean)
  name.vb: GetAssetFromMods(String, Boolean)
- uid: Global.ModContentManager.UnloadAllAssetsFromMod(LoadedModDefinition)
  commentId: M:Global.ModContentManager.UnloadAllAssetsFromMod(LoadedModDefinition)
  id: UnloadAllAssetsFromMod(LoadedModDefinition)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: UnloadAllAssetsFromMod(LoadedModDefinition)
  nameWithType: ModContentManager.UnloadAllAssetsFromMod(LoadedModDefinition)
  fullName: ModContentManager.UnloadAllAssetsFromMod(LoadedModDefinition)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: UnloadAllAssetsFromMod
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 237
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public void UnloadAllAssetsFromMod(LoadedModDefinition loadedModDefinition)
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    content.vb: Public Sub UnloadAllAssetsFromMod(loadedModDefinition As LoadedModDefinition)
  overload: Global.ModContentManager.UnloadAllAssetsFromMod*
- uid: Global.ModContentManager.UnloadAllAssetsByType``1
  commentId: M:Global.ModContentManager.UnloadAllAssetsByType``1
  id: UnloadAllAssetsByType``1
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: UnloadAllAssetsByType<T>()
  nameWithType: ModContentManager.UnloadAllAssetsByType<T>()
  fullName: ModContentManager.UnloadAllAssetsByType<T>()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: UnloadAllAssetsByType
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 248
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: 'public void UnloadAllAssetsByType<T>() where T : Object'
    typeParameters:
    - id: T
    content.vb: Public Sub UnloadAllAssetsByType(Of T As [Object])()
  overload: Global.ModContentManager.UnloadAllAssetsByType*
  nameWithType.vb: ModContentManager.UnloadAllAssetsByType(Of T)()
  fullName.vb: ModContentManager.UnloadAllAssetsByType(Of T)()
  name.vb: UnloadAllAssetsByType(Of T)()
- uid: Global.ModContentManager.UnloadAssetFromMod(LoadedModDefinition,System.String)
  commentId: M:Global.ModContentManager.UnloadAssetFromMod(LoadedModDefinition,System.String)
  id: UnloadAssetFromMod(LoadedModDefinition,System.String)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: UnloadAssetFromMod(LoadedModDefinition, string)
  nameWithType: ModContentManager.UnloadAssetFromMod(LoadedModDefinition, string)
  fullName: ModContentManager.UnloadAssetFromMod(LoadedModDefinition, string)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: UnloadAssetFromMod
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 257
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public void UnloadAssetFromMod(LoadedModDefinition loadedModDefinition, string assetID)
    parameters:
    - id: loadedModDefinition
      type: Global.LoadedModDefinition
    - id: assetID
      type: System.String
    content.vb: Public Sub UnloadAssetFromMod(loadedModDefinition As LoadedModDefinition, assetID As String)
  overload: Global.ModContentManager.UnloadAssetFromMod*
  nameWithType.vb: ModContentManager.UnloadAssetFromMod(LoadedModDefinition, String)
  fullName.vb: ModContentManager.UnloadAssetFromMod(LoadedModDefinition, String)
  name.vb: UnloadAssetFromMod(LoadedModDefinition, String)
- uid: Global.ModContentManager.UnloadAsset(IContentDefinition)
  commentId: M:Global.ModContentManager.UnloadAsset(IContentDefinition)
  id: UnloadAsset(IContentDefinition)
  parent: Global.ModContentManager
  langs:
  - csharp
  - vb
  name: UnloadAsset(IContentDefinition)
  nameWithType: ModContentManager.UnloadAsset(IContentDefinition)
  fullName: ModContentManager.UnloadAsset(IContentDefinition)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: UnloadAsset
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/System/ModContentManager.cs
    startLine: 263
  assemblies:
  - rwby
  namespace: Global
  syntax:
    content: public void UnloadAsset(IContentDefinition contentDefinition)
    parameters:
    - id: contentDefinition
      type: Global.IContentDefinition
    content.vb: Public Sub UnloadAsset(contentDefinition As IContentDefinition)
  overload: Global.ModContentManager.UnloadAsset*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: rwby.GameManager
  commentId: T:rwby.GameManager
  parent: rwby
  href: rwby.GameManager.html
  name: GameManager
  nameWithType: GameManager
  fullName: rwby.GameManager
- uid: rwby
  commentId: N:rwby
  href: rwby.html
  name: rwby
  nameWithType: rwby
  fullName: rwby
- uid: Global.ModManager
  commentId: T:Global.ModManager
  href: ModManager.html
  name: ModManager
  nameWithType: ModManager
  fullName: ModManager
- uid: Global.ModContentManager.Init*
  commentId: Overload:Global.ModContentManager.Init
  href: Global.ModContentManager.html#ModContentManager_Init
  name: Init
  nameWithType: ModContentManager.Init
  fullName: ModContentManager.Init
- uid: Global.ModContentManager.Refresh*
  commentId: Overload:Global.ModContentManager.Refresh
  href: Global.ModContentManager.html#ModContentManager_Refresh
  name: Refresh
  nameWithType: ModContentManager.Refresh
  fullName: ModContentManager.Refresh
- uid: Global.ModContentManager.PrintAssetList*
  commentId: Overload:Global.ModContentManager.PrintAssetList
  href: Global.ModContentManager.html#ModContentManager_PrintAssetList
  name: PrintAssetList
  nameWithType: ModContentManager.PrintAssetList
  fullName: ModContentManager.PrintAssetList
- uid: Global.ModContentManager.PrintLoadedAssetList*
  commentId: Overload:Global.ModContentManager.PrintLoadedAssetList
  href: Global.ModContentManager.html#ModContentManager_PrintLoadedAssetList
  name: PrintLoadedAssetList
  nameWithType: ModContentManager.PrintLoadedAssetList
  fullName: ModContentManager.PrintLoadedAssetList
- uid: Global.ModContentManager.GetAssetList*
  commentId: Overload:Global.ModContentManager.GetAssetList
  href: Global.ModContentManager.html#ModContentManager_GetAssetList
  name: GetAssetList
  nameWithType: ModContentManager.GetAssetList
  fullName: ModContentManager.GetAssetList
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.ModContentManager.ModHasAsset*
  commentId: Overload:Global.ModContentManager.ModHasAsset
  href: Global.ModContentManager.html#ModContentManager_ModHasAsset_LoadedModDefinition_System_String_
  name: ModHasAsset
  nameWithType: ModContentManager.ModHasAsset
  fullName: ModContentManager.ModHasAsset
- uid: Global.LoadedModDefinition
  commentId: T:Global.LoadedModDefinition
  href: LoadedModDefinition.html
  name: LoadedModDefinition
  nameWithType: LoadedModDefinition
  fullName: LoadedModDefinition
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ModContentManager.GetLoadedAssetList*
  commentId: Overload:Global.ModContentManager.GetLoadedAssetList
  href: Global.ModContentManager.html#ModContentManager_GetLoadedAssetList
  name: GetLoadedAssetList
  nameWithType: ModContentManager.GetLoadedAssetList
  fullName: ModContentManager.GetLoadedAssetList
- uid: Global.ModContentManager.LoadAllAssetsFromMod*
  commentId: Overload:Global.ModContentManager.LoadAllAssetsFromMod
  href: Global.ModContentManager.html#ModContentManager_LoadAllAssetsFromMod_LoadedModDefinition_
  name: LoadAllAssetsFromMod
  nameWithType: ModContentManager.LoadAllAssetsFromMod
  fullName: ModContentManager.LoadAllAssetsFromMod
- uid: Global.ModContentManager.LoadAllAssetsFromModAsync*
  commentId: Overload:Global.ModContentManager.LoadAllAssetsFromModAsync
  href: Global.ModContentManager.html#ModContentManager_LoadAllAssetsFromModAsync_LoadedModDefinition_
  name: LoadAllAssetsFromModAsync
  nameWithType: ModContentManager.LoadAllAssetsFromModAsync
  fullName: ModContentManager.LoadAllAssetsFromModAsync
- uid: Cysharp.Threading.Tasks.UniTask{System.Boolean}
  commentId: T:Cysharp.Threading.Tasks.UniTask{System.Boolean}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: UniTask<bool>
  nameWithType: UniTask<bool>
  fullName: Cysharp.Threading.Tasks.UniTask<bool>
  nameWithType.vb: UniTask(Of Boolean)
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of Boolean)
  name.vb: UniTask(Of Boolean)
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Cysharp.Threading.Tasks.UniTask`1
  commentId: T:Cysharp.Threading.Tasks.UniTask`1
  isExternal: true
  name: UniTask<T>
  nameWithType: UniTask<T>
  fullName: Cysharp.Threading.Tasks.UniTask<T>
  nameWithType.vb: UniTask(Of T)
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of T)
  name.vb: UniTask(Of T)
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Cysharp.Threading.Tasks
  commentId: N:Cysharp.Threading.Tasks
  isExternal: true
  name: Cysharp.Threading.Tasks
  nameWithType: Cysharp.Threading.Tasks
  fullName: Cysharp.Threading.Tasks
  spec.csharp:
  - uid: Cysharp
    name: Cysharp
    isExternal: true
  - name: .
  - uid: Cysharp.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: Cysharp.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: Cysharp
    name: Cysharp
    isExternal: true
  - name: .
  - uid: Cysharp.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: Cysharp.Threading.Tasks
    name: Tasks
    isExternal: true
- uid: Global.ModContentManager.LoadAllAssetsByType*
  commentId: Overload:Global.ModContentManager.LoadAllAssetsByType
  href: Global.ModContentManager.html#ModContentManager_LoadAllAssetsByType__1
  name: LoadAllAssetsByType
  nameWithType: ModContentManager.LoadAllAssetsByType
  fullName: ModContentManager.LoadAllAssetsByType
- uid: Global.ModContentManager.LoadAllAssetsByTypeAsync*
  commentId: Overload:Global.ModContentManager.LoadAllAssetsByTypeAsync
  href: Global.ModContentManager.html#ModContentManager_LoadAllAssetsByTypeAsync__1
  name: LoadAllAssetsByTypeAsync
  nameWithType: ModContentManager.LoadAllAssetsByTypeAsync
  fullName: ModContentManager.LoadAllAssetsByTypeAsync
- uid: Cysharp.Threading.Tasks.UniTask
  commentId: T:Cysharp.Threading.Tasks.UniTask
  parent: Cysharp.Threading.Tasks
  isExternal: true
  name: UniTask
  nameWithType: UniTask
  fullName: Cysharp.Threading.Tasks.UniTask
- uid: Global.ModContentManager.LoadAllAssetsFromModByType*
  commentId: Overload:Global.ModContentManager.LoadAllAssetsFromModByType
  href: Global.ModContentManager.html#ModContentManager_LoadAllAssetsFromModByType__1_LoadedModDefinition_
  name: LoadAllAssetsFromModByType
  nameWithType: ModContentManager.LoadAllAssetsFromModByType
  fullName: ModContentManager.LoadAllAssetsFromModByType
- uid: Global.ModContentManager.LoadAllAssetsFromModByTypeAsync*
  commentId: Overload:Global.ModContentManager.LoadAllAssetsFromModByTypeAsync
  href: Global.ModContentManager.html#ModContentManager_LoadAllAssetsFromModByTypeAsync__1_LoadedModDefinition_
  name: LoadAllAssetsFromModByTypeAsync
  nameWithType: ModContentManager.LoadAllAssetsFromModByTypeAsync
  fullName: ModContentManager.LoadAllAssetsFromModByTypeAsync
- uid: Global.ModContentManager.LoadAssetFromMod*
  commentId: Overload:Global.ModContentManager.LoadAssetFromMod
  href: Global.ModContentManager.html#ModContentManager_LoadAssetFromMod_LoadedModDefinition_System_String_
  name: LoadAssetFromMod
  nameWithType: ModContentManager.LoadAssetFromMod
  fullName: ModContentManager.LoadAssetFromMod
- uid: Global.ModContentManager.LoadAssetFromModAsync*
  commentId: Overload:Global.ModContentManager.LoadAssetFromModAsync
  href: Global.ModContentManager.html#ModContentManager_LoadAssetFromModAsync_ModAssetSoftReference_
  name: LoadAssetFromModAsync
  nameWithType: ModContentManager.LoadAssetFromModAsync
  fullName: ModContentManager.LoadAssetFromModAsync
- uid: Global.ModAssetSoftReference
  commentId: T:Global.ModAssetSoftReference
  href: ModAssetSoftReference.html
  name: ModAssetSoftReference
  nameWithType: ModAssetSoftReference
  fullName: ModAssetSoftReference
- uid: Global.ModContentManager.LoadAssetFromModsAsync*
  commentId: Overload:Global.ModContentManager.LoadAssetFromModsAsync
  href: Global.ModContentManager.html#ModContentManager_LoadAssetFromModsAsync_System_String_
  name: LoadAssetFromModsAsync
  nameWithType: ModContentManager.LoadAssetFromModsAsync
  fullName: ModContentManager.LoadAssetFromModsAsync
- uid: Global.ModContentManager.GetAssetFromMod*
  commentId: Overload:Global.ModContentManager.GetAssetFromMod
  href: Global.ModContentManager.html#ModContentManager_GetAssetFromMod_ModAssetSoftReference_System_Boolean_
  name: GetAssetFromMod
  nameWithType: ModContentManager.GetAssetFromMod
  fullName: ModContentManager.GetAssetFromMod
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.ModContentManager.GetAssetFromMods*
  commentId: Overload:Global.ModContentManager.GetAssetFromMods
  href: Global.ModContentManager.html#ModContentManager_GetAssetFromMods_System_String_System_Boolean_
  name: GetAssetFromMods
  nameWithType: ModContentManager.GetAssetFromMods
  fullName: ModContentManager.GetAssetFromMods
- uid: System.Collections.Generic.List{UnityEngine.Object}
  commentId: T:System.Collections.Generic.List{UnityEngine.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<UnityEngine.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ModContentManager.UnloadAllAssetsFromMod*
  commentId: Overload:Global.ModContentManager.UnloadAllAssetsFromMod
  href: Global.ModContentManager.html#ModContentManager_UnloadAllAssetsFromMod_LoadedModDefinition_
  name: UnloadAllAssetsFromMod
  nameWithType: ModContentManager.UnloadAllAssetsFromMod
  fullName: ModContentManager.UnloadAllAssetsFromMod
- uid: Global.ModContentManager.UnloadAllAssetsByType*
  commentId: Overload:Global.ModContentManager.UnloadAllAssetsByType
  href: Global.ModContentManager.html#ModContentManager_UnloadAllAssetsByType__1
  name: UnloadAllAssetsByType
  nameWithType: ModContentManager.UnloadAllAssetsByType
  fullName: ModContentManager.UnloadAllAssetsByType
- uid: Global.ModContentManager.UnloadAssetFromMod*
  commentId: Overload:Global.ModContentManager.UnloadAssetFromMod
  href: Global.ModContentManager.html#ModContentManager_UnloadAssetFromMod_LoadedModDefinition_System_String_
  name: UnloadAssetFromMod
  nameWithType: ModContentManager.UnloadAssetFromMod
  fullName: ModContentManager.UnloadAssetFromMod
- uid: Global.ModContentManager.UnloadAsset*
  commentId: Overload:Global.ModContentManager.UnloadAsset
  href: Global.ModContentManager.html#ModContentManager_UnloadAsset_IContentDefinition_
  name: UnloadAsset
  nameWithType: ModContentManager.UnloadAsset
  fullName: ModContentManager.UnloadAsset
- uid: Global.IContentDefinition
  commentId: T:Global.IContentDefinition
  href: IContentDefinition.html
  name: IContentDefinition
  nameWithType: IContentDefinition
  fullName: IContentDefinition
