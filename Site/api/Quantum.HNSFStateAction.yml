### YamlMime:ManagedReference
items:
- uid: Quantum.HNSFStateAction
  commentId: T:Quantum.HNSFStateAction
  id: HNSFStateAction
  parent: Quantum
  children:
  - Quantum.HNSFStateAction.Copy(Quantum.HNSFStateAction)
  - Quantum.HNSFStateAction.Execute(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Photon.Deterministic.FP,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  - Quantum.HNSFStateAction.Execute(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  - Quantum.HNSFStateAction.Execute(Quantum.FrameThreadSafe@,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  - Quantum.HNSFStateAction.ExecuteAction(Quantum.Frame,Quantum.EntityRef,Photon.Deterministic.FP,Quantum.HNSFStateContext@)
  - Quantum.HNSFStateAction.Label
  - Quantum.HNSFStateAction.actionDisabled
  - Quantum.HNSFStateAction.children
  - Quantum.HNSFStateAction.decision
  - Quantum.HNSFStateAction.frameRanges
  - Quantum.HNSFStateAction.parent
  - Quantum.HNSFStateAction.targetType
  langs:
  - csharp
  - vb
  name: HNSFStateAction
  nameWithType: HNSFStateAction
  fullName: Quantum.HNSFStateAction
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: HNSFStateAction
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 7
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: 'public class HNSFStateAction : AssetObject, ILogSource'
    content.vb: Public Class HNSFStateAction Inherits AssetObject Implements ILogSource
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  - Quantum.AssetObject
  derivedClasses:
  - Quantum.ApplyGravityAction
  - Quantum.ApplyMovementAction
  - Quantum.ApplySlopeMovementAction
  - Quantum.ApplyTractionAction
  - Quantum.ArticleDestroySelfAction
  - Quantum.AttemptHardKnockdownAction
  - Quantum.AttemptSpecialsAction
  - Quantum.ChangeGroundedStateAction
  - Quantum.ChangeMovesetAction
  - Quantum.CharaStateUpdateAction
  - Quantum.ClampForcesAction
  - Quantum.ClearAttackStringAction
  - Quantum.ClearChargeAction
  - Quantum.ClearComboAction
  - Quantum.ClearHitEntitiesAction
  - Quantum.ClearInputFromBufferAction
  - Quantum.ClearTouchedEntitiesAfterHitAction
  - Quantum.ClearTrackedStatesAction
  - Quantum.CreateOrUpdateCollisionbox
  - Quantum.CreateOrUpdateHitbox
  - Quantum.CreateOrUpdateHurtbox
  - Quantum.CreateOrUpdateThrowbox
  - Quantum.CreateOrUpdateWarningbox
  - Quantum.DebugMessageAction
  - Quantum.DirectDamageAction
  - Quantum.DisableHardTargetingEntityAction
  - Quantum.DisableLastInputAction
  - Quantum.DoChargeAction
  - Quantum.EmptyStateAction
  - Quantum.ExternalStateAction
  - Quantum.FindWallAroundAction
  - Quantum.ForceUngroundAction
  - Quantum.ModifyAnimationFrameAction
  - Quantum.ModifyAuraAction
  - Quantum.ModifyBlackboardBoolAction
  - Quantum.ModifyBlackboardFPAction
  - Quantum.ModifyBlackboardFPVector3Action
  - Quantum.ModifyBlackboardIntAction
  - Quantum.ModifyForcesAction
  - Quantum.ModifyGravityAction
  - Quantum.ModifyHitstopAction
  - Quantum.ModifyHitstunAction
  - Quantum.ModifyInertiaAction
  - Quantum.ModifyPassiveAuraGainDelayAction
  - Quantum.ModifyPhysicsForcesAction
  - Quantum.ModifyStateFrameAction
  - Quantum.MoveTowardsPhysicsForceAction
  - Quantum.MultiplyForcesAction
  - Quantum.PhysicsBodyClampGravity
  - Quantum.PhysicsBodyModifyGravityAction
  - Quantum.PhysicsBodyMoveTowardsPositionAction
  - Quantum.PlayEffectOnChargeLevelAction
  - Quantum.PlayRandomSoundAction
  - Quantum.PlaySoundAction
  - Quantum.PlayVisualEffectAction
  - Quantum.RefreshValidSpecialsAction
  - Quantum.RegisterAttackToStringAction
  - Quantum.ReleaseThroweeAction
  - Quantum.RequestStateChangeAction
  - Quantum.RequestStateChangeByTagAction
  - Quantum.RequestStateChangeListAction
  - Quantum.RotateTowardsAction
  - Quantum.SelectSoftTargetAction
  - Quantum.SetAIConfigAction
  - Quantum.SetAnimFrameBasedOnHitstunAction
  - Quantum.SetAnimMixerFPParamAction
  - Quantum.SetAnimationAction
  - Quantum.SetAnimationMixerForMovementtion
  - Quantum.SetAnimationMixerParamAction
  - Quantum.SetArticleLookRotationAction
  - Quantum.SetCollisionHardnessAction
  - Quantum.SetCounterhitableAction
  - Quantum.SetECBAction
  - Quantum.SetECBPositionFromAnimationCurveAction
  - Quantum.SetFighterVariableAction
  - Quantum.SetHitReactionAction
  - Quantum.SetLastHitAsThroweeAction
  - Quantum.SetMovementAction
  - Quantum.SetPositionAction
  - Quantum.SetRotationAction
  - Quantum.SetTargetableAction
  - Quantum.SetVisibilityAction
  - Quantum.SnapToECBAction
  - Quantum.SpawnArticleAction
  - Quantum.StandardDeathAction
  - Quantum.StandardHitClashAction
  - Quantum.StandardHitResponseAction
  - Quantum.StartCutsceneAction
  - Quantum.StopCutsceneAction
  - Quantum.StopVisualEffectAction
  - Quantum.TeleportRelatedToTargetAction
  - Quantum.TrackStateAction
  implements:
  - Quantum.ILogSource
  inheritedMembers:
  - Quantum.AssetObject.Identifier
  - Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  - Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  - Quantum.AssetObject.Create``1
  - Quantum.AssetObject.Create(System.Type)
  - Quantum.AssetObject.Create``1(System.Action{{T}})
  - Quantum.AssetObject.Reset
  - Quantum.AssetObject.Guid
  - Quantum.AssetObject.Path
  - Quantum.AssetObject.Settings
- uid: Quantum.HNSFStateAction.Label
  commentId: F:Quantum.HNSFStateAction.Label
  id: Label
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: HNSFStateAction.Label
  fullName: Quantum.HNSFStateAction.Label
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Label
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 21
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public string Label
    return:
      type: System.String
    content.vb: Public Label As String
- uid: Quantum.HNSFStateAction.parent
  commentId: F:Quantum.HNSFStateAction.parent
  id: parent
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: parent
  nameWithType: HNSFStateAction.parent
  fullName: Quantum.HNSFStateAction.parent
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: parent
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 22
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFStateAction> parent
    return:
      type: Quantum.AssetRef{Quantum.HNSFStateAction}
    content.vb: Public parent As AssetRef(Of HNSFStateAction)
- uid: Quantum.HNSFStateAction.children
  commentId: F:Quantum.HNSFStateAction.children
  id: children
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: children
  nameWithType: HNSFStateAction.children
  fullName: Quantum.HNSFStateAction.children
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: children
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 23
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFStateAction>[] children
    return:
      type: Quantum.AssetRef{Quantum.HNSFStateAction}[]
    content.vb: Public children As AssetRef(Of HNSFStateAction)()
- uid: Quantum.HNSFStateAction.frameRanges
  commentId: F:Quantum.HNSFStateAction.frameRanges
  id: frameRanges
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: frameRanges
  nameWithType: HNSFStateAction.frameRanges
  fullName: Quantum.HNSFStateAction.frameRanges
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: frameRanges
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 24
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public ActionRange[] frameRanges
    return:
      type: Quantum.ActionRange[]
    content.vb: Public frameRanges As ActionRange()
- uid: Quantum.HNSFStateAction.actionDisabled
  commentId: F:Quantum.HNSFStateAction.actionDisabled
  id: actionDisabled
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: actionDisabled
  nameWithType: HNSFStateAction.actionDisabled
  fullName: Quantum.HNSFStateAction.actionDisabled
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: actionDisabled
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 25
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool actionDisabled
    return:
      type: System.Boolean
    content.vb: Public actionDisabled As Boolean
- uid: Quantum.HNSFStateAction.decision
  commentId: F:Quantum.HNSFStateAction.decision
  id: decision
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: decision
  nameWithType: HNSFStateAction.decision
  fullName: Quantum.HNSFStateAction.decision
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: decision
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 27
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFStateDecision>[] decision
    return:
      type: Quantum.AssetRef{Quantum.HNSFStateDecision}[]
    content.vb: Public decision As AssetRef(Of HNSFStateDecision)()
- uid: Quantum.HNSFStateAction.targetType
  commentId: F:Quantum.HNSFStateAction.targetType
  id: targetType
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: targetType
  nameWithType: HNSFStateAction.targetType
  fullName: Quantum.HNSFStateAction.targetType
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: targetType
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 29
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public HNSFStateAction.TargetType targetType
    return:
      type: Quantum.HNSFStateAction.TargetType
    content.vb: Public targetType As HNSFStateAction.TargetType
- uid: Quantum.HNSFStateAction.Copy(Quantum.HNSFStateAction)
  commentId: M:Quantum.HNSFStateAction.Copy(Quantum.HNSFStateAction)
  id: Copy(Quantum.HNSFStateAction)
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: Copy(HNSFStateAction)
  nameWithType: HNSFStateAction.Copy(HNSFStateAction)
  fullName: Quantum.HNSFStateAction.Copy(Quantum.HNSFStateAction)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Copy
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 31
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public virtual void Copy(HNSFStateAction target)
    parameters:
    - id: target
      type: Quantum.HNSFStateAction
    content.vb: Public Overridable Sub Copy(target As HNSFStateAction)
  overload: Quantum.HNSFStateAction.Copy*
- uid: Quantum.HNSFStateAction.Execute(Quantum.FrameThreadSafe@,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  commentId: M:Quantum.HNSFStateAction.Execute(Quantum.FrameThreadSafe@,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  id: Execute(Quantum.FrameThreadSafe@,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>)
  nameWithType: HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>)
  fullName: Quantum.HNSFStateAction.Execute(ref Quantum.FrameThreadSafe, Quantum.EntityRef, Quantum.HNSFStateAgentData*, ref Quantum.HNSFStateContext, System.Collections.Generic.List<System.Type>, System.Collections.Generic.List<System.Type>)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Execute
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 36
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool Execute(ref FrameThreadSafe frame, EntityRef entity, HNSFStateAgentData* data, ref HNSFStateContext stateContext, List<Type> whitelist = null, List<Type> blacklist = null)
    parameters:
    - id: frame
      type: Quantum.FrameThreadSafe
    - id: entity
      type: Quantum.EntityRef
    - id: data
      type: Quantum.HNSFStateAgentData*
    - id: stateContext
      type: Quantum.HNSFStateContext
    - id: whitelist
      type: System.Collections.Generic.List{System.Type}
    - id: blacklist
      type: System.Collections.Generic.List{System.Type}
    return:
      type: System.Boolean
    content.vb: Public Function Execute(frame As FrameThreadSafe, entity As EntityRef, data As HNSFStateAgentData*, stateContext As HNSFStateContext, whitelist As List(Of Type) = Nothing, blacklist As List(Of Type) = Nothing) As Boolean
  overload: Quantum.HNSFStateAction.Execute*
  nameWithType.vb: HNSFStateAction.Execute(FrameThreadSafe, EntityRef, HNSFStateAgentData*, HNSFStateContext, List(Of Type), List(Of Type))
  fullName.vb: Quantum.HNSFStateAction.Execute(Quantum.FrameThreadSafe, Quantum.EntityRef, Quantum.HNSFStateAgentData*, Quantum.HNSFStateContext, System.Collections.Generic.List(Of System.Type), System.Collections.Generic.List(Of System.Type))
  name.vb: Execute(FrameThreadSafe, EntityRef, HNSFStateAgentData*, HNSFStateContext, List(Of Type), List(Of Type))
- uid: Quantum.HNSFStateAction.Execute(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  commentId: M:Quantum.HNSFStateAction.Execute(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  id: Execute(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>)
  nameWithType: HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>)
  fullName: Quantum.HNSFStateAction.Execute(Quantum.Frame, Quantum.EntityRef, Quantum.HNSFStateAgentData*, ref Quantum.HNSFStateContext, System.Collections.Generic.List<System.Type>, System.Collections.Generic.List<System.Type>)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Execute
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 43
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool Execute(Frame frame, EntityRef entity, HNSFStateAgentData* data, ref HNSFStateContext stateContext, List<Type> whitelist = null, List<Type> blacklist = null)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: entity
      type: Quantum.EntityRef
    - id: data
      type: Quantum.HNSFStateAgentData*
    - id: stateContext
      type: Quantum.HNSFStateContext
    - id: whitelist
      type: System.Collections.Generic.List{System.Type}
    - id: blacklist
      type: System.Collections.Generic.List{System.Type}
    return:
      type: System.Boolean
    content.vb: Public Function Execute(frame As Frame, entity As EntityRef, data As HNSFStateAgentData*, stateContext As HNSFStateContext, whitelist As List(Of Type) = Nothing, blacklist As List(Of Type) = Nothing) As Boolean
  overload: Quantum.HNSFStateAction.Execute*
  nameWithType.vb: HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, HNSFStateContext, List(Of Type), List(Of Type))
  fullName.vb: Quantum.HNSFStateAction.Execute(Quantum.Frame, Quantum.EntityRef, Quantum.HNSFStateAgentData*, Quantum.HNSFStateContext, System.Collections.Generic.List(Of System.Type), System.Collections.Generic.List(Of System.Type))
  name.vb: Execute(Frame, EntityRef, HNSFStateAgentData*, HNSFStateContext, List(Of Type), List(Of Type))
- uid: Quantum.HNSFStateAction.Execute(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Photon.Deterministic.FP,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  commentId: M:Quantum.HNSFStateAction.Execute(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Photon.Deterministic.FP,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  id: Execute(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateAgentData*,Photon.Deterministic.FP,Quantum.HNSFStateContext@,System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Type})
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>)
  nameWithType: HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>)
  fullName: Quantum.HNSFStateAction.Execute(Quantum.Frame, Quantum.EntityRef, Quantum.HNSFStateAgentData*, Photon.Deterministic.FP, ref Quantum.HNSFStateContext, System.Collections.Generic.List<System.Type>, System.Collections.Generic.List<System.Type>)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Execute
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 75
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool Execute(Frame frame, EntityRef entity, HNSFStateAgentData* data, FP rangePercent, ref HNSFStateContext stateContext, List<Type> whitelist = null, List<Type> blacklist = null)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: entity
      type: Quantum.EntityRef
    - id: data
      type: Quantum.HNSFStateAgentData*
    - id: rangePercent
      type: Photon.Deterministic.FP
    - id: stateContext
      type: Quantum.HNSFStateContext
    - id: whitelist
      type: System.Collections.Generic.List{System.Type}
    - id: blacklist
      type: System.Collections.Generic.List{System.Type}
    return:
      type: System.Boolean
    content.vb: Public Function Execute(frame As Frame, entity As EntityRef, data As HNSFStateAgentData*, rangePercent As FP, stateContext As HNSFStateContext, whitelist As List(Of Type) = Nothing, blacklist As List(Of Type) = Nothing) As Boolean
  overload: Quantum.HNSFStateAction.Execute*
  nameWithType.vb: HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, HNSFStateContext, List(Of Type), List(Of Type))
  fullName.vb: Quantum.HNSFStateAction.Execute(Quantum.Frame, Quantum.EntityRef, Quantum.HNSFStateAgentData*, Photon.Deterministic.FP, Quantum.HNSFStateContext, System.Collections.Generic.List(Of System.Type), System.Collections.Generic.List(Of System.Type))
  name.vb: Execute(Frame, EntityRef, HNSFStateAgentData*, FP, HNSFStateContext, List(Of Type), List(Of Type))
- uid: Quantum.HNSFStateAction.ExecuteAction(Quantum.Frame,Quantum.EntityRef,Photon.Deterministic.FP,Quantum.HNSFStateContext@)
  commentId: M:Quantum.HNSFStateAction.ExecuteAction(Quantum.Frame,Quantum.EntityRef,Photon.Deterministic.FP,Quantum.HNSFStateContext@)
  id: ExecuteAction(Quantum.Frame,Quantum.EntityRef,Photon.Deterministic.FP,Quantum.HNSFStateContext@)
  parent: Quantum.HNSFStateAction
  langs:
  - csharp
  - vb
  name: ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext)
  nameWithType: HNSFStateAction.ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext)
  fullName: Quantum.HNSFStateAction.ExecuteAction(Quantum.Frame, Quantum.EntityRef, Photon.Deterministic.FP, ref Quantum.HNSFStateContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ExecuteAction
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Action/HNSFStateAction.cs
    startLine: 101
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public virtual bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: entity
      type: Quantum.EntityRef
    - id: rangePercent
      type: Photon.Deterministic.FP
    - id: stateContext
      type: Quantum.HNSFStateContext
    return:
      type: System.Boolean
    content.vb: Public Overridable Function ExecuteAction(frame As Frame, entity As EntityRef, rangePercent As FP, stateContext As HNSFStateContext) As Boolean
  overload: Quantum.HNSFStateAction.ExecuteAction*
  nameWithType.vb: HNSFStateAction.ExecuteAction(Frame, EntityRef, FP, HNSFStateContext)
  fullName.vb: Quantum.HNSFStateAction.ExecuteAction(Quantum.Frame, Quantum.EntityRef, Photon.Deterministic.FP, Quantum.HNSFStateContext)
  name.vb: ExecuteAction(Frame, EntityRef, FP, HNSFStateContext)
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: Quantum.AssetObject
  commentId: T:Quantum.AssetObject
  parent: Quantum
  isExternal: true
  name: AssetObject
  nameWithType: AssetObject
  fullName: Quantum.AssetObject
- uid: Quantum.ILogSource
  commentId: T:Quantum.ILogSource
  parent: Quantum
  isExternal: true
  name: ILogSource
  nameWithType: ILogSource
  fullName: Quantum.ILogSource
- uid: Quantum.AssetObject.Identifier
  commentId: F:Quantum.AssetObject.Identifier
  parent: Quantum.AssetObject
  isExternal: true
  name: Identifier
  nameWithType: AssetObject.Identifier
  fullName: Quantum.AssetObject.Identifier
- uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  commentId: M:Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  parent: Quantum.AssetObject
  isExternal: true
  name: Loaded(IResourceManager, Allocator)
  nameWithType: AssetObject.Loaded(IResourceManager, Native.Allocator)
  fullName: Quantum.AssetObject.Loaded(Quantum.IResourceManager, Photon.Deterministic.Native.Allocator)
  spec.csharp:
  - uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Loaded
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Loaded
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
- uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  commentId: M:Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  parent: Quantum.AssetObject
  isExternal: true
  name: Disposed(IResourceManager, Allocator)
  nameWithType: AssetObject.Disposed(IResourceManager, Native.Allocator)
  fullName: Quantum.AssetObject.Disposed(Quantum.IResourceManager, Photon.Deterministic.Native.Allocator)
  spec.csharp:
  - uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Disposed
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Disposed
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
- uid: Quantum.AssetObject.Create``1
  commentId: M:Quantum.AssetObject.Create``1
  parent: Quantum.AssetObject
  isExternal: true
  name: Create<T>()
  nameWithType: AssetObject.Create<T>()
  fullName: Quantum.AssetObject.Create<T>()
  nameWithType.vb: AssetObject.Create(Of T)()
  fullName.vb: Quantum.AssetObject.Create(Of T)()
  name.vb: Create(Of T)()
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Quantum.AssetObject.Create(System.Type)
  commentId: M:Quantum.AssetObject.Create(System.Type)
  parent: Quantum.AssetObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Create(Type)
  nameWithType: AssetObject.Create(Type)
  fullName: Quantum.AssetObject.Create(System.Type)
  spec.csharp:
  - uid: Quantum.AssetObject.Create(System.Type)
    name: Create
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create(System.Type)
    name: Create
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Quantum.AssetObject.Create``1(System.Action{{T}})
  commentId: M:Quantum.AssetObject.Create``1(System.Action{``0})
  parent: Quantum.AssetObject
  definition: Quantum.AssetObject.Create``1(System.Action{``0})
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Create<T>(Action<T>)
  nameWithType: AssetObject.Create<T>(Action<T>)
  fullName: Quantum.AssetObject.Create<T>(System.Action<T>)
  nameWithType.vb: AssetObject.Create(Of T)(Action(Of T))
  fullName.vb: Quantum.AssetObject.Create(Of T)(System.Action(Of T))
  name.vb: Create(Of T)(Action(Of T))
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.AssetObject.Reset
  commentId: M:Quantum.AssetObject.Reset
  parent: Quantum.AssetObject
  isExternal: true
  name: Reset()
  nameWithType: AssetObject.Reset()
  fullName: Quantum.AssetObject.Reset()
  spec.csharp:
  - uid: Quantum.AssetObject.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.AssetObject.Guid
  commentId: P:Quantum.AssetObject.Guid
  parent: Quantum.AssetObject
  isExternal: true
  name: Guid
  nameWithType: AssetObject.Guid
  fullName: Quantum.AssetObject.Guid
- uid: Quantum.AssetObject.Path
  commentId: P:Quantum.AssetObject.Path
  parent: Quantum.AssetObject
  isExternal: true
  name: Path
  nameWithType: AssetObject.Path
  fullName: Quantum.AssetObject.Path
- uid: Quantum.AssetObject.Settings
  commentId: P:Quantum.AssetObject.Settings
  parent: Quantum.AssetObject
  isExternal: true
  name: Settings
  nameWithType: AssetObject.Settings
  fullName: Quantum.AssetObject.Settings
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Quantum.AssetObject.Create``1(System.Action{``0})
  commentId: M:Quantum.AssetObject.Create``1(System.Action{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Create<T>(Action<T>)
  nameWithType: AssetObject.Create<T>(Action<T>)
  fullName: Quantum.AssetObject.Create<T>(System.Action<T>)
  nameWithType.vb: AssetObject.Create(Of T)(Action(Of T))
  fullName.vb: Quantum.AssetObject.Create(Of T)(System.Action(Of T))
  name.vb: Create(Of T)(Action(Of T))
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Quantum.AssetRef{Quantum.HNSFStateAction}
  commentId: T:Quantum.AssetRef{Quantum.HNSFStateAction}
  parent: Quantum
  definition: Quantum.AssetRef`1
  href: Quantum.HNSFStateAction.html
  name: AssetRef<HNSFStateAction>
  nameWithType: AssetRef<HNSFStateAction>
  fullName: Quantum.AssetRef<Quantum.HNSFStateAction>
  nameWithType.vb: AssetRef(Of HNSFStateAction)
  fullName.vb: Quantum.AssetRef(Of Quantum.HNSFStateAction)
  name.vb: AssetRef(Of HNSFStateAction)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.HNSFStateAction
    name: HNSFStateAction
    href: Quantum.HNSFStateAction.html
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.HNSFStateAction
    name: HNSFStateAction
    href: Quantum.HNSFStateAction.html
  - name: )
- uid: Quantum.AssetRef`1
  commentId: T:Quantum.AssetRef`1
  isExternal: true
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.AssetRef{Quantum.HNSFStateAction}[]
  isExternal: true
  href: Quantum.HNSFStateAction.html
  name: AssetRef<HNSFStateAction>[]
  nameWithType: AssetRef<HNSFStateAction>[]
  fullName: Quantum.AssetRef<Quantum.HNSFStateAction>[]
  nameWithType.vb: AssetRef(Of HNSFStateAction)()
  fullName.vb: Quantum.AssetRef(Of Quantum.HNSFStateAction)()
  name.vb: AssetRef(Of HNSFStateAction)()
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.HNSFStateAction
    name: HNSFStateAction
    href: Quantum.HNSFStateAction.html
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.HNSFStateAction
    name: HNSFStateAction
    href: Quantum.HNSFStateAction.html
  - name: )
  - name: (
  - name: )
- uid: Quantum.ActionRange[]
  isExternal: true
  href: Quantum.ActionRange.html
  name: ActionRange[]
  nameWithType: ActionRange[]
  fullName: Quantum.ActionRange[]
  nameWithType.vb: ActionRange()
  fullName.vb: Quantum.ActionRange()
  name.vb: ActionRange()
  spec.csharp:
  - uid: Quantum.ActionRange
    name: ActionRange
    href: Quantum.ActionRange.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.ActionRange
    name: ActionRange
    href: Quantum.ActionRange.html
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Quantum.AssetRef{Quantum.HNSFStateDecision}[]
  isExternal: true
  href: Quantum.HNSFStateDecision.html
  name: AssetRef<HNSFStateDecision>[]
  nameWithType: AssetRef<HNSFStateDecision>[]
  fullName: Quantum.AssetRef<Quantum.HNSFStateDecision>[]
  nameWithType.vb: AssetRef(Of HNSFStateDecision)()
  fullName.vb: Quantum.AssetRef(Of Quantum.HNSFStateDecision)()
  name.vb: AssetRef(Of HNSFStateDecision)()
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.HNSFStateDecision
    name: HNSFStateDecision
    href: Quantum.HNSFStateDecision.html
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.HNSFStateDecision
    name: HNSFStateDecision
    href: Quantum.HNSFStateDecision.html
  - name: )
  - name: (
  - name: )
- uid: Quantum.HNSFStateAction.TargetType
  commentId: T:Quantum.HNSFStateAction.TargetType
  parent: Quantum
  href: Quantum.HNSFStateAction.html
  name: HNSFStateAction.TargetType
  nameWithType: HNSFStateAction.TargetType
  fullName: Quantum.HNSFStateAction.TargetType
  spec.csharp:
  - uid: Quantum.HNSFStateAction
    name: HNSFStateAction
    href: Quantum.HNSFStateAction.html
  - name: .
  - uid: Quantum.HNSFStateAction.TargetType
    name: TargetType
    href: Quantum.HNSFStateAction.TargetType.html
  spec.vb:
  - uid: Quantum.HNSFStateAction
    name: HNSFStateAction
    href: Quantum.HNSFStateAction.html
  - name: .
  - uid: Quantum.HNSFStateAction.TargetType
    name: TargetType
    href: Quantum.HNSFStateAction.TargetType.html
- uid: Quantum.HNSFStateAction.Copy*
  commentId: Overload:Quantum.HNSFStateAction.Copy
  href: Quantum.HNSFStateAction.html#Quantum_HNSFStateAction_Copy_Quantum_HNSFStateAction_
  name: Copy
  nameWithType: HNSFStateAction.Copy
  fullName: Quantum.HNSFStateAction.Copy
- uid: Quantum.HNSFStateAction
  commentId: T:Quantum.HNSFStateAction
  parent: Quantum
  href: Quantum.HNSFStateAction.html
  name: HNSFStateAction
  nameWithType: HNSFStateAction
  fullName: Quantum.HNSFStateAction
- uid: Quantum.HNSFStateAction.Execute*
  commentId: Overload:Quantum.HNSFStateAction.Execute
  href: Quantum.HNSFStateAction.html#Quantum_HNSFStateAction_Execute_Quantum_FrameThreadSafe__Quantum_EntityRef_Quantum_HNSFStateAgentData__Quantum_HNSFStateContext__System_Collections_Generic_List_System_Type__System_Collections_Generic_List_System_Type__
  name: Execute
  nameWithType: HNSFStateAction.Execute
  fullName: Quantum.HNSFStateAction.Execute
- uid: Quantum.FrameThreadSafe
  commentId: T:Quantum.FrameThreadSafe
  parent: Quantum
  isExternal: true
  name: FrameThreadSafe
  nameWithType: FrameThreadSafe
  fullName: Quantum.FrameThreadSafe
- uid: Quantum.EntityRef
  commentId: T:Quantum.EntityRef
  parent: Quantum
  isExternal: true
  name: EntityRef
  nameWithType: EntityRef
  fullName: Quantum.EntityRef
- uid: Quantum.HNSFStateAgentData*
  isExternal: true
  href: Quantum.HNSFStateAgentData.html
  name: HNSFStateAgentData*
  nameWithType: HNSFStateAgentData*
  fullName: Quantum.HNSFStateAgentData*
  spec.csharp:
  - uid: Quantum.HNSFStateAgentData
    name: HNSFStateAgentData
    href: Quantum.HNSFStateAgentData.html
  - name: '*'
  spec.vb:
  - uid: Quantum.HNSFStateAgentData
    name: HNSFStateAgentData
    href: Quantum.HNSFStateAgentData.html
  - name: '*'
- uid: Quantum.HNSFStateContext
  commentId: T:Quantum.HNSFStateContext
  parent: Quantum
  href: Quantum.HNSFStateContext.html
  name: HNSFStateContext
  nameWithType: HNSFStateContext
  fullName: Quantum.HNSFStateContext
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Photon.Deterministic.FP
  commentId: T:Photon.Deterministic.FP
  parent: Photon.Deterministic
  isExternal: true
  name: FP
  nameWithType: FP
  fullName: Photon.Deterministic.FP
- uid: Photon.Deterministic
  commentId: N:Photon.Deterministic
  isExternal: true
  name: Photon.Deterministic
  nameWithType: Photon.Deterministic
  fullName: Photon.Deterministic
  spec.csharp:
  - uid: Photon
    name: Photon
    isExternal: true
  - name: .
  - uid: Photon.Deterministic
    name: Deterministic
    isExternal: true
  spec.vb:
  - uid: Photon
    name: Photon
    isExternal: true
  - name: .
  - uid: Photon.Deterministic
    name: Deterministic
    isExternal: true
- uid: Quantum.HNSFStateAction.ExecuteAction*
  commentId: Overload:Quantum.HNSFStateAction.ExecuteAction
  href: Quantum.HNSFStateAction.html#Quantum_HNSFStateAction_ExecuteAction_Quantum_Frame_Quantum_EntityRef_Photon_Deterministic_FP_Quantum_HNSFStateContext__
  name: ExecuteAction
  nameWithType: HNSFStateAction.ExecuteAction
  fullName: Quantum.HNSFStateAction.ExecuteAction
