### YamlMime:ManagedReference
items:
- uid: Global.AddTypeMenuAttribute
  commentId: T:Global.AddTypeMenuAttribute
  id: AddTypeMenuAttribute
  parent: Global
  children:
  - Global.AddTypeMenuAttribute.#ctor(System.String,System.Int32)
  - Global.AddTypeMenuAttribute.GetSplittedMenuName
  - Global.AddTypeMenuAttribute.GetTypeNameWithoutPath
  - Global.AddTypeMenuAttribute.MenuName
  - Global.AddTypeMenuAttribute.Order
  langs:
  - csharp
  - vb
  name: AddTypeMenuAttribute
  nameWithType: AddTypeMenuAttribute
  fullName: AddTypeMenuAttribute
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddTypeMenuAttribute
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
    startLine: 5
  assemblies:
  - Quantum.Simulation
  namespace: Global
  summary: An attribute that overrides the name of the type displayed in the SubclassSelector popup.
  example: []
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Enum|AttributeTargets.Interface, AllowMultiple = false, Inherited = false)]

      public sealed class AddTypeMenuAttribute : Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.ClassOrAttributeTargets.StructOrAttributeTargets.EnumOrAttributeTargets.Interface, AllowMultiple:=False, Inherited:=False)>

      Public NotInheritable Class AddTypeMenuAttribute Inherits Attribute
  inheritance:
  - System.Object
  - System.Attribute
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 1052
    namedArguments:
    - name: AllowMultiple
      type: System.Boolean
      value: false
    - name: Inherited
      type: System.Boolean
      value: false
- uid: Global.AddTypeMenuAttribute.MenuName
  commentId: P:Global.AddTypeMenuAttribute.MenuName
  id: MenuName
  parent: Global.AddTypeMenuAttribute
  langs:
  - csharp
  - vb
  name: MenuName
  nameWithType: AddTypeMenuAttribute.MenuName
  fullName: AddTypeMenuAttribute.MenuName
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: MenuName
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
    startLine: 8
  assemblies:
  - Quantum.Simulation
  namespace: Global
  syntax:
    content: public string MenuName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MenuName As String
  overload: Global.AddTypeMenuAttribute.MenuName*
- uid: Global.AddTypeMenuAttribute.Order
  commentId: P:Global.AddTypeMenuAttribute.Order
  id: Order
  parent: Global.AddTypeMenuAttribute
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: AddTypeMenuAttribute.Order
  fullName: AddTypeMenuAttribute.Order
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Order
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
    startLine: 10
  assemblies:
  - Quantum.Simulation
  namespace: Global
  syntax:
    content: public int Order { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Order As Integer
  overload: Global.AddTypeMenuAttribute.Order*
- uid: Global.AddTypeMenuAttribute.#ctor(System.String,System.Int32)
  commentId: M:Global.AddTypeMenuAttribute.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Global.AddTypeMenuAttribute
  langs:
  - csharp
  - vb
  name: AddTypeMenuAttribute(string, int)
  nameWithType: AddTypeMenuAttribute.AddTypeMenuAttribute(string, int)
  fullName: AddTypeMenuAttribute.AddTypeMenuAttribute(string, int)
  type: Constructor
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: .ctor
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
    startLine: 12
  assemblies:
  - Quantum.Simulation
  namespace: Global
  syntax:
    content: public AddTypeMenuAttribute(string menuName, int order = 0)
    parameters:
    - id: menuName
      type: System.String
    - id: order
      type: System.Int32
    content.vb: Public Sub New(menuName As String, order As Integer = 0)
  overload: Global.AddTypeMenuAttribute.#ctor*
  nameWithType.vb: AddTypeMenuAttribute.New(String, Integer)
  fullName.vb: AddTypeMenuAttribute.New(String, Integer)
  name.vb: New(String, Integer)
- uid: Global.AddTypeMenuAttribute.GetSplittedMenuName
  commentId: M:Global.AddTypeMenuAttribute.GetSplittedMenuName
  id: GetSplittedMenuName
  parent: Global.AddTypeMenuAttribute
  langs:
  - csharp
  - vb
  name: GetSplittedMenuName()
  nameWithType: AddTypeMenuAttribute.GetSplittedMenuName()
  fullName: AddTypeMenuAttribute.GetSplittedMenuName()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetSplittedMenuName
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
    startLine: 22
  assemblies:
  - Quantum.Simulation
  namespace: Global
  summary: Returns the menu name split by the '/' separator.
  example: []
  syntax:
    content: public string[] GetSplittedMenuName()
    return:
      type: System.String[]
    content.vb: Public Function GetSplittedMenuName() As String()
  overload: Global.AddTypeMenuAttribute.GetSplittedMenuName*
- uid: Global.AddTypeMenuAttribute.GetTypeNameWithoutPath
  commentId: M:Global.AddTypeMenuAttribute.GetTypeNameWithoutPath
  id: GetTypeNameWithoutPath
  parent: Global.AddTypeMenuAttribute
  langs:
  - csharp
  - vb
  name: GetTypeNameWithoutPath()
  nameWithType: AddTypeMenuAttribute.GetTypeNameWithoutPath()
  fullName: AddTypeMenuAttribute.GetTypeNameWithoutPath()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetTypeNameWithoutPath
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Attributes/AddTypeMenuAttribute.cs
    startLine: 29
  assemblies:
  - Quantum.Simulation
  namespace: Global
  summary: Returns the display name without the path.
  example: []
  syntax:
    content: public string GetTypeNameWithoutPath()
    return:
      type: System.String
    content.vb: Public Function GetTypeNameWithoutPath() As String
  overload: Global.AddTypeMenuAttribute.GetTypeNameWithoutPath*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.attribute
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.AddTypeMenuAttribute.MenuName*
  commentId: Overload:Global.AddTypeMenuAttribute.MenuName
  href: Global.AddTypeMenuAttribute.html#AddTypeMenuAttribute_MenuName
  name: MenuName
  nameWithType: AddTypeMenuAttribute.MenuName
  fullName: AddTypeMenuAttribute.MenuName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.AddTypeMenuAttribute.Order*
  commentId: Overload:Global.AddTypeMenuAttribute.Order
  href: Global.AddTypeMenuAttribute.html#AddTypeMenuAttribute_Order
  name: Order
  nameWithType: AddTypeMenuAttribute.Order
  fullName: AddTypeMenuAttribute.Order
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.AddTypeMenuAttribute.#ctor*
  commentId: Overload:Global.AddTypeMenuAttribute.#ctor
  href: Global.AddTypeMenuAttribute.html#AddTypeMenuAttribute__ctor_System_String_System_Int32_
  name: AddTypeMenuAttribute
  nameWithType: AddTypeMenuAttribute.AddTypeMenuAttribute
  fullName: AddTypeMenuAttribute.AddTypeMenuAttribute
  nameWithType.vb: AddTypeMenuAttribute.New
  fullName.vb: AddTypeMenuAttribute.New
  name.vb: New
- uid: Global.AddTypeMenuAttribute.GetSplittedMenuName*
  commentId: Overload:Global.AddTypeMenuAttribute.GetSplittedMenuName
  href: Global.AddTypeMenuAttribute.html#AddTypeMenuAttribute_GetSplittedMenuName
  name: GetSplittedMenuName
  nameWithType: AddTypeMenuAttribute.GetSplittedMenuName
  fullName: AddTypeMenuAttribute.GetSplittedMenuName
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.AddTypeMenuAttribute.GetTypeNameWithoutPath*
  commentId: Overload:Global.AddTypeMenuAttribute.GetTypeNameWithoutPath
  href: Global.AddTypeMenuAttribute.html#AddTypeMenuAttribute_GetTypeNameWithoutPath
  name: GetTypeNameWithoutPath
  nameWithType: AddTypeMenuAttribute.GetTypeNameWithoutPath
  fullName: AddTypeMenuAttribute.GetTypeNameWithoutPath
