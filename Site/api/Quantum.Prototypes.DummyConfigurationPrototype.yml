### YamlMime:ManagedReference
items:
- uid: Quantum.Prototypes.DummyConfigurationPrototype
  commentId: T:Quantum.Prototypes.DummyConfigurationPrototype
  id: DummyConfigurationPrototype
  parent: Quantum.Prototypes
  children:
  - Quantum.Prototypes.DummyConfigurationPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef,Quantum.PrototypeMaterializationContext@)
  - Quantum.Prototypes.DummyConfigurationPrototype.Materialize(Quantum.Frame,Quantum.DummyConfiguration@,Quantum.PrototypeMaterializationContext@)
  - Quantum.Prototypes.DummyConfigurationPrototype.aerialRecovery
  - Quantum.Prototypes.DummyConfigurationPrototype.aerialRecoveryDirection
  - Quantum.Prototypes.DummyConfigurationPrototype.behaviour
  - Quantum.Prototypes.DummyConfigurationPrototype.blockBehaviour
  - Quantum.Prototypes.DummyConfigurationPrototype.blockDirection
  - Quantum.Prototypes.DummyConfigurationPrototype.controlType
  - Quantum.Prototypes.DummyConfigurationPrototype.counterhit
  - Quantum.Prototypes.DummyConfigurationPrototype.frameInput
  - Quantum.Prototypes.DummyConfigurationPrototype.framesBeforeGroundRecovery
  - Quantum.Prototypes.DummyConfigurationPrototype.framesToHoldBlockAfterBlockstunEnded
  - Quantum.Prototypes.DummyConfigurationPrototype.groundRecovery
  - Quantum.Prototypes.DummyConfigurationPrototype.hitsBeforeShouldBlock
  - Quantum.Prototypes.DummyConfigurationPrototype.loopPlayRecordings
  - Quantum.Prototypes.DummyConfigurationPrototype.recordingSlots
  - Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnBlock
  - Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnDamaged
  - Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnWakeup
  - Quantum.Prototypes.DummyConfigurationPrototype.techRollDirection
  - Quantum.Prototypes.DummyConfigurationPrototype.throwEscape
  langs:
  - csharp
  - vb
  name: DummyConfigurationPrototype
  nameWithType: DummyConfigurationPrototype
  fullName: Quantum.Prototypes.DummyConfigurationPrototype
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DummyConfigurationPrototype
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 738
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: >-
      [Serializable]

      [Prototype(typeof(DummyConfiguration))]

      public class DummyConfigurationPrototype : ComponentPrototype<DummyConfiguration>, IPrototype
    content.vb: >-
      <Serializable>

      <Prototype(GetType(DummyConfiguration))>

      Public Class DummyConfigurationPrototype Inherits ComponentPrototype(Of DummyConfiguration) Implements IPrototype
  inheritance:
  - System.Object
  - Quantum.ComponentPrototype
  - Quantum.ComponentPrototype{Quantum.DummyConfiguration}
  implements:
  - Quantum.IPrototype
  inheritedMembers:
  - Quantum.ComponentPrototype{Quantum.DummyConfiguration}.ComponentType
  - Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef)
  - Quantum.ComponentPrototype.PrototypeTypeToComponentType(System.Type)
  - Quantum.ComponentPrototype.ComponentTypeId
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: Quantum.Prototypes.PrototypeAttribute
    ctor: Quantum.Prototypes.PrototypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Quantum.DummyConfiguration
- uid: Quantum.Prototypes.DummyConfigurationPrototype.frameInput
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.frameInput
  id: frameInput
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: frameInput
  nameWithType: DummyConfigurationPrototype.frameInput
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.frameInput
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: frameInput
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 741
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public InputPrototype frameInput
    return:
      type: Quantum.Prototypes.InputPrototype
    content.vb: Public frameInput As InputPrototype
- uid: Quantum.Prototypes.DummyConfigurationPrototype.controlType
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.controlType
  id: controlType
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: controlType
  nameWithType: DummyConfigurationPrototype.controlType
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.controlType
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: controlType
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 742
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum32<DummyControlType> controlType
    return:
      type: Quantum.QEnum32{Quantum.DummyControlType}
    content.vb: Public controlType As QEnum32(Of DummyControlType)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.behaviour
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.behaviour
  id: behaviour
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: behaviour
  nameWithType: DummyConfigurationPrototype.behaviour
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.behaviour
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: behaviour
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 743
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum32<DummyConfigBehaviour> behaviour
    return:
      type: Quantum.QEnum32{Quantum.DummyConfigBehaviour}
    content.vb: Public behaviour As QEnum32(Of DummyConfigBehaviour)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.counterhit
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.counterhit
  id: counterhit
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: counterhit
  nameWithType: DummyConfigurationPrototype.counterhit
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.counterhit
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: counterhit
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 744
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum32<DummyConfigCounterhit> counterhit
    return:
      type: Quantum.QEnum32{Quantum.DummyConfigCounterhit}
    content.vb: Public counterhit As QEnum32(Of DummyConfigCounterhit)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.blockBehaviour
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.blockBehaviour
  id: blockBehaviour
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: blockBehaviour
  nameWithType: DummyConfigurationPrototype.blockBehaviour
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.blockBehaviour
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: blockBehaviour
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 745
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum32<DummyBlockBehaviour> blockBehaviour
    return:
      type: Quantum.QEnum32{Quantum.DummyBlockBehaviour}
    content.vb: Public blockBehaviour As QEnum32(Of DummyBlockBehaviour)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.hitsBeforeShouldBlock
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.hitsBeforeShouldBlock
  id: hitsBeforeShouldBlock
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: hitsBeforeShouldBlock
  nameWithType: DummyConfigurationPrototype.hitsBeforeShouldBlock
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.hitsBeforeShouldBlock
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: hitsBeforeShouldBlock
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 746
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public byte hitsBeforeShouldBlock
    return:
      type: System.Byte
    content.vb: Public hitsBeforeShouldBlock As Byte
- uid: Quantum.Prototypes.DummyConfigurationPrototype.framesToHoldBlockAfterBlockstunEnded
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.framesToHoldBlockAfterBlockstunEnded
  id: framesToHoldBlockAfterBlockstunEnded
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: framesToHoldBlockAfterBlockstunEnded
  nameWithType: DummyConfigurationPrototype.framesToHoldBlockAfterBlockstunEnded
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.framesToHoldBlockAfterBlockstunEnded
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: framesToHoldBlockAfterBlockstunEnded
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 747
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public byte framesToHoldBlockAfterBlockstunEnded
    return:
      type: System.Byte
    content.vb: Public framesToHoldBlockAfterBlockstunEnded As Byte
- uid: Quantum.Prototypes.DummyConfigurationPrototype.blockDirection
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.blockDirection
  id: blockDirection
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: blockDirection
  nameWithType: DummyConfigurationPrototype.blockDirection
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.blockDirection
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: blockDirection
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 748
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum32<DummyBlockDirection> blockDirection
    return:
      type: Quantum.QEnum32{Quantum.DummyBlockDirection}
    content.vb: Public blockDirection As QEnum32(Of DummyBlockDirection)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.throwEscape
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.throwEscape
  id: throwEscape
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: throwEscape
  nameWithType: DummyConfigurationPrototype.throwEscape
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.throwEscape
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: throwEscape
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 749
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum32<DummyThrowEscape> throwEscape
    return:
      type: Quantum.QEnum32{Quantum.DummyThrowEscape}
    content.vb: Public throwEscape As QEnum32(Of DummyThrowEscape)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.groundRecovery
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.groundRecovery
  id: groundRecovery
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: groundRecovery
  nameWithType: DummyConfigurationPrototype.groundRecovery
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.groundRecovery
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: groundRecovery
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 750
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum32<DummyGroundRecovery> groundRecovery
    return:
      type: Quantum.QEnum32{Quantum.DummyGroundRecovery}
    content.vb: Public groundRecovery As QEnum32(Of DummyGroundRecovery)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.framesBeforeGroundRecovery
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.framesBeforeGroundRecovery
  id: framesBeforeGroundRecovery
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: framesBeforeGroundRecovery
  nameWithType: DummyConfigurationPrototype.framesBeforeGroundRecovery
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.framesBeforeGroundRecovery
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: framesBeforeGroundRecovery
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 751
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public byte framesBeforeGroundRecovery
    return:
      type: System.Byte
    content.vb: Public framesBeforeGroundRecovery As Byte
- uid: Quantum.Prototypes.DummyConfigurationPrototype.techRollDirection
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.techRollDirection
  id: techRollDirection
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: techRollDirection
  nameWithType: DummyConfigurationPrototype.techRollDirection
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.techRollDirection
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: techRollDirection
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 752
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum32<DummyTechRollDirection> techRollDirection
    return:
      type: Quantum.QEnum32{Quantum.DummyTechRollDirection}
    content.vb: Public techRollDirection As QEnum32(Of DummyTechRollDirection)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.aerialRecovery
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.aerialRecovery
  id: aerialRecovery
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: aerialRecovery
  nameWithType: DummyConfigurationPrototype.aerialRecovery
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.aerialRecovery
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: aerialRecovery
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 753
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum32<DummyThrowEscape> aerialRecovery
    return:
      type: Quantum.QEnum32{Quantum.DummyThrowEscape}
    content.vb: Public aerialRecovery As QEnum32(Of DummyThrowEscape)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.aerialRecoveryDirection
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.aerialRecoveryDirection
  id: aerialRecoveryDirection
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: aerialRecoveryDirection
  nameWithType: DummyConfigurationPrototype.aerialRecoveryDirection
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.aerialRecoveryDirection
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: aerialRecoveryDirection
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 754
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum32<DummyAerialRecoveryDirection> aerialRecoveryDirection
    return:
      type: Quantum.QEnum32{Quantum.DummyAerialRecoveryDirection}
    content.vb: Public aerialRecoveryDirection As QEnum32(Of DummyAerialRecoveryDirection)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.recordingSlots
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.recordingSlots
  id: recordingSlots
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: recordingSlots
  nameWithType: DummyConfigurationPrototype.recordingSlots
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.recordingSlots
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: recordingSlots
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 756
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: >-
      [ArrayLength(8)]

      public DummyRecordingSlotPrototype[] recordingSlots
    return:
      type: Quantum.Prototypes.DummyRecordingSlotPrototype[]
    content.vb: >-
      <ArrayLength(8)>

      Public recordingSlots As DummyRecordingSlotPrototype()
  attributes:
  - type: Quantum.ArrayLengthAttribute
    ctor: Quantum.ArrayLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 8
- uid: Quantum.Prototypes.DummyConfigurationPrototype.loopPlayRecordings
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.loopPlayRecordings
  id: loopPlayRecordings
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: loopPlayRecordings
  nameWithType: DummyConfigurationPrototype.loopPlayRecordings
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.loopPlayRecordings
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: loopPlayRecordings
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 757
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QBoolean loopPlayRecordings
    return:
      type: Quantum.QBoolean
    content.vb: Public loopPlayRecordings As QBoolean
- uid: Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnDamaged
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnDamaged
  id: reversalsOnDamaged
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: reversalsOnDamaged
  nameWithType: DummyConfigurationPrototype.reversalsOnDamaged
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnDamaged
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: reversalsOnDamaged
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 759
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: >-
      [ArrayLength(5)]

      public DummyRecordingSlotPrototype[] reversalsOnDamaged
    return:
      type: Quantum.Prototypes.DummyRecordingSlotPrototype[]
    content.vb: >-
      <ArrayLength(5)>

      Public reversalsOnDamaged As DummyRecordingSlotPrototype()
  attributes:
  - type: Quantum.ArrayLengthAttribute
    ctor: Quantum.ArrayLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
- uid: Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnBlock
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnBlock
  id: reversalsOnBlock
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: reversalsOnBlock
  nameWithType: DummyConfigurationPrototype.reversalsOnBlock
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnBlock
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: reversalsOnBlock
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 761
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: >-
      [ArrayLength(5)]

      public DummyRecordingSlotPrototype[] reversalsOnBlock
    return:
      type: Quantum.Prototypes.DummyRecordingSlotPrototype[]
    content.vb: >-
      <ArrayLength(5)>

      Public reversalsOnBlock As DummyRecordingSlotPrototype()
  attributes:
  - type: Quantum.ArrayLengthAttribute
    ctor: Quantum.ArrayLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
- uid: Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnWakeup
  commentId: F:Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnWakeup
  id: reversalsOnWakeup
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: reversalsOnWakeup
  nameWithType: DummyConfigurationPrototype.reversalsOnWakeup
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.reversalsOnWakeup
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: reversalsOnWakeup
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 763
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: >-
      [ArrayLength(5)]

      public DummyRecordingSlotPrototype[] reversalsOnWakeup
    return:
      type: Quantum.Prototypes.DummyRecordingSlotPrototype[]
    content.vb: >-
      <ArrayLength(5)>

      Public reversalsOnWakeup As DummyRecordingSlotPrototype()
  attributes:
  - type: Quantum.ArrayLengthAttribute
    ctor: Quantum.ArrayLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
- uid: Quantum.Prototypes.DummyConfigurationPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef,Quantum.PrototypeMaterializationContext@)
  commentId: M:Quantum.Prototypes.DummyConfigurationPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef,Quantum.PrototypeMaterializationContext@)
  id: AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef,Quantum.PrototypeMaterializationContext@)
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext)
  nameWithType: DummyConfigurationPrototype.AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext)
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.AddToEntity(Quantum.Core.FrameBase, Quantum.EntityRef, in Quantum.PrototypeMaterializationContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: AddToEntity
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 765
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  example: []
  syntax:
    content: public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context)
    parameters:
    - id: f
      type: Quantum.Core.FrameBase
    - id: entity
      type: Quantum.EntityRef
    - id: context
      type: Quantum.PrototypeMaterializationContext
    return:
      type: System.Boolean
    content.vb: Public Overrides Function AddToEntity(f As FrameBase, entity As EntityRef, context As PrototypeMaterializationContext) As Boolean
  overridden: Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef,Quantum.PrototypeMaterializationContext@)
  overload: Quantum.Prototypes.DummyConfigurationPrototype.AddToEntity*
  nameWithType.vb: DummyConfigurationPrototype.AddToEntity(FrameBase, EntityRef, PrototypeMaterializationContext)
  fullName.vb: Quantum.Prototypes.DummyConfigurationPrototype.AddToEntity(Quantum.Core.FrameBase, Quantum.EntityRef, Quantum.PrototypeMaterializationContext)
  name.vb: AddToEntity(FrameBase, EntityRef, PrototypeMaterializationContext)
- uid: Quantum.Prototypes.DummyConfigurationPrototype.Materialize(Quantum.Frame,Quantum.DummyConfiguration@,Quantum.PrototypeMaterializationContext@)
  commentId: M:Quantum.Prototypes.DummyConfigurationPrototype.Materialize(Quantum.Frame,Quantum.DummyConfiguration@,Quantum.PrototypeMaterializationContext@)
  id: Materialize(Quantum.Frame,Quantum.DummyConfiguration@,Quantum.PrototypeMaterializationContext@)
  parent: Quantum.Prototypes.DummyConfigurationPrototype
  langs:
  - csharp
  - vb
  name: Materialize(Frame, ref DummyConfiguration, in PrototypeMaterializationContext)
  nameWithType: DummyConfigurationPrototype.Materialize(Frame, ref DummyConfiguration, in PrototypeMaterializationContext)
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.Materialize(Quantum.Frame, ref Quantum.DummyConfiguration, in Quantum.PrototypeMaterializationContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Materialize
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 770
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public void Materialize(Frame frame, ref DummyConfiguration result, in PrototypeMaterializationContext context = default)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: result
      type: Quantum.DummyConfiguration
    - id: context
      type: Quantum.PrototypeMaterializationContext
    content.vb: Public Sub Materialize(frame As Frame, result As DummyConfiguration, context As PrototypeMaterializationContext = Nothing)
  overload: Quantum.Prototypes.DummyConfigurationPrototype.Materialize*
  nameWithType.vb: DummyConfigurationPrototype.Materialize(Frame, DummyConfiguration, PrototypeMaterializationContext)
  fullName.vb: Quantum.Prototypes.DummyConfigurationPrototype.Materialize(Quantum.Frame, Quantum.DummyConfiguration, Quantum.PrototypeMaterializationContext)
  name.vb: Materialize(Frame, DummyConfiguration, PrototypeMaterializationContext)
references:
- uid: Quantum.Prototypes
  commentId: N:Quantum.Prototypes
  href: Quantum.html
  name: Quantum.Prototypes
  nameWithType: Quantum.Prototypes
  fullName: Quantum.Prototypes
  spec.csharp:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Prototypes
    name: Prototypes
    href: Quantum.Prototypes.html
  spec.vb:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Prototypes
    name: Prototypes
    href: Quantum.Prototypes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quantum.ComponentPrototype
  commentId: T:Quantum.ComponentPrototype
  parent: Quantum
  isExternal: true
  name: ComponentPrototype
  nameWithType: ComponentPrototype
  fullName: Quantum.ComponentPrototype
- uid: Quantum.ComponentPrototype{Quantum.DummyConfiguration}
  commentId: T:Quantum.ComponentPrototype{Quantum.DummyConfiguration}
  parent: Quantum
  definition: Quantum.ComponentPrototype`1
  href: Quantum.DummyConfiguration.html
  name: ComponentPrototype<DummyConfiguration>
  nameWithType: ComponentPrototype<DummyConfiguration>
  fullName: Quantum.ComponentPrototype<Quantum.DummyConfiguration>
  nameWithType.vb: ComponentPrototype(Of DummyConfiguration)
  fullName.vb: Quantum.ComponentPrototype(Of Quantum.DummyConfiguration)
  name.vb: ComponentPrototype(Of DummyConfiguration)
  spec.csharp:
  - uid: Quantum.ComponentPrototype`1
    name: ComponentPrototype
    isExternal: true
  - name: <
  - uid: Quantum.DummyConfiguration
    name: DummyConfiguration
    href: Quantum.DummyConfiguration.html
  - name: '>'
  spec.vb:
  - uid: Quantum.ComponentPrototype`1
    name: ComponentPrototype
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.DummyConfiguration
    name: DummyConfiguration
    href: Quantum.DummyConfiguration.html
  - name: )
- uid: Quantum.IPrototype
  commentId: T:Quantum.IPrototype
  parent: Quantum
  isExternal: true
  name: IPrototype
  nameWithType: IPrototype
  fullName: Quantum.IPrototype
- uid: Quantum.ComponentPrototype{Quantum.DummyConfiguration}.ComponentType
  commentId: P:Quantum.ComponentPrototype{Quantum.DummyConfiguration}.ComponentType
  parent: Quantum.ComponentPrototype{Quantum.DummyConfiguration}
  definition: Quantum.ComponentPrototype`1.ComponentType
  name: ComponentType
  nameWithType: ComponentPrototype<DummyConfiguration>.ComponentType
  fullName: Quantum.ComponentPrototype<Quantum.DummyConfiguration>.ComponentType
  nameWithType.vb: ComponentPrototype(Of DummyConfiguration).ComponentType
  fullName.vb: Quantum.ComponentPrototype(Of Quantum.DummyConfiguration).ComponentType
- uid: Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef)
  commentId: M:Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef)
  parent: Quantum.ComponentPrototype
  isExternal: true
  name: AddToEntity(FrameBase, EntityRef)
  nameWithType: ComponentPrototype.AddToEntity(FrameBase, EntityRef)
  fullName: Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase, Quantum.EntityRef)
  spec.csharp:
  - uid: Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef)
    name: AddToEntity
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef)
    name: AddToEntity
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: )
- uid: Quantum.ComponentPrototype.PrototypeTypeToComponentType(System.Type)
  commentId: M:Quantum.ComponentPrototype.PrototypeTypeToComponentType(System.Type)
  parent: Quantum.ComponentPrototype
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: PrototypeTypeToComponentType(Type)
  nameWithType: ComponentPrototype.PrototypeTypeToComponentType(Type)
  fullName: Quantum.ComponentPrototype.PrototypeTypeToComponentType(System.Type)
  spec.csharp:
  - uid: Quantum.ComponentPrototype.PrototypeTypeToComponentType(System.Type)
    name: PrototypeTypeToComponentType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Quantum.ComponentPrototype.PrototypeTypeToComponentType(System.Type)
    name: PrototypeTypeToComponentType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Quantum.ComponentPrototype.ComponentTypeId
  commentId: P:Quantum.ComponentPrototype.ComponentTypeId
  parent: Quantum.ComponentPrototype
  isExternal: true
  name: ComponentTypeId
  nameWithType: ComponentPrototype.ComponentTypeId
  fullName: Quantum.ComponentPrototype.ComponentTypeId
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: Quantum.ComponentPrototype`1
  commentId: T:Quantum.ComponentPrototype`1
  isExternal: true
  name: ComponentPrototype<T>
  nameWithType: ComponentPrototype<T>
  fullName: Quantum.ComponentPrototype<T>
  nameWithType.vb: ComponentPrototype(Of T)
  fullName.vb: Quantum.ComponentPrototype(Of T)
  name.vb: ComponentPrototype(Of T)
  spec.csharp:
  - uid: Quantum.ComponentPrototype`1
    name: ComponentPrototype
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.ComponentPrototype`1
    name: ComponentPrototype
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.ComponentPrototype`1.ComponentType
  commentId: P:Quantum.ComponentPrototype`1.ComponentType
  isExternal: true
  name: ComponentType
  nameWithType: ComponentPrototype<T>.ComponentType
  fullName: Quantum.ComponentPrototype<T>.ComponentType
  nameWithType.vb: ComponentPrototype(Of T).ComponentType
  fullName.vb: Quantum.ComponentPrototype(Of T).ComponentType
- uid: Quantum.Prototypes.InputPrototype
  commentId: T:Quantum.Prototypes.InputPrototype
  parent: Quantum.Prototypes
  href: Quantum.Prototypes.InputPrototype.html
  name: InputPrototype
  nameWithType: InputPrototype
  fullName: Quantum.Prototypes.InputPrototype
- uid: Quantum.QEnum32{Quantum.DummyControlType}
  commentId: T:Quantum.QEnum32{Quantum.DummyControlType}
  parent: Quantum
  definition: Quantum.QEnum32`1
  href: Quantum.DummyControlType.html
  name: QEnum32<DummyControlType>
  nameWithType: QEnum32<DummyControlType>
  fullName: Quantum.QEnum32<Quantum.DummyControlType>
  nameWithType.vb: QEnum32(Of DummyControlType)
  fullName.vb: Quantum.QEnum32(Of Quantum.DummyControlType)
  name.vb: QEnum32(Of DummyControlType)
  spec.csharp:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: <
  - uid: Quantum.DummyControlType
    name: DummyControlType
    href: Quantum.DummyControlType.html
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.DummyControlType
    name: DummyControlType
    href: Quantum.DummyControlType.html
  - name: )
- uid: Quantum.QEnum32`1
  commentId: T:Quantum.QEnum32`1
  isExternal: true
  name: QEnum32<T>
  nameWithType: QEnum32<T>
  fullName: Quantum.QEnum32<T>
  nameWithType.vb: QEnum32(Of T)
  fullName.vb: Quantum.QEnum32(Of T)
  name.vb: QEnum32(Of T)
  spec.csharp:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.QEnum32{Quantum.DummyConfigBehaviour}
  commentId: T:Quantum.QEnum32{Quantum.DummyConfigBehaviour}
  parent: Quantum
  definition: Quantum.QEnum32`1
  href: Quantum.DummyConfigBehaviour.html
  name: QEnum32<DummyConfigBehaviour>
  nameWithType: QEnum32<DummyConfigBehaviour>
  fullName: Quantum.QEnum32<Quantum.DummyConfigBehaviour>
  nameWithType.vb: QEnum32(Of DummyConfigBehaviour)
  fullName.vb: Quantum.QEnum32(Of Quantum.DummyConfigBehaviour)
  name.vb: QEnum32(Of DummyConfigBehaviour)
  spec.csharp:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: <
  - uid: Quantum.DummyConfigBehaviour
    name: DummyConfigBehaviour
    href: Quantum.DummyConfigBehaviour.html
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.DummyConfigBehaviour
    name: DummyConfigBehaviour
    href: Quantum.DummyConfigBehaviour.html
  - name: )
- uid: Quantum.QEnum32{Quantum.DummyConfigCounterhit}
  commentId: T:Quantum.QEnum32{Quantum.DummyConfigCounterhit}
  parent: Quantum
  definition: Quantum.QEnum32`1
  href: Quantum.DummyConfigCounterhit.html
  name: QEnum32<DummyConfigCounterhit>
  nameWithType: QEnum32<DummyConfigCounterhit>
  fullName: Quantum.QEnum32<Quantum.DummyConfigCounterhit>
  nameWithType.vb: QEnum32(Of DummyConfigCounterhit)
  fullName.vb: Quantum.QEnum32(Of Quantum.DummyConfigCounterhit)
  name.vb: QEnum32(Of DummyConfigCounterhit)
  spec.csharp:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: <
  - uid: Quantum.DummyConfigCounterhit
    name: DummyConfigCounterhit
    href: Quantum.DummyConfigCounterhit.html
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.DummyConfigCounterhit
    name: DummyConfigCounterhit
    href: Quantum.DummyConfigCounterhit.html
  - name: )
- uid: Quantum.QEnum32{Quantum.DummyBlockBehaviour}
  commentId: T:Quantum.QEnum32{Quantum.DummyBlockBehaviour}
  parent: Quantum
  definition: Quantum.QEnum32`1
  href: Quantum.DummyBlockBehaviour.html
  name: QEnum32<DummyBlockBehaviour>
  nameWithType: QEnum32<DummyBlockBehaviour>
  fullName: Quantum.QEnum32<Quantum.DummyBlockBehaviour>
  nameWithType.vb: QEnum32(Of DummyBlockBehaviour)
  fullName.vb: Quantum.QEnum32(Of Quantum.DummyBlockBehaviour)
  name.vb: QEnum32(Of DummyBlockBehaviour)
  spec.csharp:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: <
  - uid: Quantum.DummyBlockBehaviour
    name: DummyBlockBehaviour
    href: Quantum.DummyBlockBehaviour.html
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.DummyBlockBehaviour
    name: DummyBlockBehaviour
    href: Quantum.DummyBlockBehaviour.html
  - name: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Quantum.QEnum32{Quantum.DummyBlockDirection}
  commentId: T:Quantum.QEnum32{Quantum.DummyBlockDirection}
  parent: Quantum
  definition: Quantum.QEnum32`1
  href: Quantum.DummyBlockDirection.html
  name: QEnum32<DummyBlockDirection>
  nameWithType: QEnum32<DummyBlockDirection>
  fullName: Quantum.QEnum32<Quantum.DummyBlockDirection>
  nameWithType.vb: QEnum32(Of DummyBlockDirection)
  fullName.vb: Quantum.QEnum32(Of Quantum.DummyBlockDirection)
  name.vb: QEnum32(Of DummyBlockDirection)
  spec.csharp:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: <
  - uid: Quantum.DummyBlockDirection
    name: DummyBlockDirection
    href: Quantum.DummyBlockDirection.html
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.DummyBlockDirection
    name: DummyBlockDirection
    href: Quantum.DummyBlockDirection.html
  - name: )
- uid: Quantum.QEnum32{Quantum.DummyThrowEscape}
  commentId: T:Quantum.QEnum32{Quantum.DummyThrowEscape}
  parent: Quantum
  definition: Quantum.QEnum32`1
  href: Quantum.DummyThrowEscape.html
  name: QEnum32<DummyThrowEscape>
  nameWithType: QEnum32<DummyThrowEscape>
  fullName: Quantum.QEnum32<Quantum.DummyThrowEscape>
  nameWithType.vb: QEnum32(Of DummyThrowEscape)
  fullName.vb: Quantum.QEnum32(Of Quantum.DummyThrowEscape)
  name.vb: QEnum32(Of DummyThrowEscape)
  spec.csharp:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: <
  - uid: Quantum.DummyThrowEscape
    name: DummyThrowEscape
    href: Quantum.DummyThrowEscape.html
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.DummyThrowEscape
    name: DummyThrowEscape
    href: Quantum.DummyThrowEscape.html
  - name: )
- uid: Quantum.QEnum32{Quantum.DummyGroundRecovery}
  commentId: T:Quantum.QEnum32{Quantum.DummyGroundRecovery}
  parent: Quantum
  definition: Quantum.QEnum32`1
  href: Quantum.DummyGroundRecovery.html
  name: QEnum32<DummyGroundRecovery>
  nameWithType: QEnum32<DummyGroundRecovery>
  fullName: Quantum.QEnum32<Quantum.DummyGroundRecovery>
  nameWithType.vb: QEnum32(Of DummyGroundRecovery)
  fullName.vb: Quantum.QEnum32(Of Quantum.DummyGroundRecovery)
  name.vb: QEnum32(Of DummyGroundRecovery)
  spec.csharp:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: <
  - uid: Quantum.DummyGroundRecovery
    name: DummyGroundRecovery
    href: Quantum.DummyGroundRecovery.html
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.DummyGroundRecovery
    name: DummyGroundRecovery
    href: Quantum.DummyGroundRecovery.html
  - name: )
- uid: Quantum.QEnum32{Quantum.DummyTechRollDirection}
  commentId: T:Quantum.QEnum32{Quantum.DummyTechRollDirection}
  parent: Quantum
  definition: Quantum.QEnum32`1
  href: Quantum.DummyTechRollDirection.html
  name: QEnum32<DummyTechRollDirection>
  nameWithType: QEnum32<DummyTechRollDirection>
  fullName: Quantum.QEnum32<Quantum.DummyTechRollDirection>
  nameWithType.vb: QEnum32(Of DummyTechRollDirection)
  fullName.vb: Quantum.QEnum32(Of Quantum.DummyTechRollDirection)
  name.vb: QEnum32(Of DummyTechRollDirection)
  spec.csharp:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: <
  - uid: Quantum.DummyTechRollDirection
    name: DummyTechRollDirection
    href: Quantum.DummyTechRollDirection.html
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.DummyTechRollDirection
    name: DummyTechRollDirection
    href: Quantum.DummyTechRollDirection.html
  - name: )
- uid: Quantum.QEnum32{Quantum.DummyAerialRecoveryDirection}
  commentId: T:Quantum.QEnum32{Quantum.DummyAerialRecoveryDirection}
  parent: Quantum
  definition: Quantum.QEnum32`1
  href: Quantum.DummyAerialRecoveryDirection.html
  name: QEnum32<DummyAerialRecoveryDirection>
  nameWithType: QEnum32<DummyAerialRecoveryDirection>
  fullName: Quantum.QEnum32<Quantum.DummyAerialRecoveryDirection>
  nameWithType.vb: QEnum32(Of DummyAerialRecoveryDirection)
  fullName.vb: Quantum.QEnum32(Of Quantum.DummyAerialRecoveryDirection)
  name.vb: QEnum32(Of DummyAerialRecoveryDirection)
  spec.csharp:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: <
  - uid: Quantum.DummyAerialRecoveryDirection
    name: DummyAerialRecoveryDirection
    href: Quantum.DummyAerialRecoveryDirection.html
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum32`1
    name: QEnum32
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.DummyAerialRecoveryDirection
    name: DummyAerialRecoveryDirection
    href: Quantum.DummyAerialRecoveryDirection.html
  - name: )
- uid: Quantum.Prototypes.DummyRecordingSlotPrototype[]
  isExternal: true
  href: Quantum.Prototypes.DummyRecordingSlotPrototype.html
  name: DummyRecordingSlotPrototype[]
  nameWithType: DummyRecordingSlotPrototype[]
  fullName: Quantum.Prototypes.DummyRecordingSlotPrototype[]
  nameWithType.vb: DummyRecordingSlotPrototype()
  fullName.vb: Quantum.Prototypes.DummyRecordingSlotPrototype()
  name.vb: DummyRecordingSlotPrototype()
  spec.csharp:
  - uid: Quantum.Prototypes.DummyRecordingSlotPrototype
    name: DummyRecordingSlotPrototype
    href: Quantum.Prototypes.DummyRecordingSlotPrototype.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.Prototypes.DummyRecordingSlotPrototype
    name: DummyRecordingSlotPrototype
    href: Quantum.Prototypes.DummyRecordingSlotPrototype.html
  - name: (
  - name: )
- uid: Quantum.QBoolean
  commentId: T:Quantum.QBoolean
  parent: Quantum
  isExternal: true
  name: QBoolean
  nameWithType: QBoolean
  fullName: Quantum.QBoolean
- uid: Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef,Quantum.PrototypeMaterializationContext@)
  commentId: M:Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef,Quantum.PrototypeMaterializationContext@)
  parent: Quantum.ComponentPrototype
  isExternal: true
  name: AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext)
  nameWithType: ComponentPrototype.AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext)
  fullName: Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase, Quantum.EntityRef, in Quantum.PrototypeMaterializationContext)
  nameWithType.vb: ComponentPrototype.AddToEntity(FrameBase, EntityRef, PrototypeMaterializationContext)
  fullName.vb: Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase, Quantum.EntityRef, Quantum.PrototypeMaterializationContext)
  name.vb: AddToEntity(FrameBase, EntityRef, PrototypeMaterializationContext)
  spec.csharp:
  - uid: Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef,Quantum.PrototypeMaterializationContext@)
    name: AddToEntity
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: Quantum.PrototypeMaterializationContext
    name: PrototypeMaterializationContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.ComponentPrototype.AddToEntity(Quantum.Core.FrameBase,Quantum.EntityRef,Quantum.PrototypeMaterializationContext@)
    name: AddToEntity
    isExternal: true
  - name: (
  - uid: Quantum.Core.FrameBase
    name: FrameBase
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.EntityRef
    name: EntityRef
    isExternal: true
  - name: ','
  - name: " "
  - uid: Quantum.PrototypeMaterializationContext
    name: PrototypeMaterializationContext
    isExternal: true
  - name: )
- uid: Quantum.Prototypes.DummyConfigurationPrototype.AddToEntity*
  commentId: Overload:Quantum.Prototypes.DummyConfigurationPrototype.AddToEntity
  href: Quantum.Prototypes.DummyConfigurationPrototype.html#Quantum_Prototypes_DummyConfigurationPrototype_AddToEntity_Quantum_Core_FrameBase_Quantum_EntityRef_Quantum_PrototypeMaterializationContext__
  name: AddToEntity
  nameWithType: DummyConfigurationPrototype.AddToEntity
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.AddToEntity
- uid: Quantum.Core.FrameBase
  commentId: T:Quantum.Core.FrameBase
  parent: Quantum.Core
  isExternal: true
  name: FrameBase
  nameWithType: FrameBase
  fullName: Quantum.Core.FrameBase
- uid: Quantum.EntityRef
  commentId: T:Quantum.EntityRef
  parent: Quantum
  isExternal: true
  name: EntityRef
  nameWithType: EntityRef
  fullName: Quantum.EntityRef
- uid: Quantum.PrototypeMaterializationContext
  commentId: T:Quantum.PrototypeMaterializationContext
  parent: Quantum
  isExternal: true
  name: PrototypeMaterializationContext
  nameWithType: PrototypeMaterializationContext
  fullName: Quantum.PrototypeMaterializationContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Quantum.Core
  commentId: N:Quantum.Core
  href: Quantum.html
  name: Quantum.Core
  nameWithType: Quantum.Core
  fullName: Quantum.Core
  spec.csharp:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Core
    name: Core
    href: Quantum.Core.html
  spec.vb:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Core
    name: Core
    href: Quantum.Core.html
- uid: Quantum.Prototypes.DummyConfigurationPrototype.Materialize*
  commentId: Overload:Quantum.Prototypes.DummyConfigurationPrototype.Materialize
  href: Quantum.Prototypes.DummyConfigurationPrototype.html#Quantum_Prototypes_DummyConfigurationPrototype_Materialize_Quantum_Frame_Quantum_DummyConfiguration__Quantum_PrototypeMaterializationContext__
  name: Materialize
  nameWithType: DummyConfigurationPrototype.Materialize
  fullName: Quantum.Prototypes.DummyConfigurationPrototype.Materialize
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Quantum.DummyConfiguration
  commentId: T:Quantum.DummyConfiguration
  parent: Quantum
  href: Quantum.DummyConfiguration.html
  name: DummyConfiguration
  nameWithType: DummyConfiguration
  fullName: Quantum.DummyConfiguration
