### YamlMime:ManagedReference
items:
- uid: Quantum.KCCUtility
  commentId: T:Quantum.KCCUtility
  id: KCCUtility
  parent: Quantum
  children:
  - Quantum.KCCUtility.HasCollision(Quantum.Collections.QList{Quantum.KCCCollision},Quantum.EKCCCollisionSource,Quantum.EntityRef)
  - Quantum.KCCUtility.ResolveProcessorAsset(Quantum.Frame,Quantum.KCCCollision@)
  - Quantum.KCCUtility.ResolveProcessor``1(Quantum.Frame,Quantum.AssetRef,``0@)
  - Quantum.KCCUtility.ResolveProcessor``1(Quantum.Frame,Quantum.AssetRef{``0},``0@)
  langs:
  - csharp
  - vb
  name: KCCUtility
  nameWithType: KCCUtility
  fullName: Quantum.KCCUtility
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCUtility.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: KCCUtility
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCUtility.cs
    startLine: 5
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public static class KCCUtility
    content.vb: Public Module KCCUtility
  inheritance:
  - System.Object
- uid: Quantum.KCCUtility.ResolveProcessorAsset(Quantum.Frame,Quantum.KCCCollision@)
  commentId: M:Quantum.KCCUtility.ResolveProcessorAsset(Quantum.Frame,Quantum.KCCCollision@)
  id: ResolveProcessorAsset(Quantum.Frame,Quantum.KCCCollision@)
  parent: Quantum.KCCUtility
  langs:
  - csharp
  - vb
  name: ResolveProcessorAsset(Frame, ref KCCCollision)
  nameWithType: KCCUtility.ResolveProcessorAsset(Frame, ref KCCCollision)
  fullName: Quantum.KCCUtility.ResolveProcessorAsset(Quantum.Frame, ref Quantum.KCCCollision)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCUtility.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ResolveProcessorAsset
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCUtility.cs
    startLine: 7
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public static bool ResolveProcessorAsset(Frame frame, ref KCCCollision collision)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: collision
      type: Quantum.KCCCollision
    return:
      type: System.Boolean
    content.vb: Public Shared Function ResolveProcessorAsset(frame As Frame, collision As KCCCollision) As Boolean
  overload: Quantum.KCCUtility.ResolveProcessorAsset*
  nameWithType.vb: KCCUtility.ResolveProcessorAsset(Frame, KCCCollision)
  fullName.vb: Quantum.KCCUtility.ResolveProcessorAsset(Quantum.Frame, Quantum.KCCCollision)
  name.vb: ResolveProcessorAsset(Frame, KCCCollision)
- uid: Quantum.KCCUtility.ResolveProcessor``1(Quantum.Frame,Quantum.AssetRef,``0@)
  commentId: M:Quantum.KCCUtility.ResolveProcessor``1(Quantum.Frame,Quantum.AssetRef,``0@)
  id: ResolveProcessor``1(Quantum.Frame,Quantum.AssetRef,``0@)
  parent: Quantum.KCCUtility
  langs:
  - csharp
  - vb
  name: ResolveProcessor<T>(Frame, AssetRef, out T)
  nameWithType: KCCUtility.ResolveProcessor<T>(Frame, AssetRef, out T)
  fullName: Quantum.KCCUtility.ResolveProcessor<T>(Quantum.Frame, Quantum.AssetRef, out T)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCUtility.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ResolveProcessor
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCUtility.cs
    startLine: 31
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: 'public static bool ResolveProcessor<T>(Frame frame, AssetRef processorAsset, out T processor) where T : KCCProcessor'
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: processorAsset
      type: Quantum.AssetRef
    - id: processor
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function ResolveProcessor(Of T As KCCProcessor)(frame As Frame, processorAsset As AssetRef, processor As T) As Boolean
  overload: Quantum.KCCUtility.ResolveProcessor*
  nameWithType.vb: KCCUtility.ResolveProcessor(Of T)(Frame, AssetRef, T)
  fullName.vb: Quantum.KCCUtility.ResolveProcessor(Of T)(Quantum.Frame, Quantum.AssetRef, T)
  name.vb: ResolveProcessor(Of T)(Frame, AssetRef, T)
- uid: Quantum.KCCUtility.ResolveProcessor``1(Quantum.Frame,Quantum.AssetRef{``0},``0@)
  commentId: M:Quantum.KCCUtility.ResolveProcessor``1(Quantum.Frame,Quantum.AssetRef{``0},``0@)
  id: ResolveProcessor``1(Quantum.Frame,Quantum.AssetRef{``0},``0@)
  parent: Quantum.KCCUtility
  langs:
  - csharp
  - vb
  name: ResolveProcessor<T>(Frame, AssetRef<T>, out T)
  nameWithType: KCCUtility.ResolveProcessor<T>(Frame, AssetRef<T>, out T)
  fullName: Quantum.KCCUtility.ResolveProcessor<T>(Quantum.Frame, Quantum.AssetRef<T>, out T)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCUtility.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ResolveProcessor
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCUtility.cs
    startLine: 43
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: 'public static bool ResolveProcessor<T>(Frame frame, AssetRef<T> processorAsset, out T processor) where T : KCCProcessor'
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: processorAsset
      type: Quantum.AssetRef{{T}}
    - id: processor
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function ResolveProcessor(Of T As KCCProcessor)(frame As Frame, processorAsset As AssetRef(Of T), processor As T) As Boolean
  overload: Quantum.KCCUtility.ResolveProcessor*
  nameWithType.vb: KCCUtility.ResolveProcessor(Of T)(Frame, AssetRef(Of T), T)
  fullName.vb: Quantum.KCCUtility.ResolveProcessor(Of T)(Quantum.Frame, Quantum.AssetRef(Of T), T)
  name.vb: ResolveProcessor(Of T)(Frame, AssetRef(Of T), T)
- uid: Quantum.KCCUtility.HasCollision(Quantum.Collections.QList{Quantum.KCCCollision},Quantum.EKCCCollisionSource,Quantum.EntityRef)
  commentId: M:Quantum.KCCUtility.HasCollision(Quantum.Collections.QList{Quantum.KCCCollision},Quantum.EKCCCollisionSource,Quantum.EntityRef)
  id: HasCollision(Quantum.Collections.QList{Quantum.KCCCollision},Quantum.EKCCCollisionSource,Quantum.EntityRef)
  parent: Quantum.KCCUtility
  langs:
  - csharp
  - vb
  name: HasCollision(QList<KCCCollision>, EKCCCollisionSource, EntityRef)
  nameWithType: KCCUtility.HasCollision(QList<KCCCollision>, EKCCCollisionSource, EntityRef)
  fullName: Quantum.KCCUtility.HasCollision(Quantum.Collections.QList<Quantum.KCCCollision>, Quantum.EKCCCollisionSource, Quantum.EntityRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCUtility.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: HasCollision
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/QuantumAddons/KCC/Simulation/Utilities/KCCUtility.cs
    startLine: 55
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public static bool HasCollision(QList<KCCCollision> collisions, EKCCCollisionSource source, EntityRef reference)
    parameters:
    - id: collisions
      type: Quantum.Collections.QList{Quantum.KCCCollision}
    - id: source
      type: Quantum.EKCCCollisionSource
    - id: reference
      type: Quantum.EntityRef
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasCollision(collisions As QList(Of KCCCollision), source As EKCCCollisionSource, reference As EntityRef) As Boolean
  overload: Quantum.KCCUtility.HasCollision*
  nameWithType.vb: KCCUtility.HasCollision(QList(Of KCCCollision), EKCCCollisionSource, EntityRef)
  fullName.vb: Quantum.KCCUtility.HasCollision(Quantum.Collections.QList(Of Quantum.KCCCollision), Quantum.EKCCCollisionSource, Quantum.EntityRef)
  name.vb: HasCollision(QList(Of KCCCollision), EKCCCollisionSource, EntityRef)
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quantum.KCCUtility.ResolveProcessorAsset*
  commentId: Overload:Quantum.KCCUtility.ResolveProcessorAsset
  href: Quantum.KCCUtility.html#Quantum_KCCUtility_ResolveProcessorAsset_Quantum_Frame_Quantum_KCCCollision__
  name: ResolveProcessorAsset
  nameWithType: KCCUtility.ResolveProcessorAsset
  fullName: Quantum.KCCUtility.ResolveProcessorAsset
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Quantum.KCCCollision
  commentId: T:Quantum.KCCCollision
  parent: Quantum
  href: Quantum.KCCCollision.html
  name: KCCCollision
  nameWithType: KCCCollision
  fullName: Quantum.KCCCollision
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Quantum.KCCUtility.ResolveProcessor*
  commentId: Overload:Quantum.KCCUtility.ResolveProcessor
  href: Quantum.KCCUtility.html#Quantum_KCCUtility_ResolveProcessor__1_Quantum_Frame_Quantum_AssetRef___0__
  name: ResolveProcessor
  nameWithType: KCCUtility.ResolveProcessor
  fullName: Quantum.KCCUtility.ResolveProcessor
- uid: Quantum.AssetRef
  commentId: T:Quantum.AssetRef
  parent: Quantum
  isExternal: true
  name: AssetRef
  nameWithType: AssetRef
  fullName: Quantum.AssetRef
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Quantum.AssetRef{{T}}
  commentId: T:Quantum.AssetRef{``0}
  parent: Quantum
  definition: Quantum.AssetRef`1
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.AssetRef`1
  commentId: T:Quantum.AssetRef`1
  isExternal: true
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.KCCUtility.HasCollision*
  commentId: Overload:Quantum.KCCUtility.HasCollision
  href: Quantum.KCCUtility.html#Quantum_KCCUtility_HasCollision_Quantum_Collections_QList_Quantum_KCCCollision__Quantum_EKCCCollisionSource_Quantum_EntityRef_
  name: HasCollision
  nameWithType: KCCUtility.HasCollision
  fullName: Quantum.KCCUtility.HasCollision
- uid: Quantum.Collections.QList{Quantum.KCCCollision}
  commentId: T:Quantum.Collections.QList{Quantum.KCCCollision}
  parent: Quantum.Collections
  definition: Quantum.Collections.QList`1
  href: Quantum.KCCCollision.html
  name: QList<KCCCollision>
  nameWithType: QList<KCCCollision>
  fullName: Quantum.Collections.QList<Quantum.KCCCollision>
  nameWithType.vb: QList(Of KCCCollision)
  fullName.vb: Quantum.Collections.QList(Of Quantum.KCCCollision)
  name.vb: QList(Of KCCCollision)
  spec.csharp:
  - uid: Quantum.Collections.QList`1
    name: QList
    isExternal: true
  - name: <
  - uid: Quantum.KCCCollision
    name: KCCCollision
    href: Quantum.KCCCollision.html
  - name: '>'
  spec.vb:
  - uid: Quantum.Collections.QList`1
    name: QList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.KCCCollision
    name: KCCCollision
    href: Quantum.KCCCollision.html
  - name: )
- uid: Quantum.EKCCCollisionSource
  commentId: T:Quantum.EKCCCollisionSource
  parent: Quantum
  href: Quantum.EKCCCollisionSource.html
  name: EKCCCollisionSource
  nameWithType: EKCCCollisionSource
  fullName: Quantum.EKCCCollisionSource
- uid: Quantum.EntityRef
  commentId: T:Quantum.EntityRef
  parent: Quantum
  isExternal: true
  name: EntityRef
  nameWithType: EntityRef
  fullName: Quantum.EntityRef
- uid: Quantum.Collections.QList`1
  commentId: T:Quantum.Collections.QList`1
  isExternal: true
  name: QList<T>
  nameWithType: QList<T>
  fullName: Quantum.Collections.QList<T>
  nameWithType.vb: QList(Of T)
  fullName.vb: Quantum.Collections.QList(Of T)
  name.vb: QList(Of T)
  spec.csharp:
  - uid: Quantum.Collections.QList`1
    name: QList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.Collections.QList`1
    name: QList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.Collections
  commentId: N:Quantum.Collections
  isExternal: true
  name: Quantum.Collections
  nameWithType: Quantum.Collections
  fullName: Quantum.Collections
  spec.csharp:
  - uid: Quantum
    name: Quantum
    isExternal: true
  - name: .
  - uid: Quantum.Collections
    name: Collections
    isExternal: true
  spec.vb:
  - uid: Quantum
    name: Quantum
    isExternal: true
  - name: .
  - uid: Quantum.Collections
    name: Collections
    isExternal: true
