### YamlMime:ManagedReference
items:
- uid: Quantum.HNSFStateSet
  commentId: T:Quantum.HNSFStateSet
  id: HNSFStateSet
  parent: Quantum
  children:
  - Quantum.HNSFStateSet.Label
  - Quantum.HNSFStateSet.aerialGlobalState
  - Quantum.HNSFStateSet.defaultMoveset
  - Quantum.HNSFStateSet.defaultSpecials
  - Quantum.HNSFStateSet.groundedGlobalState
  - Quantum.HNSFStateSet.specials
  - Quantum.HNSFStateSet.states
  langs:
  - csharp
  - vb
  name: HNSFStateSet
  nameWithType: HNSFStateSet
  fullName: Quantum.HNSFStateSet
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: HNSFStateSet
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
    startLine: 6
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: 'public class HNSFStateSet : AssetObject, ILogSource'
    content.vb: Public Class HNSFStateSet Inherits AssetObject Implements ILogSource
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  - Quantum.AssetObject
  implements:
  - Quantum.ILogSource
  inheritedMembers:
  - Quantum.AssetObject.Identifier
  - Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  - Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  - Quantum.AssetObject.Create``1
  - Quantum.AssetObject.Create(System.Type)
  - Quantum.AssetObject.Create``1(System.Action{{T}})
  - Quantum.AssetObject.Reset
  - Quantum.AssetObject.Guid
  - Quantum.AssetObject.Path
  - Quantum.AssetObject.Settings
- uid: Quantum.HNSFStateSet.Label
  commentId: F:Quantum.HNSFStateSet.Label
  id: Label
  parent: Quantum.HNSFStateSet
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: HNSFStateSet.Label
  fullName: Quantum.HNSFStateSet.Label
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Label
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
    startLine: 8
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public string Label
    return:
      type: System.String
    content.vb: Public Label As String
- uid: Quantum.HNSFStateSet.groundedGlobalState
  commentId: F:Quantum.HNSFStateSet.groundedGlobalState
  id: groundedGlobalState
  parent: Quantum.HNSFStateSet
  langs:
  - csharp
  - vb
  name: groundedGlobalState
  nameWithType: HNSFStateSet.groundedGlobalState
  fullName: Quantum.HNSFStateSet.groundedGlobalState
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: groundedGlobalState
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
    startLine: 9
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFState> groundedGlobalState
    return:
      type: Quantum.AssetRef{Quantum.HNSFState}
    content.vb: Public groundedGlobalState As AssetRef(Of HNSFState)
- uid: Quantum.HNSFStateSet.aerialGlobalState
  commentId: F:Quantum.HNSFStateSet.aerialGlobalState
  id: aerialGlobalState
  parent: Quantum.HNSFStateSet
  langs:
  - csharp
  - vb
  name: aerialGlobalState
  nameWithType: HNSFStateSet.aerialGlobalState
  fullName: Quantum.HNSFStateSet.aerialGlobalState
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: aerialGlobalState
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
    startLine: 10
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFState> aerialGlobalState
    return:
      type: Quantum.AssetRef{Quantum.HNSFState}
    content.vb: Public aerialGlobalState As AssetRef(Of HNSFState)
- uid: Quantum.HNSFStateSet.defaultMoveset
  commentId: F:Quantum.HNSFStateSet.defaultMoveset
  id: defaultMoveset
  parent: Quantum.HNSFStateSet
  langs:
  - csharp
  - vb
  name: defaultMoveset
  nameWithType: HNSFStateSet.defaultMoveset
  fullName: Quantum.HNSFStateSet.defaultMoveset
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: defaultMoveset
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
    startLine: 11
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFState> defaultMoveset
    return:
      type: Quantum.AssetRef{Quantum.HNSFState}
    content.vb: Public defaultMoveset As AssetRef(Of HNSFState)
- uid: Quantum.HNSFStateSet.states
  commentId: F:Quantum.HNSFStateSet.states
  id: states
  parent: Quantum.HNSFStateSet
  langs:
  - csharp
  - vb
  name: states
  nameWithType: HNSFStateSet.states
  fullName: Quantum.HNSFStateSet.states
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: states
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
    startLine: 12
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFState>[] states
    return:
      type: Quantum.AssetRef{Quantum.HNSFState}[]
    content.vb: Public states As AssetRef(Of HNSFState)()
- uid: Quantum.HNSFStateSet.specials
  commentId: F:Quantum.HNSFStateSet.specials
  id: specials
  parent: Quantum.HNSFStateSet
  langs:
  - csharp
  - vb
  name: specials
  nameWithType: HNSFStateSet.specials
  fullName: Quantum.HNSFStateSet.specials
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: specials
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
    startLine: 14
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFSpecialSet>[] specials
    return:
      type: Quantum.AssetRef{Quantum.HNSFSpecialSet}[]
    content.vb: Public specials As AssetRef(Of HNSFSpecialSet)()
- uid: Quantum.HNSFStateSet.defaultSpecials
  commentId: F:Quantum.HNSFStateSet.defaultSpecials
  id: defaultSpecials
  parent: Quantum.HNSFStateSet
  langs:
  - csharp
  - vb
  name: defaultSpecials
  nameWithType: HNSFStateSet.defaultSpecials
  fullName: Quantum.HNSFStateSet.defaultSpecials
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: defaultSpecials
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFStateSet.cs
    startLine: 16
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFSpecialSet>[] defaultSpecials
    return:
      type: Quantum.AssetRef{Quantum.HNSFSpecialSet}[]
    content.vb: Public defaultSpecials As AssetRef(Of HNSFSpecialSet)()
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: Quantum.AssetObject
  commentId: T:Quantum.AssetObject
  parent: Quantum
  isExternal: true
  name: AssetObject
  nameWithType: AssetObject
  fullName: Quantum.AssetObject
- uid: Quantum.ILogSource
  commentId: T:Quantum.ILogSource
  parent: Quantum
  isExternal: true
  name: ILogSource
  nameWithType: ILogSource
  fullName: Quantum.ILogSource
- uid: Quantum.AssetObject.Identifier
  commentId: F:Quantum.AssetObject.Identifier
  parent: Quantum.AssetObject
  isExternal: true
  name: Identifier
  nameWithType: AssetObject.Identifier
  fullName: Quantum.AssetObject.Identifier
- uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  commentId: M:Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  parent: Quantum.AssetObject
  isExternal: true
  name: Loaded(IResourceManager, Allocator)
  nameWithType: AssetObject.Loaded(IResourceManager, Native.Allocator)
  fullName: Quantum.AssetObject.Loaded(Quantum.IResourceManager, Photon.Deterministic.Native.Allocator)
  spec.csharp:
  - uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Loaded
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Loaded
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
- uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  commentId: M:Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  parent: Quantum.AssetObject
  isExternal: true
  name: Disposed(IResourceManager, Allocator)
  nameWithType: AssetObject.Disposed(IResourceManager, Native.Allocator)
  fullName: Quantum.AssetObject.Disposed(Quantum.IResourceManager, Photon.Deterministic.Native.Allocator)
  spec.csharp:
  - uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Disposed
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Disposed
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
- uid: Quantum.AssetObject.Create``1
  commentId: M:Quantum.AssetObject.Create``1
  parent: Quantum.AssetObject
  isExternal: true
  name: Create<T>()
  nameWithType: AssetObject.Create<T>()
  fullName: Quantum.AssetObject.Create<T>()
  nameWithType.vb: AssetObject.Create(Of T)()
  fullName.vb: Quantum.AssetObject.Create(Of T)()
  name.vb: Create(Of T)()
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Quantum.AssetObject.Create(System.Type)
  commentId: M:Quantum.AssetObject.Create(System.Type)
  parent: Quantum.AssetObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Create(Type)
  nameWithType: AssetObject.Create(Type)
  fullName: Quantum.AssetObject.Create(System.Type)
  spec.csharp:
  - uid: Quantum.AssetObject.Create(System.Type)
    name: Create
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create(System.Type)
    name: Create
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Quantum.AssetObject.Create``1(System.Action{{T}})
  commentId: M:Quantum.AssetObject.Create``1(System.Action{``0})
  parent: Quantum.AssetObject
  definition: Quantum.AssetObject.Create``1(System.Action{``0})
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Create<T>(Action<T>)
  nameWithType: AssetObject.Create<T>(Action<T>)
  fullName: Quantum.AssetObject.Create<T>(System.Action<T>)
  nameWithType.vb: AssetObject.Create(Of T)(Action(Of T))
  fullName.vb: Quantum.AssetObject.Create(Of T)(System.Action(Of T))
  name.vb: Create(Of T)(Action(Of T))
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.AssetObject.Reset
  commentId: M:Quantum.AssetObject.Reset
  parent: Quantum.AssetObject
  isExternal: true
  name: Reset()
  nameWithType: AssetObject.Reset()
  fullName: Quantum.AssetObject.Reset()
  spec.csharp:
  - uid: Quantum.AssetObject.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.AssetObject.Guid
  commentId: P:Quantum.AssetObject.Guid
  parent: Quantum.AssetObject
  isExternal: true
  name: Guid
  nameWithType: AssetObject.Guid
  fullName: Quantum.AssetObject.Guid
- uid: Quantum.AssetObject.Path
  commentId: P:Quantum.AssetObject.Path
  parent: Quantum.AssetObject
  isExternal: true
  name: Path
  nameWithType: AssetObject.Path
  fullName: Quantum.AssetObject.Path
- uid: Quantum.AssetObject.Settings
  commentId: P:Quantum.AssetObject.Settings
  parent: Quantum.AssetObject
  isExternal: true
  name: Settings
  nameWithType: AssetObject.Settings
  fullName: Quantum.AssetObject.Settings
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Quantum.AssetObject.Create``1(System.Action{``0})
  commentId: M:Quantum.AssetObject.Create``1(System.Action{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Create<T>(Action<T>)
  nameWithType: AssetObject.Create<T>(Action<T>)
  fullName: Quantum.AssetObject.Create<T>(System.Action<T>)
  nameWithType.vb: AssetObject.Create(Of T)(Action(Of T))
  fullName.vb: Quantum.AssetObject.Create(Of T)(System.Action(Of T))
  name.vb: Create(Of T)(Action(Of T))
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Quantum.AssetRef{Quantum.HNSFState}
  commentId: T:Quantum.AssetRef{Quantum.HNSFState}
  parent: Quantum
  definition: Quantum.AssetRef`1
  href: Quantum.HNSFState.html
  name: AssetRef<HNSFState>
  nameWithType: AssetRef<HNSFState>
  fullName: Quantum.AssetRef<Quantum.HNSFState>
  nameWithType.vb: AssetRef(Of HNSFState)
  fullName.vb: Quantum.AssetRef(Of Quantum.HNSFState)
  name.vb: AssetRef(Of HNSFState)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.HNSFState
    name: HNSFState
    href: Quantum.HNSFState.html
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.HNSFState
    name: HNSFState
    href: Quantum.HNSFState.html
  - name: )
- uid: Quantum.AssetRef`1
  commentId: T:Quantum.AssetRef`1
  isExternal: true
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.AssetRef{Quantum.HNSFState}[]
  isExternal: true
  href: Quantum.HNSFState.html
  name: AssetRef<HNSFState>[]
  nameWithType: AssetRef<HNSFState>[]
  fullName: Quantum.AssetRef<Quantum.HNSFState>[]
  nameWithType.vb: AssetRef(Of HNSFState)()
  fullName.vb: Quantum.AssetRef(Of Quantum.HNSFState)()
  name.vb: AssetRef(Of HNSFState)()
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.HNSFState
    name: HNSFState
    href: Quantum.HNSFState.html
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.HNSFState
    name: HNSFState
    href: Quantum.HNSFState.html
  - name: )
  - name: (
  - name: )
- uid: Quantum.AssetRef{Quantum.HNSFSpecialSet}[]
  isExternal: true
  href: Quantum.HNSFSpecialSet.html
  name: AssetRef<HNSFSpecialSet>[]
  nameWithType: AssetRef<HNSFSpecialSet>[]
  fullName: Quantum.AssetRef<Quantum.HNSFSpecialSet>[]
  nameWithType.vb: AssetRef(Of HNSFSpecialSet)()
  fullName.vb: Quantum.AssetRef(Of Quantum.HNSFSpecialSet)()
  name.vb: AssetRef(Of HNSFSpecialSet)()
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.HNSFSpecialSet
    name: HNSFSpecialSet
    href: Quantum.HNSFSpecialSet.html
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.HNSFSpecialSet
    name: HNSFSpecialSet
    href: Quantum.HNSFSpecialSet.html
  - name: )
  - name: (
  - name: )
