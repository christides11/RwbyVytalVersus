### YamlMime:ManagedReference
items:
- uid: Quantum.Core.DebugCommand
  commentId: T:Quantum.Core.DebugCommand
  id: DebugCommand
  parent: Quantum.Core
  children:
  - Quantum.Core.DebugCommand.CommandExecuted
  - Quantum.Core.DebugCommand.CreateDestroyPayload(Quantum.EntityRef)
  - Quantum.Core.DebugCommand.CreateMaterializePayload(Quantum.EntityRef,Quantum.EntityPrototype,Quantum.IAssetSerializer)
  - Quantum.Core.DebugCommand.CreateRemoveComponentPayload(Quantum.EntityRef,System.Type)
  - Quantum.Core.DebugCommand.CreateToggleSystemPayload(System.Type)
  - Quantum.Core.DebugCommand.IsEnabled
  - Quantum.Core.DebugCommand.Reset
  - Quantum.Core.DebugCommand.Send(Quantum.QuantumGame,Quantum.Core.DebugCommand.Payload[])
  langs:
  - csharp
  - vb
  name: DebugCommand
  nameWithType: DebugCommand
  fullName: Quantum.Core.DebugCommand
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DebugCommand
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 9079
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Core
  summary: >-
    The DebugCommand class allows to send debug commands to the simulation.

    It's used by the Quantum state inspector for example.

    The system is completely disabled in non-development builds or when defining QUANTUM_DEBUG_COMMAND_DISABLED.
  example: []
  syntax:
    content: public static class DebugCommand
    content.vb: Public Module DebugCommand
  inheritance:
  - System.Object
- uid: Quantum.Core.DebugCommand.CommandExecuted
  commentId: E:Quantum.Core.DebugCommand.CommandExecuted
  id: CommandExecuted
  parent: Quantum.Core.DebugCommand
  langs:
  - csharp
  - vb
  name: CommandExecuted
  nameWithType: DebugCommand.CommandExecuted
  fullName: Quantum.Core.DebugCommand.CommandExecuted
  type: Event
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: CommandExecuted
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 9097
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Core
  summary: A callback Action that is invoked when a debug command was executed.
  example: []
  syntax:
    content: public static event Action<DebugCommand.Payload, Exception> CommandExecuted
    return:
      type: System.Action{Quantum.Core.DebugCommand.Payload,System.Exception}
    content.vb: Public Shared Event CommandExecuted As Action(Of DebugCommand.Payload, Exception)
- uid: Quantum.Core.DebugCommand.IsEnabled
  commentId: P:Quantum.Core.DebugCommand.IsEnabled
  id: IsEnabled
  parent: Quantum.Core.DebugCommand
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: DebugCommand.IsEnabled
  fullName: Quantum.Core.DebugCommand.IsEnabled
  type: Property
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: IsEnabled
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 9111
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Core
  summary: Returns true when the debug command system is enabled.
  example: []
  syntax:
    content: public static bool IsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsEnabled As Boolean
  overload: Quantum.Core.DebugCommand.IsEnabled*
- uid: Quantum.Core.DebugCommand.Send(Quantum.QuantumGame,Quantum.Core.DebugCommand.Payload[])
  commentId: M:Quantum.Core.DebugCommand.Send(Quantum.QuantumGame,Quantum.Core.DebugCommand.Payload[])
  id: Send(Quantum.QuantumGame,Quantum.Core.DebugCommand.Payload[])
  parent: Quantum.Core.DebugCommand
  langs:
  - csharp
  - vb
  name: Send(QuantumGame, params Payload[])
  nameWithType: DebugCommand.Send(QuantumGame, params DebugCommand.Payload[])
  fullName: Quantum.Core.DebugCommand.Send(Quantum.QuantumGame, params Quantum.Core.DebugCommand.Payload[])
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Send
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 9123
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Core
  summary: Sends a debug command.
  example: []
  syntax:
    content: public static bool Send(QuantumGame game, params DebugCommand.Payload[] payload)
    parameters:
    - id: game
      type: Quantum.QuantumGame
      description: The reference game.
    - id: payload
      type: Quantum.Core.DebugCommand.Payload[]
      description: The command payloads can include multiple instances.
    return:
      type: System.Boolean
    content.vb: Public Shared Function Send(game As QuantumGame, ParamArray payload As DebugCommand.Payload()) As Boolean
  overload: Quantum.Core.DebugCommand.Send*
  nameWithType.vb: DebugCommand.Send(QuantumGame, ParamArray DebugCommand.Payload())
  fullName.vb: Quantum.Core.DebugCommand.Send(Quantum.QuantumGame, ParamArray Quantum.Core.DebugCommand.Payload())
  name.vb: Send(QuantumGame, ParamArray Payload())
- uid: Quantum.Core.DebugCommand.Reset
  commentId: M:Quantum.Core.DebugCommand.Reset
  id: Reset
  parent: Quantum.Core.DebugCommand
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: DebugCommand.Reset()
  fullName: Quantum.Core.DebugCommand.Reset()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Reset
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 9138
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Core
  summary: Reset the debug command system and invalidate the <xref href="Quantum.Core.DebugCommand.CommandExecuted" data-throw-if-not-resolved="false"></xref> callback.
  example: []
  syntax:
    content: public static void Reset()
    content.vb: Public Shared Sub Reset()
  overload: Quantum.Core.DebugCommand.Reset*
- uid: Quantum.Core.DebugCommand.CreateDestroyPayload(Quantum.EntityRef)
  commentId: M:Quantum.Core.DebugCommand.CreateDestroyPayload(Quantum.EntityRef)
  id: CreateDestroyPayload(Quantum.EntityRef)
  parent: Quantum.Core.DebugCommand
  langs:
  - csharp
  - vb
  name: CreateDestroyPayload(EntityRef)
  nameWithType: DebugCommand.CreateDestroyPayload(EntityRef)
  fullName: Quantum.Core.DebugCommand.CreateDestroyPayload(Quantum.EntityRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: CreateDestroyPayload
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 9179
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Core
  summary: Factory to create a destroy entity debug command payload.
  example: []
  syntax:
    content: public static DebugCommand.Payload CreateDestroyPayload(EntityRef entityRef)
    parameters:
    - id: entityRef
      type: Quantum.EntityRef
      description: Entity to destroy.
    return:
      type: Quantum.Core.DebugCommand.Payload
      description: Debug command payload.
    content.vb: Public Shared Function CreateDestroyPayload(entityRef As EntityRef) As DebugCommand.Payload
  overload: Quantum.Core.DebugCommand.CreateDestroyPayload*
- uid: Quantum.Core.DebugCommand.CreateMaterializePayload(Quantum.EntityRef,Quantum.EntityPrototype,Quantum.IAssetSerializer)
  commentId: M:Quantum.Core.DebugCommand.CreateMaterializePayload(Quantum.EntityRef,Quantum.EntityPrototype,Quantum.IAssetSerializer)
  id: CreateMaterializePayload(Quantum.EntityRef,Quantum.EntityPrototype,Quantum.IAssetSerializer)
  parent: Quantum.Core.DebugCommand
  langs:
  - csharp
  - vb
  name: CreateMaterializePayload(EntityRef, EntityPrototype, IAssetSerializer)
  nameWithType: DebugCommand.CreateMaterializePayload(EntityRef, EntityPrototype, IAssetSerializer)
  fullName: Quantum.Core.DebugCommand.CreateMaterializePayload(Quantum.EntityRef, Quantum.EntityPrototype, Quantum.IAssetSerializer)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: CreateMaterializePayload
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 9193
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Core
  summary: Factory to create the payload to create a new entity from an entity prototype.
  example: []
  syntax:
    content: public static DebugCommand.Payload CreateMaterializePayload(EntityRef entityRef, EntityPrototype prototype, IAssetSerializer serializer)
    parameters:
    - id: entityRef
      type: Quantum.EntityRef
      description: If set, then the existing entity will be overwritten, if not set a new entity will be created.
    - id: prototype
      type: Quantum.EntityPrototype
      description: Optionally the entity prototype to use. Can be null.
    - id: serializer
      type: Quantum.IAssetSerializer
      description: The serializer.
    return:
      type: Quantum.Core.DebugCommand.Payload
      description: The debug command payload.
    content.vb: Public Shared Function CreateMaterializePayload(entityRef As EntityRef, prototype As EntityPrototype, serializer As IAssetSerializer) As DebugCommand.Payload
  overload: Quantum.Core.DebugCommand.CreateMaterializePayload*
- uid: Quantum.Core.DebugCommand.CreateRemoveComponentPayload(Quantum.EntityRef,System.Type)
  commentId: M:Quantum.Core.DebugCommand.CreateRemoveComponentPayload(Quantum.EntityRef,System.Type)
  id: CreateRemoveComponentPayload(Quantum.EntityRef,System.Type)
  parent: Quantum.Core.DebugCommand
  langs:
  - csharp
  - vb
  name: CreateRemoveComponentPayload(EntityRef, Type)
  nameWithType: DebugCommand.CreateRemoveComponentPayload(EntityRef, Type)
  fullName: Quantum.Core.DebugCommand.CreateRemoveComponentPayload(Quantum.EntityRef, System.Type)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: CreateRemoveComponentPayload
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 9212
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Core
  summary: Factory to create the payload to remove a component from an entity.
  example: []
  syntax:
    content: public static DebugCommand.Payload CreateRemoveComponentPayload(EntityRef entityRef, Type componentType)
    parameters:
    - id: entityRef
      type: Quantum.EntityRef
      description: The entity to remove a component from.
    - id: componentType
      type: System.Type
      description: The component type to remove.
    return:
      type: Quantum.Core.DebugCommand.Payload
      description: The debug command payload.
    content.vb: Public Shared Function CreateRemoveComponentPayload(entityRef As EntityRef, componentType As Type) As DebugCommand.Payload
  overload: Quantum.Core.DebugCommand.CreateRemoveComponentPayload*
- uid: Quantum.Core.DebugCommand.CreateToggleSystemPayload(System.Type)
  commentId: M:Quantum.Core.DebugCommand.CreateToggleSystemPayload(System.Type)
  id: CreateToggleSystemPayload(System.Type)
  parent: Quantum.Core.DebugCommand
  langs:
  - csharp
  - vb
  name: CreateToggleSystemPayload(Type)
  nameWithType: DebugCommand.CreateToggleSystemPayload(Type)
  fullName: Quantum.Core.DebugCommand.CreateToggleSystemPayload(System.Type)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: CreateToggleSystemPayload
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 9228
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Core
  summary: Factory to create the payload for a toggle system command.
  example: []
  syntax:
    content: public static DebugCommand.Payload CreateToggleSystemPayload(Type systemType)
    parameters:
    - id: systemType
      type: System.Type
      description: System type, serialized as string
    return:
      type: Quantum.Core.DebugCommand.Payload
      description: The debug command payload.
    content.vb: Public Shared Function CreateToggleSystemPayload(systemType As Type) As DebugCommand.Payload
  overload: Quantum.Core.DebugCommand.CreateToggleSystemPayload*
references:
- uid: Quantum.Core
  commentId: N:Quantum.Core
  href: Quantum.html
  name: Quantum.Core
  nameWithType: Quantum.Core
  fullName: Quantum.Core
  spec.csharp:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Core
    name: Core
    href: Quantum.Core.html
  spec.vb:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Core
    name: Core
    href: Quantum.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action{Quantum.Core.DebugCommand.Payload,System.Exception}
  commentId: T:System.Action{Quantum.Core.DebugCommand.Payload,System.Exception}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<DebugCommand.Payload, Exception>
  nameWithType: Action<DebugCommand.Payload, Exception>
  fullName: System.Action<Quantum.Core.DebugCommand.Payload, System.Exception>
  nameWithType.vb: Action(Of DebugCommand.Payload, Exception)
  fullName.vb: System.Action(Of Quantum.Core.DebugCommand.Payload, System.Exception)
  name.vb: Action(Of DebugCommand.Payload, Exception)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: Quantum.Core.DebugCommand
    name: DebugCommand
    href: Quantum.Core.DebugCommand.html
  - name: .
  - uid: Quantum.Core.DebugCommand.Payload
    name: Payload
    href: Quantum.Core.DebugCommand.Payload.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.Core.DebugCommand
    name: DebugCommand
    href: Quantum.Core.DebugCommand.html
  - name: .
  - uid: Quantum.Core.DebugCommand.Payload
    name: Payload
    href: Quantum.Core.DebugCommand.Payload.html
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Quantum.Core.DebugCommand.IsEnabled*
  commentId: Overload:Quantum.Core.DebugCommand.IsEnabled
  href: Quantum.Core.DebugCommand.html#Quantum_Core_DebugCommand_IsEnabled
  name: IsEnabled
  nameWithType: DebugCommand.IsEnabled
  fullName: Quantum.Core.DebugCommand.IsEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Quantum.Core.DebugCommand.Send*
  commentId: Overload:Quantum.Core.DebugCommand.Send
  href: Quantum.Core.DebugCommand.html#Quantum_Core_DebugCommand_Send_Quantum_QuantumGame_Quantum_Core_DebugCommand_Payload___
  name: Send
  nameWithType: DebugCommand.Send
  fullName: Quantum.Core.DebugCommand.Send
- uid: Quantum.QuantumGame
  commentId: T:Quantum.QuantumGame
  parent: Quantum
  href: Quantum.QuantumGame.html
  name: QuantumGame
  nameWithType: QuantumGame
  fullName: Quantum.QuantumGame
- uid: Quantum.Core.DebugCommand.Payload[]
  isExternal: true
  href: Quantum.Core.DebugCommand.Payload.html
  name: Payload[]
  nameWithType: DebugCommand.Payload[]
  fullName: Quantum.Core.DebugCommand.Payload[]
  nameWithType.vb: DebugCommand.Payload()
  fullName.vb: Quantum.Core.DebugCommand.Payload()
  name.vb: Payload()
  spec.csharp:
  - uid: Quantum.Core.DebugCommand.Payload
    name: Payload
    href: Quantum.Core.DebugCommand.Payload.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.Core.DebugCommand.Payload
    name: Payload
    href: Quantum.Core.DebugCommand.Payload.html
  - name: (
  - name: )
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: Quantum.Core.DebugCommand.CommandExecuted
  commentId: E:Quantum.Core.DebugCommand.CommandExecuted
  href: Quantum.Core.DebugCommand.html#Quantum_Core_DebugCommand_CommandExecuted
  name: CommandExecuted
  nameWithType: DebugCommand.CommandExecuted
  fullName: Quantum.Core.DebugCommand.CommandExecuted
- uid: Quantum.Core.DebugCommand.Reset*
  commentId: Overload:Quantum.Core.DebugCommand.Reset
  href: Quantum.Core.DebugCommand.html#Quantum_Core_DebugCommand_Reset
  name: Reset
  nameWithType: DebugCommand.Reset
  fullName: Quantum.Core.DebugCommand.Reset
- uid: Quantum.Core.DebugCommand.CreateDestroyPayload*
  commentId: Overload:Quantum.Core.DebugCommand.CreateDestroyPayload
  href: Quantum.Core.DebugCommand.html#Quantum_Core_DebugCommand_CreateDestroyPayload_Quantum_EntityRef_
  name: CreateDestroyPayload
  nameWithType: DebugCommand.CreateDestroyPayload
  fullName: Quantum.Core.DebugCommand.CreateDestroyPayload
- uid: Quantum.EntityRef
  commentId: T:Quantum.EntityRef
  parent: Quantum
  isExternal: true
  name: EntityRef
  nameWithType: EntityRef
  fullName: Quantum.EntityRef
- uid: Quantum.Core.DebugCommand.Payload
  commentId: T:Quantum.Core.DebugCommand.Payload
  parent: Quantum.Core
  href: Quantum.Core.DebugCommand.html
  name: DebugCommand.Payload
  nameWithType: DebugCommand.Payload
  fullName: Quantum.Core.DebugCommand.Payload
  spec.csharp:
  - uid: Quantum.Core.DebugCommand
    name: DebugCommand
    href: Quantum.Core.DebugCommand.html
  - name: .
  - uid: Quantum.Core.DebugCommand.Payload
    name: Payload
    href: Quantum.Core.DebugCommand.Payload.html
  spec.vb:
  - uid: Quantum.Core.DebugCommand
    name: DebugCommand
    href: Quantum.Core.DebugCommand.html
  - name: .
  - uid: Quantum.Core.DebugCommand.Payload
    name: Payload
    href: Quantum.Core.DebugCommand.Payload.html
- uid: Quantum.Core.DebugCommand.CreateMaterializePayload*
  commentId: Overload:Quantum.Core.DebugCommand.CreateMaterializePayload
  href: Quantum.Core.DebugCommand.html#Quantum_Core_DebugCommand_CreateMaterializePayload_Quantum_EntityRef_Quantum_EntityPrototype_Quantum_IAssetSerializer_
  name: CreateMaterializePayload
  nameWithType: DebugCommand.CreateMaterializePayload
  fullName: Quantum.Core.DebugCommand.CreateMaterializePayload
- uid: Quantum.EntityPrototype
  commentId: T:Quantum.EntityPrototype
  parent: Quantum
  isExternal: true
  name: EntityPrototype
  nameWithType: EntityPrototype
  fullName: Quantum.EntityPrototype
- uid: Quantum.IAssetSerializer
  commentId: T:Quantum.IAssetSerializer
  parent: Quantum
  isExternal: true
  name: IAssetSerializer
  nameWithType: IAssetSerializer
  fullName: Quantum.IAssetSerializer
- uid: Quantum.Core.DebugCommand.CreateRemoveComponentPayload*
  commentId: Overload:Quantum.Core.DebugCommand.CreateRemoveComponentPayload
  href: Quantum.Core.DebugCommand.html#Quantum_Core_DebugCommand_CreateRemoveComponentPayload_Quantum_EntityRef_System_Type_
  name: CreateRemoveComponentPayload
  nameWithType: DebugCommand.CreateRemoveComponentPayload
  fullName: Quantum.Core.DebugCommand.CreateRemoveComponentPayload
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Quantum.Core.DebugCommand.CreateToggleSystemPayload*
  commentId: Overload:Quantum.Core.DebugCommand.CreateToggleSystemPayload
  href: Quantum.Core.DebugCommand.html#Quantum_Core_DebugCommand_CreateToggleSystemPayload_System_Type_
  name: CreateToggleSystemPayload
  nameWithType: DebugCommand.CreateToggleSystemPayload
  fullName: Quantum.Core.DebugCommand.CreateToggleSystemPayload
