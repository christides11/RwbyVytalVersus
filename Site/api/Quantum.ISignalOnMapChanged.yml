### YamlMime:ManagedReference
items:
- uid: Quantum.ISignalOnMapChanged
  commentId: T:Quantum.ISignalOnMapChanged
  id: ISignalOnMapChanged
  parent: Quantum
  children:
  - Quantum.ISignalOnMapChanged.OnMapChanged(Quantum.Frame,Quantum.AssetRef{Quantum.Map})
  langs:
  - csharp
  - vb
  name: ISignalOnMapChanged
  nameWithType: ISignalOnMapChanged
  fullName: Quantum.ISignalOnMapChanged
  type: Interface
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ISignalOnMapChanged
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1660
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: This signal is called after the map has been changed by assigning a new map to <xref href="Quantum.Frame.Map" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public interface ISignalOnMapChanged : ISignal'
    content.vb: Public Interface ISignalOnMapChanged Inherits ISignal
  inheritedMembers:
  - Quantum.ISignal.RuntimeIndex
- uid: Quantum.ISignalOnMapChanged.OnMapChanged(Quantum.Frame,Quantum.AssetRef{Quantum.Map})
  commentId: M:Quantum.ISignalOnMapChanged.OnMapChanged(Quantum.Frame,Quantum.AssetRef{Quantum.Map})
  id: OnMapChanged(Quantum.Frame,Quantum.AssetRef{Quantum.Map})
  parent: Quantum.ISignalOnMapChanged
  langs:
  - csharp
  - vb
  name: OnMapChanged(Frame, AssetRef<Map>)
  nameWithType: ISignalOnMapChanged.OnMapChanged(Frame, AssetRef<Map>)
  fullName: Quantum.ISignalOnMapChanged.OnMapChanged(Quantum.Frame, Quantum.AssetRef<Quantum.Map>)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnMapChanged
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1666
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: This signal is called after the map has been changed by assigning a new map to <xref href="Quantum.Frame.Map" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: void OnMapChanged(Frame f, AssetRef<Map> previousMap)
    parameters:
    - id: f
      type: Quantum.Frame
      description: The frame reference
    - id: previousMap
      type: Quantum.AssetRef{Quantum.Map}
      description: The previous map
    content.vb: Sub OnMapChanged(f As Frame, previousMap As AssetRef(Of Map))
  overload: Quantum.ISignalOnMapChanged.OnMapChanged*
  nameWithType.vb: ISignalOnMapChanged.OnMapChanged(Frame, AssetRef(Of Map))
  fullName.vb: Quantum.ISignalOnMapChanged.OnMapChanged(Quantum.Frame, Quantum.AssetRef(Of Quantum.Map))
  name.vb: OnMapChanged(Frame, AssetRef(Of Map))
references:
- uid: Quantum.Frame.Map
  commentId: P:Quantum.Frame.Map
  href: Quantum.Frame.html#Quantum_Frame_Map
  name: Map
  nameWithType: Frame.Map
  fullName: Quantum.Frame.Map
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: Quantum.ISignal.RuntimeIndex
  commentId: P:Quantum.ISignal.RuntimeIndex
  parent: Quantum.ISignal
  isExternal: true
  name: RuntimeIndex
  nameWithType: ISignal.RuntimeIndex
  fullName: Quantum.ISignal.RuntimeIndex
- uid: Quantum.ISignal
  commentId: T:Quantum.ISignal
  parent: Quantum
  isExternal: true
  name: ISignal
  nameWithType: ISignal
  fullName: Quantum.ISignal
- uid: Quantum.ISignalOnMapChanged.OnMapChanged*
  commentId: Overload:Quantum.ISignalOnMapChanged.OnMapChanged
  href: Quantum.ISignalOnMapChanged.html#Quantum_ISignalOnMapChanged_OnMapChanged_Quantum_Frame_Quantum_AssetRef_Quantum_Map__
  name: OnMapChanged
  nameWithType: ISignalOnMapChanged.OnMapChanged
  fullName: Quantum.ISignalOnMapChanged.OnMapChanged
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Quantum.AssetRef{Quantum.Map}
  commentId: T:Quantum.AssetRef{Quantum.Map}
  parent: Quantum
  definition: Quantum.AssetRef`1
  name: AssetRef<Map>
  nameWithType: AssetRef<Map>
  fullName: Quantum.AssetRef<Quantum.Map>
  nameWithType.vb: AssetRef(Of Map)
  fullName.vb: Quantum.AssetRef(Of Quantum.Map)
  name.vb: AssetRef(Of Map)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.Map
    name: Map
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.Map
    name: Map
    isExternal: true
  - name: )
- uid: Quantum.AssetRef`1
  commentId: T:Quantum.AssetRef`1
  isExternal: true
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
