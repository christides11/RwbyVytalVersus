### YamlMime:ManagedReference
items:
- uid: Quantum.Prototypes.KCCIgnorePrototype
  commentId: T:Quantum.Prototypes.KCCIgnorePrototype
  id: KCCIgnorePrototype
  parent: Quantum.Prototypes
  children:
  - Quantum.Prototypes.KCCIgnorePrototype.Materialize(Quantum.Frame,Quantum.KCCIgnore@,Quantum.PrototypeMaterializationContext@)
  - Quantum.Prototypes.KCCIgnorePrototype.Reference
  - Quantum.Prototypes.KCCIgnorePrototype.Source
  langs:
  - csharp
  - vb
  name: KCCIgnorePrototype
  nameWithType: KCCIgnorePrototype
  fullName: Quantum.Prototypes.KCCIgnorePrototype
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: KCCIgnorePrototype
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 1454
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: >-
      [Serializable]

      [Prototype(typeof(KCCIgnore))]

      public class KCCIgnorePrototype : StructPrototype, IPrototype
    content.vb: >-
      <Serializable>

      <Prototype(GetType(KCCIgnore))>

      Public Class KCCIgnorePrototype Inherits StructPrototype Implements IPrototype
  inheritance:
  - System.Object
  - Quantum.StructPrototype
  implements:
  - Quantum.IPrototype
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: Quantum.Prototypes.PrototypeAttribute
    ctor: Quantum.Prototypes.PrototypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Quantum.KCCIgnore
- uid: Quantum.Prototypes.KCCIgnorePrototype.Source
  commentId: F:Quantum.Prototypes.KCCIgnorePrototype.Source
  id: Source
  parent: Quantum.Prototypes.KCCIgnorePrototype
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: KCCIgnorePrototype.Source
  fullName: Quantum.Prototypes.KCCIgnorePrototype.Source
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Source
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 1457
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public QEnum8<EKCCIgnoreSource> Source
    return:
      type: Quantum.QEnum8{Quantum.EKCCIgnoreSource}
    content.vb: Public Source As QEnum8(Of EKCCIgnoreSource)
- uid: Quantum.Prototypes.KCCIgnorePrototype.Reference
  commentId: F:Quantum.Prototypes.KCCIgnorePrototype.Reference
  id: Reference
  parent: Quantum.Prototypes.KCCIgnorePrototype
  langs:
  - csharp
  - vb
  name: Reference
  nameWithType: KCCIgnorePrototype.Reference
  fullName: Quantum.Prototypes.KCCIgnorePrototype.Reference
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Reference
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 1458
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public MapEntityId Reference
    return:
      type: Quantum.MapEntityId
    content.vb: Public Reference As MapEntityId
- uid: Quantum.Prototypes.KCCIgnorePrototype.Materialize(Quantum.Frame,Quantum.KCCIgnore@,Quantum.PrototypeMaterializationContext@)
  commentId: M:Quantum.Prototypes.KCCIgnorePrototype.Materialize(Quantum.Frame,Quantum.KCCIgnore@,Quantum.PrototypeMaterializationContext@)
  id: Materialize(Quantum.Frame,Quantum.KCCIgnore@,Quantum.PrototypeMaterializationContext@)
  parent: Quantum.Prototypes.KCCIgnorePrototype
  langs:
  - csharp
  - vb
  name: Materialize(Frame, ref KCCIgnore, in PrototypeMaterializationContext)
  nameWithType: KCCIgnorePrototype.Materialize(Frame, ref KCCIgnore, in PrototypeMaterializationContext)
  fullName: Quantum.Prototypes.KCCIgnorePrototype.Materialize(Quantum.Frame, ref Quantum.KCCIgnore, in Quantum.PrototypeMaterializationContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Materialize
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 1459
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public void Materialize(Frame frame, ref KCCIgnore result, in PrototypeMaterializationContext context = default)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: result
      type: Quantum.KCCIgnore
    - id: context
      type: Quantum.PrototypeMaterializationContext
    content.vb: Public Sub Materialize(frame As Frame, result As KCCIgnore, context As PrototypeMaterializationContext = Nothing)
  overload: Quantum.Prototypes.KCCIgnorePrototype.Materialize*
  nameWithType.vb: KCCIgnorePrototype.Materialize(Frame, KCCIgnore, PrototypeMaterializationContext)
  fullName.vb: Quantum.Prototypes.KCCIgnorePrototype.Materialize(Quantum.Frame, Quantum.KCCIgnore, Quantum.PrototypeMaterializationContext)
  name.vb: Materialize(Frame, KCCIgnore, PrototypeMaterializationContext)
references:
- uid: Quantum.Prototypes
  commentId: N:Quantum.Prototypes
  href: Quantum.html
  name: Quantum.Prototypes
  nameWithType: Quantum.Prototypes
  fullName: Quantum.Prototypes
  spec.csharp:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Prototypes
    name: Prototypes
    href: Quantum.Prototypes.html
  spec.vb:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Prototypes
    name: Prototypes
    href: Quantum.Prototypes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quantum.StructPrototype
  commentId: T:Quantum.StructPrototype
  parent: Quantum
  isExternal: true
  name: StructPrototype
  nameWithType: StructPrototype
  fullName: Quantum.StructPrototype
- uid: Quantum.IPrototype
  commentId: T:Quantum.IPrototype
  parent: Quantum
  isExternal: true
  name: IPrototype
  nameWithType: IPrototype
  fullName: Quantum.IPrototype
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: Quantum.QEnum8{Quantum.EKCCIgnoreSource}
  commentId: T:Quantum.QEnum8{Quantum.EKCCIgnoreSource}
  parent: Quantum
  definition: Quantum.QEnum8`1
  href: Quantum.EKCCIgnoreSource.html
  name: QEnum8<EKCCIgnoreSource>
  nameWithType: QEnum8<EKCCIgnoreSource>
  fullName: Quantum.QEnum8<Quantum.EKCCIgnoreSource>
  nameWithType.vb: QEnum8(Of EKCCIgnoreSource)
  fullName.vb: Quantum.QEnum8(Of Quantum.EKCCIgnoreSource)
  name.vb: QEnum8(Of EKCCIgnoreSource)
  spec.csharp:
  - uid: Quantum.QEnum8`1
    name: QEnum8
    isExternal: true
  - name: <
  - uid: Quantum.EKCCIgnoreSource
    name: EKCCIgnoreSource
    href: Quantum.EKCCIgnoreSource.html
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum8`1
    name: QEnum8
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.EKCCIgnoreSource
    name: EKCCIgnoreSource
    href: Quantum.EKCCIgnoreSource.html
  - name: )
- uid: Quantum.QEnum8`1
  commentId: T:Quantum.QEnum8`1
  isExternal: true
  name: QEnum8<T>
  nameWithType: QEnum8<T>
  fullName: Quantum.QEnum8<T>
  nameWithType.vb: QEnum8(Of T)
  fullName.vb: Quantum.QEnum8(Of T)
  name.vb: QEnum8(Of T)
  spec.csharp:
  - uid: Quantum.QEnum8`1
    name: QEnum8
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.QEnum8`1
    name: QEnum8
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.MapEntityId
  commentId: T:Quantum.MapEntityId
  parent: Quantum
  isExternal: true
  name: MapEntityId
  nameWithType: MapEntityId
  fullName: Quantum.MapEntityId
- uid: Quantum.Prototypes.KCCIgnorePrototype.Materialize*
  commentId: Overload:Quantum.Prototypes.KCCIgnorePrototype.Materialize
  href: Quantum.Prototypes.KCCIgnorePrototype.html#Quantum_Prototypes_KCCIgnorePrototype_Materialize_Quantum_Frame_Quantum_KCCIgnore__Quantum_PrototypeMaterializationContext__
  name: Materialize
  nameWithType: KCCIgnorePrototype.Materialize
  fullName: Quantum.Prototypes.KCCIgnorePrototype.Materialize
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Quantum.KCCIgnore
  commentId: T:Quantum.KCCIgnore
  parent: Quantum
  href: Quantum.KCCIgnore.html
  name: KCCIgnore
  nameWithType: KCCIgnore
  fullName: Quantum.KCCIgnore
- uid: Quantum.PrototypeMaterializationContext
  commentId: T:Quantum.PrototypeMaterializationContext
  parent: Quantum
  isExternal: true
  name: PrototypeMaterializationContext
  nameWithType: PrototypeMaterializationContext
  fullName: Quantum.PrototypeMaterializationContext
