### YamlMime:ManagedReference
items:
- uid: Quantum.HNSFParam`1
  commentId: T:Quantum.HNSFParam`1
  id: HNSFParam`1
  parent: Quantum
  children:
  - Quantum.HNSFParam`1.DefaultValue
  - Quantum.HNSFParam`1.GetBlackboardValue(Quantum.BlackboardValue)
  - Quantum.HNSFParam`1.GetConfigValue(Quantum.AIConfigBase.KeyValuePair)
  - Quantum.HNSFParam`1.GetFunctionValue(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  - Quantum.HNSFParam`1.GetFunctionValue(Quantum.FrameThreadSafe,Quantum.EntityRef,Quantum.HNSFStateContext@)
  - Quantum.HNSFParam`1.Key
  - Quantum.HNSFParam`1.Resolve(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  - Quantum.HNSFParam`1.ResolveBlackboard(Quantum.Frame,Quantum.AIBlackboardComponent*)
  - Quantum.HNSFParam`1.ResolveBlackboard(Quantum.FrameThreadSafe,Quantum.AIBlackboardComponent*)
  - Quantum.HNSFParam`1.ResolveFunction(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  - Quantum.HNSFParam`1.ResolveFunction(Quantum.FrameThreadSafe,Quantum.EntityRef,Quantum.HNSFStateContext@)
  - Quantum.HNSFParam`1.Source
  langs:
  - csharp
  - vb
  name: HNSFParam<T>
  nameWithType: HNSFParam<T>
  fullName: Quantum.HNSFParam<T>
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: HNSFParam
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 11
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public abstract class HNSFParam<T>
    typeParameters:
    - id: T
    content.vb: Public MustInherit Class HNSFParam(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - Quantum.HNSFParamAssetRef
  - Quantum.HNSFParamBool
  - Quantum.HNSFParamByte
  - Quantum.HNSFParamFP
  - Quantum.HNSFParamFPVector2
  - Quantum.HNSFParamFPVector3
  - Quantum.HNSFParamInt
  nameWithType.vb: HNSFParam(Of T)
  fullName.vb: Quantum.HNSFParam(Of T)
  name.vb: HNSFParam(Of T)
- uid: Quantum.HNSFParam`1.Source
  commentId: F:Quantum.HNSFParam`1.Source
  id: Source
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: HNSFParam<T>.Source
  fullName: Quantum.HNSFParam<T>.Source
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Source
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 13
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public HNSFParamSource Source
    return:
      type: Quantum.HNSFParamSource
    content.vb: Public Source As HNSFParamSource
  nameWithType.vb: HNSFParam(Of T).Source
  fullName.vb: Quantum.HNSFParam(Of T).Source
- uid: Quantum.HNSFParam`1.Key
  commentId: F:Quantum.HNSFParam`1.Key
  id: Key
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: HNSFParam<T>.Key
  fullName: Quantum.HNSFParam<T>.Key
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Key
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 14
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public string Key
    return:
      type: System.String
    content.vb: Public Key As String
  nameWithType.vb: HNSFParam(Of T).Key
  fullName.vb: Quantum.HNSFParam(Of T).Key
- uid: Quantum.HNSFParam`1.DefaultValue
  commentId: F:Quantum.HNSFParam`1.DefaultValue
  id: DefaultValue
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: HNSFParam<T>.DefaultValue
  fullName: Quantum.HNSFParam<T>.DefaultValue
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DefaultValue
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 15
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public T DefaultValue
    return:
      type: '{T}'
    content.vb: Public DefaultValue As T
  nameWithType.vb: HNSFParam(Of T).DefaultValue
  fullName.vb: Quantum.HNSFParam(Of T).DefaultValue
- uid: Quantum.HNSFParam`1.GetBlackboardValue(Quantum.BlackboardValue)
  commentId: M:Quantum.HNSFParam`1.GetBlackboardValue(Quantum.BlackboardValue)
  id: GetBlackboardValue(Quantum.BlackboardValue)
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: GetBlackboardValue(BlackboardValue)
  nameWithType: HNSFParam<T>.GetBlackboardValue(BlackboardValue)
  fullName: Quantum.HNSFParam<T>.GetBlackboardValue(Quantum.BlackboardValue)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetBlackboardValue
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 17
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: protected abstract T GetBlackboardValue(BlackboardValue value)
    parameters:
    - id: value
      type: Quantum.BlackboardValue
    return:
      type: '{T}'
    content.vb: Protected MustOverride Function GetBlackboardValue(value As BlackboardValue) As T
  overload: Quantum.HNSFParam`1.GetBlackboardValue*
  nameWithType.vb: HNSFParam(Of T).GetBlackboardValue(BlackboardValue)
  fullName.vb: Quantum.HNSFParam(Of T).GetBlackboardValue(Quantum.BlackboardValue)
- uid: Quantum.HNSFParam`1.GetConfigValue(Quantum.AIConfigBase.KeyValuePair)
  commentId: M:Quantum.HNSFParam`1.GetConfigValue(Quantum.AIConfigBase.KeyValuePair)
  id: GetConfigValue(Quantum.AIConfigBase.KeyValuePair)
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: GetConfigValue(KeyValuePair)
  nameWithType: HNSFParam<T>.GetConfigValue(AIConfigBase.KeyValuePair)
  fullName: Quantum.HNSFParam<T>.GetConfigValue(Quantum.AIConfigBase.KeyValuePair)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetConfigValue
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 18
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: protected abstract T GetConfigValue(AIConfigBase.KeyValuePair configPair)
    parameters:
    - id: configPair
      type: Quantum.AIConfigBase.KeyValuePair
    return:
      type: '{T}'
    content.vb: Protected MustOverride Function GetConfigValue(configPair As AIConfigBase.KeyValuePair) As T
  overload: Quantum.HNSFParam`1.GetConfigValue*
  nameWithType.vb: HNSFParam(Of T).GetConfigValue(AIConfigBase.KeyValuePair)
  fullName.vb: Quantum.HNSFParam(Of T).GetConfigValue(Quantum.AIConfigBase.KeyValuePair)
- uid: Quantum.HNSFParam`1.GetFunctionValue(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  commentId: M:Quantum.HNSFParam`1.GetFunctionValue(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  id: GetFunctionValue(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: GetFunctionValue(Frame, EntityRef, ref HNSFStateContext)
  nameWithType: HNSFParam<T>.GetFunctionValue(Frame, EntityRef, ref HNSFStateContext)
  fullName: Quantum.HNSFParam<T>.GetFunctionValue(Quantum.Frame, Quantum.EntityRef, ref Quantum.HNSFStateContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetFunctionValue
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 19
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: protected abstract T GetFunctionValue(Frame frame, EntityRef entity, ref HNSFStateContext stateContext)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: entity
      type: Quantum.EntityRef
    - id: stateContext
      type: Quantum.HNSFStateContext
    return:
      type: '{T}'
    content.vb: Protected MustOverride Function GetFunctionValue(frame As Frame, entity As EntityRef, stateContext As HNSFStateContext) As T
  overload: Quantum.HNSFParam`1.GetFunctionValue*
  nameWithType.vb: HNSFParam(Of T).GetFunctionValue(Frame, EntityRef, HNSFStateContext)
  fullName.vb: Quantum.HNSFParam(Of T).GetFunctionValue(Quantum.Frame, Quantum.EntityRef, Quantum.HNSFStateContext)
  name.vb: GetFunctionValue(Frame, EntityRef, HNSFStateContext)
- uid: Quantum.HNSFParam`1.GetFunctionValue(Quantum.FrameThreadSafe,Quantum.EntityRef,Quantum.HNSFStateContext@)
  commentId: M:Quantum.HNSFParam`1.GetFunctionValue(Quantum.FrameThreadSafe,Quantum.EntityRef,Quantum.HNSFStateContext@)
  id: GetFunctionValue(Quantum.FrameThreadSafe,Quantum.EntityRef,Quantum.HNSFStateContext@)
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: GetFunctionValue(FrameThreadSafe, EntityRef, ref HNSFStateContext)
  nameWithType: HNSFParam<T>.GetFunctionValue(FrameThreadSafe, EntityRef, ref HNSFStateContext)
  fullName: Quantum.HNSFParam<T>.GetFunctionValue(Quantum.FrameThreadSafe, Quantum.EntityRef, ref Quantum.HNSFStateContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetFunctionValue
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 20
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: protected abstract T GetFunctionValue(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext)
    parameters:
    - id: frame
      type: Quantum.FrameThreadSafe
    - id: entity
      type: Quantum.EntityRef
    - id: stateContext
      type: Quantum.HNSFStateContext
    return:
      type: '{T}'
    content.vb: Protected MustOverride Function GetFunctionValue(frame As FrameThreadSafe, entity As EntityRef, stateContext As HNSFStateContext) As T
  overload: Quantum.HNSFParam`1.GetFunctionValue*
  nameWithType.vb: HNSFParam(Of T).GetFunctionValue(FrameThreadSafe, EntityRef, HNSFStateContext)
  fullName.vb: Quantum.HNSFParam(Of T).GetFunctionValue(Quantum.FrameThreadSafe, Quantum.EntityRef, Quantum.HNSFStateContext)
  name.vb: GetFunctionValue(FrameThreadSafe, EntityRef, HNSFStateContext)
- uid: Quantum.HNSFParam`1.Resolve(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  commentId: M:Quantum.HNSFParam`1.Resolve(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  id: Resolve(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: Resolve(Frame, EntityRef, ref HNSFStateContext)
  nameWithType: HNSFParam<T>.Resolve(Frame, EntityRef, ref HNSFStateContext)
  fullName: Quantum.HNSFParam<T>.Resolve(Quantum.Frame, Quantum.EntityRef, ref Quantum.HNSFStateContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Resolve
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 25
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Use this to solve the AIParam value when the source of the value is unknown
  example: []
  syntax:
    content: public T Resolve(Frame frame, EntityRef entity, ref HNSFStateContext stateContext)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: entity
      type: Quantum.EntityRef
    - id: stateContext
      type: Quantum.HNSFStateContext
    return:
      type: '{T}'
    content.vb: Public Function Resolve(frame As Frame, entity As EntityRef, stateContext As HNSFStateContext) As T
  overload: Quantum.HNSFParam`1.Resolve*
  nameWithType.vb: HNSFParam(Of T).Resolve(Frame, EntityRef, HNSFStateContext)
  fullName.vb: Quantum.HNSFParam(Of T).Resolve(Quantum.Frame, Quantum.EntityRef, Quantum.HNSFStateContext)
  name.vb: Resolve(Frame, EntityRef, HNSFStateContext)
- uid: Quantum.HNSFParam`1.ResolveBlackboard(Quantum.Frame,Quantum.AIBlackboardComponent*)
  commentId: M:Quantum.HNSFParam`1.ResolveBlackboard(Quantum.Frame,Quantum.AIBlackboardComponent*)
  id: ResolveBlackboard(Quantum.Frame,Quantum.AIBlackboardComponent*)
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: ResolveBlackboard(Frame, AIBlackboardComponent*)
  nameWithType: HNSFParam<T>.ResolveBlackboard(Frame, AIBlackboardComponent*)
  fullName: Quantum.HNSFParam<T>.ResolveBlackboard(Quantum.Frame, Quantum.AIBlackboardComponent*)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ResolveBlackboard
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 48
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Use this if the it is known that the AIParam stores specifically a Blackboard value
  example: []
  syntax:
    content: public T ResolveBlackboard(Frame frame, AIBlackboardComponent* blackboard)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: blackboard
      type: Quantum.AIBlackboardComponent*
    return:
      type: '{T}'
    content.vb: Public Function ResolveBlackboard(frame As Frame, blackboard As AIBlackboardComponent*) As T
  overload: Quantum.HNSFParam`1.ResolveBlackboard*
  nameWithType.vb: HNSFParam(Of T).ResolveBlackboard(Frame, AIBlackboardComponent*)
  fullName.vb: Quantum.HNSFParam(Of T).ResolveBlackboard(Quantum.Frame, Quantum.AIBlackboardComponent*)
- uid: Quantum.HNSFParam`1.ResolveBlackboard(Quantum.FrameThreadSafe,Quantum.AIBlackboardComponent*)
  commentId: M:Quantum.HNSFParam`1.ResolveBlackboard(Quantum.FrameThreadSafe,Quantum.AIBlackboardComponent*)
  id: ResolveBlackboard(Quantum.FrameThreadSafe,Quantum.AIBlackboardComponent*)
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*)
  nameWithType: HNSFParam<T>.ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*)
  fullName: Quantum.HNSFParam<T>.ResolveBlackboard(Quantum.FrameThreadSafe, Quantum.AIBlackboardComponent*)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ResolveBlackboard
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 56
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Use this if the it is known that the AIParam stores specifically a Blackboard value
  example: []
  syntax:
    content: public T ResolveBlackboard(FrameThreadSafe frame, AIBlackboardComponent* blackboard)
    parameters:
    - id: frame
      type: Quantum.FrameThreadSafe
    - id: blackboard
      type: Quantum.AIBlackboardComponent*
    return:
      type: '{T}'
    content.vb: Public Function ResolveBlackboard(frame As FrameThreadSafe, blackboard As AIBlackboardComponent*) As T
  overload: Quantum.HNSFParam`1.ResolveBlackboard*
  nameWithType.vb: HNSFParam(Of T).ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*)
  fullName.vb: Quantum.HNSFParam(Of T).ResolveBlackboard(Quantum.FrameThreadSafe, Quantum.AIBlackboardComponent*)
- uid: Quantum.HNSFParam`1.ResolveFunction(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  commentId: M:Quantum.HNSFParam`1.ResolveFunction(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  id: ResolveFunction(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: ResolveFunction(Frame, EntityRef, ref HNSFStateContext)
  nameWithType: HNSFParam<T>.ResolveFunction(Frame, EntityRef, ref HNSFStateContext)
  fullName: Quantum.HNSFParam<T>.ResolveFunction(Quantum.Frame, Quantum.EntityRef, ref Quantum.HNSFStateContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ResolveFunction
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 66
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Use this if the it is known that the HNSFParam stores specifically a Func
  example: []
  syntax:
    content: public T ResolveFunction(Frame frame, EntityRef entity, ref HNSFStateContext stateContext)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: entity
      type: Quantum.EntityRef
    - id: stateContext
      type: Quantum.HNSFStateContext
    return:
      type: '{T}'
    content.vb: Public Function ResolveFunction(frame As Frame, entity As EntityRef, stateContext As HNSFStateContext) As T
  overload: Quantum.HNSFParam`1.ResolveFunction*
  nameWithType.vb: HNSFParam(Of T).ResolveFunction(Frame, EntityRef, HNSFStateContext)
  fullName.vb: Quantum.HNSFParam(Of T).ResolveFunction(Quantum.Frame, Quantum.EntityRef, Quantum.HNSFStateContext)
  name.vb: ResolveFunction(Frame, EntityRef, HNSFStateContext)
- uid: Quantum.HNSFParam`1.ResolveFunction(Quantum.FrameThreadSafe,Quantum.EntityRef,Quantum.HNSFStateContext@)
  commentId: M:Quantum.HNSFParam`1.ResolveFunction(Quantum.FrameThreadSafe,Quantum.EntityRef,Quantum.HNSFStateContext@)
  id: ResolveFunction(Quantum.FrameThreadSafe,Quantum.EntityRef,Quantum.HNSFStateContext@)
  parent: Quantum.HNSFParam`1
  langs:
  - csharp
  - vb
  name: ResolveFunction(FrameThreadSafe, EntityRef, ref HNSFStateContext)
  nameWithType: HNSFParam<T>.ResolveFunction(FrameThreadSafe, EntityRef, ref HNSFStateContext)
  fullName: Quantum.HNSFParam<T>.ResolveFunction(Quantum.FrameThreadSafe, Quantum.EntityRef, ref Quantum.HNSFStateContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ResolveFunction
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/Params/HNSFParam.cs
    startLine: 74
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: Use this if the it is known that the HNSFParam stores specifically a Func
  example: []
  syntax:
    content: public T ResolveFunction(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext)
    parameters:
    - id: frame
      type: Quantum.FrameThreadSafe
    - id: entity
      type: Quantum.EntityRef
    - id: stateContext
      type: Quantum.HNSFStateContext
    return:
      type: '{T}'
    content.vb: Public Function ResolveFunction(frame As FrameThreadSafe, entity As EntityRef, stateContext As HNSFStateContext) As T
  overload: Quantum.HNSFParam`1.ResolveFunction*
  nameWithType.vb: HNSFParam(Of T).ResolveFunction(FrameThreadSafe, EntityRef, HNSFStateContext)
  fullName.vb: Quantum.HNSFParam(Of T).ResolveFunction(Quantum.FrameThreadSafe, Quantum.EntityRef, Quantum.HNSFStateContext)
  name.vb: ResolveFunction(FrameThreadSafe, EntityRef, HNSFStateContext)
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quantum.HNSFParamSource
  commentId: T:Quantum.HNSFParamSource
  parent: Quantum
  href: Quantum.HNSFParamSource.html
  name: HNSFParamSource
  nameWithType: HNSFParamSource
  fullName: Quantum.HNSFParamSource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Quantum.HNSFParam`1.GetBlackboardValue*
  commentId: Overload:Quantum.HNSFParam`1.GetBlackboardValue
  href: Quantum.HNSFParam-1.html#Quantum_HNSFParam_1_GetBlackboardValue_Quantum_BlackboardValue_
  name: GetBlackboardValue
  nameWithType: HNSFParam<T>.GetBlackboardValue
  fullName: Quantum.HNSFParam<T>.GetBlackboardValue
  nameWithType.vb: HNSFParam(Of T).GetBlackboardValue
  fullName.vb: Quantum.HNSFParam(Of T).GetBlackboardValue
- uid: Quantum.BlackboardValue
  commentId: T:Quantum.BlackboardValue
  parent: Quantum
  isExternal: true
  name: BlackboardValue
  nameWithType: BlackboardValue
  fullName: Quantum.BlackboardValue
- uid: Quantum.HNSFParam`1.GetConfigValue*
  commentId: Overload:Quantum.HNSFParam`1.GetConfigValue
  href: Quantum.HNSFParam-1.html#Quantum_HNSFParam_1_GetConfigValue_Quantum_AIConfigBase_KeyValuePair_
  name: GetConfigValue
  nameWithType: HNSFParam<T>.GetConfigValue
  fullName: Quantum.HNSFParam<T>.GetConfigValue
  nameWithType.vb: HNSFParam(Of T).GetConfigValue
  fullName.vb: Quantum.HNSFParam(Of T).GetConfigValue
- uid: Quantum.AIConfigBase.KeyValuePair
  commentId: T:Quantum.AIConfigBase.KeyValuePair
  parent: Quantum
  isExternal: true
  name: AIConfigBase.KeyValuePair
  nameWithType: AIConfigBase.KeyValuePair
  fullName: Quantum.AIConfigBase.KeyValuePair
  spec.csharp:
  - uid: Quantum.AIConfigBase
    name: AIConfigBase
    isExternal: true
  - name: .
  - uid: Quantum.AIConfigBase.KeyValuePair
    name: KeyValuePair
    isExternal: true
  spec.vb:
  - uid: Quantum.AIConfigBase
    name: AIConfigBase
    isExternal: true
  - name: .
  - uid: Quantum.AIConfigBase.KeyValuePair
    name: KeyValuePair
    isExternal: true
- uid: Quantum.HNSFParam`1.GetFunctionValue*
  commentId: Overload:Quantum.HNSFParam`1.GetFunctionValue
  href: Quantum.HNSFParam-1.html#Quantum_HNSFParam_1_GetFunctionValue_Quantum_Frame_Quantum_EntityRef_Quantum_HNSFStateContext__
  name: GetFunctionValue
  nameWithType: HNSFParam<T>.GetFunctionValue
  fullName: Quantum.HNSFParam<T>.GetFunctionValue
  nameWithType.vb: HNSFParam(Of T).GetFunctionValue
  fullName.vb: Quantum.HNSFParam(Of T).GetFunctionValue
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Quantum.EntityRef
  commentId: T:Quantum.EntityRef
  parent: Quantum
  isExternal: true
  name: EntityRef
  nameWithType: EntityRef
  fullName: Quantum.EntityRef
- uid: Quantum.HNSFStateContext
  commentId: T:Quantum.HNSFStateContext
  parent: Quantum
  href: Quantum.HNSFStateContext.html
  name: HNSFStateContext
  nameWithType: HNSFStateContext
  fullName: Quantum.HNSFStateContext
- uid: Quantum.FrameThreadSafe
  commentId: T:Quantum.FrameThreadSafe
  parent: Quantum
  isExternal: true
  name: FrameThreadSafe
  nameWithType: FrameThreadSafe
  fullName: Quantum.FrameThreadSafe
- uid: Quantum.HNSFParam`1.Resolve*
  commentId: Overload:Quantum.HNSFParam`1.Resolve
  href: Quantum.HNSFParam-1.html#Quantum_HNSFParam_1_Resolve_Quantum_Frame_Quantum_EntityRef_Quantum_HNSFStateContext__
  name: Resolve
  nameWithType: HNSFParam<T>.Resolve
  fullName: Quantum.HNSFParam<T>.Resolve
  nameWithType.vb: HNSFParam(Of T).Resolve
  fullName.vb: Quantum.HNSFParam(Of T).Resolve
- uid: Quantum.HNSFParam`1.ResolveBlackboard*
  commentId: Overload:Quantum.HNSFParam`1.ResolveBlackboard
  href: Quantum.HNSFParam-1.html#Quantum_HNSFParam_1_ResolveBlackboard_Quantum_Frame_Quantum_AIBlackboardComponent__
  name: ResolveBlackboard
  nameWithType: HNSFParam<T>.ResolveBlackboard
  fullName: Quantum.HNSFParam<T>.ResolveBlackboard
  nameWithType.vb: HNSFParam(Of T).ResolveBlackboard
  fullName.vb: Quantum.HNSFParam(Of T).ResolveBlackboard
- uid: Quantum.AIBlackboardComponent*
  isExternal: true
  name: AIBlackboardComponent*
  nameWithType: AIBlackboardComponent*
  fullName: Quantum.AIBlackboardComponent*
  spec.csharp:
  - uid: Quantum.AIBlackboardComponent
    name: AIBlackboardComponent
    isExternal: true
  - name: '*'
  spec.vb:
  - uid: Quantum.AIBlackboardComponent
    name: AIBlackboardComponent
    isExternal: true
  - name: '*'
- uid: Quantum.HNSFParam`1.ResolveFunction*
  commentId: Overload:Quantum.HNSFParam`1.ResolveFunction
  href: Quantum.HNSFParam-1.html#Quantum_HNSFParam_1_ResolveFunction_Quantum_Frame_Quantum_EntityRef_Quantum_HNSFStateContext__
  name: ResolveFunction
  nameWithType: HNSFParam<T>.ResolveFunction
  fullName: Quantum.HNSFParam<T>.ResolveFunction
  nameWithType.vb: HNSFParam(Of T).ResolveFunction
  fullName.vb: Quantum.HNSFParam(Of T).ResolveFunction
