### YamlMime:ManagedReference
items:
- uid: rwby.MirrorNetworkManager
  commentId: T:rwby.MirrorNetworkManager
  id: MirrorNetworkManager
  parent: rwby
  children:
  - rwby.MirrorNetworkManager.ClientOnClientConnectEvent
  - rwby.MirrorNetworkManager.ClientOnClientDisconnectEvent
  - rwby.MirrorNetworkManager.OnClientConnect
  - rwby.MirrorNetworkManager.OnClientDisconnect
  - rwby.MirrorNetworkManager.OnServerAddPlayer(Mirror.NetworkConnectionToClient)
  - rwby.MirrorNetworkManager.OnServerConnect(Mirror.NetworkConnectionToClient)
  - rwby.MirrorNetworkManager.OnServerDisconnect(Mirror.NetworkConnectionToClient)
  - rwby.MirrorNetworkManager.ServerClientManagers
  - rwby.MirrorNetworkManager.ServerOnClientConnectEvent
  - rwby.MirrorNetworkManager.ServerOnClientDisconnectEvent
  langs:
  - csharp
  - vb
  name: MirrorNetworkManager
  nameWithType: MirrorNetworkManager
  fullName: rwby.MirrorNetworkManager
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: MirrorNetworkManager
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 6
  assemblies:
  - rwby
  namespace: rwby
  syntax:
    content: 'public class MirrorNetworkManager : NetworkManager'
    content.vb: Public Class MirrorNetworkManager Inherits NetworkManager
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Mirror.NetworkManager
- uid: rwby.MirrorNetworkManager.ServerOnClientConnectEvent
  commentId: F:rwby.MirrorNetworkManager.ServerOnClientConnectEvent
  id: ServerOnClientConnectEvent
  parent: rwby.MirrorNetworkManager
  langs:
  - csharp
  - vb
  name: ServerOnClientConnectEvent
  nameWithType: MirrorNetworkManager.ServerOnClientConnectEvent
  fullName: rwby.MirrorNetworkManager.ServerOnClientConnectEvent
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ServerOnClientConnectEvent
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 11
  assemblies:
  - rwby
  namespace: rwby
  syntax:
    content: public MirrorNetworkManager.ServerClientEvent ServerOnClientConnectEvent
    return:
      type: rwby.MirrorNetworkManager.ServerClientEvent
    content.vb: Public ServerOnClientConnectEvent As MirrorNetworkManager.ServerClientEvent
- uid: rwby.MirrorNetworkManager.ServerOnClientDisconnectEvent
  commentId: F:rwby.MirrorNetworkManager.ServerOnClientDisconnectEvent
  id: ServerOnClientDisconnectEvent
  parent: rwby.MirrorNetworkManager
  langs:
  - csharp
  - vb
  name: ServerOnClientDisconnectEvent
  nameWithType: MirrorNetworkManager.ServerOnClientDisconnectEvent
  fullName: rwby.MirrorNetworkManager.ServerOnClientDisconnectEvent
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ServerOnClientDisconnectEvent
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 12
  assemblies:
  - rwby
  namespace: rwby
  syntax:
    content: public MirrorNetworkManager.ServerClientEvent ServerOnClientDisconnectEvent
    return:
      type: rwby.MirrorNetworkManager.ServerClientEvent
    content.vb: Public ServerOnClientDisconnectEvent As MirrorNetworkManager.ServerClientEvent
- uid: rwby.MirrorNetworkManager.ClientOnClientConnectEvent
  commentId: F:rwby.MirrorNetworkManager.ClientOnClientConnectEvent
  id: ClientOnClientConnectEvent
  parent: rwby.MirrorNetworkManager
  langs:
  - csharp
  - vb
  name: ClientOnClientConnectEvent
  nameWithType: MirrorNetworkManager.ClientOnClientConnectEvent
  fullName: rwby.MirrorNetworkManager.ClientOnClientConnectEvent
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ClientOnClientConnectEvent
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 13
  assemblies:
  - rwby
  namespace: rwby
  syntax:
    content: public MirrorNetworkManager.EmptyEvent ClientOnClientConnectEvent
    return:
      type: rwby.MirrorNetworkManager.EmptyEvent
    content.vb: Public ClientOnClientConnectEvent As MirrorNetworkManager.EmptyEvent
- uid: rwby.MirrorNetworkManager.ClientOnClientDisconnectEvent
  commentId: F:rwby.MirrorNetworkManager.ClientOnClientDisconnectEvent
  id: ClientOnClientDisconnectEvent
  parent: rwby.MirrorNetworkManager
  langs:
  - csharp
  - vb
  name: ClientOnClientDisconnectEvent
  nameWithType: MirrorNetworkManager.ClientOnClientDisconnectEvent
  fullName: rwby.MirrorNetworkManager.ClientOnClientDisconnectEvent
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ClientOnClientDisconnectEvent
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 14
  assemblies:
  - rwby
  namespace: rwby
  syntax:
    content: public MirrorNetworkManager.EmptyEvent ClientOnClientDisconnectEvent
    return:
      type: rwby.MirrorNetworkManager.EmptyEvent
    content.vb: Public ClientOnClientDisconnectEvent As MirrorNetworkManager.EmptyEvent
- uid: rwby.MirrorNetworkManager.ServerClientManagers
  commentId: F:rwby.MirrorNetworkManager.ServerClientManagers
  id: ServerClientManagers
  parent: rwby.MirrorNetworkManager
  langs:
  - csharp
  - vb
  name: ServerClientManagers
  nameWithType: MirrorNetworkManager.ServerClientManagers
  fullName: rwby.MirrorNetworkManager.ServerClientManagers
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ServerClientManagers
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 19
  assemblies:
  - rwby
  namespace: rwby
  summary: List of client managers. List is only filled on the server. Indexed by connection ID.
  example: []
  syntax:
    content: public Dictionary<int, NetworkIdentity> ServerClientManagers
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Mirror.NetworkIdentity}
    content.vb: Public ServerClientManagers As Dictionary(Of Integer, NetworkIdentity)
- uid: rwby.MirrorNetworkManager.OnServerAddPlayer(Mirror.NetworkConnectionToClient)
  commentId: M:rwby.MirrorNetworkManager.OnServerAddPlayer(Mirror.NetworkConnectionToClient)
  id: OnServerAddPlayer(Mirror.NetworkConnectionToClient)
  parent: rwby.MirrorNetworkManager
  langs:
  - csharp
  - vb
  name: OnServerAddPlayer(NetworkConnectionToClient)
  nameWithType: MirrorNetworkManager.OnServerAddPlayer(NetworkConnectionToClient)
  fullName: rwby.MirrorNetworkManager.OnServerAddPlayer(Mirror.NetworkConnectionToClient)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnServerAddPlayer
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 21
  assemblies:
  - rwby
  namespace: rwby
  summary: Called on server when a client requests to add the player. Adds playerPrefab by default. Can be overwritten.
  example: []
  syntax:
    content: public override void OnServerAddPlayer(NetworkConnectionToClient conn)
    parameters:
    - id: conn
      type: Mirror.NetworkConnectionToClient
    content.vb: Public Overrides Sub OnServerAddPlayer(conn As NetworkConnectionToClient)
  overridden: Mirror.NetworkManager.OnServerAddPlayer(Mirror.NetworkConnectionToClient)
  overload: rwby.MirrorNetworkManager.OnServerAddPlayer*
- uid: rwby.MirrorNetworkManager.OnServerConnect(Mirror.NetworkConnectionToClient)
  commentId: M:rwby.MirrorNetworkManager.OnServerConnect(Mirror.NetworkConnectionToClient)
  id: OnServerConnect(Mirror.NetworkConnectionToClient)
  parent: rwby.MirrorNetworkManager
  langs:
  - csharp
  - vb
  name: OnServerConnect(NetworkConnectionToClient)
  nameWithType: MirrorNetworkManager.OnServerConnect(NetworkConnectionToClient)
  fullName: rwby.MirrorNetworkManager.OnServerConnect(Mirror.NetworkConnectionToClient)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnServerConnect
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 34
  assemblies:
  - rwby
  namespace: rwby
  summary: Called on the server when a new client connects.
  example: []
  syntax:
    content: public override void OnServerConnect(NetworkConnectionToClient conn)
    parameters:
    - id: conn
      type: Mirror.NetworkConnectionToClient
    content.vb: Public Overrides Sub OnServerConnect(conn As NetworkConnectionToClient)
  overridden: Mirror.NetworkManager.OnServerConnect(Mirror.NetworkConnectionToClient)
  overload: rwby.MirrorNetworkManager.OnServerConnect*
- uid: rwby.MirrorNetworkManager.OnServerDisconnect(Mirror.NetworkConnectionToClient)
  commentId: M:rwby.MirrorNetworkManager.OnServerDisconnect(Mirror.NetworkConnectionToClient)
  id: OnServerDisconnect(Mirror.NetworkConnectionToClient)
  parent: rwby.MirrorNetworkManager
  langs:
  - csharp
  - vb
  name: OnServerDisconnect(NetworkConnectionToClient)
  nameWithType: MirrorNetworkManager.OnServerDisconnect(NetworkConnectionToClient)
  fullName: rwby.MirrorNetworkManager.OnServerDisconnect(Mirror.NetworkConnectionToClient)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnServerDisconnect
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 40
  assemblies:
  - rwby
  namespace: rwby
  summary: Called on the server when a client disconnects.
  example: []
  syntax:
    content: public override void OnServerDisconnect(NetworkConnectionToClient conn)
    parameters:
    - id: conn
      type: Mirror.NetworkConnectionToClient
    content.vb: Public Overrides Sub OnServerDisconnect(conn As NetworkConnectionToClient)
  overridden: Mirror.NetworkManager.OnServerDisconnect(Mirror.NetworkConnectionToClient)
  overload: rwby.MirrorNetworkManager.OnServerDisconnect*
- uid: rwby.MirrorNetworkManager.OnClientConnect
  commentId: M:rwby.MirrorNetworkManager.OnClientConnect
  id: OnClientConnect
  parent: rwby.MirrorNetworkManager
  langs:
  - csharp
  - vb
  name: OnClientConnect()
  nameWithType: MirrorNetworkManager.OnClientConnect()
  fullName: rwby.MirrorNetworkManager.OnClientConnect()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnClientConnect
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 47
  assemblies:
  - rwby
  namespace: rwby
  summary: Called on the client when connected to a server. By default it sets client as ready and adds a player.
  example: []
  syntax:
    content: public override void OnClientConnect()
    content.vb: Public Overrides Sub OnClientConnect()
  overridden: Mirror.NetworkManager.OnClientConnect
  overload: rwby.MirrorNetworkManager.OnClientConnect*
- uid: rwby.MirrorNetworkManager.OnClientDisconnect
  commentId: M:rwby.MirrorNetworkManager.OnClientDisconnect
  id: OnClientDisconnect
  parent: rwby.MirrorNetworkManager
  langs:
  - csharp
  - vb
  name: OnClientDisconnect()
  nameWithType: MirrorNetworkManager.OnClientDisconnect()
  fullName: rwby.MirrorNetworkManager.OnClientDisconnect()
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnClientDisconnect
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/1.Project/Scripts/Networking/MirrorNetworkManager.cs
    startLine: 53
  assemblies:
  - rwby
  namespace: rwby
  summary: Called on clients when disconnected from a server.
  example: []
  syntax:
    content: public override void OnClientDisconnect()
    content.vb: Public Overrides Sub OnClientDisconnect()
  overridden: Mirror.NetworkManager.OnClientDisconnect
  overload: rwby.MirrorNetworkManager.OnClientDisconnect*
references:
- uid: rwby
  commentId: N:rwby
  href: rwby.html
  name: rwby
  nameWithType: rwby
  fullName: rwby
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Mirror.NetworkManager
  commentId: T:Mirror.NetworkManager
  parent: Mirror
  name: NetworkManager
  nameWithType: NetworkManager
  fullName: Mirror.NetworkManager
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Mirror
  commentId: N:Mirror
  name: Mirror
  nameWithType: Mirror
  fullName: Mirror
- uid: rwby.MirrorNetworkManager.ServerClientEvent
  commentId: T:rwby.MirrorNetworkManager.ServerClientEvent
  parent: rwby
  href: rwby.MirrorNetworkManager.html
  name: MirrorNetworkManager.ServerClientEvent
  nameWithType: MirrorNetworkManager.ServerClientEvent
  fullName: rwby.MirrorNetworkManager.ServerClientEvent
  spec.csharp:
  - uid: rwby.MirrorNetworkManager
    name: MirrorNetworkManager
    href: rwby.MirrorNetworkManager.html
  - name: .
  - uid: rwby.MirrorNetworkManager.ServerClientEvent
    name: ServerClientEvent
    href: rwby.MirrorNetworkManager.ServerClientEvent.html
  spec.vb:
  - uid: rwby.MirrorNetworkManager
    name: MirrorNetworkManager
    href: rwby.MirrorNetworkManager.html
  - name: .
  - uid: rwby.MirrorNetworkManager.ServerClientEvent
    name: ServerClientEvent
    href: rwby.MirrorNetworkManager.ServerClientEvent.html
- uid: rwby.MirrorNetworkManager.EmptyEvent
  commentId: T:rwby.MirrorNetworkManager.EmptyEvent
  parent: rwby
  href: rwby.MirrorNetworkManager.html
  name: MirrorNetworkManager.EmptyEvent
  nameWithType: MirrorNetworkManager.EmptyEvent
  fullName: rwby.MirrorNetworkManager.EmptyEvent
  spec.csharp:
  - uid: rwby.MirrorNetworkManager
    name: MirrorNetworkManager
    href: rwby.MirrorNetworkManager.html
  - name: .
  - uid: rwby.MirrorNetworkManager.EmptyEvent
    name: EmptyEvent
    href: rwby.MirrorNetworkManager.EmptyEvent.html
  spec.vb:
  - uid: rwby.MirrorNetworkManager
    name: MirrorNetworkManager
    href: rwby.MirrorNetworkManager.html
  - name: .
  - uid: rwby.MirrorNetworkManager.EmptyEvent
    name: EmptyEvent
    href: rwby.MirrorNetworkManager.EmptyEvent.html
- uid: System.Collections.Generic.Dictionary{System.Int32,Mirror.NetworkIdentity}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Mirror.NetworkIdentity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<int, NetworkIdentity>
  nameWithType: Dictionary<int, NetworkIdentity>
  fullName: System.Collections.Generic.Dictionary<int, Mirror.NetworkIdentity>
  nameWithType.vb: Dictionary(Of Integer, NetworkIdentity)
  fullName.vb: System.Collections.Generic.Dictionary(Of Integer, Mirror.NetworkIdentity)
  name.vb: Dictionary(Of Integer, NetworkIdentity)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mirror.NetworkManager.OnServerAddPlayer(Mirror.NetworkConnectionToClient)
  commentId: M:Mirror.NetworkManager.OnServerAddPlayer(Mirror.NetworkConnectionToClient)
  parent: Mirror.NetworkManager
  name: OnServerAddPlayer(NetworkConnectionToClient)
  nameWithType: NetworkManager.OnServerAddPlayer(NetworkConnectionToClient)
  fullName: Mirror.NetworkManager.OnServerAddPlayer(Mirror.NetworkConnectionToClient)
  spec.csharp:
  - uid: Mirror.NetworkManager.OnServerAddPlayer(Mirror.NetworkConnectionToClient)
    name: OnServerAddPlayer
  - name: (
  - uid: Mirror.NetworkConnectionToClient
    name: NetworkConnectionToClient
  - name: )
  spec.vb:
  - uid: Mirror.NetworkManager.OnServerAddPlayer(Mirror.NetworkConnectionToClient)
    name: OnServerAddPlayer
  - name: (
  - uid: Mirror.NetworkConnectionToClient
    name: NetworkConnectionToClient
  - name: )
- uid: rwby.MirrorNetworkManager.OnServerAddPlayer*
  commentId: Overload:rwby.MirrorNetworkManager.OnServerAddPlayer
  href: rwby.MirrorNetworkManager.html#rwby_MirrorNetworkManager_OnServerAddPlayer_Mirror_NetworkConnectionToClient_
  name: OnServerAddPlayer
  nameWithType: MirrorNetworkManager.OnServerAddPlayer
  fullName: rwby.MirrorNetworkManager.OnServerAddPlayer
- uid: Mirror.NetworkConnectionToClient
  commentId: T:Mirror.NetworkConnectionToClient
  parent: Mirror
  name: NetworkConnectionToClient
  nameWithType: NetworkConnectionToClient
  fullName: Mirror.NetworkConnectionToClient
- uid: Mirror.NetworkManager.OnServerConnect(Mirror.NetworkConnectionToClient)
  commentId: M:Mirror.NetworkManager.OnServerConnect(Mirror.NetworkConnectionToClient)
  parent: Mirror.NetworkManager
  name: OnServerConnect(NetworkConnectionToClient)
  nameWithType: NetworkManager.OnServerConnect(NetworkConnectionToClient)
  fullName: Mirror.NetworkManager.OnServerConnect(Mirror.NetworkConnectionToClient)
  spec.csharp:
  - uid: Mirror.NetworkManager.OnServerConnect(Mirror.NetworkConnectionToClient)
    name: OnServerConnect
  - name: (
  - uid: Mirror.NetworkConnectionToClient
    name: NetworkConnectionToClient
  - name: )
  spec.vb:
  - uid: Mirror.NetworkManager.OnServerConnect(Mirror.NetworkConnectionToClient)
    name: OnServerConnect
  - name: (
  - uid: Mirror.NetworkConnectionToClient
    name: NetworkConnectionToClient
  - name: )
- uid: rwby.MirrorNetworkManager.OnServerConnect*
  commentId: Overload:rwby.MirrorNetworkManager.OnServerConnect
  href: rwby.MirrorNetworkManager.html#rwby_MirrorNetworkManager_OnServerConnect_Mirror_NetworkConnectionToClient_
  name: OnServerConnect
  nameWithType: MirrorNetworkManager.OnServerConnect
  fullName: rwby.MirrorNetworkManager.OnServerConnect
- uid: Mirror.NetworkManager.OnServerDisconnect(Mirror.NetworkConnectionToClient)
  commentId: M:Mirror.NetworkManager.OnServerDisconnect(Mirror.NetworkConnectionToClient)
  parent: Mirror.NetworkManager
  name: OnServerDisconnect(NetworkConnectionToClient)
  nameWithType: NetworkManager.OnServerDisconnect(NetworkConnectionToClient)
  fullName: Mirror.NetworkManager.OnServerDisconnect(Mirror.NetworkConnectionToClient)
  spec.csharp:
  - uid: Mirror.NetworkManager.OnServerDisconnect(Mirror.NetworkConnectionToClient)
    name: OnServerDisconnect
  - name: (
  - uid: Mirror.NetworkConnectionToClient
    name: NetworkConnectionToClient
  - name: )
  spec.vb:
  - uid: Mirror.NetworkManager.OnServerDisconnect(Mirror.NetworkConnectionToClient)
    name: OnServerDisconnect
  - name: (
  - uid: Mirror.NetworkConnectionToClient
    name: NetworkConnectionToClient
  - name: )
- uid: rwby.MirrorNetworkManager.OnServerDisconnect*
  commentId: Overload:rwby.MirrorNetworkManager.OnServerDisconnect
  href: rwby.MirrorNetworkManager.html#rwby_MirrorNetworkManager_OnServerDisconnect_Mirror_NetworkConnectionToClient_
  name: OnServerDisconnect
  nameWithType: MirrorNetworkManager.OnServerDisconnect
  fullName: rwby.MirrorNetworkManager.OnServerDisconnect
- uid: Mirror.NetworkManager.OnClientConnect
  commentId: M:Mirror.NetworkManager.OnClientConnect
  parent: Mirror.NetworkManager
  name: OnClientConnect()
  nameWithType: NetworkManager.OnClientConnect()
  fullName: Mirror.NetworkManager.OnClientConnect()
  spec.csharp:
  - uid: Mirror.NetworkManager.OnClientConnect
    name: OnClientConnect
  - name: (
  - name: )
  spec.vb:
  - uid: Mirror.NetworkManager.OnClientConnect
    name: OnClientConnect
  - name: (
  - name: )
- uid: rwby.MirrorNetworkManager.OnClientConnect*
  commentId: Overload:rwby.MirrorNetworkManager.OnClientConnect
  href: rwby.MirrorNetworkManager.html#rwby_MirrorNetworkManager_OnClientConnect
  name: OnClientConnect
  nameWithType: MirrorNetworkManager.OnClientConnect
  fullName: rwby.MirrorNetworkManager.OnClientConnect
- uid: Mirror.NetworkManager.OnClientDisconnect
  commentId: M:Mirror.NetworkManager.OnClientDisconnect
  parent: Mirror.NetworkManager
  name: OnClientDisconnect()
  nameWithType: NetworkManager.OnClientDisconnect()
  fullName: Mirror.NetworkManager.OnClientDisconnect()
  spec.csharp:
  - uid: Mirror.NetworkManager.OnClientDisconnect
    name: OnClientDisconnect
  - name: (
  - name: )
  spec.vb:
  - uid: Mirror.NetworkManager.OnClientDisconnect
    name: OnClientDisconnect
  - name: (
  - name: )
- uid: rwby.MirrorNetworkManager.OnClientDisconnect*
  commentId: Overload:rwby.MirrorNetworkManager.OnClientDisconnect
  href: rwby.MirrorNetworkManager.html#rwby_MirrorNetworkManager_OnClientDisconnect
  name: OnClientDisconnect
  nameWithType: MirrorNetworkManager.OnClientDisconnect
  fullName: rwby.MirrorNetworkManager.OnClientDisconnect
