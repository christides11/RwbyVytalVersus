### YamlMime:ManagedReference
items:
- uid: Quantum.HNSFSpecialSet
  commentId: T:Quantum.HNSFSpecialSet
  id: HNSFSpecialSet
  parent: Quantum
  children:
  - Quantum.HNSFSpecialSet.GetBestState(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  - Quantum.HNSFSpecialSet.IsMovesetValidForSpecialUsage(Quantum.AssetRef{Quantum.HNSFState})
  - Quantum.HNSFSpecialSet.states
  - Quantum.HNSFSpecialSet.validMovesetsForUsage
  langs:
  - csharp
  - vb
  name: HNSFSpecialSet
  nameWithType: HNSFSpecialSet
  fullName: Quantum.HNSFSpecialSet
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Combat/HNSFSpecialSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: HNSFSpecialSet
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Combat/HNSFSpecialSet.cs
    startLine: 4
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: 'public class HNSFSpecialSet : AssetObject, ILogSource'
    content.vb: Public Class HNSFSpecialSet Inherits AssetObject Implements ILogSource
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  - Quantum.AssetObject
  implements:
  - Quantum.ILogSource
  inheritedMembers:
  - Quantum.AssetObject.Identifier
  - Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  - Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  - Quantum.AssetObject.Create``1
  - Quantum.AssetObject.Create(System.Type)
  - Quantum.AssetObject.Create``1(System.Action{{T}})
  - Quantum.AssetObject.Reset
  - Quantum.AssetObject.Guid
  - Quantum.AssetObject.Path
  - Quantum.AssetObject.Settings
- uid: Quantum.HNSFSpecialSet.validMovesetsForUsage
  commentId: F:Quantum.HNSFSpecialSet.validMovesetsForUsage
  id: validMovesetsForUsage
  parent: Quantum.HNSFSpecialSet
  langs:
  - csharp
  - vb
  name: validMovesetsForUsage
  nameWithType: HNSFSpecialSet.validMovesetsForUsage
  fullName: Quantum.HNSFSpecialSet.validMovesetsForUsage
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Combat/HNSFSpecialSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: validMovesetsForUsage
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Combat/HNSFSpecialSet.cs
    startLine: 16
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFState>[] validMovesetsForUsage
    return:
      type: Quantum.AssetRef{Quantum.HNSFState}[]
    content.vb: Public validMovesetsForUsage As AssetRef(Of HNSFState)()
- uid: Quantum.HNSFSpecialSet.states
  commentId: F:Quantum.HNSFSpecialSet.states
  id: states
  parent: Quantum.HNSFSpecialSet
  langs:
  - csharp
  - vb
  name: states
  nameWithType: HNSFSpecialSet.states
  fullName: Quantum.HNSFSpecialSet.states
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Combat/HNSFSpecialSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: states
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Combat/HNSFSpecialSet.cs
    startLine: 17
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public HNSFSpecialSet.StateWithCondition[] states
    return:
      type: Quantum.HNSFSpecialSet.StateWithCondition[]
    content.vb: Public states As HNSFSpecialSet.StateWithCondition()
- uid: Quantum.HNSFSpecialSet.IsMovesetValidForSpecialUsage(Quantum.AssetRef{Quantum.HNSFState})
  commentId: M:Quantum.HNSFSpecialSet.IsMovesetValidForSpecialUsage(Quantum.AssetRef{Quantum.HNSFState})
  id: IsMovesetValidForSpecialUsage(Quantum.AssetRef{Quantum.HNSFState})
  parent: Quantum.HNSFSpecialSet
  langs:
  - csharp
  - vb
  name: IsMovesetValidForSpecialUsage(AssetRef<HNSFState>)
  nameWithType: HNSFSpecialSet.IsMovesetValidForSpecialUsage(AssetRef<HNSFState>)
  fullName: Quantum.HNSFSpecialSet.IsMovesetValidForSpecialUsage(Quantum.AssetRef<Quantum.HNSFState>)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Combat/HNSFSpecialSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: IsMovesetValidForSpecialUsage
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Combat/HNSFSpecialSet.cs
    startLine: 19
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool IsMovesetValidForSpecialUsage(AssetRef<HNSFState> moveset)
    parameters:
    - id: moveset
      type: Quantum.AssetRef{Quantum.HNSFState}
    return:
      type: System.Boolean
    content.vb: Public Function IsMovesetValidForSpecialUsage(moveset As AssetRef(Of HNSFState)) As Boolean
  overload: Quantum.HNSFSpecialSet.IsMovesetValidForSpecialUsage*
  nameWithType.vb: HNSFSpecialSet.IsMovesetValidForSpecialUsage(AssetRef(Of HNSFState))
  fullName.vb: Quantum.HNSFSpecialSet.IsMovesetValidForSpecialUsage(Quantum.AssetRef(Of Quantum.HNSFState))
  name.vb: IsMovesetValidForSpecialUsage(AssetRef(Of HNSFState))
- uid: Quantum.HNSFSpecialSet.GetBestState(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  commentId: M:Quantum.HNSFSpecialSet.GetBestState(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  id: GetBestState(Quantum.Frame,Quantum.EntityRef,Quantum.HNSFStateContext@)
  parent: Quantum.HNSFSpecialSet
  langs:
  - csharp
  - vb
  name: GetBestState(Frame, EntityRef, ref HNSFStateContext)
  nameWithType: HNSFSpecialSet.GetBestState(Frame, EntityRef, ref HNSFStateContext)
  fullName: Quantum.HNSFSpecialSet.GetBestState(Quantum.Frame, Quantum.EntityRef, ref Quantum.HNSFStateContext)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Combat/HNSFSpecialSet.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: GetBestState
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/mfo/Combat/HNSFSpecialSet.cs
    startLine: 28
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool GetBestState(Frame frame, EntityRef entity, ref HNSFStateContext stateContext)
    parameters:
    - id: frame
      type: Quantum.Frame
    - id: entity
      type: Quantum.EntityRef
    - id: stateContext
      type: Quantum.HNSFStateContext
    return:
      type: System.Boolean
    content.vb: Public Function GetBestState(frame As Frame, entity As EntityRef, stateContext As HNSFStateContext) As Boolean
  overload: Quantum.HNSFSpecialSet.GetBestState*
  nameWithType.vb: HNSFSpecialSet.GetBestState(Frame, EntityRef, HNSFStateContext)
  fullName.vb: Quantum.HNSFSpecialSet.GetBestState(Quantum.Frame, Quantum.EntityRef, Quantum.HNSFStateContext)
  name.vb: GetBestState(Frame, EntityRef, HNSFStateContext)
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: Quantum.AssetObject
  commentId: T:Quantum.AssetObject
  parent: Quantum
  isExternal: true
  name: AssetObject
  nameWithType: AssetObject
  fullName: Quantum.AssetObject
- uid: Quantum.ILogSource
  commentId: T:Quantum.ILogSource
  parent: Quantum
  isExternal: true
  name: ILogSource
  nameWithType: ILogSource
  fullName: Quantum.ILogSource
- uid: Quantum.AssetObject.Identifier
  commentId: F:Quantum.AssetObject.Identifier
  parent: Quantum.AssetObject
  isExternal: true
  name: Identifier
  nameWithType: AssetObject.Identifier
  fullName: Quantum.AssetObject.Identifier
- uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  commentId: M:Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  parent: Quantum.AssetObject
  isExternal: true
  name: Loaded(IResourceManager, Allocator)
  nameWithType: AssetObject.Loaded(IResourceManager, Native.Allocator)
  fullName: Quantum.AssetObject.Loaded(Quantum.IResourceManager, Photon.Deterministic.Native.Allocator)
  spec.csharp:
  - uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Loaded
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Loaded
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
- uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  commentId: M:Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  parent: Quantum.AssetObject
  isExternal: true
  name: Disposed(IResourceManager, Allocator)
  nameWithType: AssetObject.Disposed(IResourceManager, Native.Allocator)
  fullName: Quantum.AssetObject.Disposed(Quantum.IResourceManager, Photon.Deterministic.Native.Allocator)
  spec.csharp:
  - uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Disposed
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Disposed
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
- uid: Quantum.AssetObject.Create``1
  commentId: M:Quantum.AssetObject.Create``1
  parent: Quantum.AssetObject
  isExternal: true
  name: Create<T>()
  nameWithType: AssetObject.Create<T>()
  fullName: Quantum.AssetObject.Create<T>()
  nameWithType.vb: AssetObject.Create(Of T)()
  fullName.vb: Quantum.AssetObject.Create(Of T)()
  name.vb: Create(Of T)()
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Quantum.AssetObject.Create(System.Type)
  commentId: M:Quantum.AssetObject.Create(System.Type)
  parent: Quantum.AssetObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Create(Type)
  nameWithType: AssetObject.Create(Type)
  fullName: Quantum.AssetObject.Create(System.Type)
  spec.csharp:
  - uid: Quantum.AssetObject.Create(System.Type)
    name: Create
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create(System.Type)
    name: Create
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Quantum.AssetObject.Create``1(System.Action{{T}})
  commentId: M:Quantum.AssetObject.Create``1(System.Action{``0})
  parent: Quantum.AssetObject
  definition: Quantum.AssetObject.Create``1(System.Action{``0})
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Create<T>(Action<T>)
  nameWithType: AssetObject.Create<T>(Action<T>)
  fullName: Quantum.AssetObject.Create<T>(System.Action<T>)
  nameWithType.vb: AssetObject.Create(Of T)(Action(Of T))
  fullName.vb: Quantum.AssetObject.Create(Of T)(System.Action(Of T))
  name.vb: Create(Of T)(Action(Of T))
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.AssetObject.Reset
  commentId: M:Quantum.AssetObject.Reset
  parent: Quantum.AssetObject
  isExternal: true
  name: Reset()
  nameWithType: AssetObject.Reset()
  fullName: Quantum.AssetObject.Reset()
  spec.csharp:
  - uid: Quantum.AssetObject.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.AssetObject.Guid
  commentId: P:Quantum.AssetObject.Guid
  parent: Quantum.AssetObject
  isExternal: true
  name: Guid
  nameWithType: AssetObject.Guid
  fullName: Quantum.AssetObject.Guid
- uid: Quantum.AssetObject.Path
  commentId: P:Quantum.AssetObject.Path
  parent: Quantum.AssetObject
  isExternal: true
  name: Path
  nameWithType: AssetObject.Path
  fullName: Quantum.AssetObject.Path
- uid: Quantum.AssetObject.Settings
  commentId: P:Quantum.AssetObject.Settings
  parent: Quantum.AssetObject
  isExternal: true
  name: Settings
  nameWithType: AssetObject.Settings
  fullName: Quantum.AssetObject.Settings
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Quantum.AssetObject.Create``1(System.Action{``0})
  commentId: M:Quantum.AssetObject.Create``1(System.Action{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Create<T>(Action<T>)
  nameWithType: AssetObject.Create<T>(Action<T>)
  fullName: Quantum.AssetObject.Create<T>(System.Action<T>)
  nameWithType.vb: AssetObject.Create(Of T)(Action(Of T))
  fullName.vb: Quantum.AssetObject.Create(Of T)(System.Action(Of T))
  name.vb: Create(Of T)(Action(Of T))
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.AssetRef{Quantum.HNSFState}[]
  isExternal: true
  href: Quantum.HNSFState.html
  name: AssetRef<HNSFState>[]
  nameWithType: AssetRef<HNSFState>[]
  fullName: Quantum.AssetRef<Quantum.HNSFState>[]
  nameWithType.vb: AssetRef(Of HNSFState)()
  fullName.vb: Quantum.AssetRef(Of Quantum.HNSFState)()
  name.vb: AssetRef(Of HNSFState)()
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.HNSFState
    name: HNSFState
    href: Quantum.HNSFState.html
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.HNSFState
    name: HNSFState
    href: Quantum.HNSFState.html
  - name: )
  - name: (
  - name: )
- uid: Quantum.HNSFSpecialSet.StateWithCondition[]
  isExternal: true
  href: Quantum.HNSFSpecialSet.StateWithCondition.html
  name: StateWithCondition[]
  nameWithType: HNSFSpecialSet.StateWithCondition[]
  fullName: Quantum.HNSFSpecialSet.StateWithCondition[]
  nameWithType.vb: HNSFSpecialSet.StateWithCondition()
  fullName.vb: Quantum.HNSFSpecialSet.StateWithCondition()
  name.vb: StateWithCondition()
  spec.csharp:
  - uid: Quantum.HNSFSpecialSet.StateWithCondition
    name: StateWithCondition
    href: Quantum.HNSFSpecialSet.StateWithCondition.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Quantum.HNSFSpecialSet.StateWithCondition
    name: StateWithCondition
    href: Quantum.HNSFSpecialSet.StateWithCondition.html
  - name: (
  - name: )
- uid: Quantum.HNSFSpecialSet.IsMovesetValidForSpecialUsage*
  commentId: Overload:Quantum.HNSFSpecialSet.IsMovesetValidForSpecialUsage
  href: Quantum.HNSFSpecialSet.html#Quantum_HNSFSpecialSet_IsMovesetValidForSpecialUsage_Quantum_AssetRef_Quantum_HNSFState__
  name: IsMovesetValidForSpecialUsage
  nameWithType: HNSFSpecialSet.IsMovesetValidForSpecialUsage
  fullName: Quantum.HNSFSpecialSet.IsMovesetValidForSpecialUsage
- uid: Quantum.AssetRef{Quantum.HNSFState}
  commentId: T:Quantum.AssetRef{Quantum.HNSFState}
  parent: Quantum
  definition: Quantum.AssetRef`1
  href: Quantum.HNSFState.html
  name: AssetRef<HNSFState>
  nameWithType: AssetRef<HNSFState>
  fullName: Quantum.AssetRef<Quantum.HNSFState>
  nameWithType.vb: AssetRef(Of HNSFState)
  fullName.vb: Quantum.AssetRef(Of Quantum.HNSFState)
  name.vb: AssetRef(Of HNSFState)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.HNSFState
    name: HNSFState
    href: Quantum.HNSFState.html
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.HNSFState
    name: HNSFState
    href: Quantum.HNSFState.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Quantum.AssetRef`1
  commentId: T:Quantum.AssetRef`1
  isExternal: true
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.HNSFSpecialSet.GetBestState*
  commentId: Overload:Quantum.HNSFSpecialSet.GetBestState
  href: Quantum.HNSFSpecialSet.html#Quantum_HNSFSpecialSet_GetBestState_Quantum_Frame_Quantum_EntityRef_Quantum_HNSFStateContext__
  name: GetBestState
  nameWithType: HNSFSpecialSet.GetBestState
  fullName: Quantum.HNSFSpecialSet.GetBestState
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Quantum.EntityRef
  commentId: T:Quantum.EntityRef
  parent: Quantum
  isExternal: true
  name: EntityRef
  nameWithType: EntityRef
  fullName: Quantum.EntityRef
- uid: Quantum.HNSFStateContext
  commentId: T:Quantum.HNSFStateContext
  parent: Quantum
  href: Quantum.HNSFStateContext.html
  name: HNSFStateContext
  nameWithType: HNSFStateContext
  fullName: Quantum.HNSFStateContext
