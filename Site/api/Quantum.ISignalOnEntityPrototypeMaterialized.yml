### YamlMime:ManagedReference
items:
- uid: Quantum.ISignalOnEntityPrototypeMaterialized
  commentId: T:Quantum.ISignalOnEntityPrototypeMaterialized
  id: ISignalOnEntityPrototypeMaterialized
  parent: Quantum
  children:
  - Quantum.ISignalOnEntityPrototypeMaterialized.OnEntityPrototypeMaterialized(Quantum.Frame,Quantum.EntityRef,Quantum.EntityPrototypeRef)
  langs:
  - csharp
  - vb
  name: ISignalOnEntityPrototypeMaterialized
  nameWithType: ISignalOnEntityPrototypeMaterialized
  fullName: Quantum.ISignalOnEntityPrototypeMaterialized
  type: Interface
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: ISignalOnEntityPrototypeMaterialized
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1662
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    This signal is called after an entity prototype has been materialized.

    <p>During Load Map: the signal is invoked for all Entity and Entity Prototype pairs after all scene prototypes have been materialized.</p><p>Created with Frame.Create(): the signal is invoked immediately after the prototype has been materialized.</p>    /// <param name="f">The frame reference.</param>
  example: []
  syntax:
    content: 'public interface ISignalOnEntityPrototypeMaterialized : ISignal'
    content.vb: Public Interface ISignalOnEntityPrototypeMaterialized Inherits ISignal
  inheritedMembers:
  - Quantum.ISignal.RuntimeIndex
- uid: Quantum.ISignalOnEntityPrototypeMaterialized.OnEntityPrototypeMaterialized(Quantum.Frame,Quantum.EntityRef,Quantum.EntityPrototypeRef)
  commentId: M:Quantum.ISignalOnEntityPrototypeMaterialized.OnEntityPrototypeMaterialized(Quantum.Frame,Quantum.EntityRef,Quantum.EntityPrototypeRef)
  id: OnEntityPrototypeMaterialized(Quantum.Frame,Quantum.EntityRef,Quantum.EntityPrototypeRef)
  parent: Quantum.ISignalOnEntityPrototypeMaterialized
  langs:
  - csharp
  - vb
  name: OnEntityPrototypeMaterialized(Frame, EntityRef, EntityPrototypeRef)
  nameWithType: ISignalOnEntityPrototypeMaterialized.OnEntityPrototypeMaterialized(Frame, EntityRef, EntityPrototypeRef)
  fullName: Quantum.ISignalOnEntityPrototypeMaterialized.OnEntityPrototypeMaterialized(Quantum.Frame, Quantum.EntityRef, Quantum.EntityPrototypeRef)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: OnEntityPrototypeMaterialized
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/Photon/Quantum/Simulation/QuantumSimulationCore.cs
    startLine: 1670
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  summary: >-
    This signal is called after an entity prototype has been materialized.

    <p>During Load Map: the signal is invoked for all Entity and Entity Prototype pairs after all scene prototypes have been materialized.</p><p>Created with Frame.Create(): the signal is invoked immediately after the prototype has been materialized.</p>    /// <param name="f">The frame reference.</param>
  example: []
  syntax:
    content: void OnEntityPrototypeMaterialized(Frame f, EntityRef entity, EntityPrototypeRef prototypeRef)
    parameters:
    - id: f
      type: Quantum.Frame
    - id: entity
      type: Quantum.EntityRef
      description: The entity that was created.
    - id: prototypeRef
      type: Quantum.EntityPrototypeRef
      description: The entity prototype that was materialized.
    content.vb: Sub OnEntityPrototypeMaterialized(f As Frame, entity As EntityRef, prototypeRef As EntityPrototypeRef)
  overload: Quantum.ISignalOnEntityPrototypeMaterialized.OnEntityPrototypeMaterialized*
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: Quantum.ISignal.RuntimeIndex
  commentId: P:Quantum.ISignal.RuntimeIndex
  parent: Quantum.ISignal
  isExternal: true
  name: RuntimeIndex
  nameWithType: ISignal.RuntimeIndex
  fullName: Quantum.ISignal.RuntimeIndex
- uid: Quantum.ISignal
  commentId: T:Quantum.ISignal
  parent: Quantum
  isExternal: true
  name: ISignal
  nameWithType: ISignal
  fullName: Quantum.ISignal
- uid: Quantum.ISignalOnEntityPrototypeMaterialized.OnEntityPrototypeMaterialized*
  commentId: Overload:Quantum.ISignalOnEntityPrototypeMaterialized.OnEntityPrototypeMaterialized
  href: Quantum.ISignalOnEntityPrototypeMaterialized.html#Quantum_ISignalOnEntityPrototypeMaterialized_OnEntityPrototypeMaterialized_Quantum_Frame_Quantum_EntityRef_Quantum_EntityPrototypeRef_
  name: OnEntityPrototypeMaterialized
  nameWithType: ISignalOnEntityPrototypeMaterialized.OnEntityPrototypeMaterialized
  fullName: Quantum.ISignalOnEntityPrototypeMaterialized.OnEntityPrototypeMaterialized
- uid: Quantum.Frame
  commentId: T:Quantum.Frame
  parent: Quantum
  href: Quantum.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Quantum.Frame
- uid: Quantum.EntityRef
  commentId: T:Quantum.EntityRef
  parent: Quantum
  isExternal: true
  name: EntityRef
  nameWithType: EntityRef
  fullName: Quantum.EntityRef
- uid: Quantum.EntityPrototypeRef
  commentId: T:Quantum.EntityPrototypeRef
  parent: Quantum
  isExternal: true
  name: EntityPrototypeRef
  nameWithType: EntityPrototypeRef
  fullName: Quantum.EntityPrototypeRef
