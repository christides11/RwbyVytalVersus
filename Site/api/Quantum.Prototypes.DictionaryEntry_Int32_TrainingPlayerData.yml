### YamlMime:ManagedReference
items:
- uid: Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData
  commentId: T:Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData
  id: DictionaryEntry_Int32_TrainingPlayerData
  parent: Quantum.Prototypes
  children:
  - Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData.Key
  - Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData.Value
  langs:
  - csharp
  - vb
  name: DictionaryEntry_Int32_TrainingPlayerData
  nameWithType: DictionaryEntry_Int32_TrainingPlayerData
  fullName: Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: DictionaryEntry_Int32_TrainingPlayerData
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 93
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: >-
      [Serializable]

      [Prototype(typeof(KeyValuePair<int, TrainingPlayerData>))]

      public class DictionaryEntry_Int32_TrainingPlayerData : DictionaryEntry, IPrototype
    content.vb: >-
      <Serializable>

      <Prototype(GetType(KeyValuePair(Of Integer, TrainingPlayerData)))>

      Public Class DictionaryEntry_Int32_TrainingPlayerData Inherits DictionaryEntry Implements IPrototype
  inheritance:
  - System.Object
  - Quantum.Prototypes.DictionaryEntry
  implements:
  - Quantum.IPrototype
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData.Key
  commentId: F:Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData.Key
  id: Key
  parent: Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: DictionaryEntry_Int32_TrainingPlayerData.Key
  fullName: Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData.Key
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Key
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 96
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public int Key
    return:
      type: System.Int32
    content.vb: Public Key As Integer
- uid: Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData.Value
  commentId: F:Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData.Value
  id: Value
  parent: Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: DictionaryEntry_Int32_TrainingPlayerData.Value
  fullName: Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData.Value
  type: Field
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Value
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/Generated/Quantum.CodeGen.Prototypes.cs
    startLine: 97
  assemblies:
  - Quantum.Simulation
  namespace: Quantum.Prototypes
  syntax:
    content: public TrainingPlayerDataPrototype Value
    return:
      type: Quantum.Prototypes.TrainingPlayerDataPrototype
    content.vb: Public Value As TrainingPlayerDataPrototype
references:
- uid: Quantum.Prototypes
  commentId: N:Quantum.Prototypes
  href: Quantum.html
  name: Quantum.Prototypes
  nameWithType: Quantum.Prototypes
  fullName: Quantum.Prototypes
  spec.csharp:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Prototypes
    name: Prototypes
    href: Quantum.Prototypes.html
  spec.vb:
  - uid: Quantum
    name: Quantum
    href: Quantum.html
  - name: .
  - uid: Quantum.Prototypes
    name: Prototypes
    href: Quantum.Prototypes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Quantum.Prototypes.DictionaryEntry
  commentId: T:Quantum.Prototypes.DictionaryEntry
  parent: Quantum.Prototypes
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: Quantum.Prototypes.DictionaryEntry
- uid: Quantum.IPrototype
  commentId: T:Quantum.IPrototype
  parent: Quantum
  isExternal: true
  name: IPrototype
  nameWithType: IPrototype
  fullName: Quantum.IPrototype
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Quantum.Prototypes.TrainingPlayerDataPrototype
  commentId: T:Quantum.Prototypes.TrainingPlayerDataPrototype
  parent: Quantum.Prototypes
  href: Quantum.Prototypes.TrainingPlayerDataPrototype.html
  name: TrainingPlayerDataPrototype
  nameWithType: TrainingPlayerDataPrototype
  fullName: Quantum.Prototypes.TrainingPlayerDataPrototype
