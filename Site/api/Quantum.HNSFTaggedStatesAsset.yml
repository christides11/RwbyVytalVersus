### YamlMime:ManagedReference
items:
- uid: Quantum.HNSFTaggedStatesAsset
  commentId: T:Quantum.HNSFTaggedStatesAsset
  id: HNSFTaggedStatesAsset
  parent: Quantum
  children:
  - Quantum.HNSFTaggedStatesAsset.Get(Quantum.AssetRef{Quantum.Tag})
  - Quantum.HNSFTaggedStatesAsset.TryGetValue(Quantum.AssetRef{Quantum.Tag},Quantum.AssetRef{Quantum.HNSFState}@)
  langs:
  - csharp
  - vb
  name: HNSFTaggedStatesAsset
  nameWithType: HNSFTaggedStatesAsset
  fullName: Quantum.HNSFTaggedStatesAsset
  type: Class
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFTaggedStatesAsset.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: HNSFTaggedStatesAsset
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFTaggedStatesAsset.cs
    startLine: 6
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: >-
      [Serializable]

      public class HNSFTaggedStatesAsset : AssetObject
    content.vb: >-
      <Serializable>

      Public Class HNSFTaggedStatesAsset Inherits AssetObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  - Quantum.AssetObject
  inheritedMembers:
  - Quantum.AssetObject.Identifier
  - Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  - Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  - Quantum.AssetObject.Create``1
  - Quantum.AssetObject.Create(System.Type)
  - Quantum.AssetObject.Create``1(System.Action{{T}})
  - Quantum.AssetObject.Reset
  - Quantum.AssetObject.Guid
  - Quantum.AssetObject.Path
  - Quantum.AssetObject.Settings
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Quantum.HNSFTaggedStatesAsset.Get(Quantum.AssetRef{Quantum.Tag})
  commentId: M:Quantum.HNSFTaggedStatesAsset.Get(Quantum.AssetRef{Quantum.Tag})
  id: Get(Quantum.AssetRef{Quantum.Tag})
  parent: Quantum.HNSFTaggedStatesAsset
  langs:
  - csharp
  - vb
  name: Get(AssetRef<Tag>)
  nameWithType: HNSFTaggedStatesAsset.Get(AssetRef<Tag>)
  fullName: Quantum.HNSFTaggedStatesAsset.Get(Quantum.AssetRef<Quantum.Tag>)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFTaggedStatesAsset.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: Get
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFTaggedStatesAsset.cs
    startLine: 20
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public AssetRef<HNSFState> Get(AssetRef<Tag> tagRef)
    parameters:
    - id: tagRef
      type: Quantum.AssetRef{Quantum.Tag}
    return:
      type: Quantum.AssetRef{Quantum.HNSFState}
    content.vb: Public Function [Get](tagRef As AssetRef(Of Tag)) As AssetRef(Of HNSFState)
  overload: Quantum.HNSFTaggedStatesAsset.Get*
  nameWithType.vb: HNSFTaggedStatesAsset.Get(AssetRef(Of Tag))
  fullName.vb: Quantum.HNSFTaggedStatesAsset.Get(Quantum.AssetRef(Of Quantum.Tag))
  name.vb: Get(AssetRef(Of Tag))
- uid: Quantum.HNSFTaggedStatesAsset.TryGetValue(Quantum.AssetRef{Quantum.Tag},Quantum.AssetRef{Quantum.HNSFState}@)
  commentId: M:Quantum.HNSFTaggedStatesAsset.TryGetValue(Quantum.AssetRef{Quantum.Tag},Quantum.AssetRef{Quantum.HNSFState}@)
  id: TryGetValue(Quantum.AssetRef{Quantum.Tag},Quantum.AssetRef{Quantum.HNSFState}@)
  parent: Quantum.HNSFTaggedStatesAsset
  langs:
  - csharp
  - vb
  name: TryGetValue(AssetRef<Tag>, out AssetRef<HNSFState>)
  nameWithType: HNSFTaggedStatesAsset.TryGetValue(AssetRef<Tag>, out AssetRef<HNSFState>)
  fullName: Quantum.HNSFTaggedStatesAsset.TryGetValue(Quantum.AssetRef<Quantum.Tag>, out Quantum.AssetRef<Quantum.HNSFState>)
  type: Method
  source:
    remote:
      path: rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFTaggedStatesAsset.cs
      branch: dev
      repo: https://ChrisTides11@dev.azure.com/ChrisTides11/rwbyq/_git/rwbyq
    id: TryGetValue
    path: ../../../Unity/rwbyq/rwbyq_unity/Assets/QuantumUser/Simulation/HnsFramework/State/HNSFTaggedStatesAsset.cs
    startLine: 26
  assemblies:
  - Quantum.Simulation
  namespace: Quantum
  syntax:
    content: public bool TryGetValue(AssetRef<Tag> tagRef, out AssetRef<HNSFState> stateRef)
    parameters:
    - id: tagRef
      type: Quantum.AssetRef{Quantum.Tag}
    - id: stateRef
      type: Quantum.AssetRef{Quantum.HNSFState}
    return:
      type: System.Boolean
    content.vb: Public Function TryGetValue(tagRef As AssetRef(Of Tag), stateRef As AssetRef(Of HNSFState)) As Boolean
  overload: Quantum.HNSFTaggedStatesAsset.TryGetValue*
  nameWithType.vb: HNSFTaggedStatesAsset.TryGetValue(AssetRef(Of Tag), AssetRef(Of HNSFState))
  fullName.vb: Quantum.HNSFTaggedStatesAsset.TryGetValue(Quantum.AssetRef(Of Quantum.Tag), Quantum.AssetRef(Of Quantum.HNSFState))
  name.vb: TryGetValue(AssetRef(Of Tag), AssetRef(Of HNSFState))
references:
- uid: Quantum
  commentId: N:Quantum
  href: Quantum.html
  name: Quantum
  nameWithType: Quantum
  fullName: Quantum
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: Quantum.AssetObject
  commentId: T:Quantum.AssetObject
  parent: Quantum
  isExternal: true
  name: AssetObject
  nameWithType: AssetObject
  fullName: Quantum.AssetObject
- uid: Quantum.AssetObject.Identifier
  commentId: F:Quantum.AssetObject.Identifier
  parent: Quantum.AssetObject
  isExternal: true
  name: Identifier
  nameWithType: AssetObject.Identifier
  fullName: Quantum.AssetObject.Identifier
- uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  commentId: M:Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  parent: Quantum.AssetObject
  isExternal: true
  name: Loaded(IResourceManager, Allocator)
  nameWithType: AssetObject.Loaded(IResourceManager, Native.Allocator)
  fullName: Quantum.AssetObject.Loaded(Quantum.IResourceManager, Photon.Deterministic.Native.Allocator)
  spec.csharp:
  - uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Loaded
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Loaded(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Loaded
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
- uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  commentId: M:Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
  parent: Quantum.AssetObject
  isExternal: true
  name: Disposed(IResourceManager, Allocator)
  nameWithType: AssetObject.Disposed(IResourceManager, Native.Allocator)
  fullName: Quantum.AssetObject.Disposed(Quantum.IResourceManager, Photon.Deterministic.Native.Allocator)
  spec.csharp:
  - uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Disposed
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Disposed(Quantum.IResourceManager,Photon.Deterministic.Native.Allocator)
    name: Disposed
    isExternal: true
  - name: (
  - uid: Quantum.IResourceManager
    name: IResourceManager
    isExternal: true
  - name: ','
  - name: " "
  - uid: Photon.Deterministic.Native.Allocator
    name: Allocator
    isExternal: true
  - name: )
- uid: Quantum.AssetObject.Create``1
  commentId: M:Quantum.AssetObject.Create``1
  parent: Quantum.AssetObject
  isExternal: true
  name: Create<T>()
  nameWithType: AssetObject.Create<T>()
  fullName: Quantum.AssetObject.Create<T>()
  nameWithType.vb: AssetObject.Create(Of T)()
  fullName.vb: Quantum.AssetObject.Create(Of T)()
  name.vb: Create(Of T)()
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Quantum.AssetObject.Create(System.Type)
  commentId: M:Quantum.AssetObject.Create(System.Type)
  parent: Quantum.AssetObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Create(Type)
  nameWithType: AssetObject.Create(Type)
  fullName: Quantum.AssetObject.Create(System.Type)
  spec.csharp:
  - uid: Quantum.AssetObject.Create(System.Type)
    name: Create
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create(System.Type)
    name: Create
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Quantum.AssetObject.Create``1(System.Action{{T}})
  commentId: M:Quantum.AssetObject.Create``1(System.Action{``0})
  parent: Quantum.AssetObject
  definition: Quantum.AssetObject.Create``1(System.Action{``0})
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Create<T>(Action<T>)
  nameWithType: AssetObject.Create<T>(Action<T>)
  fullName: Quantum.AssetObject.Create<T>(System.Action<T>)
  nameWithType.vb: AssetObject.Create(Of T)(Action(Of T))
  fullName.vb: Quantum.AssetObject.Create(Of T)(System.Action(Of T))
  name.vb: Create(Of T)(Action(Of T))
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.AssetObject.Reset
  commentId: M:Quantum.AssetObject.Reset
  parent: Quantum.AssetObject
  isExternal: true
  name: Reset()
  nameWithType: AssetObject.Reset()
  fullName: Quantum.AssetObject.Reset()
  spec.csharp:
  - uid: Quantum.AssetObject.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
- uid: Quantum.AssetObject.Guid
  commentId: P:Quantum.AssetObject.Guid
  parent: Quantum.AssetObject
  isExternal: true
  name: Guid
  nameWithType: AssetObject.Guid
  fullName: Quantum.AssetObject.Guid
- uid: Quantum.AssetObject.Path
  commentId: P:Quantum.AssetObject.Path
  parent: Quantum.AssetObject
  isExternal: true
  name: Path
  nameWithType: AssetObject.Path
  fullName: Quantum.AssetObject.Path
- uid: Quantum.AssetObject.Settings
  commentId: P:Quantum.AssetObject.Settings
  parent: Quantum.AssetObject
  isExternal: true
  name: Settings
  nameWithType: AssetObject.Settings
  fullName: Quantum.AssetObject.Settings
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Quantum.AssetObject.Create``1(System.Action{``0})
  commentId: M:Quantum.AssetObject.Create``1(System.Action{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Create<T>(Action<T>)
  nameWithType: AssetObject.Create<T>(Action<T>)
  fullName: Quantum.AssetObject.Create<T>(System.Action<T>)
  nameWithType.vb: AssetObject.Create(Of T)(Action(Of T))
  fullName.vb: Quantum.AssetObject.Create(Of T)(System.Action(Of T))
  name.vb: Create(Of T)(Action(Of T))
  spec.csharp:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Quantum.AssetObject.Create``1(System.Action{``0})
    name: Create
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Quantum.HNSFTaggedStatesAsset.Get*
  commentId: Overload:Quantum.HNSFTaggedStatesAsset.Get
  href: Quantum.HNSFTaggedStatesAsset.html#Quantum_HNSFTaggedStatesAsset_Get_Quantum_AssetRef_Quantum_Tag__
  name: Get
  nameWithType: HNSFTaggedStatesAsset.Get
  fullName: Quantum.HNSFTaggedStatesAsset.Get
- uid: Quantum.AssetRef{Quantum.Tag}
  commentId: T:Quantum.AssetRef{Quantum.Tag}
  parent: Quantum
  definition: Quantum.AssetRef`1
  href: Quantum.Tag.html
  name: AssetRef<Tag>
  nameWithType: AssetRef<Tag>
  fullName: Quantum.AssetRef<Quantum.Tag>
  nameWithType.vb: AssetRef(Of Tag)
  fullName.vb: Quantum.AssetRef(Of Quantum.Tag)
  name.vb: AssetRef(Of Tag)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.Tag
    name: Tag
    href: Quantum.Tag.html
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.Tag
    name: Tag
    href: Quantum.Tag.html
  - name: )
- uid: Quantum.AssetRef{Quantum.HNSFState}
  commentId: T:Quantum.AssetRef{Quantum.HNSFState}
  parent: Quantum
  definition: Quantum.AssetRef`1
  href: Quantum.HNSFState.html
  name: AssetRef<HNSFState>
  nameWithType: AssetRef<HNSFState>
  fullName: Quantum.AssetRef<Quantum.HNSFState>
  nameWithType.vb: AssetRef(Of HNSFState)
  fullName.vb: Quantum.AssetRef(Of Quantum.HNSFState)
  name.vb: AssetRef(Of HNSFState)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - uid: Quantum.HNSFState
    name: HNSFState
    href: Quantum.HNSFState.html
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Quantum.HNSFState
    name: HNSFState
    href: Quantum.HNSFState.html
  - name: )
- uid: Quantum.AssetRef`1
  commentId: T:Quantum.AssetRef`1
  isExternal: true
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Quantum.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Quantum.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Quantum.AssetRef`1
    name: AssetRef
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Quantum.HNSFTaggedStatesAsset.TryGetValue*
  commentId: Overload:Quantum.HNSFTaggedStatesAsset.TryGetValue
  href: Quantum.HNSFTaggedStatesAsset.html#Quantum_HNSFTaggedStatesAsset_TryGetValue_Quantum_AssetRef_Quantum_Tag__Quantum_AssetRef_Quantum_HNSFState___
  name: TryGetValue
  nameWithType: HNSFTaggedStatesAsset.TryGetValue
  fullName: Quantum.HNSFTaggedStatesAsset.TryGetValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
