{
  "api/Global.AddTypeMenuAttribute.html": {
    "href": "api/Global.AddTypeMenuAttribute.html",
    "title": "Class AddTypeMenuAttribute | Rwby Vytal Versus Documentation",
    "keywords": "Class AddTypeMenuAttribute Namespace Global Assembly Quantum.Simulation.dll An attribute that overrides the name of the type displayed in the SubclassSelector popup. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Enum|AttributeTargets.Interface, AllowMultiple = false, Inherited = false)] public sealed class AddTypeMenuAttribute : Attribute Inheritance object Attribute AddTypeMenuAttribute Constructors AddTypeMenuAttribute(string, int) public AddTypeMenuAttribute(string menuName, int order = 0) Parameters menuName string order int Properties MenuName public string MenuName { get; } Property Value string Order public int Order { get; } Property Value int Methods GetSplittedMenuName() Returns the menu name split by the '/' separator. public string[] GetSplittedMenuName() Returns string[] GetTypeNameWithoutPath() Returns the display name without the path. public string GetTypeNameWithoutPath() Returns string"
  },
  "api/Global.AddressableFighterDefinitionContainer.html": {
    "href": "api/Global.AddressableFighterDefinitionContainer.html",
    "title": "Class AddressableFighterDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressableFighterDefinitionContainer Namespace Global Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Fighter Definitions Container\", fileName = \"fighterdefinitioncontainer\")] public class AddressableFighterDefinitionContainer : BaseFighterDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseFighterDefinitionContainer AddressableFighterDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetFighters() public override IFighterDefinition[] GetFighters() Returns IFighterDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadFighterDefinitions() public override UniTask<bool> LoadFighterDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadFighterDefinitions() public override void UnloadFighterDefinitions()"
  },
  "api/Global.AddressablesFighterDefinition.html": {
    "href": "api/Global.AddressablesFighterDefinition.html",
    "title": "Class AddressablesFighterDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesFighterDefinition Namespace Global Assembly rwby.dll [Serializable] [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Fighter Definition\")] public class AddressablesFighterDefinition : IFighterDefinition Inheritance object Object ScriptableObject IContentDefinition IFighterDefinition AddressablesFighterDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags Properties Aura public override int Aura { get; } Property Value int AuraGainPerFrame public override int AuraGainPerFrame { get; } Property Value int Description public override string Description { get; } Property Value string Health public override int Health { get; } Property Value int Name public override string Name { get; } Property Value string Selectable public override bool Selectable { get; } Property Value bool Methods GetCommandList() public override BaseCommandListDefinition GetCommandList() Returns BaseCommandListDefinition GetFighter() public override GameObject GetFighter() Returns GameObject GetFighterQuantum() public override CharaDefinitionAsset GetFighterQuantum() Returns CharaDefinitionAsset GetHUDReferences() public override ModAssetSoftReference[] GetHUDReferences() Returns ModAssetSoftReference[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> RegisterQuantumAsset() public override void RegisterQuantumAsset() Unload() public override void Unload() UnloadAssets() public override void UnloadAssets() UnregisterQuantumAsset() public override void UnregisterQuantumAsset()"
  },
  "api/Global.AddressablesGamemodeDefinition.html": {
    "href": "api/Global.AddressablesGamemodeDefinition.html",
    "title": "Class AddressablesGamemodeDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesGamemodeDefinition Namespace Global Assembly rwby.dll [Serializable] [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Gamemode Definition\")] public class AddressablesGamemodeDefinition : BaseGamemodeDefinition Inheritance object Object ScriptableObject IContentDefinition BaseGamemodeDefinition AddressablesGamemodeDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.Load(string) Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetMatchHandler() public override GameObject GetMatchHandler() Returns GameObject GetQuantumDataAsset() public override GamemodeQuantumData GetQuantumDataAsset() Returns GamemodeQuantumData GetTeamConfig() public override GamemodeTeamConfig[] GetTeamConfig() Returns GamemodeTeamConfig[] LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> RegisterQuantumAsset() public override void RegisterQuantumAsset() Unload() public override void Unload() UnloadAssets() public override void UnloadAssets() UnregisterQuantumAsset() public override void UnregisterQuantumAsset()"
  },
  "api/Global.AddressablesGamemodeDefinitionContainer.html": {
    "href": "api/Global.AddressablesGamemodeDefinitionContainer.html",
    "title": "Class AddressablesGamemodeDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesGamemodeDefinitionContainer Namespace Global Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Gamemode Definitions Container\", fileName = \"gamemodedefinitioncontainer\")] public class AddressablesGamemodeDefinitionContainer : BaseGamemodeDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseGamemodeDefinitionContainer AddressablesGamemodeDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetGamemodes() public override BaseGamemodeDefinition[] GetGamemodes() Returns BaseGamemodeDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadGamemodeDefinitions() public override UniTask<bool> LoadGamemodeDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadGamemodeDefinitions() public override void UnloadGamemodeDefinitions()"
  },
  "api/Global.AddressablesLoadedModDefinition.html": {
    "href": "api/Global.AddressablesLoadedModDefinition.html",
    "title": "Class AddressablesLoadedModDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesLoadedModDefinition Namespace Global Assembly rwby.dll public class AddressablesLoadedModDefinition : LoadedModDefinition Inheritance object LoadedModDefinition AddressablesLoadedModDefinition Derived LocalLoadedModDefinition Inherited Members LoadedModDefinition.information LoadedModDefinition.modAsset LoadedModDefinition.HasValidModAsset() Fields resourceLocator public IResourceLocator resourceLocator Field Value IResourceLocator resourceLocatorHandle public AsyncOperationHandle<IResourceLocator> resourceLocatorHandle Field Value AsyncOperationHandle<IResourceLocator>"
  },
  "api/Global.AddressablesMapDefinition.html": {
    "href": "api/Global.AddressablesMapDefinition.html",
    "title": "Class AddressablesMapDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesMapDefinition Namespace Global Assembly rwby.dll [Serializable] [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Map Definition\")] public class AddressablesMapDefinition : IMapDefinition Inheritance object Object ScriptableObject IContentDefinition IMapDefinition AddressablesMapDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.UnloadAssets() Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetMapAsset() public override Map GetMapAsset() Returns Map GetSceneName() public override string GetSceneName() Returns string Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> LoadMap(LoadSceneMode) public override UniTask<bool> LoadMap(LoadSceneMode loadMode) Parameters loadMode LoadSceneMode Returns UniTask<bool> RegisterQuantumAsset() public override void RegisterQuantumAsset() Unload() public override void Unload() UnloadMap() public override UniTask UnloadMap() Returns UniTask UnregisterQuantumAsset() public override void UnregisterQuantumAsset()"
  },
  "api/Global.AddressablesMapDefinitionContainer.html": {
    "href": "api/Global.AddressablesMapDefinitionContainer.html",
    "title": "Class AddressablesMapDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesMapDefinitionContainer Namespace Global Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Map Definitions Container\", fileName = \"mapdefinitioncontainer\")] public class AddressablesMapDefinitionContainer : BaseMapDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseMapDefinitionContainer AddressablesMapDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetMaps() public override IMapDefinition[] GetMaps() Returns IMapDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadMapDefinitions() public override UniTask<bool> LoadMapDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadMapDefinitions() public override void UnloadMapDefinitions()"
  },
  "api/Global.AddressablesModInfoAsset.html": {
    "href": "api/Global.AddressablesModInfoAsset.html",
    "title": "Class AddressablesModInfoAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesModInfoAsset Namespace Global Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/modding/Addressables ModInfoAsset\")] [Serializable] public class AddressablesModInfoAsset : BaseModInfoAsset Inheritance object Object ScriptableObject BaseModInfoAsset AddressablesModInfoAsset Inherited Members BaseModInfoAsset.ModDefinition BaseModInfoAsset.Build() BaseModInfoAsset.GetLoadedAssetListByType<T>() BaseModInfoAsset.GetAssetInfo(string) Properties ModID public override string ModID { get; } Property Value string ModVersion public override string ModVersion { get; } Property Value string OnlineRequirement public override ModOnlineRequirement OnlineRequirement { get; } Property Value ModOnlineRequirement ShouldRegisterQuantumAssets public bool ShouldRegisterQuantumAssets { get; set; } Property Value bool Methods GetAssetByID(string, bool) public override Object GetAssetByID(string id, bool autoLoad = false) Parameters id string autoLoad bool Returns Object GetAssetByID<T>(string, bool) public override T GetAssetByID<T>(string id, bool autoLoad = false) where T : Object Parameters id string autoLoad bool Returns T Type Parameters T GetAssetList() Gets a list of all content (loaded or not) in this mod. public override List<string> GetAssetList() Returns List<string> A list of the IDs of content. GetAssetListPaginated(int, int) Gets a list of all content (loaded or not) in this mod pagniated. public override List<string> GetAssetListPaginated(int page = 0, int pageCount = 100) Parameters page int The page wanted. pageCount int How many asset IDs per page. Returns List<string> The page's list of IDs. GetAssetsByType<T>(bool) public override List<T> GetAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Returns List<T> Type Parameters T GetLoadedAssetList() Gets a list of all loaded content in this mod. public override List<string> GetLoadedAssetList() Returns List<string> A list of the IDs of loaded content. HasAsset(string) public override bool HasAsset(string id) Parameters id string Returns bool LoadAssetByID(string) Loads an asset by the ID given. public override bool LoadAssetByID(string id) Parameters id string The ID of the asset. Returns bool True if the asset was loaded; otherwise false. LoadAssetByIDAsync(string) Loads an asset by the ID given asynchronously. public override UniTask<bool> LoadAssetByIDAsync(string id) Parameters id string The ID of the asset. Returns UniTask<bool> True if the asset was loaded; otherwise false. LoadAssetByIDAsync<T>(string) Loads an asset by the ID given asynchronously. public override UniTask<bool> LoadAssetByIDAsync<T>(string id) where T : Object Parameters id string The ID of the asset. Returns UniTask<bool> True if the asset was loaded; otherwise false. Type Parameters T OnLoad() Called right when the mod this ModInfoAsset belongs to loads. public override void OnLoad() OnUnload() Called right before the mod this ModInfoAsset belongs to unloads. public override void OnUnload() RegisterQuantumAsset(string) Registers an asset to the quantum database. public override void RegisterQuantumAsset(string id) Parameters id string UnloadAssetByID(string) public override void UnloadAssetByID(string id) Parameters id string UnloadAssetsByType<T>(bool) public override void UnloadAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Type Parameters T UnregisterQuantumAsset(string) Deregisters an asset from the quantum database. public override void UnregisterQuantumAsset(string id) Parameters id string"
  },
  "api/Global.AddressablesModLoader.html": {
    "href": "api/Global.AddressablesModLoader.html",
    "title": "Class AddressablesModLoader | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesModLoader Namespace Global Assembly rwby.dll public class AddressablesModLoader : BaseModLoader Inheritance object BaseModLoader AddressablesModLoader Properties LoaderType public override ModLoaderType LoaderType { get; } Property Value ModLoaderType Methods TryLoadMod(ModManager, AvailableModDefinition) public override UniTask<LoadedModDefinition> TryLoadMod(ModManager modManager, AvailableModDefinition modDefinition) Parameters modManager ModManager modDefinition AvailableModDefinition Returns UniTask<LoadedModDefinition> TryUnloadMod(ModManager, LoadedModDefinition) public override bool TryUnloadMod(ModManager modManager, LoadedModDefinition modLoadedDefinition) Parameters modManager ModManager modLoadedDefinition LoadedModDefinition Returns bool"
  },
  "api/Global.AdvancedTypeModal.html": {
    "href": "api/Global.AdvancedTypeModal.html",
    "title": "Class AdvancedTypeModal | Rwby Vytal Versus Documentation",
    "keywords": "Class AdvancedTypeModal Namespace Global Assembly HNSF.Editor.dll public class AdvancedTypeModal : EditorWindow Inheritance object Object ScriptableObject EditorWindow AdvancedTypeModal Methods SetTypes(IEnumerable<Type>) public void SetTypes(IEnumerable<Type> types) Parameters types IEnumerable<Type> Show(Vector2, IEnumerable<Type>, int) public static AdvancedTypeModal Show(Vector2 pos, IEnumerable<Type> types, int maxLineCount) Parameters pos Vector2 types IEnumerable<Type> maxLineCount int Returns AdvancedTypeModal Events OnItemSelected public event Action<Type> OnItemSelected Event Type Action<Type>"
  },
  "api/Global.AdvancedTypePopup.html": {
    "href": "api/Global.AdvancedTypePopup.html",
    "title": "Class AdvancedTypePopup | Rwby Vytal Versus Documentation",
    "keywords": "Class AdvancedTypePopup Namespace Global Assembly HNSF.Editor.dll public class AdvancedTypePopup : VisualElement Inheritance object CallbackEventHandler Focusable VisualElement AdvancedTypePopup Constructors AdvancedTypePopup() public AdvancedTypePopup() Fields folderHistory public List<AdvancedTypePopupItem> folderHistory Field Value List<AdvancedTypePopupItem> Methods AddTo(IEnumerable<Type>) public void AddTo(IEnumerable<Type> types) Parameters types IEnumerable<Type> Events OnItemSelected public event Action<Type> OnItemSelected Event Type Action<Type>"
  },
  "api/Global.AdvancedTypePopupItem.html": {
    "href": "api/Global.AdvancedTypePopupItem.html",
    "title": "Class AdvancedTypePopupItem | Rwby Vytal Versus Documentation",
    "keywords": "Class AdvancedTypePopupItem Namespace Global Assembly HNSF.Editor.dll public class AdvancedTypePopupItem : VisualElement Inheritance object CallbackEventHandler Focusable VisualElement AdvancedTypePopupItem Constructors AdvancedTypePopupItem() public AdvancedTypePopupItem() AdvancedTypePopupItem(string, bool) public AdvancedTypePopupItem(string text, bool isFolder) Parameters text string isFolder bool Fields children public List<AdvancedTypePopupItem> children Field Value List<AdvancedTypePopupItem> isFolder public bool isFolder Field Value bool t public Type t Field Value Type Methods AddChild(AdvancedTypePopupItem) public void AddChild(AdvancedTypePopupItem item) Parameters item AdvancedTypePopupItem Events OnItemSelected public event Action<AdvancedTypePopupItem, Type> OnItemSelected Event Type Action<AdvancedTypePopupItem, Type>"
  },
  "api/Global.AnimancerVisualEffect.html": {
    "href": "api/Global.AnimancerVisualEffect.html",
    "title": "Class AnimancerVisualEffect | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimancerVisualEffect Namespace Global Assembly rwby.dll public class AnimancerVisualEffect : VisualEffectBase Inheritance object Object Component Behaviour MonoBehaviour VisualEffectBase AnimancerVisualEffect Inherited Members VisualEffectBase.status VisualEffectBase.autoDestroy VisualEffectBase.autoDestroyAfter VisualEffectBase.entryAsset VisualEffectBase.freezeDuringHitstop VisualEffectBase.FixedUpdate() VisualEffectBase.SetSeed(uint) Fields animancer public AnimancerComponent animancer Field Value AnimancerComponent clip public AnimationClip clip Field Value AnimationClip Properties CurrentTime public override float CurrentTime { get; protected set; } Property Value float Methods DestroyEffect() public override void DestroyEffect() Freeze() public override void Freeze() Play() public override void Play() Resume() public override void Resume() SeekTo(float, bool) public override void SeekTo(float time, bool play = true) Parameters time float play bool Stop(bool) public override void Stop(bool clearParticles = true) Parameters clearParticles bool"
  },
  "api/Global.AnimationAssetBaker.html": {
    "href": "api/Global.AnimationAssetBaker.html",
    "title": "Class AnimationAssetBaker | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimationAssetBaker Namespace Global Assembly rwby.editor.dll public class AnimationAssetBaker : EditorWindow Inheritance object Object ScriptableObject EditorWindow AnimationAssetBaker Methods ConvertAnimationCurve(AnimationCurve) public FPAnimationCurve ConvertAnimationCurve(AnimationCurve animationCurve) Parameters animationCurve AnimationCurve Returns FPAnimationCurve OnGUI() public void OnGUI() ShowWindow() [MenuItem(\"Tools/Animation Curve Grabber\")] public static void ShowWindow()"
  },
  "api/Global.AnimationCurveExtensions.html": {
    "href": "api/Global.AnimationCurveExtensions.html",
    "title": "Class AnimationCurveExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimationCurveExtensions Namespace Global Assembly rwby.dll public static class AnimationCurveExtensions Inheritance object AnimationCurveExtensions Methods Derivative(AnimationCurve, int, float) public static AnimationCurve Derivative(this AnimationCurve curve, int resolution = 100, float smoothing = 0.05) Parameters curve AnimationCurve resolution int smoothing float Returns AnimationCurve Differentiate(AnimationCurve, float) Find first derivative of curve at point x public static float Differentiate(this AnimationCurve curve, float x) Parameters curve AnimationCurve x float Returns float Slope of curve at point x as float Differentiate(AnimationCurve, float, float, float) public static float Differentiate(this AnimationCurve curve, float x, float xMin, float xMax) Parameters curve AnimationCurve x float xMin float xMax float Returns float Integrate(AnimationCurve, float, float, int) Find integral of curve between xStart and xEnd using the trapezoidal rule public static float Integrate(this AnimationCurve curve, float xStart = 0, float xEnd = 1, int sliceCount = 100) Parameters curve AnimationCurve xStart float xEnd float sliceCount int Resolution of calculation. Increase for better precision, at cost of computation Returns float Area under the curve between xStart and xEnd as float"
  },
  "api/Global.AvailableModDefinition.html": {
    "href": "api/Global.AvailableModDefinition.html",
    "title": "Class AvailableModDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AvailableModDefinition Namespace Global Assembly rwby.dll [Serializable] public class AvailableModDefinition Inheritance object AvailableModDefinition Fields OnlineRequirement public ModOnlineRequirement OnlineRequirement Field Value ModOnlineRequirement author public string author Field Value string canUnload [NonSerialized] public bool canUnload Field Value bool guid public string guid Field Value string identifier public string identifier Field Value string loadedDefinition [NonSerialized] public LoadedModDefinition loadedDefinition Field Value LoadedModDefinition loader public ModLoaderType loader Field Value ModLoaderType name public string name Field Value string path public string path Field Value string requiresReload public bool requiresReload Field Value bool version public string version Field Value string Methods GetGuid() public Guid GetGuid() Returns Guid"
  },
  "api/Global.BF_AddSnow.html": {
    "href": "api/Global.BF_AddSnow.html",
    "title": "Class BF_AddSnow | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_AddSnow Namespace Global Assembly Assembly-CSharp.dll public class BF_AddSnow : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_AddSnow Fields angle public float angle Field Value float intersectionOffset public float intersectionOffset Field Value float isAuto public bool isAuto Field Value bool snowMaterial public Material snowMaterial Field Value Material useIntersection public bool useIntersection Field Value bool useUpdatedRotation public bool useUpdatedRotation Field Value bool"
  },
  "api/Global.BF_FPS.html": {
    "href": "api/Global.BF_FPS.html",
    "title": "Class BF_FPS | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_FPS Namespace Global Assembly Assembly-CSharp.dll public class BF_FPS : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_FPS"
  },
  "api/Global.BF_FxMouse.html": {
    "href": "api/Global.BF_FxMouse.html",
    "title": "Class BF_FxMouse | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_FxMouse Namespace Global Assembly Assembly-CSharp.dll public class BF_FxMouse : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_FxMouse Fields ps public ParticleSystem ps Field Value ParticleSystem psMiddleClick public ParticleSystem psMiddleClick Field Value ParticleSystem psRightClick public ParticleSystem psRightClick Field Value ParticleSystem"
  },
  "api/Global.BF_InputSystemSwitcher.html": {
    "href": "api/Global.BF_InputSystemSwitcher.html",
    "title": "Class BF_InputSystemSwitcher | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_InputSystemSwitcher Namespace Global Assembly Assembly-CSharp.dll public class BF_InputSystemSwitcher : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_InputSystemSwitcher Fields eventS public GameObject eventS Field Value GameObject"
  },
  "api/Global.BF_InteractiveEffects.html": {
    "href": "api/Global.BF_InteractiveEffects.html",
    "title": "Class BF_InteractiveEffects | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_InteractiveEffects Namespace Global Assembly Assembly-CSharp.dll [ExecuteInEditMode] public class BF_InteractiveEffects : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_InteractiveEffects Fields GlobalOrthoName public string GlobalOrthoName Field Value string GlobalTexName public string GlobalTexName Field Value string isPaced public bool isPaced Field Value bool rt public RenderTexture rt Field Value RenderTexture transformToFollow public Transform transformToFollow Field Value Transform"
  },
  "api/Global.BF_InteractiveEffectsAdditional.html": {
    "href": "api/Global.BF_InteractiveEffectsAdditional.html",
    "title": "Class BF_InteractiveEffectsAdditional | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_InteractiveEffectsAdditional Namespace Global Assembly Assembly-CSharp.dll [ExecuteInEditMode] public class BF_InteractiveEffectsAdditional : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_InteractiveEffectsAdditional Fields GlobalOrthoName public string GlobalOrthoName Field Value string GlobalTexName public string GlobalTexName Field Value string isPaced public bool isPaced Field Value bool mainCamera public Transform mainCamera Field Value Transform rt public RenderTexture rt Field Value RenderTexture"
  },
  "api/Global.BF_LightSwitch.html": {
    "href": "api/Global.BF_LightSwitch.html",
    "title": "Class BF_LightSwitch | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_LightSwitch Namespace Global Assembly Assembly-CSharp.dll public class BF_LightSwitch : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_LightSwitch Fields lightScene public GameObject lightScene Field Value GameObject skyboxScene public Material skyboxScene Field Value Material"
  },
  "api/Global.BF_PlayerMovement.html": {
    "href": "api/Global.BF_PlayerMovement.html",
    "title": "Class BF_PlayerMovement | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_PlayerMovement Namespace Global Assembly Assembly-CSharp.dll public class BF_PlayerMovement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_PlayerMovement Fields cam public Camera cam Field Value Camera"
  },
  "api/Global.BF_PlayerReset.html": {
    "href": "api/Global.BF_PlayerReset.html",
    "title": "Class BF_PlayerReset | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_PlayerReset Namespace Global Assembly Assembly-CSharp.dll public class BF_PlayerReset : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_PlayerReset Fields player public GameObject player Field Value GameObject playerPos public Transform playerPos Field Value Transform"
  },
  "api/Global.BF_PlayerSnow.html": {
    "href": "api/Global.BF_PlayerSnow.html",
    "title": "Class BF_PlayerSnow | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_PlayerSnow Namespace Global Assembly Assembly-CSharp.dll public class BF_PlayerSnow : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_PlayerSnow Fields particleSys public ParticleSystem particleSys Field Value ParticleSystem playerCollider public Collider playerCollider Field Value Collider playerMatDefault public PhysicsMaterial playerMatDefault Field Value PhysicsMaterial playerMatIce public PhysicsMaterial playerMatIce Field Value PhysicsMaterial playerMatSnow public PhysicsMaterial playerMatSnow Field Value PhysicsMaterial"
  },
  "api/Global.BF_Rotator.html": {
    "href": "api/Global.BF_Rotator.html",
    "title": "Class BF_Rotator | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_Rotator Namespace Global Assembly Assembly-CSharp.dll public class BF_Rotator : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_Rotator Fields RotSpeed public float RotSpeed Field Value float"
  },
  "api/Global.BF_SnowAssetManager.html": {
    "href": "api/Global.BF_SnowAssetManager.html",
    "title": "Class BF_SnowAssetManager | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_SnowAssetManager Namespace Global Assembly Assembly-CSharp.dll public class BF_SnowAssetManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_SnowAssetManager Fields UIText public GameObject UIText Field Value GameObject cameras public List<GameObject> cameras Field Value List<GameObject> lights public List<GameObject> lights Field Value List<GameObject> m_ShowcaseChange [HideInInspector] public UnityEvent m_ShowcaseChange Field Value UnityEvent maxSubIndex [HideInInspector] public int maxSubIndex Field Value int showcaseIndex public int showcaseIndex Field Value int showcasesGO public List<GameObject> showcasesGO Field Value List<GameObject> skyboxes public List<Material> skyboxes Field Value List<Material> specialButton public GameObject specialButton Field Value GameObject specialCamera [Space] public GameObject specialCamera Field Value GameObject specialInfo public GameObject specialInfo Field Value GameObject subShowcaseIndex [HideInInspector] public int subShowcaseIndex Field Value int Methods ActivateSpecialCamera() public void ActivateSpecialCamera() SwitchShowcase(int) public void SwitchShowcase(int addIndex) Parameters addIndex int SwitchSubShowcase(int) public void SwitchSubShowcase(int addIndex) Parameters addIndex int"
  },
  "api/Global.BF_SnowSubShowcase.html": {
    "href": "api/Global.BF_SnowSubShowcase.html",
    "title": "Class BF_SnowSubShowcase | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_SnowSubShowcase Namespace Global Assembly Assembly-CSharp.dll public class BF_SnowSubShowcase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_SnowSubShowcase Fields aM public BF_SnowAssetManager aM Field Value BF_SnowAssetManager nameSubs public List<string> nameSubs Field Value List<string> subShowcases public List<GameObject> subShowcases Field Value List<GameObject> uiText public Text uiText Field Value Text"
  },
  "api/Global.BF_SnowTerrain.html": {
    "href": "api/Global.BF_SnowTerrain.html",
    "title": "Class BF_SnowTerrain | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_SnowTerrain Namespace Global Assembly Assembly-CSharp.dll [ExecuteInEditMode] public class BF_SnowTerrain : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_SnowTerrain Fields avoidCulling public bool avoidCulling Field Value bool terrainToCopy public Terrain terrainToCopy Field Value Terrain Methods CopyTerrainData() public void CopyTerrainData() MoveTerrainSync() public void MoveTerrainSync() RevertTerrainData() public void RevertTerrainData()"
  },
  "api/Global.BF_SquareBanding.html": {
    "href": "api/Global.BF_SquareBanding.html",
    "title": "Class BF_SquareBanding | Rwby Vytal Versus Documentation",
    "keywords": "Class BF_SquareBanding Namespace Global Assembly Assembly-CSharp.dll [ExecuteInEditMode] [RequireComponent(typeof(Camera))] public class BF_SquareBanding : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BF_SquareBanding Fields cinematicBandsFX public Material cinematicBandsFX Field Value Material"
  },
  "api/Global.BaseContentDefinitionContainer-1.html": {
    "href": "api/Global.BaseContentDefinitionContainer-1.html",
    "title": "Class BaseContentDefinitionContainer<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseContentDefinitionContainer<T> Namespace Global Assembly rwby.dll public abstract class BaseContentDefinitionContainer<T> : IContentDefinition where T : IContentDefinition Type Parameters T Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<T> Derived BaseHudElementDefinitionContainer BaseSongDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetDefinitions() public abstract T[] GetDefinitions() Returns T[] LoadDefinitions() public abstract UniTask<bool> LoadDefinitions() Returns UniTask<bool> UnloadDefinitions() public abstract void UnloadDefinitions()"
  },
  "api/Global.BaseFighterDefinitionContainer.html": {
    "href": "api/Global.BaseFighterDefinitionContainer.html",
    "title": "Class BaseFighterDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseFighterDefinitionContainer Namespace Global Assembly rwby.dll public abstract class BaseFighterDefinitionContainer : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseFighterDefinitionContainer Derived AddressableFighterDefinitionContainer UModFighterDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetFighters() public abstract IFighterDefinition[] GetFighters() Returns IFighterDefinition[] LoadFighterDefinitions() public abstract UniTask<bool> LoadFighterDefinitions() Returns UniTask<bool> UnloadFighterDefinitions() public abstract void UnloadFighterDefinitions()"
  },
  "api/Global.BaseGamemodeDefinition.html": {
    "href": "api/Global.BaseGamemodeDefinition.html",
    "title": "Class BaseGamemodeDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseGamemodeDefinition Namespace Global Assembly rwby.dll [Serializable] public abstract class BaseGamemodeDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseGamemodeDefinition Derived AddressablesGamemodeDefinition UModGamemodeDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetMatchHandler() public abstract GameObject GetMatchHandler() Returns GameObject GetQuantumDataAsset() public abstract GamemodeQuantumData GetQuantumDataAsset() Returns GamemodeQuantumData GetTeamConfig() public abstract GamemodeTeamConfig[] GetTeamConfig() Returns GamemodeTeamConfig[]"
  },
  "api/Global.BaseGamemodeDefinitionContainer.html": {
    "href": "api/Global.BaseGamemodeDefinitionContainer.html",
    "title": "Class BaseGamemodeDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseGamemodeDefinitionContainer Namespace Global Assembly rwby.dll public abstract class BaseGamemodeDefinitionContainer : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseGamemodeDefinitionContainer Derived AddressablesGamemodeDefinitionContainer UModGamemodeDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetGamemodes() public abstract BaseGamemodeDefinition[] GetGamemodes() Returns BaseGamemodeDefinition[] LoadGamemodeDefinitions() public abstract UniTask<bool> LoadGamemodeDefinitions() Returns UniTask<bool> UnloadGamemodeDefinitions() public abstract void UnloadGamemodeDefinitions()"
  },
  "api/Global.BaseHudElementDefinition.html": {
    "href": "api/Global.BaseHudElementDefinition.html",
    "title": "Class BaseHudElementDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseHudElementDefinition Namespace Global Assembly rwby.dll [Serializable] public abstract class BaseHudElementDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseHudElementDefinition Derived AddressablesHudElementDefinition UModHudElementDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetElementContainer() public abstract HudElementContainer GetElementContainer() Returns HudElementContainer"
  },
  "api/Global.BaseHudElementDefinitionContainer.html": {
    "href": "api/Global.BaseHudElementDefinitionContainer.html",
    "title": "Class BaseHudElementDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseHudElementDefinitionContainer Namespace Global Assembly rwby.dll public abstract class BaseHudElementDefinitionContainer : BaseContentDefinitionContainer<BaseHudElementDefinition> Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<BaseHudElementDefinition> BaseHudElementDefinitionContainer Derived AddressablesHudElementDefinitionContainer UModHudElementDefinitionContainer Inherited Members BaseContentDefinitionContainer<BaseHudElementDefinition>.LoadDefinitions() BaseContentDefinitionContainer<BaseHudElementDefinition>.GetDefinitions() BaseContentDefinitionContainer<BaseHudElementDefinition>.UnloadDefinitions() IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload()"
  },
  "api/Global.BaseMapDefinitionContainer.html": {
    "href": "api/Global.BaseMapDefinitionContainer.html",
    "title": "Class BaseMapDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseMapDefinitionContainer Namespace Global Assembly rwby.dll public abstract class BaseMapDefinitionContainer : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseMapDefinitionContainer Derived AddressablesMapDefinitionContainer UModMapDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetMaps() public abstract IMapDefinition[] GetMaps() Returns IMapDefinition[] LoadMapDefinitions() public abstract UniTask<bool> LoadMapDefinitions() Returns UniTask<bool> UnloadMapDefinitions() public abstract void UnloadMapDefinitions()"
  },
  "api/Global.BaseModInfoAsset.html": {
    "href": "api/Global.BaseModInfoAsset.html",
    "title": "Class BaseModInfoAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseModInfoAsset Namespace Global Assembly rwby.dll [Serializable] public class BaseModInfoAsset : ScriptableObject Inheritance object Object ScriptableObject BaseModInfoAsset Derived AddressablesModInfoAsset UModModInfoAsset Properties ModDefinition public virtual LoadedModDefinition ModDefinition { get; set; } Property Value LoadedModDefinition ModID public virtual string ModID { get; } Property Value string ModVersion public virtual string ModVersion { get; } Property Value string OnlineRequirement public virtual ModOnlineRequirement OnlineRequirement { get; } Property Value ModOnlineRequirement Methods Build() public virtual void Build() GetAssetByID(string, bool) public virtual Object GetAssetByID(string id, bool autoLoad = false) Parameters id string autoLoad bool Returns Object GetAssetByID<T>(string, bool) public virtual T GetAssetByID<T>(string id, bool autoLoad = false) where T : Object Parameters id string autoLoad bool Returns T Type Parameters T GetAssetInfo(string) public virtual object GetAssetInfo(string id) Parameters id string Returns object GetAssetList() Gets a list of all content (loaded or not) in this mod. public virtual List<string> GetAssetList() Returns List<string> A list of the IDs of content. GetAssetListPaginated(int, int) Gets a list of all content (loaded or not) in this mod pagniated. public virtual List<string> GetAssetListPaginated(int page = 0, int pageCount = 100) Parameters page int The page wanted. pageCount int How many asset IDs per page. Returns List<string> The page's list of IDs. GetAssetsByType<T>(bool) public virtual List<T> GetAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Returns List<T> Type Parameters T GetLoadedAssetList() Gets a list of all loaded content in this mod. public virtual List<string> GetLoadedAssetList() Returns List<string> A list of the IDs of loaded content. GetLoadedAssetListByType<T>() Gets a list of all loaded content in the mod with the given type. public virtual List<string> GetLoadedAssetListByType<T>() where T : Object Returns List<string> A list of the IDs of the loaded content for the given type. Type Parameters T The type of the content. HasAsset(string) public virtual bool HasAsset(string id) Parameters id string Returns bool LoadAssetByID(string) Loads an asset by the ID given. public virtual bool LoadAssetByID(string id) Parameters id string The ID of the asset. Returns bool True if the asset was loaded; otherwise false. LoadAssetByIDAsync(string) Loads an asset by the ID given asynchronously. public virtual UniTask<bool> LoadAssetByIDAsync(string id) Parameters id string The ID of the asset. Returns UniTask<bool> True if the asset was loaded; otherwise false. LoadAssetByIDAsync<T>(string) Loads an asset by the ID given asynchronously. public virtual UniTask<bool> LoadAssetByIDAsync<T>(string id) where T : Object Parameters id string The ID of the asset. Returns UniTask<bool> True if the asset was loaded; otherwise false. Type Parameters T OnLoad() Called right when the mod this ModInfoAsset belongs to loads. public virtual void OnLoad() OnUnload() Called right before the mod this ModInfoAsset belongs to unloads. public virtual void OnUnload() RegisterQuantumAsset(string) Registers an asset to the quantum database. public virtual void RegisterQuantumAsset(string id) Parameters id string UnloadAssetByID(string) public virtual void UnloadAssetByID(string id) Parameters id string UnloadAssetsByType<T>(bool) public virtual void UnloadAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Type Parameters T UnregisterQuantumAsset(string) Deregisters an asset from the quantum database. public virtual void UnregisterQuantumAsset(string id) Parameters id string"
  },
  "api/Global.BaseModItemAsset.html": {
    "href": "api/Global.BaseModItemAsset.html",
    "title": "Class BaseModItemAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseModItemAsset Namespace Global Assembly rwby.dll public abstract class BaseModItemAsset : ScriptableObject Inheritance object Object ScriptableObject BaseModItemAsset"
  },
  "api/Global.BaseModLoader.html": {
    "href": "api/Global.BaseModLoader.html",
    "title": "Class BaseModLoader | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseModLoader Namespace Global Assembly rwby.dll public class BaseModLoader Inheritance object BaseModLoader Derived AddressablesModLoader LocalModLoader UModModLoader Properties LoaderType public virtual ModLoaderType LoaderType { get; } Property Value ModLoaderType Methods TryLoadMod(ModManager, AvailableModDefinition) public virtual UniTask<LoadedModDefinition> TryLoadMod(ModManager modManager, AvailableModDefinition modDefinition) Parameters modManager ModManager modDefinition AvailableModDefinition Returns UniTask<LoadedModDefinition> TryUnloadMod(ModManager, LoadedModDefinition) public virtual bool TryUnloadMod(ModManager modManager, LoadedModDefinition modLoadedDefinition) Parameters modManager ModManager modLoadedDefinition LoadedModDefinition Returns bool"
  },
  "api/Global.ControllerGlyphDatabase.html": {
    "href": "api/Global.ControllerGlyphDatabase.html",
    "title": "Class ControllerGlyphDatabase | Rwby Vytal Versus Documentation",
    "keywords": "Class ControllerGlyphDatabase Namespace Global Assembly rwby.dll public class ControllerGlyphDatabase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ControllerGlyphDatabase Fields glyphMap public Dictionary<string, ControllerGlyphs> glyphMap Field Value Dictionary<string, ControllerGlyphs> inputManager public InputManager inputManager Field Value InputManager Methods BuildRectTransformsForAction(string, InputAction) public RectTransform[] BuildRectTransformsForAction(string deviceName, InputAction inputAction) Parameters deviceName string inputAction InputAction Returns RectTransform[] BuildRectTransformsForAction(InputDevice, InputAction) public RectTransform[] BuildRectTransformsForAction(InputDevice device, InputAction inputAction) Parameters device InputDevice inputAction InputAction Returns RectTransform[] GetGlyphsForAction(string, InputAction) public Sprite[] GetGlyphsForAction(string deviceName, InputAction inputAction) Parameters deviceName string inputAction InputAction Returns Sprite[] GetGlyphsForAction(InputDevice, InputAction) public Sprite[] GetGlyphsForAction(InputDevice device, InputAction inputAction) Parameters device InputDevice inputAction InputAction Returns Sprite[] Init() public void Init()"
  },
  "api/Global.ControllerGlyphs.html": {
    "href": "api/Global.ControllerGlyphs.html",
    "title": "Class ControllerGlyphs | Rwby Vytal Versus Documentation",
    "keywords": "Class ControllerGlyphs Namespace Global Assembly rwby.dll [CreateAssetMenu(fileName = \"Controller Glyphs\")] public class ControllerGlyphs : ScriptableObject Inheritance object Object ScriptableObject ControllerGlyphs Fields UnknownBindingName public static readonly string UnknownBindingName Field Value string glyphBackgrounds public SerializedDictionary<int, Sprite> glyphBackgrounds Field Value SerializedDictionary<int, Sprite> glyphMapping public SerializedDictionary<string, GlyphEntry> glyphMapping Field Value SerializedDictionary<string, GlyphEntry> matchingControllers public string[] matchingControllers Field Value string[] tmpSpritesheetName public string tmpSpritesheetName Field Value string Methods GetBackgroundSpriteForID(int) public Sprite GetBackgroundSpriteForID(int id) Parameters id int Returns Sprite GetGlyphEntryForBinding(string) public GlyphEntry GetGlyphEntryForBinding(string bindingString) Parameters bindingString string Returns GlyphEntry GetGlyphForBinding(string) public Sprite GetGlyphForBinding(string bindingString) Parameters bindingString string Returns Sprite GetGlyphTextSpriteName(string) public string GetGlyphTextSpriteName(string bindingString) Parameters bindingString string Returns string"
  },
  "api/Global.ControlsMainScreen.html": {
    "href": "api/Global.ControlsMainScreen.html",
    "title": "Class ControlsMainScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class ControlsMainScreen Namespace Global Assembly rwby.dll public class ControlsMainScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase ControlsMainScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields createProfileButtonPrefab public Button createProfileButtonPrefab Field Value Button profilesScrollRect public ScrollRect profilesScrollRect Field Value ScrollRect selectProfileButtonPrefab public Button selectProfileButtonPrefab Field Value Button Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.ControlsProfileMappingScreen.html": {
    "href": "api/Global.ControlsProfileMappingScreen.html",
    "title": "Class ControlsProfileMappingScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class ControlsProfileMappingScreen Namespace Global Assembly rwby.dll public class ControlsProfileMappingScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase ControlsProfileMappingScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields buttonMappingPrefab public GameObject buttonMappingPrefab Field Value GameObject controlsScrollView public ScrollRect controlsScrollView Field Value ScrollRect deviceButtonPrefab public GameObject deviceButtonPrefab Field Value GameObject devicesScrollRect public ScrollRect devicesScrollRect Field Value ScrollRect mappingWindow public GameObject mappingWindow Field Value GameObject Methods BUTTON_Back() public void BUTTON_Back() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.ControlsScreen.MenuTypes.html": {
    "href": "api/Global.ControlsScreen.MenuTypes.html",
    "title": "Enum ControlsScreen.MenuTypes | Rwby Vytal Versus Documentation",
    "keywords": "Enum ControlsScreen.MenuTypes Namespace Global Assembly rwby.dll public enum ControlsScreen.MenuTypes Fields Main = 0 ProfileRemapping = 1"
  },
  "api/Global.ControlsScreen.html": {
    "href": "api/Global.ControlsScreen.html",
    "title": "Class ControlsScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class ControlsScreen Namespace Global Assembly rwby.dll public class ControlsScreen : MenuAndHandlerBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase MenuAndHandlerBase ControlsScreen Implements IMenu IMenuHandler Inherited Members MenuAndHandlerBase.menus MenuAndHandlerBase.history MenuAndHandlerBase.ResetAndForwardTo(int) MenuAndHandlerBase.Forward(int, bool) MenuAndHandlerBase.Back() MenuAndHandlerBase.GetHistory() MenuAndHandlerBase.GetCurrentMenu() MenuAndHandlerBase.HasSubmenuOpen() MenuBase.currentHandler Fields mainScreen public ControlsMainScreen mainScreen Field Value ControlsMainScreen remappingScreen public ControlsProfileMappingScreen remappingScreen Field Value ControlsProfileMappingScreen Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.DevicePickerUtility.DelegatePickerEvent.html": {
    "href": "api/Global.DevicePickerUtility.DelegatePickerEvent.html",
    "title": "Delegate DevicePickerUtility.DelegatePickerEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate DevicePickerUtility.DelegatePickerEvent Namespace Global Assembly rwby.dll public delegate void DevicePickerUtility.DelegatePickerEvent(DevicePickerUtility dpu) Parameters dpu DevicePickerUtility"
  },
  "api/Global.DevicePickerUtility.html": {
    "href": "api/Global.DevicePickerUtility.html",
    "title": "Class DevicePickerUtility | Rwby Vytal Versus Documentation",
    "keywords": "Class DevicePickerUtility Namespace Global Assembly rwby.dll public class DevicePickerUtility : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DevicePickerUtility Fields OnPickerCancel public DevicePickerUtility.DelegatePickerEvent OnPickerCancel Field Value DevicePickerUtility.DelegatePickerEvent OnPickerConfirm public DevicePickerUtility.DelegatePickerEvent OnPickerConfirm Field Value DevicePickerUtility.DelegatePickerEvent canvasObject public GameObject canvasObject Field Value GameObject defaultColor public Color defaultColor Field Value Color deviceItemPrefab public GameObject deviceItemPrefab Field Value GameObject disabledColor public Color disabledColor Field Value Color mainPanelRect public ScrollRect mainPanelRect Field Value ScrollRect playerPanelRects public ScrollRect[] playerPanelRects Field Value ScrollRect[] Methods Close() public void Close() GetValidInputPlayers() public List<List<InputDevice>> GetValidInputPlayers() Returns List<List<InputDevice>> Open(int, int) public void Open(int minimumPlayers = 0, int maximumPlayers = 4) Parameters minimumPlayers int maximumPlayers int"
  },
  "api/Global.DualsenseEdgeGamepadHID.html": {
    "href": "api/Global.DualsenseEdgeGamepadHID.html",
    "title": "Class DualsenseEdgeGamepadHID | Rwby Vytal Versus Documentation",
    "keywords": "Class DualsenseEdgeGamepadHID Namespace Global Assembly rwby.dll public class DualsenseEdgeGamepadHID : Gamepad Inheritance object InputControl InputDevice Gamepad DualsenseEdgeGamepadHID"
  },
  "api/Global.EQSTester.html": {
    "href": "api/Global.EQSTester.html",
    "title": "Class EQSTester | Rwby Vytal Versus Documentation",
    "keywords": "Class EQSTester Namespace Global Assembly EQS.Editor.dll public class EQSTester : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EQSTester Fields queryAsset public EnvironmentQueryAsset queryAsset Field Value EnvironmentQueryAsset"
  },
  "api/Global.EntityInputDebugger.html": {
    "href": "api/Global.EntityInputDebugger.html",
    "title": "Class EntityInputDebugger | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityInputDebugger Namespace Global Assembly rwby.dll public class EntityInputDebugger : QuantumEntityViewComponent, IQuantumViewComponent Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumViewComponent<IQuantumViewContext> QuantumEntityViewComponent<IQuantumViewContext> QuantumEntityViewComponent EntityInputDebugger Implements IQuantumViewComponent Inherited Members QuantumEntityViewComponent<IQuantumViewContext>.Game QuantumEntityViewComponent<IQuantumViewContext>.EntityRef QuantumEntityViewComponent<IQuantumViewContext>.EntityView QuantumEntityViewComponent<IQuantumViewContext>.HasPredictedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.HasVerifiedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.GetPredictedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.GetVerifiedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.TryGetPredictedQuantumComponent<TComponent>(out TComponent) QuantumEntityViewComponent<IQuantumViewContext>.TryGetVerifiedQuantumComponent<TComponent>(out TComponent) QuantumViewComponent<IQuantumViewContext>.PredictedFrame QuantumViewComponent<IQuantumViewContext>.VerifiedFrame QuantumViewComponent<IQuantumViewContext>.PredictedPreviousFrame QuantumViewComponent<IQuantumViewContext>.ViewContext QuantumViewComponent<IQuantumViewContext>.IsActive QuantumViewComponent<IQuantumViewContext>.IsInitialized QuantumViewComponent<IQuantumViewContext>._game QuantumViewComponent<IQuantumViewContext>._entityView QuantumViewComponent<IQuantumViewContext>.OnInitialize() QuantumViewComponent<IQuantumViewContext>.OnActivate(Frame) QuantumViewComponent<IQuantumViewContext>.OnDeactivate() QuantumViewComponent<IQuantumViewContext>.OnLateUpdateView() QuantumViewComponent<IQuantumViewContext>.OnGameChanged() QuantumViewComponent<IQuantumViewContext>.Initialize(Dictionary<Type, IQuantumViewContext>) QuantumViewComponent<IQuantumViewContext>.Activate(Frame, QuantumGame, QuantumEntityView) QuantumViewComponent<IQuantumViewContext>.Deactivate() QuantumViewComponent<IQuantumViewContext>.UpdateView() QuantumViewComponent<IQuantumViewContext>.LateUpdateView() QuantumViewComponent<IQuantumViewContext>.GameChanged(QuantumGame) Fields customEntityView public CustomEntityView customEntityView Field Value CustomEntityView Methods OnUpdateView() Is called from the Quantum.QuantumEntityViewUpdater on a Unity update. public override void OnUpdateView()"
  },
  "api/Global.EntityPhysicsDebugger.html": {
    "href": "api/Global.EntityPhysicsDebugger.html",
    "title": "Class EntityPhysicsDebugger | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityPhysicsDebugger Namespace Global Assembly rwby.dll public class EntityPhysicsDebugger : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityPhysicsDebugger Fields customEntityView public CustomEntityView customEntityView Field Value CustomEntityView"
  },
  "api/Global.EntityPrototypeBaker.html": {
    "href": "api/Global.EntityPrototypeBaker.html",
    "title": "Class EntityPrototypeBaker | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityPrototypeBaker Namespace Global Assembly rwby.editor.dll public class EntityPrototypeBaker Inheritance object EntityPrototypeBaker"
  },
  "api/Global.EntitySoundManager.html": {
    "href": "api/Global.EntitySoundManager.html",
    "title": "Class EntitySoundManager | Rwby Vytal Versus Documentation",
    "keywords": "Class EntitySoundManager Namespace Global Assembly rwby.dll public class EntitySoundManager : QuantumEntityViewComponent, IQuantumViewComponent Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumViewComponent<IQuantumViewContext> QuantumEntityViewComponent<IQuantumViewContext> QuantumEntityViewComponent EntitySoundManager Implements IQuantumViewComponent Inherited Members QuantumEntityViewComponent<IQuantumViewContext>.Game QuantumEntityViewComponent<IQuantumViewContext>.EntityRef QuantumEntityViewComponent<IQuantumViewContext>.EntityView QuantumEntityViewComponent<IQuantumViewContext>.HasPredictedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.HasVerifiedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.GetPredictedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.GetVerifiedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.TryGetPredictedQuantumComponent<TComponent>(out TComponent) QuantumEntityViewComponent<IQuantumViewContext>.TryGetVerifiedQuantumComponent<TComponent>(out TComponent) QuantumViewComponent<IQuantumViewContext>.PredictedFrame QuantumViewComponent<IQuantumViewContext>.VerifiedFrame QuantumViewComponent<IQuantumViewContext>.PredictedPreviousFrame QuantumViewComponent<IQuantumViewContext>.ViewContext QuantumViewComponent<IQuantumViewContext>.IsActive QuantumViewComponent<IQuantumViewContext>.IsInitialized QuantumViewComponent<IQuantumViewContext>._game QuantumViewComponent<IQuantumViewContext>._entityView QuantumViewComponent<IQuantumViewContext>.OnInitialize() QuantumViewComponent<IQuantumViewContext>.OnActivate(Frame) QuantumViewComponent<IQuantumViewContext>.OnDeactivate() QuantumViewComponent<IQuantumViewContext>.OnLateUpdateView() QuantumViewComponent<IQuantumViewContext>.OnGameChanged() QuantumViewComponent<IQuantumViewContext>.Initialize(Dictionary<Type, IQuantumViewContext>) QuantumViewComponent<IQuantumViewContext>.Activate(Frame, QuantumGame, QuantumEntityView) QuantumViewComponent<IQuantumViewContext>.Deactivate() QuantumViewComponent<IQuantumViewContext>.UpdateView() QuantumViewComponent<IQuantumViewContext>.LateUpdateView() QuantumViewComponent<IQuantumViewContext>.GameChanged(QuantumGame) Fields currentlyPlayingSounds public Dictionary<Tag, List<AudioSource>> currentlyPlayingSounds Field Value Dictionary<Tag, List<AudioSource>> Methods OnUpdateView() Is called from the Quantum.QuantumEntityViewUpdater on a Unity update. public override void OnUpdateView() PlaySound(SoundEntry, GameObject, Vector3, float, float, float, Tag, AudioSourceConfig, EventKey, bool) public AudioSource PlaySound(SoundEntry soundEntry, GameObject parent, Vector3 position, float time, float volume, float pitch, Tag tag, AudioSourceConfig audioSourceConfig, EventKey key, bool stopOtherInstances = false) Parameters soundEntry SoundEntry parent GameObject position Vector3 time float volume float pitch float tag Tag audioSourceConfig AudioSourceConfig key EventKey stopOtherInstances bool Returns AudioSource StopSound(AudioSource) public void StopSound(AudioSource audioSource) Parameters audioSource AudioSource"
  },
  "api/Global.EntityStateDebugger.html": {
    "href": "api/Global.EntityStateDebugger.html",
    "title": "Class EntityStateDebugger | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityStateDebugger Namespace Global Assembly rwby.dll public class EntityStateDebugger : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityStateDebugger Fields customEntityView public CustomEntityView customEntityView Field Value CustomEntityView latestStates public List<HNSFState> latestStates Field Value List<HNSFState>"
  },
  "api/Global.EntityViewTrackECB.html": {
    "href": "api/Global.EntityViewTrackECB.html",
    "title": "Class EntityViewTrackECB | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityViewTrackECB Namespace Global Assembly rwby.dll public class EntityViewTrackECB : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityViewTrackECB Fields currentLocation public Vector3 currentLocation Field Value Vector3 customEntityView public CustomEntityView customEntityView Field Value CustomEntityView locationSmoothed public Vector3 locationSmoothed Field Value Vector3 offset public Vector3 offset Field Value Vector3 smoothTime public float smoothTime Field Value float Methods UpdateLocation(QuantumGame) public void UpdateLocation(QuantumGame game) Parameters game QuantumGame"
  },
  "api/Global.EntityVisibilityUpdater.html": {
    "href": "api/Global.EntityVisibilityUpdater.html",
    "title": "Class EntityVisibilityUpdater | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityVisibilityUpdater Namespace Global Assembly rwby.dll public class EntityVisibilityUpdater : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityVisibilityUpdater Fields customEntityView public CustomEntityView customEntityView Field Value CustomEntityView viewVisibility public bool viewVisibility Field Value bool visibilityGameobjects public GameObject[] visibilityGameobjects Field Value GameObject[]"
  },
  "api/Global.ExButton.html": {
    "href": "api/Global.ExButton.html",
    "title": "Class ExButton | Rwby Vytal Versus Documentation",
    "keywords": "Class ExButton Namespace Global Assembly rwby.dll public class ExButton : Button Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour Selectable Button ExButton Properties onSelected public Button.ButtonClickedEvent onSelected { get; set; } Property Value Button.ButtonClickedEvent Methods OnSelect(BaseEventData) public override void OnSelect(BaseEventData eventData) Parameters eventData BaseEventData"
  },
  "api/Global.FPConverter.html": {
    "href": "api/Global.FPConverter.html",
    "title": "Class FPConverter | Rwby Vytal Versus Documentation",
    "keywords": "Class FPConverter Namespace Global Assembly rwby.editor.dll public class FPConverter : EditorWindow Inheritance object Object ScriptableObject EditorWindow FPConverter Methods OnGUI() public virtual void OnGUI() ShowWindow() [MenuItem(\"Quantum/FP Converter\")] public static void ShowWindow()"
  },
  "api/Global.FighterContentHelper.html": {
    "href": "api/Global.FighterContentHelper.html",
    "title": "Class FighterContentHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterContentHelper Namespace Global Assembly rwby.dll public static class FighterContentHelper Inheritance object FighterContentHelper Methods GetAllFighterDefinitions() public static UniTask<List<IFighterDefinition>> GetAllFighterDefinitions() Returns UniTask<List<IFighterDefinition>> UnloadDefinitions(List<IFighterDefinition>) public static void UnloadDefinitions(List<IFighterDefinition> fightersToUnload) Parameters fightersToUnload List<IFighterDefinition>"
  },
  "api/Global.FighterPassiveAuraGainSystem.Filter.html": {
    "href": "api/Global.FighterPassiveAuraGainSystem.Filter.html",
    "title": "Struct FighterPassiveAuraGainSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct FighterPassiveAuraGainSystem.Filter Namespace Global Assembly Quantum.Simulation.dll public struct FighterPassiveAuraGainSystem.Filter Fields CharaStateMachines public CharaStateMachines* CharaStateMachines Field Value CharaStateMachines* Entity public EntityRef Entity Field Value EntityRef aura public Aura* aura Field Value Aura* gainAuraPassively public GainAuraPassively* gainAuraPassively Field Value GainAuraPassively*"
  },
  "api/Global.FighterPassiveAuraGainSystem.html": {
    "href": "api/Global.FighterPassiveAuraGainSystem.html",
    "title": "Class FighterPassiveAuraGainSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterPassiveAuraGainSystem Namespace Global Assembly Quantum.Simulation.dll [Preserve] public class FighterPassiveAuraGainSystem : SystemMainThreadFilter<FighterPassiveAuraGainSystem.Filter> Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<FighterPassiveAuraGainSystem.Filter> FighterPassiveAuraGainSystem Inherited Members SystemMainThreadFilter<FighterPassiveAuraGainSystem.Filter>.UseCulling SystemMainThreadFilter<FighterPassiveAuraGainSystem.Filter>.Without SystemMainThreadFilter<FighterPassiveAuraGainSystem.Filter>.Any SystemMainThreadFilter<FighterPassiveAuraGainSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame, ref Filter) Override to add workload. public override void Update(Frame f, ref FighterPassiveAuraGainSystem.Filter filter) Parameters f Frame The current frame. filter FighterPassiveAuraGainSystem.Filter The frame object."
  },
  "api/Global.FighterShakeManager.html": {
    "href": "api/Global.FighterShakeManager.html",
    "title": "Class FighterShakeManager | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterShakeManager Namespace Global Assembly rwby.dll public class FighterShakeManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FighterShakeManager Fields currentShakeLength public float currentShakeLength Field Value float shakeAmt public float shakeAmt Field Value float shakeCurve public AnimationCurve shakeCurve Field Value AnimationCurve shakeSpeed public float shakeSpeed Field Value float shaker public Transform shaker Field Value Transform view public CustomEntityView view Field Value CustomEntityView Methods Shake(float) public virtual void Shake(float shakeLength) Parameters shakeLength float StopShake() public virtual void StopShake()"
  },
  "api/Global.FighterVFXManager.html": {
    "href": "api/Global.FighterVFXManager.html",
    "title": "Class FighterVFXManager | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterVFXManager Namespace Global Assembly rwby.dll public class FighterVFXManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FighterVFXManager Fields currentPlayingEffects public List<VisualEffectBase> currentPlayingEffects Field Value List<VisualEffectBase> view public CustomEntityView view Field Value CustomEntityView Methods Destroy(VisualEffectBase) public virtual void Destroy(VisualEffectBase visualEffect) Parameters visualEffect VisualEffectBase Play(VisualEffectBase) public virtual void Play(VisualEffectBase visualEffect) Parameters visualEffect VisualEffectBase StopLastEffect(bool) public virtual void StopLastEffect(bool clearParticles) Parameters clearParticles bool"
  },
  "api/Global.FighterViewHandle.html": {
    "href": "api/Global.FighterViewHandle.html",
    "title": "Class FighterViewHandle | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterViewHandle Namespace Global Assembly rwby.dll public class FighterViewHandle : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FighterViewHandle Fields targetPoint public Transform targetPoint Field Value Transform"
  },
  "api/Global.FileCreationHelpers.html": {
    "href": "api/Global.FileCreationHelpers.html",
    "title": "Class FileCreationHelpers | Rwby Vytal Versus Documentation",
    "keywords": "Class FileCreationHelpers Namespace Global Assembly HNSF.Editor.dll public static class FileCreationHelpers Inheritance object FileCreationHelpers"
  },
  "api/Global.GamemodeContentHelper.html": {
    "href": "api/Global.GamemodeContentHelper.html",
    "title": "Class GamemodeContentHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class GamemodeContentHelper Namespace Global Assembly rwby.dll public static class GamemodeContentHelper Inheritance object GamemodeContentHelper Methods GetAllGamemodeDefinitions() public static UniTask<List<BaseGamemodeDefinition>> GetAllGamemodeDefinitions() Returns UniTask<List<BaseGamemodeDefinition>> UnloadGamemodeDefinitions(List<BaseGamemodeDefinition>) public static void UnloadGamemodeDefinitions(List<BaseGamemodeDefinition> gamemodesToUnload) Parameters gamemodesToUnload List<BaseGamemodeDefinition>"
  },
  "api/Global.GamemodeTeamConfig.html": {
    "href": "api/Global.GamemodeTeamConfig.html",
    "title": "Struct GamemodeTeamConfig | Rwby Vytal Versus Documentation",
    "keywords": "Struct GamemodeTeamConfig Namespace Global Assembly rwby.dll [Serializable] public struct GamemodeTeamConfig Fields maximumPlayers public int maximumPlayers Field Value int minimumPlayers public int minimumPlayers Field Value int name public string name Field Value string"
  },
  "api/Global.GeneralHelpers.html": {
    "href": "api/Global.GeneralHelpers.html",
    "title": "Class GeneralHelpers | Rwby Vytal Versus Documentation",
    "keywords": "Class GeneralHelpers Namespace Global Assembly rwby.dll public static class GeneralHelpers Inheritance object GeneralHelpers Fields displayNameToRegion public static Dictionary<string, string> displayNameToRegion Field Value Dictionary<string, string> quantumRegions public static string[] quantumRegions Field Value string[] regionToDisplayName public static Dictionary<string, string> regionToDisplayName Field Value Dictionary<string, string> Methods Eerp(float, float, float) public static float Eerp(float a, float b, float t) Parameters a float b float t float Returns float GetAssetRefID(AssetReference) public static UniTask<string> GetAssetRefID(AssetReference assetReference) Parameters assetReference AssetReference Returns UniTask<string> GetSnapToPositionToBringChildIntoView(ScrollRect, RectTransform) public static Vector2 GetSnapToPositionToBringChildIntoView(this ScrollRect instance, RectTransform child) Parameters instance ScrollRect child RectTransform Returns Vector2 LinearRolloff(AudioSource) public static void LinearRolloff(AudioSource AS) Parameters AS AudioSource LoadMainMenuAndVisualScene() public static UniTask LoadMainMenuAndVisualScene() Returns UniTask RealisticRolloff(AudioSource) public static void RealisticRolloff(AudioSource AS) Parameters AS AudioSource SFXSpatialBlend(AudioSource) public static void SFXSpatialBlend(AudioSource AS) Parameters AS AudioSource TrySetupLocalPlayers() public static UniTask<bool> TrySetupLocalPlayers() Returns UniTask<bool> WorldToCanvasPosition(Canvas, Camera, Vector3) public static Vector2 WorldToCanvasPosition(Canvas canvas, Camera worldCamera, Vector3 worldPosition) Parameters canvas Canvas worldCamera Camera worldPosition Vector3 Returns Vector2 WorldToScreenSpace(Vector3, Camera, RectTransform) public static Vector3 WorldToScreenSpace(Vector3 worldPos, Camera cam, RectTransform area) Parameters worldPos Vector3 cam Camera area RectTransform Returns Vector3"
  },
  "api/Global.GlobalFighterEventManager.html": {
    "href": "api/Global.GlobalFighterEventManager.html",
    "title": "Class GlobalFighterEventManager | Rwby Vytal Versus Documentation",
    "keywords": "Class GlobalFighterEventManager Namespace Global Assembly rwby.dll [Serializable] public class GlobalFighterEventManager Inheritance object GlobalFighterEventManager Fields viewUpdater public QuantumEntityViewUpdater viewUpdater Field Value QuantumEntityViewUpdater Methods Breakdown() public void Breakdown() Initialize() public void Initialize()"
  },
  "api/Global.GlobalSoundManager.html": {
    "href": "api/Global.GlobalSoundManager.html",
    "title": "Class GlobalSoundManager | Rwby Vytal Versus Documentation",
    "keywords": "Class GlobalSoundManager Namespace Global Assembly rwby.dll [Serializable] public class GlobalSoundManager Inheritance object GlobalSoundManager Fields viewUpdater public QuantumEntityViewUpdater viewUpdater Field Value QuantumEntityViewUpdater Methods Initialize() public void Initialize() Teardown() public void Teardown()"
  },
  "api/Global.GlobalVFXManager.html": {
    "href": "api/Global.GlobalVFXManager.html",
    "title": "Class GlobalVFXManager | Rwby Vytal Versus Documentation",
    "keywords": "Class GlobalVFXManager Namespace Global Assembly rwby.dll [Serializable] public class GlobalVFXManager Inheritance object GlobalVFXManager Fields viewUpdater public QuantumEntityViewUpdater viewUpdater Field Value QuantumEntityViewUpdater Methods Breakdown() public void Breakdown() Initialize() public void Initialize()"
  },
  "api/Global.GlyphEntry.html": {
    "href": "api/Global.GlyphEntry.html",
    "title": "Class GlyphEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class GlyphEntry Namespace Global Assembly rwby.dll [Serializable] public class GlyphEntry Inheritance object GlyphEntry Fields glyph public Sprite glyph Field Value Sprite glyphBackgroundID public int glyphBackgroundID Field Value int glyphNeg public Sprite glyphNeg Field Value Sprite glyphPos public Sprite glyphPos Field Value Sprite textSpriteName public string textSpriteName Field Value string"
  },
  "api/Global.GroupVisualEffect.html": {
    "href": "api/Global.GroupVisualEffect.html",
    "title": "Class GroupVisualEffect | Rwby Vytal Versus Documentation",
    "keywords": "Class GroupVisualEffect Namespace Global Assembly rwby.dll public class GroupVisualEffect : VisualEffectBase Inheritance object Object Component Behaviour MonoBehaviour VisualEffectBase GroupVisualEffect Inherited Members VisualEffectBase.CurrentTime VisualEffectBase.status VisualEffectBase.autoDestroy VisualEffectBase.autoDestroyAfter VisualEffectBase.entryAsset VisualEffectBase.freezeDuringHitstop VisualEffectBase.FixedUpdate() Fields visualEffects public VisualEffectBase[] visualEffects Field Value VisualEffectBase[] Methods DestroyEffect() public override void DestroyEffect() Freeze() public override void Freeze() Play() public override void Play() Resume() public override void Resume() SeekTo(float, bool) public override void SeekTo(float time, bool play = true) Parameters time float play bool SetSeed(uint) public override void SetSeed(uint seed) Parameters seed uint Stop(bool) public override void Stop(bool clearParticles = true) Parameters clearParticles bool"
  },
  "api/Global.HNSFHelper.html": {
    "href": "api/Global.HNSFHelper.html",
    "title": "Class HNSFHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFHelper Namespace Global Assembly HNSF.Editor.dll public static class HNSFHelper Inheritance object HNSFHelper Methods CreateStateActionFolder(HNSFState, HNSFStateAction) public static string CreateStateActionFolder(HNSFState stateAsset, HNSFStateAction stateAction) Parameters stateAsset HNSFState stateAction HNSFStateAction Returns string CreateStateAssetFolder(HNSFState) public static void CreateStateAssetFolder(HNSFState stateAsset) Parameters stateAsset HNSFState SyncStateSetGroups() [MenuItem(\"rwby/Sync StateSet Groups\")] public static void SyncStateSetGroups()"
  },
  "api/Global.HitboxResolveResult.html": {
    "href": "api/Global.HitboxResolveResult.html",
    "title": "Enum HitboxResolveResult | Rwby Vytal Versus Documentation",
    "keywords": "Enum HitboxResolveResult Namespace Global Assembly Quantum.Simulation.dll public enum HitboxResolveResult : byte Fields HitHitbox = 1 HitHurtbox = 2 None = 0"
  },
  "api/Global.HudElementContentHelper.html": {
    "href": "api/Global.HudElementContentHelper.html",
    "title": "Class HudElementContentHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class HudElementContentHelper Namespace Global Assembly rwby.dll public static class HudElementContentHelper Inheritance object HudElementContentHelper Methods GetAllContentDefinitions() public static UniTask<List<BaseHudElementDefinition>> GetAllContentDefinitions() Returns UniTask<List<BaseHudElementDefinition>> UnloadContentDefinitions(List<BaseHudElementDefinition>) public static void UnloadContentDefinitions(List<BaseHudElementDefinition> contentToUnload) Parameters contentToUnload List<BaseHudElementDefinition>"
  },
  "api/Global.IContentDefinition.html": {
    "href": "api/Global.IContentDefinition.html",
    "title": "Class IContentDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class IContentDefinition Namespace Global Assembly rwby.dll [Serializable] public abstract class IContentDefinition : ScriptableObject Inheritance object Object ScriptableObject IContentDefinition Derived BaseContentDefinitionContainer<T> BaseFighterDefinitionContainer BaseGamemodeDefinition BaseGamemodeDefinitionContainer BaseHudElementDefinition BaseMapDefinitionContainer IFighterDefinition IMapDefinition BaseCommandListDefinition BaseCommandListEntry BaseCommandListMovesetDefinition BaseSongDefinition Properties Description public virtual string Description { get; } Property Value string ID public virtual string ID { get; set; } Property Value string Name public virtual string Name { get; } Property Value string Tags public virtual List<string> Tags { get; } Property Value List<string> modDefinition public virtual LoadedModDefinition modDefinition { get; set; } Property Value LoadedModDefinition Methods Load(string) public virtual UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadAssets() public virtual UniTask<bool> LoadAssets() Returns UniTask<bool> RegisterQuantumAsset() public virtual void RegisterQuantumAsset() Unload() public virtual void Unload() UnloadAssets() public virtual void UnloadAssets() UnregisterQuantumAsset() public virtual void UnregisterQuantumAsset()"
  },
  "api/Global.IControllerChangedCallback.html": {
    "href": "api/Global.IControllerChangedCallback.html",
    "title": "Interface IControllerChangedCallback | Rwby Vytal Versus Documentation",
    "keywords": "Interface IControllerChangedCallback Namespace Global Assembly rwby.dll public interface IControllerChangedCallback"
  },
  "api/Global.IExternalOptionCallback.html": {
    "href": "api/Global.IExternalOptionCallback.html",
    "title": "Interface IExternalOptionCallback | Rwby Vytal Versus Documentation",
    "keywords": "Interface IExternalOptionCallback Namespace Global Assembly rwby.dll public interface IExternalOptionCallback Methods WhenElementSelected(MenuLabelExternalOptionElement, BaseEventData) void WhenElementSelected(MenuLabelExternalOptionElement element, BaseEventData eventData) Parameters element MenuLabelExternalOptionElement eventData BaseEventData"
  },
  "api/Global.IFighterDefinition.html": {
    "href": "api/Global.IFighterDefinition.html",
    "title": "Class IFighterDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class IFighterDefinition Namespace Global Assembly rwby.dll public abstract class IFighterDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition IFighterDefinition Derived AddressablesFighterDefinition UModFighterDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Properties Aura public virtual int Aura { get; } Property Value int AuraGainPerFrame public virtual int AuraGainPerFrame { get; } Property Value int Health public virtual int Health { get; } Property Value int Selectable public virtual bool Selectable { get; } Property Value bool Methods GetCommandList() public abstract BaseCommandListDefinition GetCommandList() Returns BaseCommandListDefinition GetFighter() public abstract GameObject GetFighter() Returns GameObject GetFighterQuantum() public abstract CharaDefinitionAsset GetFighterQuantum() Returns CharaDefinitionAsset GetHUDReferences() public abstract ModAssetSoftReference[] GetHUDReferences() Returns ModAssetSoftReference[]"
  },
  "api/Global.IMapDefinition.html": {
    "href": "api/Global.IMapDefinition.html",
    "title": "Class IMapDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class IMapDefinition Namespace Global Assembly rwby.dll [Serializable] public abstract class IMapDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition IMapDefinition Derived AddressablesMapDefinition UModMapDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetMapAsset() public abstract Map GetMapAsset() Returns Map GetSceneName() public abstract string GetSceneName() Returns string LoadMap(LoadSceneMode) public abstract UniTask<bool> LoadMap(LoadSceneMode loadMode) Parameters loadMode LoadSceneMode Returns UniTask<bool> UnloadMap() public abstract UniTask UnloadMap() Returns UniTask"
  },
  "api/Global.IModQuantumData.html": {
    "href": "api/Global.IModQuantumData.html",
    "title": "Interface IModQuantumData | Rwby Vytal Versus Documentation",
    "keywords": "Interface IModQuantumData Namespace Global Assembly Quantum.Simulation.dll public interface IModQuantumData Methods GetComponentTypeIdCount() int GetComponentTypeIdCount() Returns int InitComponentTypeIdGen(ref Builder) ComponentTypeId.Builder InitComponentTypeIdGen(ref ComponentTypeId.Builder builder) Parameters builder ComponentTypeId.Builder Returns ComponentTypeId.Builder InitGen(Frame) void InitGen(Frame frame) Parameters frame Frame InitStaticDelegates() void InitStaticDelegates() RegisterSimulationTypesGen(TypeRegistry) void RegisterSimulationTypesGen(TypeRegistry typeRegistry) Parameters typeRegistry TypeRegistry"
  },
  "api/Global.INavigationStyleChanged.html": {
    "href": "api/Global.INavigationStyleChanged.html",
    "title": "Interface INavigationStyleChanged | Rwby Vytal Versus Documentation",
    "keywords": "Interface INavigationStyleChanged Namespace Global Assembly rwby.dll public interface INavigationStyleChanged Methods NavigationStyleChanged(InputPlayerManager, NavigationType) void NavigationStyleChanged(InputPlayerManager inputPlayer, InputPlayerManager.NavigationType navigationType) Parameters inputPlayer InputPlayerManager navigationType InputPlayerManager.NavigationType"
  },
  "api/Global.InputPlayerManager.DelegateDeviceChanged.html": {
    "href": "api/Global.InputPlayerManager.DelegateDeviceChanged.html",
    "title": "Delegate InputPlayerManager.DelegateDeviceChanged | Rwby Vytal Versus Documentation",
    "keywords": "Delegate InputPlayerManager.DelegateDeviceChanged Namespace Global Assembly rwby.dll public delegate void InputPlayerManager.DelegateDeviceChanged()"
  },
  "api/Global.InputPlayerManager.DelegateNavigationStyleChange.html": {
    "href": "api/Global.InputPlayerManager.DelegateNavigationStyleChange.html",
    "title": "Delegate InputPlayerManager.DelegateNavigationStyleChange | Rwby Vytal Versus Documentation",
    "keywords": "Delegate InputPlayerManager.DelegateNavigationStyleChange Namespace Global Assembly rwby.dll public delegate void InputPlayerManager.DelegateNavigationStyleChange(InputPlayerManager inputPlayer, InputPlayerManager.NavigationType navigationType) Parameters inputPlayer InputPlayerManager navigationType InputPlayerManager.NavigationType"
  },
  "api/Global.InputPlayerManager.DelegateWhenControlSchemeChanged.html": {
    "href": "api/Global.InputPlayerManager.DelegateWhenControlSchemeChanged.html",
    "title": "Delegate InputPlayerManager.DelegateWhenControlSchemeChanged | Rwby Vytal Versus Documentation",
    "keywords": "Delegate InputPlayerManager.DelegateWhenControlSchemeChanged Namespace Global Assembly rwby.dll public delegate void InputPlayerManager.DelegateWhenControlSchemeChanged(InputPlayerManager inputPlayer, InputManager.ControlSchemeType controlScheme) Parameters inputPlayer InputPlayerManager controlScheme InputManager.ControlSchemeType"
  },
  "api/Global.InputPlayerManager.NavigationType.html": {
    "href": "api/Global.InputPlayerManager.NavigationType.html",
    "title": "Enum InputPlayerManager.NavigationType | Rwby Vytal Versus Documentation",
    "keywords": "Enum InputPlayerManager.NavigationType Namespace Global Assembly rwby.dll public enum InputPlayerManager.NavigationType Fields Controller_Or_Keyboard = 0 Mouse = 1"
  },
  "api/Global.InputPlayerManager.html": {
    "href": "api/Global.InputPlayerManager.html",
    "title": "Class InputPlayerManager | Rwby Vytal Versus Documentation",
    "keywords": "Class InputPlayerManager Namespace Global Assembly rwby.dll public class InputPlayerManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InputPlayerManager Fields assignedDevices public HashSet<InputDevice> assignedDevices Field Value HashSet<InputDevice> autoSwitchControlSchemes public bool autoSwitchControlSchemes Field Value bool currentDevices public List<InputDevice> currentDevices Field Value List<InputDevice> inputActions public InputActions inputActions Field Value InputActions lastNavigationType public InputPlayerManager.NavigationType lastNavigationType Field Value InputPlayerManager.NavigationType mpEventSystem public MultiplayerEventSystem mpEventSystem Field Value MultiplayerEventSystem navigationStyleUpdateRate public int navigationStyleUpdateRate Field Value int onControlSchemeChanged public InputPlayerManager.DelegateWhenControlSchemeChanged onControlSchemeChanged Field Value InputPlayerManager.DelegateWhenControlSchemeChanged onCurrentDeviceChanged public InputPlayerManager.DelegateDeviceChanged onCurrentDeviceChanged Field Value InputPlayerManager.DelegateDeviceChanged onNavigationStyleChanged public InputPlayerManager.DelegateNavigationStyleChange onNavigationStyleChanged Field Value InputPlayerManager.DelegateNavigationStyleChange playerInput public PlayerInput playerInput Field Value PlayerInput uiInputModule public InputSystemUIInputModule uiInputModule Field Value InputSystemUIInputModule Properties CurrentProfile public string CurrentProfile { get; } Property Value string Id public int Id { get; } Property Value int User public InputUser User { get; } Property Value InputUser Methods ActivateInput() public void ActivateInput() ActivateUIHandling() public void ActivateUIHandling() ApplyBindingOverrides(string) public void ApplyBindingOverrides(string overrides) Parameters overrides string ApplyProfile(string) public void ApplyProfile(string profileName) Parameters profileName string AssignInputDevice(InputDevice) public void AssignInputDevice(InputDevice inputDevice) Parameters inputDevice InputDevice AssignInputDevices(Gamepad[]) public void AssignInputDevices(Gamepad[] gamepadList) Parameters gamepadList Gamepad[] AssignInputDevices(InputDevice[]) public void AssignInputDevices(InputDevice[] inputDeviceList) Parameters inputDeviceList InputDevice[] AssignKeyboardAndMouse() public void AssignKeyboardAndMouse() ClearAssignedDevices() public void ClearAssignedDevices() DeactivateInput() public void DeactivateInput() DeactivateUIHandling() public void DeactivateUIHandling() GetBindingOverridesAsJson() public string GetBindingOverridesAsJson() Returns string GetCurrentDeviceType() public InputManager.ControlSchemeType GetCurrentDeviceType() Returns InputManager.ControlSchemeType Initialize(int) public void Initialize(int id) Parameters id int RemoveAllDevices() public void RemoveAllDevices() RemoveDevice(InputDevice) public void RemoveDevice(InputDevice inputDevice) Parameters inputDevice InputDevice RemoveDevices(InputDevice[]) public void RemoveDevices(InputDevice[] inputDevices) Parameters inputDevices InputDevice[] ResetBindingOverrides() public void ResetBindingOverrides() SetID(int) public void SetID(int id) Parameters id int SetUIRoot(GameObject) public void SetUIRoot(GameObject uiRoot) Parameters uiRoot GameObject SwitchToDevice(InputDevice) public void SwitchToDevice(InputDevice device) Parameters device InputDevice SwitchToPlayerMap() public void SwitchToPlayerMap() SwitchToUIMap() public void SwitchToUIMap() Teardown() public void Teardown() UpdateDevices() public void UpdateDevices() Vibrate(float) public void Vibrate(float vibrateTime) Parameters vibrateTime float"
  },
  "api/Global.InputRumbleManager.html": {
    "href": "api/Global.InputRumbleManager.html",
    "title": "Class InputRumbleManager | Rwby Vytal Versus Documentation",
    "keywords": "Class InputRumbleManager Namespace Global Assembly rwby.dll public class InputRumbleManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InputRumbleManager"
  },
  "api/Global.JumpCalcWindow.html": {
    "href": "api/Global.JumpCalcWindow.html",
    "title": "Class JumpCalcWindow | Rwby Vytal Versus Documentation",
    "keywords": "Class JumpCalcWindow Namespace Global Assembly HNSF.Editor.dll public class JumpCalcWindow : EditorWindow Inheritance object Object ScriptableObject EditorWindow JumpCalcWindow Methods ShowWindow() [MenuItem(\"Tools/Jump Calculator\")] public static void ShowWindow()"
  },
  "api/Global.LoadedModDefinition.html": {
    "href": "api/Global.LoadedModDefinition.html",
    "title": "Class LoadedModDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class LoadedModDefinition Namespace Global Assembly rwby.dll [Serializable] public class LoadedModDefinition Inheritance object LoadedModDefinition Derived AddressablesLoadedModDefinition UModLoadedModDefinition Fields information [NonSerialized] public AvailableModDefinition information Field Value AvailableModDefinition modAsset public BaseModInfoAsset modAsset Field Value BaseModInfoAsset Methods HasValidModAsset() public bool HasValidModAsset() Returns bool"
  },
  "api/Global.LocalLoadedModDefinition.html": {
    "href": "api/Global.LocalLoadedModDefinition.html",
    "title": "Class LocalLoadedModDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class LocalLoadedModDefinition Namespace Global Assembly rwby.dll public class LocalLoadedModDefinition : AddressablesLoadedModDefinition Inheritance object LoadedModDefinition AddressablesLoadedModDefinition LocalLoadedModDefinition Inherited Members AddressablesLoadedModDefinition.resourceLocatorHandle AddressablesLoadedModDefinition.resourceLocator LoadedModDefinition.information LoadedModDefinition.modAsset LoadedModDefinition.HasValidModAsset()"
  },
  "api/Global.LocalModLoader.html": {
    "href": "api/Global.LocalModLoader.html",
    "title": "Class LocalModLoader | Rwby Vytal Versus Documentation",
    "keywords": "Class LocalModLoader Namespace Global Assembly rwby.dll public class LocalModLoader : BaseModLoader Inheritance object BaseModLoader LocalModLoader Properties LoaderType public override ModLoaderType LoaderType { get; } Property Value ModLoaderType Methods TryLoadMod(ModManager, AvailableModDefinition) public override UniTask<LoadedModDefinition> TryLoadMod(ModManager modManager, AvailableModDefinition modDefinition) Parameters modManager ModManager modDefinition AvailableModDefinition Returns UniTask<LoadedModDefinition> TryUnloadMod(ModManager, LoadedModDefinition) public override bool TryUnloadMod(ModManager modManager, LoadedModDefinition modLoadedDefinition) Parameters modManager ModManager modLoadedDefinition LoadedModDefinition Returns bool"
  },
  "api/Global.MLPForceSaveProbes.html": {
    "href": "api/Global.MLPForceSaveProbes.html",
    "title": "Class MLPForceSaveProbes | Rwby Vytal Versus Documentation",
    "keywords": "Class MLPForceSaveProbes Namespace Global Assembly Assembly-CSharp.dll public class MLPForceSaveProbes : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MLPForceSaveProbes"
  },
  "api/Global.MLPSettings.html": {
    "href": "api/Global.MLPSettings.html",
    "title": "Class MLPSettings | Rwby Vytal Versus Documentation",
    "keywords": "Class MLPSettings Namespace Global Assembly Assembly-CSharp.dll [CreateAssetMenu(fileName = \"New MLP Settings Asset\", menuName = \"Magic Tools/Magic Light Probes/Create New Settings Asset\", order = 1)] public class MLPSettings : ScriptableObject Inheritance object Object ScriptableObject MLPSettings Fields boundsDisplayMode public MagicLightProbes.BoundsDisplayMode boundsDisplayMode Field Value MagicLightProbes.BoundsDisplayMode collisionDetectionLayers public LayerMask collisionDetectionLayers Field Value LayerMask collisionDetectionRadius public float collisionDetectionRadius Field Value float colorThreshold public float colorThreshold Field Value float considerDistanceToLights public bool considerDistanceToLights Field Value bool cornerProbesSpacing public float cornerProbesSpacing Field Value float cornersDetectionThreshold public float cornersDetectionThreshold Field Value float cullByColor public bool cullByColor Field Value bool distanceFromGeometry public float distanceFromGeometry Field Value float divideVolumeOnProbesCount public int divideVolumeOnProbesCount Field Value int equivalentVolumeFillingRate public float equivalentVolumeFillingRate Field Value float fillEquivalentVolume public bool fillEquivalentVolume Field Value bool fillUnlitVolume public bool fillUnlitVolume Field Value bool fillingMode public MagicLightProbes.FillingMode fillingMode Field Value MagicLightProbes.FillingMode lightIntensityThreshold public float lightIntensityThreshold Field Value float maxHeightAboveGeometry public float maxHeightAboveGeometry Field Value float maxHeightAboveTerrain public float maxHeightAboveTerrain Field Value float optimizeForMixedLighting public bool optimizeForMixedLighting Field Value bool probesSpacing public float probesSpacing Field Value float selectedObjectsAsGlobal public bool selectedObjectsAsGlobal Field Value bool tryPreventLightLeakage public bool tryPreventLightLeakage Field Value bool unlitVolumeFillingRate public float unlitVolumeFillingRate Field Value float useVolumeBottom public bool useVolumeBottom Field Value bool workflow public MagicLightProbes.Workflow workflow Field Value MagicLightProbes.Workflow"
  },
  "api/Global.MapContentHelper.html": {
    "href": "api/Global.MapContentHelper.html",
    "title": "Class MapContentHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class MapContentHelper Namespace Global Assembly rwby.dll public static class MapContentHelper Inheritance object MapContentHelper Methods GetAllMapDefinitions() public static UniTask<List<IMapDefinition>> GetAllMapDefinitions() Returns UniTask<List<IMapDefinition>> UnloadMapDefinitions(List<IMapDefinition>) public static void UnloadMapDefinitions(List<IMapDefinition> mapsToUnload) Parameters mapsToUnload List<IMapDefinition>"
  },
  "api/Global.MapViewManager.html": {
    "href": "api/Global.MapViewManager.html",
    "title": "Class MapViewManager | Rwby Vytal Versus Documentation",
    "keywords": "Class MapViewManager Namespace Global Assembly rwby.dll public class MapViewManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MapViewManager Fields genericVictoryScreenDirector [Header(\"Victory Screen\")] public ActorCutscenePlayer genericVictoryScreenDirector Field Value ActorCutscenePlayer mapIntroCutscenePlayer public ActorCutscenePlayer mapIntroCutscenePlayer Field Value ActorCutscenePlayer victoryScreenObjectsToDisable public GameObject[] victoryScreenObjectsToDisable Field Value GameObject[] victoryScreenObjectsToEnable public GameObject[] victoryScreenObjectsToEnable Field Value GameObject[] Methods StartVictoryScreen() public void StartVictoryScreen()"
  },
  "api/Global.MenuAndHandlerBase.html": {
    "href": "api/Global.MenuAndHandlerBase.html",
    "title": "Class MenuAndHandlerBase | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuAndHandlerBase Namespace Global Assembly rwby.dll public class MenuAndHandlerBase : MenuBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase MenuAndHandlerBase Implements IMenu IMenuHandler Derived ControlsScreen PauseMenuBasicSettingsHandler PauseMenuDummySettingsHandler PauseMenuEnvironmentSettingsHandler NetworkLobbySessionMatchCreationScreen Inherited Members MenuBase.currentHandler Fields history [SerializeField] protected List<int> history Field Value List<int> menus public Dictionary<int, MenuBase> menus Field Value Dictionary<int, MenuBase> Methods Back() public bool Back() Returns bool Forward(int, bool) public bool Forward(int menu, bool autoClose = true) Parameters menu int autoClose bool Returns bool GetCurrentMenu() public IMenu GetCurrentMenu() Returns IMenu GetHistory() public IList GetHistory() Returns IList HasSubmenuOpen() public bool HasSubmenuOpen() Returns bool Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler ResetAndForwardTo(int) public virtual void ResetAndForwardTo(int menuToForwardTo) Parameters menuToForwardTo int TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.MenuHandlerBase.html": {
    "href": "api/Global.MenuHandlerBase.html",
    "title": "Class MenuHandlerBase | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuHandlerBase Namespace Global Assembly rwby.dll public class MenuHandlerBase : MonoBehaviour, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuHandlerBase Implements IMenuHandler Derived NetworkLobbySessionMenuHandler Fields history [SerializeField] protected List<int> history Field Value List<int> menus public Dictionary<int, MenuBase> menus Field Value Dictionary<int, MenuBase> Methods Back() public virtual bool Back() Returns bool Forward(int, bool) public virtual bool Forward(int menu, bool autoClose = true) Parameters menu int autoClose bool Returns bool GetCurrentMenu() public virtual IMenu GetCurrentMenu() Returns IMenu GetHistory() public virtual IList GetHistory() Returns IList GetPreviousMenu() public virtual IMenu GetPreviousMenu() Returns IMenu HasSubmenuOpen() public bool HasSubmenuOpen() Returns bool ResetAndForwardTo(int) public virtual void ResetAndForwardTo(int menuToForwardTo) Parameters menuToForwardTo int"
  },
  "api/Global.ModAssetReference.html": {
    "href": "api/Global.ModAssetReference.html",
    "title": "Class ModAssetReference | Rwby Vytal Versus Documentation",
    "keywords": "Class ModAssetReference Namespace Global Assembly rwby.dll [Serializable] public class ModAssetReference Inheritance object ModAssetReference Fields assetID public string assetID Field Value string modDefinition [NonSerialized] public AvailableModDefinition modDefinition Field Value AvailableModDefinition"
  },
  "api/Global.ModAssetSoftReference.html": {
    "href": "api/Global.ModAssetSoftReference.html",
    "title": "Struct ModAssetSoftReference | Rwby Vytal Versus Documentation",
    "keywords": "Struct ModAssetSoftReference Namespace Global Assembly rwby.dll [Serializable] public struct ModAssetSoftReference Constructors ModAssetSoftReference(IFighterDefinition) public ModAssetSoftReference(IFighterDefinition definition) Parameters definition IFighterDefinition Fields assetID public string assetID Field Value string isFolder public bool isFolder Field Value bool mod public string mod Field Value string Methods Equals(ModAssetSoftReference) public bool Equals(ModAssetSoftReference other) Parameters other ModAssetSoftReference Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string Operators operator ==(ModAssetSoftReference, ModAssetSoftReference) public static bool operator ==(ModAssetSoftReference assetA, ModAssetSoftReference assetB) Parameters assetA ModAssetSoftReference assetB ModAssetSoftReference Returns bool operator !=(ModAssetSoftReference, ModAssetSoftReference) public static bool operator !=(ModAssetSoftReference assetA, ModAssetSoftReference assetB) Parameters assetA ModAssetSoftReference assetB ModAssetSoftReference Returns bool"
  },
  "api/Global.ModContentManager.html": {
    "href": "api/Global.ModContentManager.html",
    "title": "Class ModContentManager | Rwby Vytal Versus Documentation",
    "keywords": "Class ModContentManager Namespace Global Assembly rwby.dll public class ModContentManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ModContentManager Fields gameManager public GameManager gameManager Field Value GameManager modManager public ModManager modManager Field Value ModManager Methods GetAssetFromMod(LoadedModDefinition, string, bool) public Object GetAssetFromMod(LoadedModDefinition loadedModDefinition, string assetID, bool autoLoad = false) Parameters loadedModDefinition LoadedModDefinition assetID string autoLoad bool Returns Object GetAssetFromMod(ModAssetSoftReference, bool) public Object GetAssetFromMod(ModAssetSoftReference softReference, bool autoLoad = false) Parameters softReference ModAssetSoftReference autoLoad bool Returns Object GetAssetFromMod<T>(LoadedModDefinition, string, bool) public T GetAssetFromMod<T>(LoadedModDefinition loadedModDefinition, string assetID, bool autoLoad = false) where T : Object Parameters loadedModDefinition LoadedModDefinition assetID string autoLoad bool Returns T Type Parameters T GetAssetFromMod<T>(ModAssetSoftReference) public T GetAssetFromMod<T>(ModAssetSoftReference softReference) where T : Object Parameters softReference ModAssetSoftReference Returns T Type Parameters T GetAssetFromMod<T>(string, string, bool) public T GetAssetFromMod<T>(string modId, string assetID, bool autoLoad = false) where T : Object Parameters modId string assetID string autoLoad bool Returns T Type Parameters T GetAssetFromMods(string, bool) public List<Object> GetAssetFromMods(string assetID, bool autoLoad = false) Parameters assetID string autoLoad bool Returns List<Object> GetAssetList() public List<string> GetAssetList() Returns List<string> GetLoadedAssetList() public List<string> GetLoadedAssetList() Returns List<string> Init() public void Init() LoadAllAssetsByTypeAsync<T>() public UniTask LoadAllAssetsByTypeAsync<T>() where T : Object Returns UniTask Type Parameters T LoadAllAssetsByType<T>() public void LoadAllAssetsByType<T>() where T : Object Type Parameters T LoadAllAssetsFromMod(LoadedModDefinition) public bool LoadAllAssetsFromMod(LoadedModDefinition loadedModDefinition) Parameters loadedModDefinition LoadedModDefinition Returns bool LoadAllAssetsFromModAsync(LoadedModDefinition) public UniTask<bool> LoadAllAssetsFromModAsync(LoadedModDefinition loadedModDefinition) Parameters loadedModDefinition LoadedModDefinition Returns UniTask<bool> LoadAllAssetsFromModByTypeAsync<T>(LoadedModDefinition) public UniTask LoadAllAssetsFromModByTypeAsync<T>(LoadedModDefinition loadedModDefinition) where T : Object Parameters loadedModDefinition LoadedModDefinition Returns UniTask Type Parameters T LoadAllAssetsFromModByType<T>(LoadedModDefinition) public void LoadAllAssetsFromModByType<T>(LoadedModDefinition loadedModDefinition) where T : Object Parameters loadedModDefinition LoadedModDefinition Type Parameters T LoadAssetFromMod(LoadedModDefinition, string) public bool LoadAssetFromMod(LoadedModDefinition loadedModDefinition, string assetID) Parameters loadedModDefinition LoadedModDefinition assetID string Returns bool LoadAssetFromModAsync(LoadedModDefinition, string) public UniTask<bool> LoadAssetFromModAsync(LoadedModDefinition loadedModDefinition, string assetID) Parameters loadedModDefinition LoadedModDefinition assetID string Returns UniTask<bool> LoadAssetFromModAsync(ModAssetSoftReference) public UniTask<bool> LoadAssetFromModAsync(ModAssetSoftReference loadedModDefinition) Parameters loadedModDefinition ModAssetSoftReference Returns UniTask<bool> LoadAssetFromModAsync(string, string) public UniTask<bool> LoadAssetFromModAsync(string modID, string assetID) Parameters modID string assetID string Returns UniTask<bool> LoadAssetFromModsAsync(string) public UniTask LoadAssetFromModsAsync(string assetID) Parameters assetID string Returns UniTask ModHasAsset(LoadedModDefinition, string) public bool ModHasAsset(LoadedModDefinition loadedModDefinition, string assetID) Parameters loadedModDefinition LoadedModDefinition assetID string Returns bool ModHasAsset(string, string) public bool ModHasAsset(string modID, string assetID) Parameters modID string assetID string Returns bool PrintAssetList() public void PrintAssetList() PrintLoadedAssetList() public void PrintLoadedAssetList() Refresh() public void Refresh() UnloadAllAssetsByType<T>() public void UnloadAllAssetsByType<T>() where T : Object Type Parameters T UnloadAllAssetsFromMod(LoadedModDefinition) public void UnloadAllAssetsFromMod(LoadedModDefinition loadedModDefinition) Parameters loadedModDefinition LoadedModDefinition UnloadAsset(IContentDefinition) public void UnloadAsset(IContentDefinition contentDefinition) Parameters contentDefinition IContentDefinition UnloadAssetFromMod(LoadedModDefinition, string) public void UnloadAssetFromMod(LoadedModDefinition loadedModDefinition, string assetID) Parameters loadedModDefinition LoadedModDefinition assetID string"
  },
  "api/Global.ModLoaderType.html": {
    "href": "api/Global.ModLoaderType.html",
    "title": "Enum ModLoaderType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModLoaderType Namespace Global Assembly rwby.dll public enum ModLoaderType Fields ADDRESSABLES = 1 LOCAL = 0 UMOD = 2"
  },
  "api/Global.ModManager.html": {
    "href": "api/Global.ModManager.html",
    "title": "Class ModManager | Rwby Vytal Versus Documentation",
    "keywords": "Class ModManager Namespace Global Assembly rwby.dll public class ModManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ModManager Fields IdentifierToAvailableMod public Dictionary<string, AvailableModDefinition> IdentifierToAvailableMod Field Value Dictionary<string, AvailableModDefinition> ModProfilesFilename public static readonly string ModProfilesFilename Field Value string PathToAvailableMod public Dictionary<string, AvailableModDefinition> PathToAvailableMod Field Value Dictionary<string, AvailableModDefinition> availableMods public List<AvailableModDefinition> availableMods Field Value List<AvailableModDefinition> currentModProfileIndex public int currentModProfileIndex Field Value int currentlyLoadedMods public List<LoadedModDefinition> currentlyLoadedMods Field Value List<LoadedModDefinition> modLoaders public Dictionary<ModLoaderType, BaseModLoader> modLoaders Field Value Dictionary<ModLoaderType, BaseModLoader> modProfiles public List<ModProfile> modProfiles Field Value List<ModProfile> Properties ModDirectory public string ModDirectory { get; } Property Value string Methods ApplyModProfile(ModProfile) public UniTask ApplyModProfile(ModProfile modProfile) Parameters modProfile ModProfile Returns UniTask GenerateModGuid(bool, bool) public Guid GenerateModGuid(bool loadedOnly = true, bool onlyRequiredMods = true) Parameters loadedOnly bool onlyRequiredMods bool Returns Guid GetCurrentModProfile() public ModProfile GetCurrentModProfile() Returns ModProfile GetMod(string) public AvailableModDefinition GetMod(string modIdentifier) Parameters modIdentifier string Returns AvailableModDefinition GetModListByGuid(bool, bool) public Guid[] GetModListByGuid(bool loadedOnly = true, bool onlineOnly = true) Parameters loadedOnly bool onlineOnly bool Returns Guid[] GetModListByGuidAsStrings(bool, bool) public string[] GetModListByGuidAsStrings(bool loadedOnly = true, bool onlineOnly = true) Parameters loadedOnly bool onlineOnly bool Returns string[] GetModsByIdentifiers(string[]) public List<AvailableModDefinition> GetModsByIdentifiers(string[] modIdentifiers) Parameters modIdentifiers string[] Returns List<AvailableModDefinition> Init() public UniTask Init() Returns UniTask IsModLoaded(string) public bool IsModLoaded(string modID) Parameters modID string Returns bool LoadAllMods() public UniTask LoadAllMods() Returns UniTask LoadMod(AvailableModDefinition) public UniTask<bool> LoadMod(AvailableModDefinition modDefinition) Parameters modDefinition AvailableModDefinition Returns UniTask<bool> LoadModByPath(string) public UniTask<bool> LoadModByPath(string path) Parameters path string Returns UniTask<bool> LoadModProfiles() public void LoadModProfiles() LoadMods(AvailableModDefinition[]) public UniTask LoadMods(AvailableModDefinition[] modDefinitions) Parameters modDefinitions AvailableModDefinition[] Returns UniTask LoadMods(string[]) public UniTask LoadMods(string[] modIdentifiers) Parameters modIdentifiers string[] Returns UniTask OnDestroy() public void OnDestroy() SaveModProfiles() public void SaveModProfiles() TryGetCurrentModProfile(out ModProfile) public bool TryGetCurrentModProfile(out ModProfile currentProfile) Parameters currentProfile ModProfile Returns bool UnloadAllMods(string[]) public void UnloadAllMods(string[] modsToExcludeByIdentifier = null) Parameters modsToExcludeByIdentifier string[] UnloadMod(LoadedModDefinition) public bool UnloadMod(LoadedModDefinition loadedModDefinition) Parameters loadedModDefinition LoadedModDefinition Returns bool UnloadMods(string[]) public void UnloadMods(string[] modIdentifiers) Parameters modIdentifiers string[]"
  },
  "api/Global.ModOnlineRequirement.html": {
    "href": "api/Global.ModOnlineRequirement.html",
    "title": "Enum ModOnlineRequirement | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModOnlineRequirement Namespace Global Assembly rwby.dll public enum ModOnlineRequirement Fields NotRequiredByPlayers = 0 RequiredByAllPlayers = 1"
  },
  "api/Global.ModProfile.html": {
    "href": "api/Global.ModProfile.html",
    "title": "Class ModProfile | Rwby Vytal Versus Documentation",
    "keywords": "Class ModProfile Namespace Global Assembly rwby.dll [Serializable] public class ModProfile Inheritance object ModProfile Fields modsByIdentifiers public List<string> modsByIdentifiers Field Value List<string> nickname public string nickname Field Value string"
  },
  "api/Global.ModifyHitstopSystem.Filter.html": {
    "href": "api/Global.ModifyHitstopSystem.Filter.html",
    "title": "Struct ModifyHitstopSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct ModifyHitstopSystem.Filter Namespace Global Assembly Quantum.Simulation.dll public struct ModifyHitstopSystem.Filter Fields Entity public EntityRef Entity Field Value EntityRef Fighter public Fighter* Fighter Field Value Fighter*"
  },
  "api/Global.ModifyHitstopSystem.html": {
    "href": "api/Global.ModifyHitstopSystem.html",
    "title": "Class ModifyHitstopSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyHitstopSystem Namespace Global Assembly Quantum.Simulation.dll public class ModifyHitstopSystem : SystemMainThreadFilter<ModifyHitstopSystem.Filter> Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<ModifyHitstopSystem.Filter> ModifyHitstopSystem Inherited Members SystemMainThreadFilter<ModifyHitstopSystem.Filter>.UseCulling SystemMainThreadFilter<ModifyHitstopSystem.Filter>.Without SystemMainThreadFilter<ModifyHitstopSystem.Filter>.Any SystemMainThreadFilter<ModifyHitstopSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame, ref Filter) Override to add workload. public override void Update(Frame f, ref ModifyHitstopSystem.Filter filter) Parameters f Frame The current frame. filter ModifyHitstopSystem.Filter The frame object."
  },
  "api/Global.NewCameraInputController.InputReader.html": {
    "href": "api/Global.NewCameraInputController.InputReader.html",
    "title": "Class NewCameraInputController.InputReader | Rwby Vytal Versus Documentation",
    "keywords": "Class NewCameraInputController.InputReader Namespace Global Assembly rwby.dll [Serializable] public class NewCameraInputController.InputReader Inheritance object NewCameraInputController.InputReader Fields gamepadAxisDeadzone public float gamepadAxisDeadzone Field Value float inputPlayer public InputPlayerManager inputPlayer Field Value InputPlayerManager Methods GetValue(Object, Hints) public float GetValue(Object context, IInputAxisOwner.AxisDescriptor.Hints hint) Parameters context Object hint IInputAxisOwner.AxisDescriptor.Hints Returns float SetInputPlayer(InputPlayerManager) public void SetInputPlayer(InputPlayerManager ipm) Parameters ipm InputPlayerManager"
  },
  "api/Global.NewCameraInputController.html": {
    "href": "api/Global.NewCameraInputController.html",
    "title": "Class NewCameraInputController | Rwby Vytal Versus Documentation",
    "keywords": "Class NewCameraInputController Namespace Global Assembly rwby.dll public class NewCameraInputController : InputAxisControllerBase<NewCameraInputController.InputReader> Inheritance object Object Component Behaviour MonoBehaviour InputAxisControllerBase<NewCameraInputController.InputReader> NewCameraInputController"
  },
  "api/Global.OptionsGameplayScreen.html": {
    "href": "api/Global.OptionsGameplayScreen.html",
    "title": "Class OptionsGameplayScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsGameplayScreen Namespace Global Assembly rwby.dll public class OptionsGameplayScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase OptionsGameplayScreen Implements IMenu Inherited Members MenuBase.currentHandler MenuBase.Open(MenuDirection, IMenuHandler) MenuBase.TryClose(MenuDirection, bool) Fields optionsMainScreen public OptionsMainScreen optionsMainScreen Field Value OptionsMainScreen Methods SetupOptions() public void SetupOptions()"
  },
  "api/Global.OptionsMainScreen.OptionsTabs.html": {
    "href": "api/Global.OptionsMainScreen.OptionsTabs.html",
    "title": "Enum OptionsMainScreen.OptionsTabs | Rwby Vytal Versus Documentation",
    "keywords": "Enum OptionsMainScreen.OptionsTabs Namespace Global Assembly rwby.dll public enum OptionsMainScreen.OptionsTabs Fields Controls = 1 Gameplay = 0 Language = 3 Modding = 4 Video = 2"
  },
  "api/Global.OptionsMainScreen.html": {
    "href": "api/Global.OptionsMainScreen.html",
    "title": "Class OptionsMainScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsMainScreen Namespace Global Assembly rwby.dll public class OptionsMainScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase OptionsMainScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields VideoScreen public OptionsVideoScreen VideoScreen Field Value OptionsVideoScreen currentTab [NonSerialized] public OptionsMainScreen.OptionsTabs currentTab Field Value OptionsMainScreen.OptionsTabs externalOptionPrefab public MenuLabelExternalOptionElement externalOptionPrefab Field Value MenuLabelExternalOptionElement gameplayScreen [Header(\"Screens\")] public OptionsGameplayScreen gameplayScreen Field Value OptionsGameplayScreen generalMenu public GameObject generalMenu Field Value GameObject menuLabelSliderPrefab [FormerlySerializedAs(\"slidePrefab\")] [Header(\"Prefabs\")] public MenuLabelFloatSliderElement menuLabelSliderPrefab Field Value MenuLabelFloatSliderElement optionsScrollRect public ScrollRect optionsScrollRect Field Value ScrollRect sidebarBottomScrollView public ScrollRect sidebarBottomScrollView Field Value ScrollRect sidebarOptionPrefab public OptionsSidebarItem sidebarOptionPrefab Field Value OptionsSidebarItem sidebarTopImage public Image sidebarTopImage Field Value Image sidebarTopText public TextMeshProUGUI sidebarTopText Field Value TextMeshProUGUI Methods BUTTON_Controls() public void BUTTON_Controls() BUTTON_Gameplay() public void BUTTON_Gameplay() BUTTON_Language() public void BUTTON_Language() BUTTON_Modding() public void BUTTON_Modding() BUTTON_Video() public void BUTTON_Video() ClearOptions() public void ClearOptions() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler PopulateSidebar(MenuLabelExternalOptionElement) public void PopulateSidebar(MenuLabelExternalOptionElement externalOption) Parameters externalOption MenuLabelExternalOptionElement TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.OptionsModdingScreen.html": {
    "href": "api/Global.OptionsModdingScreen.html",
    "title": "Class OptionsModdingScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsModdingScreen Namespace Global Assembly rwby.dll public class OptionsModdingScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase OptionsModdingScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields colorActive public Color colorActive Field Value Color colorInactive public Color colorInactive Field Value Color modListEntryPrefab public GameObject modListEntryPrefab Field Value GameObject modListScrollRect public ScrollRect modListScrollRect Field Value ScrollRect Methods BUTTON_Back() public void BUTTON_Back() BUTTON_SaveAndApplyProfile() public void BUTTON_SaveAndApplyProfile() BUTTON_SaveProfile() public void BUTTON_SaveProfile() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.OptionsScreen.OptionsScreenMenus.html": {
    "href": "api/Global.OptionsScreen.OptionsScreenMenus.html",
    "title": "Enum OptionsScreen.OptionsScreenMenus | Rwby Vytal Versus Documentation",
    "keywords": "Enum OptionsScreen.OptionsScreenMenus Namespace Global Assembly rwby.dll public enum OptionsScreen.OptionsScreenMenus Fields CONTROLS = 2 GAMEPLAY = 1 MAIN = 0 MODDING = 4 VIDEO = 3"
  },
  "api/Global.OptionsScreen.html": {
    "href": "api/Global.OptionsScreen.html",
    "title": "Class OptionsScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsScreen Namespace Global Assembly rwby.dll public class OptionsScreen : MenuBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase OptionsScreen Implements IMenu IMenuHandler Inherited Members MenuBase.currentHandler Fields menus public Dictionary<int, MenuBase> menus Field Value Dictionary<int, MenuBase> startMenu public OptionsScreen.OptionsScreenMenus startMenu Field Value OptionsScreen.OptionsScreenMenus Methods Back() public bool Back() Returns bool Forward(int, bool) public bool Forward(int menu, bool autoClose = true) Parameters menu int autoClose bool Returns bool GetCurrentMenu() public IMenu GetCurrentMenu() Returns IMenu GetHistory() public IList GetHistory() Returns IList HasSubmenuOpen() public bool HasSubmenuOpen() Returns bool Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/Global.OptionsSidebarItem.html": {
    "href": "api/Global.OptionsSidebarItem.html",
    "title": "Class OptionsSidebarItem | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsSidebarItem Namespace Global Assembly rwby.dll public class OptionsSidebarItem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour OptionsSidebarItem Fields button public Button button Field Value Button descriptionText public TextMeshProUGUI descriptionText Field Value TextMeshProUGUI splitter public GameObject splitter Field Value GameObject titleText public TextMeshProUGUI titleText Field Value TextMeshProUGUI Methods Initialize(string, string) public void Initialize(string title, string description) Parameters title string description string"
  },
  "api/Global.ParticleSystemVisualEffect.html": {
    "href": "api/Global.ParticleSystemVisualEffect.html",
    "title": "Class ParticleSystemVisualEffect | Rwby Vytal Versus Documentation",
    "keywords": "Class ParticleSystemVisualEffect Namespace Global Assembly rwby.dll public class ParticleSystemVisualEffect : VisualEffectBase Inheritance object Object Component Behaviour MonoBehaviour VisualEffectBase ParticleSystemVisualEffect Inherited Members VisualEffectBase.status VisualEffectBase.autoDestroy VisualEffectBase.autoDestroyAfter VisualEffectBase.entryAsset VisualEffectBase.freezeDuringHitstop VisualEffectBase.FixedUpdate() Fields particleSystems public ParticleSystem[] particleSystems Field Value ParticleSystem[] Properties CurrentTime public override float CurrentTime { get; protected set; } Property Value float Methods DestroyEffect() public override void DestroyEffect() Freeze() public override void Freeze() Play() public override void Play() Resume() public override void Resume() SeekTo(float, bool) public override void SeekTo(float time, bool play = true) Parameters time float play bool SetSeed(uint) public override void SetSeed(uint seed) Parameters seed uint Stop(bool) public override void Stop(bool clearParticles = true) Parameters clearParticles bool"
  },
  "api/Global.PhysicsExtensions.html": {
    "href": "api/Global.PhysicsExtensions.html",
    "title": "Class PhysicsExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class PhysicsExtensions Namespace Global Assembly Quantum.Simulation.dll public static class PhysicsExtensions Inheritance object PhysicsExtensions"
  },
  "api/Global.PlayerCamPositioner.html": {
    "href": "api/Global.PlayerCamPositioner.html",
    "title": "Class PlayerCamPositioner | Rwby Vytal Versus Documentation",
    "keywords": "Class PlayerCamPositioner Namespace Global Assembly rwby.dll public class PlayerCamPositioner : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerCamPositioner Fields pos public Transform pos Field Value Transform"
  },
  "api/Global.PopUpAssetInspector.html": {
    "href": "api/Global.PopUpAssetInspector.html",
    "title": "Class PopUpAssetInspector | Rwby Vytal Versus Documentation",
    "keywords": "Class PopUpAssetInspector Namespace Global Assembly HNSF.Editor.dll public class PopUpAssetInspector : EditorWindow Inheritance object Object ScriptableObject EditorWindow PopUpAssetInspector Methods Create(Object) public static PopUpAssetInspector Create(Object asset) Parameters asset Object Returns PopUpAssetInspector"
  },
  "api/Global.ProfileDefinition.CameraVariables.html": {
    "href": "api/Global.ProfileDefinition.CameraVariables.html",
    "title": "Struct ProfileDefinition.CameraVariables | Rwby Vytal Versus Documentation",
    "keywords": "Struct ProfileDefinition.CameraVariables Namespace Global Assembly rwby.dll [Serializable] public struct ProfileDefinition.CameraVariables Fields deadzoneHoz public float deadzoneHoz Field Value float deadzoneVert public float deadzoneVert Field Value float speedHoz public float speedHoz Field Value float speedLockOnHoz public float speedLockOnHoz Field Value float speedLockOnVert public float speedLockOnVert Field Value float speedVert public float speedVert Field Value float"
  },
  "api/Global.ProfileDefinition.html": {
    "href": "api/Global.ProfileDefinition.html",
    "title": "Struct ProfileDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Struct ProfileDefinition Namespace Global Assembly rwby.dll [Serializable] public struct ProfileDefinition Fields controllerCam [SerializeField] public ProfileDefinition.CameraVariables controllerCam Field Value ProfileDefinition.CameraVariables keyboardCam [SerializeField] public ProfileDefinition.CameraVariables keyboardCam Field Value ProfileDefinition.CameraVariables lockOnType [SerializeField] public int lockOnType Field Value int overrides [SerializeField] public string overrides Field Value string profileName [SerializeField] public string profileName Field Value string undeletable [SerializeField] public bool undeletable Field Value bool version [SerializeField] public byte version Field Value byte Methods IsValid() public bool IsValid() Returns bool"
  },
  "api/Global.ProfilesManager.ProfileAction.html": {
    "href": "api/Global.ProfilesManager.ProfileAction.html",
    "title": "Delegate ProfilesManager.ProfileAction | Rwby Vytal Versus Documentation",
    "keywords": "Delegate ProfilesManager.ProfileAction Namespace Global Assembly rwby.dll public delegate void ProfilesManager.ProfileAction(ProfilesManager profilesManager) Parameters profilesManager ProfilesManager"
  },
  "api/Global.ProfilesManager.ProfileChangeAction.html": {
    "href": "api/Global.ProfilesManager.ProfileChangeAction.html",
    "title": "Delegate ProfilesManager.ProfileChangeAction | Rwby Vytal Versus Documentation",
    "keywords": "Delegate ProfilesManager.ProfileChangeAction Namespace Global Assembly rwby.dll public delegate void ProfilesManager.ProfileChangeAction(ProfilesManager profilesManager, int index) Parameters profilesManager ProfilesManager index int"
  },
  "api/Global.ProfilesManager.html": {
    "href": "api/Global.ProfilesManager.html",
    "title": "Class ProfilesManager | Rwby Vytal Versus Documentation",
    "keywords": "Class ProfilesManager Namespace Global Assembly rwby.dll public class ProfilesManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ProfilesManager Fields ProfileNameToIndex public Dictionary<string, int> ProfileNameToIndex Field Value Dictionary<string, int> _inputManager public InputManager _inputManager Field Value InputManager defaultProfiles public ProfileDefinition[] defaultProfiles Field Value ProfileDefinition[] profiles [SerializeField] protected List<ProfileDefinition> profiles Field Value List<ProfileDefinition> Properties Profiles public ReadOnlyCollection<ProfileDefinition> Profiles { get; } Property Value ReadOnlyCollection<ProfileDefinition> Methods ApplyProfile(ProfileDefinition, string) public void ApplyProfile(ProfileDefinition profileDefinition, string profileName) Parameters profileDefinition ProfileDefinition profileName string DeleteProfile(string) public void DeleteProfile(string profileName) Parameters profileName string Init() public void Init() LoadProfiles() public bool LoadProfiles() Returns bool SaveProfiles() public void SaveProfiles() TryCreateProfile(string) public bool TryCreateProfile(string profileName) Parameters profileName string Returns bool TryGetProfile(string, out ProfileDefinition) public bool TryGetProfile(string name, out ProfileDefinition profileDefinition) Parameters name string profileDefinition ProfileDefinition Returns bool UpdateProfileBindingOverrides(string, string) public void UpdateProfileBindingOverrides(string bindingOverrides, string profileName) Parameters bindingOverrides string profileName string Events onProfileAdded public event ProfilesManager.ProfileAction onProfileAdded Event Type ProfilesManager.ProfileAction onProfileRemoved public event ProfilesManager.ProfileAction onProfileRemoved Event Type ProfilesManager.ProfileAction onProfileUpdated public event ProfilesManager.ProfileChangeAction onProfileUpdated Event Type ProfilesManager.ProfileChangeAction"
  },
  "api/Global.QuantumAssetDBHelper.html": {
    "href": "api/Global.QuantumAssetDBHelper.html",
    "title": "Class QuantumAssetDBHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class QuantumAssetDBHelper Namespace Global Assembly rwby.dll public static class QuantumAssetDBHelper Inheritance object QuantumAssetDBHelper"
  },
  "api/Global.RectTransformExtensions.html": {
    "href": "api/Global.RectTransformExtensions.html",
    "title": "Class RectTransformExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class RectTransformExtensions Namespace Global Assembly rwby.dll public static class RectTransformExtensions Inheritance object RectTransformExtensions Methods Bottom(RectTransform, float) public static RectTransform Bottom(this RectTransform rt, float y) Parameters rt RectTransform y float Returns RectTransform Left(RectTransform, float) public static RectTransform Left(this RectTransform rt, float x) Parameters rt RectTransform x float Returns RectTransform Right(RectTransform, float) public static RectTransform Right(this RectTransform rt, float x) Parameters rt RectTransform x float Returns RectTransform Top(RectTransform, float) public static RectTransform Top(this RectTransform rt, float y) Parameters rt RectTransform y float Returns RectTransform"
  },
  "api/Global.RectTransformPresetApplyUtils.html": {
    "href": "api/Global.RectTransformPresetApplyUtils.html",
    "title": "Class RectTransformPresetApplyUtils | Rwby Vytal Versus Documentation",
    "keywords": "Class RectTransformPresetApplyUtils Namespace Global Assembly rwby.dll Author: CG-Tespy public static class RectTransformPresetApplyUtils Inheritance object RectTransformPresetApplyUtils Methods AnchorAndPivotToPoint(RectTransform, Vector2) Sets the rectTransform's anchors and pivot to a given point. public static void AnchorAndPivotToPoint(this RectTransform rectTransform, Vector2 point) Parameters rectTransform RectTransform point Vector2 AnchorToPoint(RectTransform, Vector2) Sets the rectTransform's anchors to a given point. public static void AnchorToPoint(this RectTransform rectTransform, Vector2 anchorPoint) Parameters rectTransform RectTransform anchorPoint Vector2 ApplyAnchorPreset(RectTransform, TextAnchor, bool, bool) public static void ApplyAnchorPreset(this RectTransform rectTransform, TextAnchor presetToApply, bool alsoSetPivot = false, bool alsoSetPosition = false) Parameters rectTransform RectTransform presetToApply TextAnchor alsoSetPivot bool alsoSetPosition bool ApplyAnchorPresetRecursively(RectTransform, TextAnchor, bool, bool) public static void ApplyAnchorPresetRecursively(this RectTransform rectTransform, TextAnchor presetToApply, bool alsoSetPivot = false, bool alsoSetPosition = false) Parameters rectTransform RectTransform presetToApply TextAnchor alsoSetPivot bool alsoSetPosition bool Center(RectTransform, bool) public static Vector2 Center(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns Vector2 GetPositionOnRect(RectTransform, Vector2, bool) Returns a position on the rect transform based on the anchor position passed. Say, if the anchor position is (1, 1), this returns the position of the rect's upper right corner. public static Vector2 GetPositionOnRect(this RectTransform rectTransform, Vector2 anchorPos, bool inWorldCoordinates = false) Parameters rectTransform RectTransform anchorPos Vector2 inWorldCoordinates bool Returns Vector2 Height(RectTransform) public static float Height(this RectTransform rectTransform) Parameters rectTransform RectTransform Returns float LeftEdgeX(RectTransform, bool) public static float LeftEdgeX(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns float LowerEdgeY(RectTransform, bool) public static float LowerEdgeY(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns float LowerLeftCorner(RectTransform, bool) public static Vector2 LowerLeftCorner(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns Vector2 LowerRightCorner(RectTransform, bool) public static Vector2 LowerRightCorner(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns Vector2 PositionRelativeToParent(RectTransform, TextAnchor) public static void PositionRelativeToParent(this RectTransform rectTransform, TextAnchor preset) Parameters rectTransform RectTransform preset TextAnchor PositionRelativeToParent(RectTransform, Vector2) public static void PositionRelativeToParent(this RectTransform rectTransform, Vector2 anchorPos) Parameters rectTransform RectTransform anchorPos Vector2 RightEdgeX(RectTransform, bool) public static float RightEdgeX(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns float SetAnchors(RectTransform, Vector2, Vector2) public static void SetAnchors(this RectTransform rectTransform, Vector2 anchorMin, Vector2 anchorMax) Parameters rectTransform RectTransform anchorMin Vector2 anchorMax Vector2 SetAndStretchToParentSize(RectTransform, RectTransform) public static void SetAndStretchToParentSize(this RectTransform _mRect, RectTransform _parent) Parameters _mRect RectTransform _parent RectTransform SetPivot(RectTransform, TextAnchor) public static void SetPivot(this RectTransform rectTransform, TextAnchor newPivot) Parameters rectTransform RectTransform newPivot TextAnchor SetPivot(RectTransform, Vector2) Sets the pivot without changing the rect trans' physical position in the scene. Credit to jmorhart at Unity Answers for this function. public static void SetPivot(this RectTransform rectTransform, Vector2 newPivot) Parameters rectTransform RectTransform newPivot Vector2 ToViewportCoords(TextAnchor) public static Vector2 ToViewportCoords(this TextAnchor textAnchor) Parameters textAnchor TextAnchor Returns Vector2 UpperEdgeY(RectTransform, bool) public static float UpperEdgeY(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns float UpperLeftCorner(RectTransform, bool) public static Vector2 UpperLeftCorner(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns Vector2 UpperRightCorner(RectTransform, bool) public static Vector2 UpperRightCorner(this RectTransform rectTransform, bool inWorldCoordinates = false) Parameters rectTransform RectTransform inWorldCoordinates bool Returns Vector2 Width(RectTransform) public static float Width(this RectTransform rectTransform) Parameters rectTransform RectTransform Returns float"
  },
  "api/Global.SongContentHelper.html": {
    "href": "api/Global.SongContentHelper.html",
    "title": "Class SongContentHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class SongContentHelper Namespace Global Assembly rwby.dll public static class SongContentHelper Inheritance object SongContentHelper Methods GetAllSongDefinitions() public static UniTask<List<BaseSongDefinition>> GetAllSongDefinitions() Returns UniTask<List<BaseSongDefinition>> UnloadSongDefinitions(List<BaseSongDefinition>) public static void UnloadSongDefinitions(List<BaseSongDefinition> contentToUnload) Parameters contentToUnload List<BaseSongDefinition>"
  },
  "api/Global.SpawningSphere.html": {
    "href": "api/Global.SpawningSphere.html",
    "title": "Class SpawningSphere | Rwby Vytal Versus Documentation",
    "keywords": "Class SpawningSphere Namespace Global Assembly Assembly-CSharp.dll public class SpawningSphere : ModScript Inheritance object ModScript SpawningSphere Fields spawnSpeed public float spawnSpeed Field Value float Methods OnModLoaded() Event method triggered when the mod has been successfully loaded. Use this method for mod setup code, similar to Unity's Start method. public override void OnModLoaded() OnModUpdate() Event method triggered when the mod will be updated. Typically will be the frame rate of the game however excessive time spent in mod methods may result in throttling of this method. Use this method for mod update code, similar to Unity'S Update method public override void OnModUpdate()"
  },
  "api/Global.SpinningCube.html": {
    "href": "api/Global.SpinningCube.html",
    "title": "Class SpinningCube | Rwby Vytal Versus Documentation",
    "keywords": "Class SpinningCube Namespace Global Assembly Assembly-CSharp.dll public class SpinningCube : ModScriptBehaviour Inheritance object Object Component Behaviour MonoBehaviour ModScriptBehaviour SpinningCube Fields rotateSpeed public float rotateSpeed Field Value float Methods OnModLoaded() Event method triggered when the mod has been successfully loaded. Use this method for mod setup code, similar to Unity's Start method. public override void OnModLoaded() OnModUpdate() Event method triggered when the mod will be updated. Typically will be the frame rate of the game however excessive time spent in mod methods may result in throttling of this method. Use this method for mod update code, similar to Unity'S Update method public override void OnModUpdate()"
  },
  "api/Global.SplitScreenManager.RectDefinition.html": {
    "href": "api/Global.SplitScreenManager.RectDefinition.html",
    "title": "Class SplitScreenManager.RectDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class SplitScreenManager.RectDefinition Namespace Global Assembly rwby.dll [Serializable] public class SplitScreenManager.RectDefinition Inheritance object SplitScreenManager.RectDefinition Fields rects public Rect[] rects Field Value Rect[]"
  },
  "api/Global.SplitScreenManager.html": {
    "href": "api/Global.SplitScreenManager.html",
    "title": "Class SplitScreenManager | Rwby Vytal Versus Documentation",
    "keywords": "Class SplitScreenManager Namespace Global Assembly rwby.dll public class SplitScreenManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SplitScreenManager Fields backgroundCamera public Camera backgroundCamera Field Value Camera settingsManager public SettingsManager settingsManager Field Value SettingsManager shouldUpdateView public bool shouldUpdateView Field Value bool splitscreenRects public List<SplitScreenManager.RectDefinition> splitscreenRects Field Value List<SplitScreenManager.RectDefinition> Methods Activate() public void Activate() Clear() public void Clear() Deactivate() public void Deactivate() Init() public void Init() RegisterCamera(Camera) public void RegisterCamera(Camera camera) Parameters camera Camera UnregisterCamera(Camera) public void UnregisterCamera(Camera camera) Parameters camera Camera UpdateView() public void UpdateView()"
  },
  "api/Global.StateActionLabel.OnChange.html": {
    "href": "api/Global.StateActionLabel.OnChange.html",
    "title": "Delegate StateActionLabel.OnChange | Rwby Vytal Versus Documentation",
    "keywords": "Delegate StateActionLabel.OnChange Namespace Global Assembly HNSF.Editor.dll public delegate void StateActionLabel.OnChange()"
  },
  "api/Global.StateActionLabel.html": {
    "href": "api/Global.StateActionLabel.html",
    "title": "Class StateActionLabel | Rwby Vytal Versus Documentation",
    "keywords": "Class StateActionLabel Namespace Global Assembly HNSF.Editor.dll public class StateActionLabel : VisualElement Inheritance object CallbackEventHandler Focusable VisualElement StateActionLabel Constructors StateActionLabel(HNSFState, HNSFStateAction) public StateActionLabel(HNSFState state, HNSFStateAction stateAction) Parameters state HNSFState stateAction HNSFStateAction Fields whenActionChanged public StateActionLabel.OnChange whenActionChanged Field Value StateActionLabel.OnChange Methods SetupContextMenu(HNSFState, HNSFStateAction) public void SetupContextMenu(HNSFState state, HNSFStateAction stateAction) Parameters state HNSFState stateAction HNSFStateAction"
  },
  "api/Global.StateConverter.html": {
    "href": "api/Global.StateConverter.html",
    "title": "Class StateConverter | Rwby Vytal Versus Documentation",
    "keywords": "Class StateConverter Namespace Global Assembly HNSF.Editor.dll public class StateConverter : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour StateConverter Methods ConvertStates() [MenuItem(\"rwby/Extract State Actions\")] public static void ConvertStates()"
  },
  "api/Global.StateTimelineEditorView.html": {
    "href": "api/Global.StateTimelineEditorView.html",
    "title": "Class StateTimelineEditorView | Rwby Vytal Versus Documentation",
    "keywords": "Class StateTimelineEditorView Namespace Global Assembly HNSF.Editor.dll public class StateTimelineEditorView : VisualElement Inheritance object CallbackEventHandler Focusable VisualElement StateTimelineEditorView Constructors StateTimelineEditorView() public StateTimelineEditorView() Fields actionCopy public static HNSFStateAction actionCopy Field Value HNSFStateAction depthColors public Color[] depthColors Field Value Color[] frameInterruptColor public Color frameInterruptColor Field Value Color frameZeroColor public Color frameZeroColor Field Value Color lastKnownMousePosition public static Vector2 lastKnownMousePosition Field Value Vector2 parentColor public Color parentColor Field Value Color zoomMultiplier [SerializeField] public float zoomMultiplier Field Value float Methods BuildFrameCounter() public virtual void BuildFrameCounter() BuildSideBar() public virtual UniTask BuildSideBar() Returns UniTask BuildUI() public virtual UniTaskVoid BuildUI() Returns UniTaskVoid ChangeZoomLevel(float) public virtual void ChangeZoomLevel(float multi) Parameters multi float CreateFramebar(HNSFState, HNSFStateAction) public virtual StateTimelineFramebar CreateFramebar(HNSFState stateTimeline, HNSFStateAction stateAction) Parameters stateTimeline HNSFState stateAction HNSFStateAction Returns StateTimelineFramebar DeepCopyReflection<T>(T) public static T DeepCopyReflection<T>(T input) Parameters input T Returns T Type Parameters T ForceRefresh() public void ForceRefresh() GetFrameWidth() public virtual float GetFrameWidth() Returns float GetStateTimelineParents(HNSFState) public virtual HNSFState[] GetStateTimelineParents(HNSFState startingTimeline) Parameters startingTimeline HNSFState Returns HNSFState[] SetStateAsset(HNSFState) public void SetStateAsset(HNSFState state) Parameters state HNSFState SidebarCreateLabel(ScrollView, HNSFState, HNSFStateAction, int) public virtual void SidebarCreateLabel(ScrollView sidebarPanel, HNSFState stateTimeline, HNSFStateAction stateAction, int depth = 0) Parameters sidebarPanel ScrollView stateTimeline HNSFState stateAction HNSFStateAction depth int"
  },
  "api/Global.StateTimelineFramebar.html": {
    "href": "api/Global.StateTimelineFramebar.html",
    "title": "Class StateTimelineFramebar | Rwby Vytal Versus Documentation",
    "keywords": "Class StateTimelineFramebar Namespace Global Assembly HNSF.Editor.dll public class StateTimelineFramebar : VisualElement Inheritance object CallbackEventHandler Focusable VisualElement StateTimelineFramebar Constructors StateTimelineFramebar(HNSFState, HNSFStateAction) public StateTimelineFramebar(HNSFState state, HNSFStateAction stateAction) Parameters state HNSFState stateAction HNSFStateAction Methods UpdateFramebar() public void UpdateFramebar()"
  },
  "api/Global.SubassetConverter.html": {
    "href": "api/Global.SubassetConverter.html",
    "title": "Class SubassetConverter | Rwby Vytal Versus Documentation",
    "keywords": "Class SubassetConverter Namespace Global Assembly rwby.editor.dll public class SubassetConverter : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SubassetConverter Methods ConvertStates() [MenuItem(\"Tools/Extract Subassets\")] public static void ConvertStates()"
  },
  "api/Global.TextColorBounce.html": {
    "href": "api/Global.TextColorBounce.html",
    "title": "Class TextColorBounce | Rwby Vytal Versus Documentation",
    "keywords": "Class TextColorBounce Namespace Global Assembly rwby.dll public class TextColorBounce : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TextColorBounce Fields duration public float duration Field Value float endColor public Color endColor Field Value Color holdTime public float holdTime Field Value float startColor public Color startColor Field Value Color text public TextMeshProUGUI text Field Value TextMeshProUGUI"
  },
  "api/Global.UIOutline.html": {
    "href": "api/Global.UIOutline.html",
    "title": "Class UIOutline | Rwby Vytal Versus Documentation",
    "keywords": "Class UIOutline Namespace Global Assembly Assembly-CSharp.dll [RequireComponent(typeof(CanvasRenderer))] public class UIOutline : MaskableGraphic Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour Graphic MaskableGraphic UIOutline Properties mainTexture public override Texture mainTexture { get; } Property Value Texture Methods OnPopulateMesh(VertexHelper) protected override void OnPopulateMesh(VertexHelper vh) Parameters vh VertexHelper OnRectTransformDimensionsChange() protected override void OnRectTransformDimensionsChange()"
  },
  "api/Global.UModFighterDefinition.html": {
    "href": "api/Global.UModFighterDefinition.html",
    "title": "Class UModFighterDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class UModFighterDefinition Namespace Global Assembly rwby.modding.umod.dll [Serializable] [CreateAssetMenu(menuName = \"rwby/UMod/Content/Fighter Definition\")] public class UModFighterDefinition : IFighterDefinition Inheritance object Object ScriptableObject IContentDefinition IFighterDefinition UModFighterDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags Properties Aura public override int Aura { get; } Property Value int AuraGainPerFrame public override int AuraGainPerFrame { get; } Property Value int Description public override string Description { get; } Property Value string Health public override int Health { get; } Property Value int Name public override string Name { get; } Property Value string Selectable public override bool Selectable { get; } Property Value bool Methods GetCommandList() public override BaseCommandListDefinition GetCommandList() Returns BaseCommandListDefinition GetFighter() public override GameObject GetFighter() Returns GameObject GetFighterQuantum() public override CharaDefinitionAsset GetFighterQuantum() Returns CharaDefinitionAsset GetHUDReferences() public override ModAssetSoftReference[] GetHUDReferences() Returns ModAssetSoftReference[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> RegisterQuantumAsset() public override void RegisterQuantumAsset() Unload() public override void Unload() UnloadAssets() public override void UnloadAssets() UnregisterQuantumAsset() public override void UnregisterQuantumAsset()"
  },
  "api/Global.UModFighterDefinitionContainer.html": {
    "href": "api/Global.UModFighterDefinitionContainer.html",
    "title": "Class UModFighterDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class UModFighterDefinitionContainer Namespace Global Assembly rwby.modding.umod.dll [CreateAssetMenu(menuName = \"rwby/UMod/Content/Fighter Definitions Container\", fileName = \"fighterdefinitioncontainer\")] public class UModFighterDefinitionContainer : BaseFighterDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseFighterDefinitionContainer UModFighterDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Fields fighterReferences [SerializeField] public ExternalModAssetSoftReference[] fighterReferences Field Value ExternalModAssetSoftReference[] Methods GetFighters() public override IFighterDefinition[] GetFighters() Returns IFighterDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadFighterDefinitions() public override UniTask<bool> LoadFighterDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadFighterDefinitions() public override void UnloadFighterDefinitions()"
  },
  "api/Global.UModGamemodeDefinitionContainer.html": {
    "href": "api/Global.UModGamemodeDefinitionContainer.html",
    "title": "Class UModGamemodeDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class UModGamemodeDefinitionContainer Namespace Global Assembly rwby.modding.umod.dll [CreateAssetMenu(menuName = \"rwby/UMod/Content/Gamemode Definitions Container\", fileName = \"gamemodedefinitioncontainer\")] public class UModGamemodeDefinitionContainer : BaseGamemodeDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseGamemodeDefinitionContainer UModGamemodeDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetGamemodes() public override BaseGamemodeDefinition[] GetGamemodes() Returns BaseGamemodeDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadGamemodeDefinitions() public override UniTask<bool> LoadGamemodeDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadGamemodeDefinitions() public override void UnloadGamemodeDefinitions()"
  },
  "api/Global.UModLoadedModDefinition.html": {
    "href": "api/Global.UModLoadedModDefinition.html",
    "title": "Class UModLoadedModDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class UModLoadedModDefinition Namespace Global Assembly rwby.modding.umod.dll public class UModLoadedModDefinition : LoadedModDefinition Inheritance object LoadedModDefinition UModLoadedModDefinition Inherited Members LoadedModDefinition.information LoadedModDefinition.modAsset LoadedModDefinition.HasValidModAsset() Fields modHost public ModHost modHost Field Value ModHost"
  },
  "api/Global.UModMapDefinition.html": {
    "href": "api/Global.UModMapDefinition.html",
    "title": "Class UModMapDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class UModMapDefinition Namespace Global Assembly rwby.modding.umod.dll [Serializable] [CreateAssetMenu(menuName = \"rwby/UMod/Content/Map Definition\")] public class UModMapDefinition : IMapDefinition Inheritance object Object ScriptableObject IContentDefinition IMapDefinition UModMapDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetMapAsset() public override Map GetMapAsset() Returns Map GetSceneName() public override string GetSceneName() Returns string Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadMap(LoadSceneMode) public override UniTask<bool> LoadMap(LoadSceneMode loadMode) Parameters loadMode LoadSceneMode Returns UniTask<bool> Unload() public override void Unload() UnloadMap() public override UniTask UnloadMap() Returns UniTask"
  },
  "api/Global.UModModInfoAsset.html": {
    "href": "api/Global.UModModInfoAsset.html",
    "title": "Class UModModInfoAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class UModModInfoAsset Namespace Global Assembly rwby.modding.umod.dll [CreateAssetMenu(menuName = \"rwby/modding/UMod ModInfoAsset\")] [Serializable] public class UModModInfoAsset : BaseModInfoAsset Inheritance object Object ScriptableObject BaseModInfoAsset UModModInfoAsset Inherited Members BaseModInfoAsset.ModVersion BaseModInfoAsset.OnlineRequirement BaseModInfoAsset.Build() BaseModInfoAsset.OnUnload() BaseModInfoAsset.GetAssetListPaginated(int, int) BaseModInfoAsset.LoadAssetByIDAsync<T>(string) BaseModInfoAsset.RegisterQuantumAsset(string) BaseModInfoAsset.UnregisterQuantumAsset(string) Fields AssetPathToIDMappng Converts an asset path to it's custom id. If no custom ID was assigned, just returns the asset path. [SerializeField] [HideInInspector] public SerializedDictionary<string, string> AssetPathToIDMappng Field Value SerializedDictionary<string, string> IDToAssetMapping Converts an asset's custom id to it's asset path. [SerializeField] [HideInInspector] public SerializedDictionary<string, string> IDToAssetMapping Field Value SerializedDictionary<string, string> TypeToAssetPaths Returns the paths of all assets in the mod that have the given type. The type string is the AssemblyQualifiedName. [SerializeField] [HideInInspector] public SerializedDictionary<string, List<string>> TypeToAssetPaths Field Value SerializedDictionary<string, List<string>> assetIdRemap Used by the mod creator to assign custom IDs to any asset in the mod. [SerializeField] [SerializedDictionary(\"Identifier\", \"Asset\")] public SerializedDictionary<ExternalModAssetSoftReference, string> assetIdRemap Field Value SerializedDictionary<ExternalModAssetSoftReference, string> excludedAssetsFromAutoCreation Used by the mod creator to ignore the contents of any folder or asset from auto reference creation. public List<ExternalModAssetSoftReference> excludedAssetsFromAutoCreation Field Value List<ExternalModAssetSoftReference> guidToAssetReference Keeps track of the auto created references and what asset they're pointing to. The key is the asset's GUID. [SerializeField] public SerializedDictionary<string, ExternalModAssetSoftReference> guidToAssetReference Field Value SerializedDictionary<string, ExternalModAssetSoftReference> modID public string modID Field Value string Properties ModDefinition public override LoadedModDefinition ModDefinition { get; set; } Property Value LoadedModDefinition ModID public override string ModID { get; } Property Value string Methods GetAssetByID(string, bool) public override Object GetAssetByID(string id, bool autoLoad = false) Parameters id string autoLoad bool Returns Object GetAssetByID<T>(string, bool) public override T GetAssetByID<T>(string id, bool autoLoad = false) where T : Object Parameters id string autoLoad bool Returns T Type Parameters T GetAssetByPath(string) public Object GetAssetByPath(string path) Parameters path string Returns Object GetAssetInfo(string) public override object GetAssetInfo(string id) Parameters id string Returns object GetAssetList() Gets a list of all content (loaded or not) in this mod. public override List<string> GetAssetList() Returns List<string> A list of the IDs of content. GetAssetsByType<T>(bool) public override List<T> GetAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Returns List<T> Type Parameters T GetLoadedAssetList() Gets a list of all loaded content in this mod. public override List<string> GetLoadedAssetList() Returns List<string> A list of the IDs of loaded content. GetLoadedAssetListByType<T>() Gets a list of all loaded content in the mod with the given type. public override List<string> GetLoadedAssetListByType<T>() where T : Object Returns List<string> A list of the IDs of the loaded content for the given type. Type Parameters T The type of the content. HasAsset(string) public override bool HasAsset(string id) Parameters id string Returns bool LoadAssetByID(string) Loads an asset by the ID given. public override bool LoadAssetByID(string id) Parameters id string The ID of the asset. Returns bool True if the asset was loaded; otherwise false. LoadAssetByIDAsync(string) Loads an asset by the ID given asynchronously. public override UniTask<bool> LoadAssetByIDAsync(string id) Parameters id string The ID of the asset. Returns UniTask<bool> True if the asset was loaded; otherwise false. OnLoad() Called right when the mod this ModInfoAsset belongs to loads. public override void OnLoad() UnloadAssetByID(string) public override void UnloadAssetByID(string id) Parameters id string UnloadAssetsByType<T>(bool) public override void UnloadAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Type Parameters T"
  },
  "api/Global.UModModInfoAssetInspector.html": {
    "href": "api/Global.UModModInfoAssetInspector.html",
    "title": "Class UModModInfoAssetInspector | Rwby Vytal Versus Documentation",
    "keywords": "Class UModModInfoAssetInspector Namespace Global Assembly rwby.modding.helper.dll [CustomEditor(typeof(UModModInfoAsset))] public class UModModInfoAssetInspector : Editor Inheritance object Object ScriptableObject Editor UModModInfoAssetInspector Methods CreateInspectorGUI() Implement this method to make a custom UIElements inspector. public override VisualElement CreateInspectorGUI() Returns VisualElement CreateOrUpdateTypeMap(Type, string, Dictionary<string, List<string>>) public void CreateOrUpdateTypeMap(Type type, string assetPath, Dictionary<string, List<string>> dict) Parameters type Type assetPath string dict Dictionary<string, List<string>>"
  },
  "api/Global.UModModLoader.html": {
    "href": "api/Global.UModModLoader.html",
    "title": "Class UModModLoader | Rwby Vytal Versus Documentation",
    "keywords": "Class UModModLoader Namespace Global Assembly rwby.modding.umod.dll public class UModModLoader : BaseModLoader Inheritance object BaseModLoader UModModLoader Properties LoaderType public override ModLoaderType LoaderType { get; } Property Value ModLoaderType Methods TryLoadMod(ModManager, AvailableModDefinition) public override UniTask<LoadedModDefinition> TryLoadMod(ModManager modManager, AvailableModDefinition modDefinition) Parameters modManager ModManager modDefinition AvailableModDefinition Returns UniTask<LoadedModDefinition> TryUnloadMod(ModManager, LoadedModDefinition) public override bool TryUnloadMod(ModManager modManager, LoadedModDefinition modLoadedDefinition) Parameters modManager ModManager modLoadedDefinition LoadedModDefinition Returns bool"
  },
  "api/Global.VFXGraphVisualEffect.html": {
    "href": "api/Global.VFXGraphVisualEffect.html",
    "title": "Class VFXGraphVisualEffect | Rwby Vytal Versus Documentation",
    "keywords": "Class VFXGraphVisualEffect Namespace Global Assembly rwby.dll public class VFXGraphVisualEffect : VisualEffectBase Inheritance object Object Component Behaviour MonoBehaviour VisualEffectBase VFXGraphVisualEffect Inherited Members VisualEffectBase.CurrentTime VisualEffectBase.status VisualEffectBase.autoDestroy VisualEffectBase.autoDestroyAfter VisualEffectBase.entryAsset VisualEffectBase.freezeDuringHitstop VisualEffectBase.FixedUpdate() VisualEffectBase.SetSeed(uint) Fields visualEffects public VisualEffect[] visualEffects Field Value VisualEffect[] Methods DestroyEffect() public override void DestroyEffect() Freeze() public override void Freeze() Play() public override void Play() Resume() public override void Resume() SeekTo(float, bool) public override void SeekTo(float time, bool play = true) Parameters time float play bool Stop(bool) public override void Stop(bool clearParticles = true) Parameters clearParticles bool"
  },
  "api/Global.VisualEffectBase.VisualEffectPlayStatus.html": {
    "href": "api/Global.VisualEffectBase.VisualEffectPlayStatus.html",
    "title": "Enum VisualEffectBase.VisualEffectPlayStatus | Rwby Vytal Versus Documentation",
    "keywords": "Enum VisualEffectBase.VisualEffectPlayStatus Namespace Global Assembly rwby.dll public enum VisualEffectBase.VisualEffectPlayStatus Fields Paused = 2 Playing = 1 Stopped = 0"
  },
  "api/Global.VisualEffectBase.html": {
    "href": "api/Global.VisualEffectBase.html",
    "title": "Class VisualEffectBase | Rwby Vytal Versus Documentation",
    "keywords": "Class VisualEffectBase Namespace Global Assembly rwby.dll public class VisualEffectBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour VisualEffectBase Derived AnimancerVisualEffect GroupVisualEffect ParticleSystemVisualEffect VFXGraphVisualEffect Fields autoDestroy public bool autoDestroy Field Value bool autoDestroyAfter public float autoDestroyAfter Field Value float entryAsset [NonSerialized] public VisualEffectEntry entryAsset Field Value VisualEffectEntry freezeDuringHitstop public bool freezeDuringHitstop Field Value bool status public VisualEffectBase.VisualEffectPlayStatus status Field Value VisualEffectBase.VisualEffectPlayStatus Properties CurrentTime public virtual float CurrentTime { get; protected set; } Property Value float Methods DestroyEffect() public virtual void DestroyEffect() FixedUpdate() public virtual void FixedUpdate() Freeze() public virtual void Freeze() Play() public virtual void Play() Resume() public virtual void Resume() SeekTo(float, bool) public virtual void SeekTo(float time, bool play = true) Parameters time float play bool SetSeed(uint) public virtual void SetSeed(uint seed) Parameters seed uint Stop(bool) public virtual void Stop(bool clearParticles = true) Parameters clearParticles bool"
  },
  "api/Global.WindowsServerConsole.html": {
    "href": "api/Global.WindowsServerConsole.html",
    "title": "Class WindowsServerConsole | Rwby Vytal Versus Documentation",
    "keywords": "Class WindowsServerConsole Namespace Global Assembly rwby.dll public class WindowsServerConsole : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour WindowsServerConsole"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Classes AddTypeMenuAttribute An attribute that overrides the name of the type displayed in the SubclassSelector popup. AddressableFighterDefinitionContainer AddressablesFighterDefinition AddressablesGamemodeDefinition AddressablesGamemodeDefinitionContainer AddressablesLoadedModDefinition AddressablesMapDefinition AddressablesMapDefinitionContainer AddressablesModInfoAsset AddressablesModLoader AdvancedTypeModal AdvancedTypePopup AdvancedTypePopupItem AnimancerVisualEffect AnimationAssetBaker AnimationCurveExtensions AvailableModDefinition BF_AddSnow BF_FPS BF_FxMouse BF_InputSystemSwitcher BF_InteractiveEffects BF_InteractiveEffectsAdditional BF_LightSwitch BF_PlayerMovement BF_PlayerReset BF_PlayerSnow BF_Rotator BF_SnowAssetManager BF_SnowSubShowcase BF_SnowTerrain BF_SquareBanding BaseContentDefinitionContainer<T> BaseFighterDefinitionContainer BaseGamemodeDefinition BaseGamemodeDefinitionContainer BaseHudElementDefinition BaseHudElementDefinitionContainer BaseMapDefinitionContainer BaseModInfoAsset BaseModItemAsset BaseModLoader ControllerGlyphDatabase ControllerGlyphs ControlsMainScreen ControlsProfileMappingScreen ControlsScreen DevicePickerUtility DualsenseEdgeGamepadHID EQSTester EntityInputDebugger EntityPhysicsDebugger EntityPrototypeBaker EntitySoundManager EntityStateDebugger EntityViewTrackECB EntityVisibilityUpdater ExButton FPConverter FighterContentHelper FighterPassiveAuraGainSystem FighterShakeManager FighterVFXManager FighterViewHandle FileCreationHelpers GamemodeContentHelper GeneralHelpers GlobalFighterEventManager GlobalSoundManager GlobalVFXManager GlyphEntry GroupVisualEffect HNSFHelper HudElementContentHelper IContentDefinition IFighterDefinition IMapDefinition InputPlayerManager InputRumbleManager JumpCalcWindow LoadedModDefinition LocalLoadedModDefinition LocalModLoader MLPForceSaveProbes MLPSettings MapContentHelper MapViewManager MenuAndHandlerBase MenuHandlerBase ModAssetReference ModContentManager ModManager ModProfile ModifyHitstopSystem NewCameraInputController NewCameraInputController.InputReader OptionsGameplayScreen OptionsMainScreen OptionsModdingScreen OptionsScreen OptionsSidebarItem ParticleSystemVisualEffect PhysicsExtensions PlayerCamPositioner PopUpAssetInspector ProfilesManager QuantumAssetDBHelper RectTransformExtensions RectTransformPresetApplyUtils Author: CG-Tespy SongContentHelper SpawningSphere SpinningCube SplitScreenManager SplitScreenManager.RectDefinition StateActionLabel StateConverter StateTimelineEditorView StateTimelineFramebar SubassetConverter TextColorBounce UIOutline UModFighterDefinition UModFighterDefinitionContainer UModGamemodeDefinitionContainer UModLoadedModDefinition UModMapDefinition VFXGraphVisualEffect VisualEffectBase WindowsServerConsole Structs FighterPassiveAuraGainSystem.Filter GamemodeTeamConfig ModAssetSoftReference ModifyHitstopSystem.Filter ProfileDefinition ProfileDefinition.CameraVariables Interfaces IControllerChangedCallback IExternalOptionCallback IModQuantumData INavigationStyleChanged Enums ControlsScreen.MenuTypes HitboxResolveResult InputPlayerManager.NavigationType ModLoaderType ModOnlineRequirement OptionsMainScreen.OptionsTabs OptionsScreen.OptionsScreenMenus VisualEffectBase.VisualEffectPlayStatus Delegates DevicePickerUtility.DelegatePickerEvent InputPlayerManager.DelegateDeviceChanged InputPlayerManager.DelegateNavigationStyleChange InputPlayerManager.DelegateWhenControlSchemeChanged ProfilesManager.ProfileAction ProfilesManager.ProfileChangeAction StateActionLabel.OnChange"
  },
  "api/Quantum.AIAction.html": {
    "href": "api/Quantum.AIAction.html",
    "title": "Class AIAction | Rwby Vytal Versus Documentation",
    "keywords": "Class AIAction Namespace Quantum Assembly Quantum.Simulation.dll public abstract class AIAction : AIActionBase Inheritance object Object ScriptableObject AssetObject AIActionBase AIAction Derived ExecuteIfConditionAction FindEnemyAction HFSMFindDangerSourceAction Inherited Members AIActionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref AIContext) public virtual void Execute(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext Execute(FrameThreadSafe, EntityRef, ref AIContext) public override void Execute(FrameThreadSafe frame, EntityRef entity, ref AIContext aiContext) Parameters frame FrameThreadSafe entity EntityRef aiContext AIContext"
  },
  "api/Quantum.AICharacterActor.html": {
    "href": "api/Quantum.AICharacterActor.html",
    "title": "Struct AICharacterActor | Rwby Vytal Versus Documentation",
    "keywords": "Struct AICharacterActor Namespace Quantum Assembly Quantum.Simulation.dll public struct AICharacterActor : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 8 Field Value int behaviourTree public AssetRef<BTRoot> behaviourTree Field Value AssetRef<BTRoot> Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.AIConfig.html": {
    "href": "api/Quantum.AIConfig.html",
    "title": "Class AIConfig | Rwby Vytal Versus Documentation",
    "keywords": "Class AIConfig Namespace Quantum Assembly Quantum.Simulation.dll public class AIConfig : AIConfigBase Inheritance object Object ScriptableObject AssetObject AIConfigBase AIConfig Derived AIConfigUser Inherited Members AIConfigBase.DefaultConfig AIConfigBase.KeyValuePairs AIConfigBase.Get(string) AIConfigBase.Set<T>(string, T) AIConfigBase.Count AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.AIConfigExtensions.html": {
    "href": "api/Quantum.AIConfigExtensions.html",
    "title": "Class AIConfigExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class AIConfigExtensions Namespace Quantum Assembly Quantum.Simulation.dll public static class AIConfigExtensions Inheritance object AIConfigExtensions Methods GetConfig(BTAgent, FrameBase) public static AIConfig GetConfig(this BTAgent agent, FrameBase frame) Parameters agent BTAgent frame FrameBase Returns AIConfig GetConfig(BTAgent, FrameThreadSafe) public static AIConfig GetConfig(this BTAgent agent, FrameThreadSafe frame) Parameters agent BTAgent frame FrameThreadSafe Returns AIConfig GetConfig(HFSMAgent, FrameBase) public static AIConfig GetConfig(this HFSMAgent agent, FrameBase frame) Parameters agent HFSMAgent frame FrameBase Returns AIConfig GetConfig(HFSMAgent, FrameThreadSafe) public static AIConfig GetConfig(this HFSMAgent agent, FrameThreadSafe frame) Parameters agent HFSMAgent frame FrameThreadSafe Returns AIConfig GetConfig(UTAgent, FrameBase) public static AIConfig GetConfig(this UTAgent agent, FrameBase frame) Parameters agent UTAgent frame FrameBase Returns AIConfig GetConfig(UTAgent, FrameThreadSafe) public static AIConfig GetConfig(this UTAgent agent, FrameThreadSafe frame) Parameters agent UTAgent frame FrameThreadSafe Returns AIConfig"
  },
  "api/Quantum.AIConfigUser.html": {
    "href": "api/Quantum.AIConfigUser.html",
    "title": "Class AIConfigUser | Rwby Vytal Versus Documentation",
    "keywords": "Class AIConfigUser Namespace Quantum Assembly Quantum.Simulation.dll public class AIConfigUser : AIConfig Inheritance object Object ScriptableObject AssetObject AIConfigBase AIConfig AIConfigUser Inherited Members AIConfigBase.DefaultConfig AIConfigBase.KeyValuePairs AIConfigBase.Get(string) AIConfigBase.Set<T>(string, T) AIConfigBase.Count AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.AIContextExtensions.html": {
    "href": "api/Quantum.AIContextExtensions.html",
    "title": "Class AIContextExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class AIContextExtensions Namespace Quantum Assembly Quantum.Simulation.dll public static class AIContextExtensions Inheritance object AIContextExtensions Methods UserData(ref AIContext) public static ref AIContextUser UserData(this ref AIContext aiContext) Parameters aiContext AIContext Returns AIContextUser"
  },
  "api/Quantum.AIContextUser.html": {
    "href": "api/Quantum.AIContextUser.html",
    "title": "Struct AIContextUser | Rwby Vytal Versus Documentation",
    "keywords": "Struct AIContextUser Namespace Quantum Assembly Quantum.Simulation.dll public struct AIContextUser Constructors AIContextUser(AIBlackboardComponent*) public AIContextUser(AIBlackboardComponent* blackboard) Parameters blackboard AIBlackboardComponent* AIContextUser(AIBlackboardComponent*, HFSMAgent*) public AIContextUser(AIBlackboardComponent* blackboard, HFSMAgent* hfsmAgent) Parameters blackboard AIBlackboardComponent* hfsmAgent HFSMAgent* Fields Blackboard public readonly AIBlackboardComponent* Blackboard Field Value AIBlackboardComponent* HFSMAgent public readonly HFSMAgent* HFSMAgent Field Value HFSMAgent*"
  },
  "api/Quantum.AIFunction-1.html": {
    "href": "api/Quantum.AIFunction-1.html",
    "title": "Class AIFunction<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class AIFunction<T> Namespace Quantum Assembly Quantum.Simulation.dll public abstract class AIFunction<T> : AIFunctionBase<T> Type Parameters T Inheritance object Object ScriptableObject AssetObject AIFunctionBase AIFunctionBase<T> AIFunction<T> Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref AIContext) public virtual T Execute(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext Returns T Execute(FrameThreadSafe, EntityRef, ref AIContext) public override T Execute(FrameThreadSafe frame, EntityRef entity, ref AIContext aiContext) Parameters frame FrameThreadSafe entity EntityRef aiContext AIContext Returns T"
  },
  "api/Quantum.AIFunction.html": {
    "href": "api/Quantum.AIFunction.html",
    "title": "Class AIFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class AIFunction Namespace Quantum Assembly Quantum.Simulation.dll public class AIFunction : AIFunctionBase Inheritance object Object ScriptableObject AssetObject AIFunctionBase AIFunction Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.AIParam-1.html": {
    "href": "api/Quantum.AIParam-1.html",
    "title": "Class AIParam<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class AIParam<T> Namespace Quantum Assembly Quantum.Simulation.dll public abstract class AIParam<T> : AIParamBase<T> Type Parameters T Inheritance object AIParamBase<T> AIParam<T> Inherited Members AIParamBase<T>.Source AIParamBase<T>.Key AIParamBase<T>.DefaultValue AIParamBase<T>.GetBlackboardValue(BlackboardValue) AIParamBase<T>.GetConfigValue(AIConfigBase.KeyValuePair) AIParamBase<T>.Resolve(FrameBase, EntityRef, AIBlackboardComponent*, AIConfigBase) AIParamBase<T>.Resolve(FrameBase, EntityRef, AIBlackboardComponent*, AIConfigBase, ref AIContext) AIParamBase<T>.Resolve(FrameThreadSafe, EntityRef, AIBlackboardComponent*, AIConfigBase, ref AIContext) AIParamBase<T>.ResolveBlackboard(FrameBase, AIBlackboardComponent*) AIParamBase<T>.ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*) AIParamBase<T>.ResolveConfig(FrameBase, AIConfigBase) AIParamBase<T>.ResolveConfig(FrameThreadSafe, AIConfigBase) AIParamBase<T>.ResolveFunction(FrameBase, EntityRef, ref AIContext) AIParamBase<T>.ResolveFunction(FrameThreadSafe, EntityRef, ref AIContext) Methods GetFunctionValue(Frame, EntityRef, ref AIContext) protected virtual T GetFunctionValue(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext Returns T GetFunctionValue(FrameThreadSafe, EntityRef, ref AIContext) protected override T GetFunctionValue(FrameThreadSafe frame, EntityRef entity, ref AIContext aiContext) Parameters frame FrameThreadSafe entity EntityRef aiContext AIContext Returns T"
  },
  "api/Quantum.ActionRange.html": {
    "href": "api/Quantum.ActionRange.html",
    "title": "Struct ActionRange | Rwby Vytal Versus Documentation",
    "keywords": "Struct ActionRange Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public struct ActionRange Fields end public int end Field Value int start public int start Field Value int"
  },
  "api/Quantum.Animation.CharaAnimator.html": {
    "href": "api/Quantum.Animation.CharaAnimator.html",
    "title": "Struct CharaAnimator | Rwby Vytal Versus Documentation",
    "keywords": "Struct CharaAnimator Namespace Quantum.Animation Assembly Quantum.Simulation.dll public struct CharaAnimator"
  },
  "api/Quantum.Animation.html": {
    "href": "api/Quantum.Animation.html",
    "title": "Namespace Quantum.Animation | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Quantum.Animation Structs CharaAnimator"
  },
  "api/Quantum.AnimationAutoplaySystem.Filter.html": {
    "href": "api/Quantum.AnimationAutoplaySystem.Filter.html",
    "title": "Struct AnimationAutoplaySystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct AnimationAutoplaySystem.Filter Namespace Quantum Assembly Quantum.Simulation.dll public struct AnimationAutoplaySystem.Filter Fields CharaAnimator public CharaAnimator* CharaAnimator Field Value CharaAnimator* Entity public EntityRef Entity Field Value EntityRef Fighter public Fighter* Fighter Field Value Fighter*"
  },
  "api/Quantum.AnimationAutoplaySystem.html": {
    "href": "api/Quantum.AnimationAutoplaySystem.html",
    "title": "Class AnimationAutoplaySystem | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimationAutoplaySystem Namespace Quantum Assembly Quantum.Simulation.dll [Preserve] public class AnimationAutoplaySystem : SystemMainThreadFilter<AnimationAutoplaySystem.Filter> Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<AnimationAutoplaySystem.Filter> AnimationAutoplaySystem Inherited Members SystemMainThreadFilter<AnimationAutoplaySystem.Filter>.UseCulling SystemMainThreadFilter<AnimationAutoplaySystem.Filter>.Without SystemMainThreadFilter<AnimationAutoplaySystem.Filter>.Any SystemMainThreadFilter<AnimationAutoplaySystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame, ref Filter) Override to add workload. public override void Update(Frame f, ref AnimationAutoplaySystem.Filter filter) Parameters f Frame The current frame. filter AnimationAutoplaySystem.Filter The frame object."
  },
  "api/Quantum.AnimationCurveAsset.html": {
    "href": "api/Quantum.AnimationCurveAsset.html",
    "title": "Class AnimationCurveAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimationCurveAsset Namespace Quantum Assembly Quantum.Simulation.dll public class AnimationCurveAsset : AssetObject Inheritance object Object ScriptableObject AssetObject AnimationCurveAsset Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields animationCurve public FPAnimationCurve animationCurve Field Value FPAnimationCurve thing public FP thing Field Value FP"
  },
  "api/Quantum.AnimationEntry.AnimEntry.html": {
    "href": "api/Quantum.AnimationEntry.AnimEntry.html",
    "title": "Class AnimationEntry.AnimEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimationEntry.AnimEntry Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class AnimationEntry.AnimEntry Inheritance object AnimationEntry.AnimEntry Fields clip public AnimationClip clip Field Value AnimationClip param public Vector2 param Field Value Vector2"
  },
  "api/Quantum.AnimationEntry.MixerType.html": {
    "href": "api/Quantum.AnimationEntry.MixerType.html",
    "title": "Enum AnimationEntry.MixerType | Rwby Vytal Versus Documentation",
    "keywords": "Enum AnimationEntry.MixerType Namespace Quantum Assembly Quantum.Simulation.dll public enum AnimationEntry.MixerType Fields Cartesian = 2 Directional = 3 Linear = 1 none = 0"
  },
  "api/Quantum.AnimationEntry.html": {
    "href": "api/Quantum.AnimationEntry.html",
    "title": "Class AnimationEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimationEntry Namespace Quantum Assembly Quantum.Simulation.dll public class AnimationEntry : AssetObject Inheritance object Object ScriptableObject AssetObject AnimationEntry Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields anims public AnimationEntry.AnimEntry[] anims Field Value AnimEntry[] fadeOutTime public float fadeOutTime Field Value float maxFadeInTime public float maxFadeInTime Field Value float mixer public AnimationEntry.MixerType mixer Field Value AnimationEntry.MixerType name public string name Field Value string playRate public float playRate Field Value float Properties GetName public string GetName { get; } Property Value string"
  },
  "api/Quantum.AnimationGroupDefinitions.TagToEntryGrouping.html": {
    "href": "api/Quantum.AnimationGroupDefinitions.TagToEntryGrouping.html",
    "title": "Class AnimationGroupDefinitions.TagToEntryGrouping | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimationGroupDefinitions.TagToEntryGrouping Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class AnimationGroupDefinitions.TagToEntryGrouping Inheritance object AnimationGroupDefinitions.TagToEntryGrouping Fields animation public AssetRef<AnimationEntry> animation Field Value AssetRef<AnimationEntry> name public string name Field Value string tag public AssetRef<Tag> tag Field Value AssetRef<Tag>"
  },
  "api/Quantum.AnimationGroupDefinitions.html": {
    "href": "api/Quantum.AnimationGroupDefinitions.html",
    "title": "Class AnimationGroupDefinitions | Rwby Vytal Versus Documentation",
    "keywords": "Class AnimationGroupDefinitions Namespace Quantum Assembly Quantum.Simulation.dll public class AnimationGroupDefinitions : AssetObject Inheritance object Object ScriptableObject AssetObject AnimationGroupDefinitions Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields animationEntries public AnimationGroupDefinitions.TagToEntryGrouping[] animationEntries Field Value TagToEntryGrouping[] Methods GetAnimationByTag(AssetRef<Tag>) public AssetRef<AnimationEntry> GetAnimationByTag(AssetRef<Tag> tag) Parameters tag AssetRef<Tag> Returns AssetRef<AnimationEntry> TryGetAnimationByTag(AssetRef<Tag>, out AssetRef<AnimationEntry>) public bool TryGetAnimationByTag(AssetRef<Tag> tag, out AssetRef<AnimationEntry> animation) Parameters tag AssetRef<Tag> animation AssetRef<AnimationEntry> Returns bool"
  },
  "api/Quantum.ApplyGravityAction.html": {
    "href": "api/Quantum.ApplyGravityAction.html",
    "title": "Class ApplyGravityAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ApplyGravityAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Apply Gravity\", 0)] public class ApplyGravityAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ApplyGravityAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields applyCurve public bool applyCurve Field Value bool gravity public HNSFParamFP gravity Field Value HNSFParamFP gravityCurve public AssetRef<AnimationCurveAsset> gravityCurve Field Value AssetRef<AnimationCurveAsset> maxFallSpeed public HNSFParamFP maxFallSpeed Field Value HNSFParamFP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ApplyMovementAction.InputSourceType.html": {
    "href": "api/Quantum.ApplyMovementAction.InputSourceType.html",
    "title": "Enum ApplyMovementAction.InputSourceType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ApplyMovementAction.InputSourceType Namespace Quantum Assembly Quantum.Simulation.dll public enum ApplyMovementAction.InputSourceType Fields custom = 5 none = 0 rotation = 2 slope = 3 stick = 1 targetLook = 4"
  },
  "api/Quantum.ApplyMovementAction.html": {
    "href": "api/Quantum.ApplyMovementAction.html",
    "title": "Class ApplyMovementAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ApplyMovementAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Apply Movement\", 0)] public class ApplyMovementAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ApplyMovementAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields acceleration public HNSFParamFP acceleration Field Value HNSFParamFP curveRef public AssetRef curveRef Field Value AssetRef customInput public HNSFParamFPVector3 customInput Field Value HNSFParamFPVector3 deceleration public HNSFParamFP deceleration Field Value HNSFParamFP inputSources public ApplyMovementAction.InputSourceType[] inputSources Field Value InputSourceType[] maxSpeed public HNSFParamFP maxSpeed Field Value HNSFParamFP minSpeed public HNSFParamFP minSpeed Field Value HNSFParamFP minimumAcceleration public HNSFParamFP minimumAcceleration Field Value HNSFParamFP rotCorrection public HNSFParamFP rotCorrection Field Value HNSFParamFP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ApplySlopeMovementAction.html": {
    "href": "api/Quantum.ApplySlopeMovementAction.html",
    "title": "Class ApplySlopeMovementAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ApplySlopeMovementAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Apply Slope Movement\", 0)] public class ApplySlopeMovementAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ApplySlopeMovementAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields AdjustHorizontal public HNSFParamFP AdjustHorizontal Field Value HNSFParamFP layerMask public LayerMask layerMask Field Value LayerMask maximumAngle public HNSFParamFP maximumAngle Field Value HNSFParamFP maximumSpeed public HNSFParamFP maximumSpeed Field Value HNSFParamFP minimumAngle public HNSFParamFP minimumAngle Field Value HNSFParamFP minimumSpeed public HNSFParamFP minimumSpeed Field Value HNSFParamFP rampCurveRef public AssetRef<AnimationCurveAsset> rampCurveRef Field Value AssetRef<AnimationCurveAsset> traction public HNSFParamFP traction Field Value HNSFParamFP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ApplyTractionAction.ModifierType.html": {
    "href": "api/Quantum.ApplyTractionAction.ModifierType.html",
    "title": "Enum ApplyTractionAction.ModifierType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ApplyTractionAction.ModifierType Namespace Quantum Assembly Quantum.Simulation.dll public enum ApplyTractionAction.ModifierType Fields Add = 0 Multiply = 1"
  },
  "api/Quantum.ApplyTractionAction.TractionType.html": {
    "href": "api/Quantum.ApplyTractionAction.TractionType.html",
    "title": "Enum ApplyTractionAction.TractionType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ApplyTractionAction.TractionType Namespace Quantum Assembly Quantum.Simulation.dll public enum ApplyTractionAction.TractionType Fields Both = 2 FallSpeed = 1 Movement = 0"
  },
  "api/Quantum.ApplyTractionAction.html": {
    "href": "api/Quantum.ApplyTractionAction.html",
    "title": "Class ApplyTractionAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ApplyTractionAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Apply Traction\", 0)] public class ApplyTractionAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ApplyTractionAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields modifierType public ApplyTractionAction.ModifierType modifierType Field Value ApplyTractionAction.ModifierType traction public HNSFParamFP traction Field Value HNSFParamFP tractionType public ApplyTractionAction.TractionType tractionType Field Value ApplyTractionAction.TractionType Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ArticleDestroySelfAction.html": {
    "href": "api/Quantum.ArticleDestroySelfAction.html",
    "title": "Class ArticleDestroySelfAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ArticleDestroySelfAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ArticleDestroySelfAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ArticleDestroySelfAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.AttemptHardKnockdownAction.html": {
    "href": "api/Quantum.AttemptHardKnockdownAction.html",
    "title": "Class AttemptHardKnockdownAction | Rwby Vytal Versus Documentation",
    "keywords": "Class AttemptHardKnockdownAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class AttemptHardKnockdownAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction AttemptHardKnockdownAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.AttemptSpecialsAction.html": {
    "href": "api/Quantum.AttemptSpecialsAction.html",
    "title": "Class AttemptSpecialsAction | Rwby Vytal Versus Documentation",
    "keywords": "Class AttemptSpecialsAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class AttemptSpecialsAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction AttemptSpecialsAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields buffer public int buffer Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.AudioSourceConfig.html": {
    "href": "api/Quantum.AudioSourceConfig.html",
    "title": "Class AudioSourceConfig | Rwby Vytal Versus Documentation",
    "keywords": "Class AudioSourceConfig Namespace Quantum Assembly Quantum.Simulation.dll public class AudioSourceConfig : AssetObject Inheritance object Object ScriptableObject AssetObject AudioSourceConfig Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.Aura.html": {
    "href": "api/Quantum.Aura.html",
    "title": "Struct Aura | Rwby Vytal Versus Documentation",
    "keywords": "Struct Aura Namespace Quantum Assembly Quantum.Simulation.dll public struct Aura : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int value public int value Field Value int Methods GetHashCode() public override int GetHashCode() Returns int ModifyAura(Frame, EntityRef, int, int) public void ModifyAura(Frame frame, EntityRef entity, int auraChange, int maxAura) Parameters frame Frame entity EntityRef auraChange int maxAura int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer SetAura(Frame, EntityRef, int, int) public void SetAura(Frame frame, EntityRef entity, int auraValue, int maxAura) Parameters frame Frame entity EntityRef auraValue int maxAura int"
  },
  "api/Quantum.BTSelectorRandom.html": {
    "href": "api/Quantum.BTSelectorRandom.html",
    "title": "Class BTSelectorRandom | Rwby Vytal Versus Documentation",
    "keywords": "Class BTSelectorRandom Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class BTSelectorRandom : BTComposite Inheritance object Object ScriptableObject AssetObject BTNode BTComposite BTSelectorRandom Inherited Members BTComposite.Children BTComposite.Services BTComposite.TopmostDecorator BTComposite.CurrentChildIndex BTComposite.IsDynamic BTComposite._childInstances BTComposite._serviceInstances BTComposite._topmostDecoratorInstance BTComposite.OnStartedRunning(BTParams, ref AIContext) BTComposite.OnReset(BTParams, ref AIContext) BTComposite.OnExit(BTParams, ref AIContext) BTComposite.OnDynamicRun(BTParams, ref AIContext) BTComposite.Loaded(IResourceManager, Native.Allocator) BTComposite.AbortNodes(BTParams, ref AIContext, BTAbort, int) BTComposite.GetCurrentChildId(FrameThreadSafe, BTAgent*) BTComposite.SetCurrentChildId(FrameThreadSafe, int, BTAgent*) BTComposite.ChildInstances BTComposite.ServiceInstances BTComposite.NodeType BTNode.Label BTNode.Id BTNode.Init(BTParams, ref AIContext) BTNode.OnAbort(BTParams, ref AIContext, BTAbort) BTNode.CheckConditions(BTParams, ref AIContext) BTNode.GetStatus(FrameBase, BTAgent*) BTNode.SetStatus(FrameBase, BTStatus, BTAgent*) BTNode.GetStatus(FrameThreadSafe, BTAgent*) BTNode.SetStatus(FrameThreadSafe, BTStatus, BTAgent*) BTNode.EvaluateAbortNode(BTParams) BTNode.Execute(BTParams, ref AIContext, bool) AssetObject.Identifier AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ChildCompletedRunning(BTParams, BTStatus) public override bool ChildCompletedRunning(BTParams btParams, BTStatus childResult) Parameters btParams BTParams childResult BTStatus Returns bool OnEnter(BTParams, ref AIContext) public override void OnEnter(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext OnUpdate(BTParams, ref AIContext) protected override BTStatus OnUpdate(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext Returns BTStatus"
  },
  "api/Quantum.BakedAnimationAsset.html": {
    "href": "api/Quantum.BakedAnimationAsset.html",
    "title": "Class BakedAnimationAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class BakedAnimationAsset Namespace Quantum Assembly Quantum.Simulation.dll public class BakedAnimationAsset : AssetObject Inheritance object Object ScriptableObject AssetObject BakedAnimationAsset Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields label public string label Field Value string"
  },
  "api/Quantum.BakedEntityPrototype.html": {
    "href": "api/Quantum.BakedEntityPrototype.html",
    "title": "Class BakedEntityPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class BakedEntityPrototype Namespace Quantum Assembly Quantum.Simulation.dll public class BakedEntityPrototype : AssetObject Inheritance object Object ScriptableObject AssetObject BakedEntityPrototype Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.BitSet128.html": {
    "href": "api/Quantum.BitSet128.html",
    "title": "Struct BitSet128 | Rwby Vytal Versus Documentation",
    "keywords": "Struct BitSet128 Namespace Quantum Assembly Quantum.Simulation.dll public struct BitSet128 Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Bits public ulong* Bits Field Value ulong* BitsSize public const int BitsSize = 128 Field Value int SIZE public const int SIZE = 16 Field Value int Properties Length public int Length { get; } Property Value int Methods Clear(int) public void Clear(int bit) Parameters bit int ClearAll() public void ClearAll() FromArray(ulong[]) public static BitSet128 FromArray(ulong[] values) Parameters values ulong[] Returns BitSet128 GetHashCode() public override int GetHashCode() Returns int IsSet(int) public bool IsSet(int bit) Parameters bit int Returns bool Print(void*, FramePrinter) public static void Print(void* ptr, FramePrinter printer) Parameters ptr void* printer FramePrinter Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer Set(int) public void Set(int bit) Parameters bit int"
  },
  "api/Quantum.BitSet2048.html": {
    "href": "api/Quantum.BitSet2048.html",
    "title": "Struct BitSet2048 | Rwby Vytal Versus Documentation",
    "keywords": "Struct BitSet2048 Namespace Quantum Assembly Quantum.Simulation.dll public struct BitSet2048 Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Bits public ulong* Bits Field Value ulong* BitsSize public const int BitsSize = 2048 Field Value int SIZE public const int SIZE = 256 Field Value int Properties Length public int Length { get; } Property Value int Methods Clear(int) public void Clear(int bit) Parameters bit int ClearAll() public void ClearAll() FromArray(ulong[]) public static BitSet2048 FromArray(ulong[] values) Parameters values ulong[] Returns BitSet2048 GetHashCode() public override int GetHashCode() Returns int IsSet(int) public bool IsSet(int bit) Parameters bit int Returns bool Print(void*, FramePrinter) public static void Print(void* ptr, FramePrinter printer) Parameters ptr void* printer FramePrinter Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer Set(int) public void Set(int bit) Parameters bit int"
  },
  "api/Quantum.BitSet256.html": {
    "href": "api/Quantum.BitSet256.html",
    "title": "Struct BitSet256 | Rwby Vytal Versus Documentation",
    "keywords": "Struct BitSet256 Namespace Quantum Assembly Quantum.Simulation.dll public struct BitSet256 Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Bits public ulong* Bits Field Value ulong* BitsSize public const int BitsSize = 256 Field Value int SIZE public const int SIZE = 32 Field Value int Properties Length public int Length { get; } Property Value int Methods Clear(int) public void Clear(int bit) Parameters bit int ClearAll() public void ClearAll() FromArray(ulong[]) public static BitSet256 FromArray(ulong[] values) Parameters values ulong[] Returns BitSet256 GetHashCode() public override int GetHashCode() Returns int IsSet(int) public bool IsSet(int bit) Parameters bit int Returns bool Print(void*, FramePrinter) public static void Print(void* ptr, FramePrinter printer) Parameters ptr void* printer FramePrinter Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer Set(int) public void Set(int bit) Parameters bit int"
  },
  "api/Quantum.BitSet4096.html": {
    "href": "api/Quantum.BitSet4096.html",
    "title": "Struct BitSet4096 | Rwby Vytal Versus Documentation",
    "keywords": "Struct BitSet4096 Namespace Quantum Assembly Quantum.Simulation.dll public struct BitSet4096 Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Bits public ulong* Bits Field Value ulong* BitsSize public const int BitsSize = 4096 Field Value int SIZE public const int SIZE = 512 Field Value int Properties Length public int Length { get; } Property Value int Methods Clear(int) public void Clear(int bit) Parameters bit int ClearAll() public void ClearAll() FromArray(ulong[]) public static BitSet4096 FromArray(ulong[] values) Parameters values ulong[] Returns BitSet4096 GetHashCode() public override int GetHashCode() Returns int IsSet(int) public bool IsSet(int bit) Parameters bit int Returns bool Print(void*, FramePrinter) public static void Print(void* ptr, FramePrinter printer) Parameters ptr void* printer FramePrinter Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer Set(int) public void Set(int bit) Parameters bit int"
  },
  "api/Quantum.BitSet512.html": {
    "href": "api/Quantum.BitSet512.html",
    "title": "Struct BitSet512 | Rwby Vytal Versus Documentation",
    "keywords": "Struct BitSet512 Namespace Quantum Assembly Quantum.Simulation.dll public struct BitSet512 Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Bits public ulong* Bits Field Value ulong* BitsSize public const int BitsSize = 512 Field Value int SIZE public const int SIZE = 64 Field Value int Properties Length public int Length { get; } Property Value int Methods Clear(int) public void Clear(int bit) Parameters bit int ClearAll() public void ClearAll() FromArray(ulong[]) public static BitSet512 FromArray(ulong[] values) Parameters values ulong[] Returns BitSet512 GetHashCode() public override int GetHashCode() Returns int IsSet(int) public bool IsSet(int bit) Parameters bit int Returns bool Print(void*, FramePrinter) public static void Print(void* ptr, FramePrinter printer) Parameters ptr void* printer FramePrinter Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer Set(int) public void Set(int bit) Parameters bit int"
  },
  "api/Quantum.BitSet6.html": {
    "href": "api/Quantum.BitSet6.html",
    "title": "Struct BitSet6 | Rwby Vytal Versus Documentation",
    "keywords": "Struct BitSet6 Namespace Quantum Assembly Quantum.Simulation.dll public struct BitSet6 Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Bits public ulong* Bits Field Value ulong* BitsSize public const int BitsSize = 6 Field Value int SIZE public const int SIZE = 8 Field Value int Properties Length public int Length { get; } Property Value int Methods Clear(int) public void Clear(int bit) Parameters bit int ClearAll() public void ClearAll() FromArray(ulong[]) public static BitSet6 FromArray(ulong[] values) Parameters values ulong[] Returns BitSet6 GetHashCode() public override int GetHashCode() Returns int IsSet(int) public bool IsSet(int bit) Parameters bit int Returns bool Print(void*, FramePrinter) public static void Print(void* ptr, FramePrinter printer) Parameters ptr void* printer FramePrinter Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer Set(int) public void Set(int bit) Parameters bit int"
  },
  "api/Quantum.BitStreamReplayInputProvider.html": {
    "href": "api/Quantum.BitStreamReplayInputProvider.html",
    "title": "Class BitStreamReplayInputProvider | Rwby Vytal Versus Documentation",
    "keywords": "Class BitStreamReplayInputProvider Namespace Quantum Assembly Quantum.Simulation.dll This implementation of Photon.Deterministic.IDeterministicStreamReplayInputProvider is used to provide delta compressed input for a Quantum simulation replay from a Photon.Deterministic.BitStream. public class BitStreamReplayInputProvider Inheritance object BitStreamReplayInputProvider Constructors BitStreamReplayInputProvider(BitStream, int) Create input provider. public BitStreamReplayInputProvider(BitStream inputStream, int maxFrame) Parameters inputStream BitStream The input bitstream maxFrame int The max frame of the recorded replay Properties MaxFrame The max frame available to read. public int MaxFrame { get; } Property Value int Methods AddRpc(int, byte[], bool) Unused. public void AddRpc(int player, byte[] data, bool command) Parameters player int data byte[] command bool BeginReadFrame(int) Read the size of the input from the stream. It is expected that the input requested matches the input order in the stream. public int BeginReadFrame(int frame) Parameters frame int Input requested for this frame Returns int The size of the input that can be read CanSimulate(int) Returns true if for the given frame input is available. public bool CanSimulate(int frame) Parameters frame int Requested frame Returns bool True if input for that frame can be requested CompleteReadFrame(int, int, ref byte[]) Actually read the input data. public void CompleteReadFrame(int frame, int length, ref byte[] data) Parameters frame int The frame of the requested input length int The input length returned by BeginReadFrame(int) data byte[] The data to be copied to GetInput(int, int) Unused. public DeterministicFrameInputTemp GetInput(int frame, int player) Parameters frame int player int Returns DeterministicFrameInputTemp GetRpc(int, int) Unused. public QTuple<byte[], bool> GetRpc(int frame, int player) Parameters frame int player int Returns QTuple<byte[], bool> Reset() Reset the stream to the beginning. public void Reset()"
  },
  "api/Quantum.BoolParamDecision.CheckType.html": {
    "href": "api/Quantum.BoolParamDecision.CheckType.html",
    "title": "Enum BoolParamDecision.CheckType | Rwby Vytal Versus Documentation",
    "keywords": "Enum BoolParamDecision.CheckType Namespace Quantum Assembly Quantum.Simulation.dll public enum BoolParamDecision.CheckType Fields EQUAL = 0 NOT_EQUAL = 1"
  },
  "api/Quantum.BoolParamDecision.html": {
    "href": "api/Quantum.BoolParamDecision.html",
    "title": "Class BoolParamDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class BoolParamDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class BoolParamDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision BoolParamDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkType public BoolParamDecision.CheckType checkType Field Value BoolParamDecision.CheckType paramA public HNSFParamBool paramA Field Value HNSFParamBool paramB public HNSFParamBool paramB Field Value HNSFParamBool Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.BotSDK.BotSDKDebuggerSystem.html": {
    "href": "api/Quantum.BotSDK.BotSDKDebuggerSystem.html",
    "title": "Class BotSDKDebuggerSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class BotSDKDebuggerSystem Namespace Quantum.BotSDK Assembly Quantum.Simulation.dll Using this system is optional. It is only used to aim the Debugger on the Unity side. It is also safe to copy logic from this system into your own systems, if it better suits your architecture. [Preserve] public class BotSDKDebuggerSystem : SystemMainThread Inheritance object SystemBase SystemMainThread BotSDKDebuggerSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods AddToDebugger<T>(Frame, EntityRef, T, string) Use this to add an entity to the Debugger Window on Unity. You can provide a custom label of your preference if you want to identify your bots in a custom way. Use the separator '/' on the custom label if you want to create an Hierarchy on the Debugger Window. public static void AddToDebugger<T>(Frame frame, EntityRef entity, T component, string customLabel = null) where T : IComponent, IBotSDKDebugInfoProvider Parameters frame Frame entity EntityRef component T customLabel string Type Parameters T Update(Frame) Override to add workload. public override void Update(Frame frame) Parameters frame Frame"
  },
  "api/Quantum.BotSDK.BotSDKSystem.html": {
    "href": "api/Quantum.BotSDK.BotSDKSystem.html",
    "title": "Class BotSDKSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class BotSDKSystem Namespace Quantum.BotSDK Assembly Quantum.Simulation.dll Using this system is optional. It is only used to aim the Debugger on the Unity side. It is also safe to copy logic from this system into your own systems, if it better suits your architecture. [Preserve] public class BotSDKSystem : SystemSignalsOnly, ISignalOnComponentAdded<HFSMAgent>, ISignalOnComponentAdded<BTAgent>, ISignalOnComponentRemoved<BTAgent>, ISignalOnComponentAdded<UTAgent>, ISignalOnComponentRemoved<UTAgent>, ISignalOnComponentAdded<AIBlackboardComponent>, ISignalOnComponentRemoved<AIBlackboardComponent>, ISignal Inheritance object SystemBase SystemSignalsOnly BotSDKSystem Implements ISignalOnComponentAdded<HFSMAgent> ISignalOnComponentAdded<BTAgent> ISignalOnComponentRemoved<BTAgent> ISignalOnComponentAdded<UTAgent> ISignalOnComponentRemoved<UTAgent> ISignalOnComponentAdded<AIBlackboardComponent> ISignalOnComponentRemoved<AIBlackboardComponent> ISignal Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, AIBlackboardComponent*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame frame, EntityRef entity, AIBlackboardComponent* component) Parameters frame Frame entity EntityRef The entity that the component was added to. component AIBlackboardComponent* The component that was added. OnAdded(Frame, EntityRef, BTAgent*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame frame, EntityRef entity, BTAgent* component) Parameters frame Frame entity EntityRef The entity that the component was added to. component BTAgent* The component that was added. OnAdded(Frame, EntityRef, HFSMAgent*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame frame, EntityRef entity, HFSMAgent* component) Parameters frame Frame entity EntityRef The entity that the component was added to. component HFSMAgent* The component that was added. OnAdded(Frame, EntityRef, UTAgent*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame frame, EntityRef entity, UTAgent* component) Parameters frame Frame entity EntityRef The entity that the component was added to. component UTAgent* The component that was added. OnRemoved(Frame, EntityRef, AIBlackboardComponent*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame frame, EntityRef entity, AIBlackboardComponent* component) Parameters frame Frame entity EntityRef The entity that the component was removed from. component AIBlackboardComponent* The component that was removed. OnRemoved(Frame, EntityRef, BTAgent*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame frame, EntityRef entity, BTAgent* component) Parameters frame Frame entity EntityRef The entity that the component was removed from. component BTAgent* The component that was removed. OnRemoved(Frame, EntityRef, UTAgent*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame frame, EntityRef entity, UTAgent* component) Parameters frame Frame entity EntityRef The entity that the component was removed from. component UTAgent* The component that was removed."
  },
  "api/Quantum.BotSDK.BotSDKTimerSystem.html": {
    "href": "api/Quantum.BotSDK.BotSDKTimerSystem.html",
    "title": "Class BotSDKTimerSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class BotSDKTimerSystem Namespace Quantum.BotSDK Assembly Quantum.Simulation.dll [Preserve] public class BotSDKTimerSystem : SystemMainThread Inheritance object SystemBase SystemMainThread BotSDKTimerSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnInit(Frame) Is called when the system is initialized. public override void OnInit(Frame frame) Parameters frame Frame Update(Frame) Override to add workload. public override void Update(Frame frame) Parameters frame Frame"
  },
  "api/Quantum.BotSDK.html": {
    "href": "api/Quantum.BotSDK.html",
    "title": "Namespace Quantum.BotSDK | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Quantum.BotSDK Classes BotSDKDebuggerSystem Using this system is optional. It is only used to aim the Debugger on the Unity side. It is also safe to copy logic from this system into your own systems, if it better suits your architecture. BotSDKSystem Using this system is optional. It is only used to aim the Debugger on the Unity side. It is also safe to copy logic from this system into your own systems, if it better suits your architecture. BotSDKTimerSystem"
  },
  "api/Quantum.BotSDKDebugger.html": {
    "href": "api/Quantum.BotSDKDebugger.html",
    "title": "Class BotSDKDebugger | Rwby Vytal Versus Documentation",
    "keywords": "Class BotSDKDebugger Namespace Quantum Assembly Assembly-CSharp.dll public class BotSDKDebugger : QuantumEntityViewComponent, IQuantumViewComponent, IBotDebug Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumViewComponent<IQuantumViewContext> QuantumEntityViewComponent<IQuantumViewContext> QuantumEntityViewComponent BotSDKDebugger Implements IQuantumViewComponent IBotDebug Inherited Members QuantumEntityViewComponent<IQuantumViewContext>.Game QuantumEntityViewComponent<IQuantumViewContext>.EntityRef QuantumEntityViewComponent<IQuantumViewContext>.EntityView QuantumEntityViewComponent<IQuantumViewContext>.HasPredictedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.HasVerifiedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.GetPredictedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.GetVerifiedQuantumComponent<TComponent>() QuantumEntityViewComponent<IQuantumViewContext>.TryGetPredictedQuantumComponent<TComponent>(out TComponent) QuantumEntityViewComponent<IQuantumViewContext>.TryGetVerifiedQuantumComponent<TComponent>(out TComponent) QuantumViewComponent<IQuantumViewContext>.PredictedFrame QuantumViewComponent<IQuantumViewContext>.VerifiedFrame QuantumViewComponent<IQuantumViewContext>.PredictedPreviousFrame QuantumViewComponent<IQuantumViewContext>.ViewContext QuantumViewComponent<IQuantumViewContext>.IsActive QuantumViewComponent<IQuantumViewContext>.IsInitialized QuantumViewComponent<IQuantumViewContext>._game QuantumViewComponent<IQuantumViewContext>._entityView QuantumViewComponent<IQuantumViewContext>.OnInitialize() QuantumViewComponent<IQuantumViewContext>.OnActivate(Frame) QuantumViewComponent<IQuantumViewContext>.OnDeactivate() QuantumViewComponent<IQuantumViewContext>.OnUpdateView() QuantumViewComponent<IQuantumViewContext>.OnLateUpdateView() QuantumViewComponent<IQuantumViewContext>.OnGameChanged() QuantumViewComponent<IQuantumViewContext>.Initialize(Dictionary<Type, IQuantumViewContext>) QuantumViewComponent<IQuantumViewContext>.Activate(Frame, QuantumGame, QuantumEntityView) QuantumViewComponent<IQuantumViewContext>.Deactivate() QuantumViewComponent<IQuantumViewContext>.UpdateView() QuantumViewComponent<IQuantumViewContext>.LateUpdateView() QuantumViewComponent<IQuantumViewContext>.GameChanged(QuantumGame) Properties BotEntityRef public EntityRef BotEntityRef { get; } Property Value EntityRef"
  },
  "api/Quantum.BotSDKUtils.html": {
    "href": "api/Quantum.BotSDKUtils.html",
    "title": "Class BotSDKUtils | Rwby Vytal Versus Documentation",
    "keywords": "Class BotSDKUtils Namespace Quantum Assembly Quantum.Simulation.dll public static class BotSDKUtils Inheritance object BotSDKUtils Methods CalculateBotSDKGameTime(Frame) public static void CalculateBotSDKGameTime(this Frame frame) Parameters frame Frame CalculateBotSDKGameTime(FrameThreadSafe) public static FP CalculateBotSDKGameTime(this FrameThreadSafe frameThreadSafe) Parameters frameThreadSafe FrameThreadSafe Returns FP"
  },
  "api/Quantum.BoxCombatant.html": {
    "href": "api/Quantum.BoxCombatant.html",
    "title": "Struct BoxCombatant | Rwby Vytal Versus Documentation",
    "keywords": "Struct BoxCombatant Namespace Quantum Assembly Quantum.Simulation.dll public struct BoxCombatant : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 160 Field Value int collisionboxList public QListPtr<EntityRef> collisionboxList Field Value QListPtr<EntityRef> collisionboxesDisabled public QBoolean collisionboxesDisabled Field Value QBoolean entitiesHit public QListPtr<EntityHitDefinition> entitiesHit Field Value QListPtr<EntityHitDefinition> hasClashed public QBoolean hasClashed Field Value QBoolean hitByEntity public EntityRef hitByEntity Field Value EntityRef hitByHurtboxWasHit public int hitByHurtboxWasHit Field Value int hitByInfo public AssetRef<HitInfo> hitByInfo Field Value AssetRef<HitInfo> hitByNewState public QBoolean hitByNewState Field Value QBoolean hitByPosition public FPVector3 hitByPosition Field Value FPVector3 hitByState public AssetRef<HNSFState> hitByState Field Value AssetRef<HNSFState> hitByStates public QListPtr<AssetRef<HNSFState>> hitByStates Field Value QListPtr<AssetRef<HNSFState>> hitByTeam public int hitByTeam Field Value int hitWithInfo public AssetRef<HitInfo> hitWithInfo Field Value AssetRef<HitInfo> hitboxList public QListPtr<EntityRef> hitboxList Field Value QListPtr<EntityRef> hitboxesDisabled public QBoolean hitboxesDisabled Field Value QBoolean hurtboxList public QListPtr<EntityRef> hurtboxList Field Value QListPtr<EntityRef> hurtboxesDisabled public QBoolean hurtboxesDisabled Field Value QBoolean lastHitEntity public EntityRef lastHitEntity Field Value EntityRef lastHitOnFrame public int lastHitOnFrame Field Value int lastReceivedClashLevel public int lastReceivedClashLevel Field Value int lastReceivedHitReaction public int lastReceivedHitReaction Field Value int onClashAction public AssetRef<HNSFStateAction> onClashAction Field Value AssetRef<HNSFStateAction> onHitAction public AssetRef<StateFunctionInt> onHitAction Field Value AssetRef<StateFunctionInt> stateHitCounters public QDictionaryPtr<int, int> stateHitCounters Field Value QDictionaryPtr<int, int> whenHitAction public AssetRef<HNSFStateAction> whenHitAction Field Value AssetRef<HNSFStateAction> Methods CleanupAllBoxes(Frame) public void CleanupAllBoxes(Frame frame) Parameters frame Frame CleanupCollisionboxes(Frame) public void CleanupCollisionboxes(Frame frame) Parameters frame Frame CleanupHitboxes(Frame) public void CleanupHitboxes(Frame frame) Parameters frame Frame CleanupHurtboxes(Frame) public void CleanupHurtboxes(Frame frame) Parameters frame Frame ClearHitList(Frame) public void ClearHitList(Frame frame) Parameters frame Frame ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef DeleteCollisionboxByID(Frame, int) public void DeleteCollisionboxByID(Frame frame, int hitboxID) Parameters frame Frame hitboxID int DeleteHitboxByID(Frame, int) public void DeleteHitboxByID(Frame frame, int hitboxID) Parameters frame Frame hitboxID int DeleteHurtboxByID(Frame, int) public void DeleteHurtboxByID(Frame frame, int hurtboxID) Parameters frame Frame hurtboxID int GetCurrentEntityHitCount(Frame) public int GetCurrentEntityHitCount(Frame frame) Parameters frame Frame Returns int GetCurrentEntityHitCount(Frame, int) public int GetCurrentEntityHitCount(Frame frame, int hitboxID) Parameters frame Frame hitboxID int Returns int GetHashCode() public override int GetHashCode() Returns int GetTotalBlockCount(Frame) public int GetTotalBlockCount(Frame frame) Parameters frame Frame Returns int GetTotalHitCount(Frame) public int GetTotalHitCount(Frame frame) Parameters frame Frame Returns int GetTotalHitOrBlockCount(Frame) public int GetTotalHitOrBlockCount(Frame frame) Parameters frame Frame Returns int GrabEntity(Frame, EntityRef, EntityRef) public void GrabEntity(Frame frame, EntityRef self, EntityRef entityToGrab) Parameters frame Frame self EntityRef entityToGrab EntityRef HasHitEntity(Frame, EntityRef) public bool HasHitEntity(Frame frame, EntityRef entityToCheck) Parameters frame Frame entityToCheck EntityRef Returns bool MarkEntityAsHit(Frame, EntityRef, int) public void MarkEntityAsHit(Frame frame, EntityRef entityHit, int hitboxID) Parameters frame Frame entityHit EntityRef hitboxID int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer TryGetCollisionbox(Frame, int, out int) public bool TryGetCollisionbox(Frame frame, int collisionboxID, out int collisionboxIndex) Parameters frame Frame collisionboxID int collisionboxIndex int Returns bool TryGetHitbox(Frame, int, out int) public bool TryGetHitbox(Frame frame, int hitboxID, out int hitboxIndex) Parameters frame Frame hitboxID int hitboxIndex int Returns bool TryGetHurtbox(Frame, int, out EntityRef) public bool TryGetHurtbox(Frame frame, int hurtboxID, out EntityRef hurtbox) Parameters frame Frame hurtboxID int hurtbox EntityRef Returns bool TryGetHurtbox(Frame, int, out int) public bool TryGetHurtbox(Frame frame, int hurtboxID, out int hurtboxIndex) Parameters frame Frame hurtboxID int hurtboxIndex int Returns bool"
  },
  "api/Quantum.BoxDefinition.html": {
    "href": "api/Quantum.BoxDefinition.html",
    "title": "Struct BoxDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Struct BoxDefinition Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public struct BoxDefinition Fields boxExtents [DrawIf(\"shapeType\", 2, CompareOperator.Equal, DrawIfMode.Hide)] public FPVector3 boxExtents Field Value FPVector3 infoIndex public int infoIndex Field Value int radius [DrawIf(\"shapeType\", 1, CompareOperator.Equal, DrawIfMode.Hide)] public FP radius Field Value FP shapeType public Shape3DType shapeType Field Value Shape3DType"
  },
  "api/Quantum.BoxSet.html": {
    "href": "api/Quantum.BoxSet.html",
    "title": "Struct BoxSet | Rwby Vytal Versus Documentation",
    "keywords": "Struct BoxSet Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public struct BoxSet Fields boxes public BoxDefinition[] boxes Field Value BoxDefinition[]"
  },
  "api/Quantum.ButtonData.html": {
    "href": "api/Quantum.ButtonData.html",
    "title": "Struct ButtonData | Rwby Vytal Versus Documentation",
    "keywords": "Struct ButtonData Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public struct ButtonData Fields IsDown public bool IsDown Field Value bool WasPressed public bool WasPressed Field Value bool WasReleased public bool WasReleased Field Value bool"
  },
  "api/Quantum.ButtonDataCheckType.html": {
    "href": "api/Quantum.ButtonDataCheckType.html",
    "title": "Enum ButtonDataCheckType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ButtonDataCheckType Namespace Quantum Assembly Quantum.Simulation.dll public enum ButtonDataCheckType Fields ALL = 0 ANY = 1"
  },
  "api/Quantum.ButtonHeldDecision.html": {
    "href": "api/Quantum.ButtonHeldDecision.html",
    "title": "Class ButtonHeldDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class ButtonHeldDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ButtonHeldDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision ButtonHeldDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields button public PlayerInputButtonType button Field Value PlayerInputButtonType holdTime public int holdTime Field Value int Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CallbackChecksumComputed.html": {
    "href": "api/Quantum.CallbackChecksumComputed.html",
    "title": "Class CallbackChecksumComputed | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackChecksumComputed Namespace Quantum Assembly Quantum.Simulation.dll Callback called when a checksum has been computed. public sealed class CallbackChecksumComputed : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackChecksumComputed Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields Checksum The checksum value. public ulong Checksum Field Value ulong Frame The frame number the checksum was computed for. public int Frame Field Value int ID The const CallbackChecksumComputed callback id. public const int ID = 12 Field Value int"
  },
  "api/Quantum.CallbackChecksumError.html": {
    "href": "api/Quantum.CallbackChecksumError.html",
    "title": "Class CallbackChecksumError | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackChecksumError Namespace Quantum Assembly Quantum.Simulation.dll Callback called on a checksum error. public sealed class CallbackChecksumError : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackChecksumError Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields Error The checksum error details. public DeterministicTickChecksumError Error Field Value DeterministicTickChecksumError ID The const CallbackChecksumError callback id. public const int ID = 9 Field Value int Properties FrameCount The number of frames associated with this error. public int FrameCount { get; } Property Value int Frames Get all frames associated with this error. public Frame[] Frames { get; } Property Value Frame[] Methods GetFrame(int) Access the frame by index public Frame GetFrame(int index) Parameters index int Index Returns Frame Frame"
  },
  "api/Quantum.CallbackChecksumErrorFrameDump.html": {
    "href": "api/Quantum.CallbackChecksumErrorFrameDump.html",
    "title": "Class CallbackChecksumErrorFrameDump | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackChecksumErrorFrameDump Namespace Quantum Assembly Quantum.Simulation.dll Callback called a frame dump is received due to a checksum error. public sealed class CallbackChecksumErrorFrameDump : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackChecksumErrorFrameDump Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields ActorId The actor id of that send this error dump. public int ActorId Field Value int ExtraBytes The serialized extra meta information added to the frame dump. public byte[] ExtraBytes Field Value byte[] FrameData The serialized frame data. public byte[] FrameData Field Value byte[] FrameNumber The frame number that the dump belongs to. public int FrameNumber Field Value int ID The const CallbackChecksumErrorFrameDump callback id. public const int ID = 10 Field Value int RuntimeConfigBytes The serialized runtime config. public byte[] RuntimeConfigBytes Field Value byte[] Serializer The asset serializer. public IAssetSerializer Serializer Field Value IAssetSerializer SessionConfig The session config. public DeterministicSessionConfig SessionConfig Field Value DeterministicSessionConfig Properties Context Deserialize the frame dump context. public ChecksumErrorFrameDumpContext Context { get; } Property Value ChecksumErrorFrameDumpContext Frame Deserialize the frame dump. public Frame Frame { get; } Property Value Frame FrameDump The frame dump as a string. public string FrameDump { get; } Property Value string RuntimeConfig Deserializes the runtime config. public RuntimeConfig RuntimeConfig { get; } Property Value RuntimeConfig SimulationConfig Access the simulation config. public SimulationConfig SimulationConfig { get; } Property Value SimulationConfig"
  },
  "api/Quantum.CallbackDispatcher.html": {
    "href": "api/Quantum.CallbackDispatcher.html",
    "title": "Class CallbackDispatcher | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackDispatcher Namespace Quantum Assembly Quantum.Simulation.dll A subscribe and publish pattern for Quantum callbacks. A Quantum callback is a invocation from inside the simulation during certain situations. public class CallbackDispatcher : DispatcherBase, ICallbackDispatcher Inheritance object DispatcherBase CallbackDispatcher Implements ICallbackDispatcher Inherited Members DispatcherBase.GetIndex<TDispatchable>() DispatcherBase.Subscribe<TDispatchable>(object, DispatchableHandler<TDispatchable>, bool, uint, DispatchableFilter) DispatcherBase.Unsubscribe(DispatcherSubscription) DispatcherBase.UnsubscribeHandler<TDispatchable>(DispatchableHandler<TDispatchable>) DispatcherBase.UnsubscribeListener<TDispatchable>(object) DispatcherBase.SubscribeManual<TDispatchable>(DispatchableHandler<TDispatchable>, bool, DispatchableFilter) DispatcherBase.SubscribeManual<TDispatchable>(object, DispatchableHandler<TDispatchable>, bool, DispatchableFilter) DispatcherBase.Clear() DispatcherBase.RemoveDeadListeners() DispatcherBase.UnsubscribeListener(object) DispatcherBase.GetListenerStatus(object, uint) DispatcherBase.InvokeMeta<TDispatchable>(TDispatchable) DispatcherBase.InvokeMeta(int, IDispatchable) DispatcherBase.SubscribeInternal<TDispatchable>(object, DispatchableHandler<TDispatchable>, DispatchableFilter, uint) DispatcherBase.SubscribeManualInternal<TDispatchable>(object, DispatchableHandler<TDispatchable>, DispatchableFilter, bool) DispatcherBase.UnsubscribeInternal<TDispatchable>(object, DispatchableHandler<TDispatchable>) DispatcherBase.Next DispatcherBase.IsEmpty Constructors CallbackDispatcher() Constructor calls GetBuiltInTypes(). public CallbackDispatcher() CallbackDispatcher(Dictionary<Type, int>) Constructor to add the callback type mapping manually. protected CallbackDispatcher(Dictionary<Type, int> callbackTypes) Parameters callbackTypes Dictionary<Type, int> Methods GetBuiltInTypes() Assembles a dictionary of built-in Quantum callback types. protected static Dictionary<Type, int> GetBuiltInTypes() Returns Dictionary<Type, int> Callback mapping Publish(CallbackBase) Publish a callback. public bool Publish(CallbackBase e) Parameters e CallbackBase Returns bool True if the callback has been handled by any subscriber"
  },
  "api/Quantum.CallbackEventCanceled.html": {
    "href": "api/Quantum.CallbackEventCanceled.html",
    "title": "Class CallbackEventCanceled | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackEventCanceled Namespace Quantum Assembly Quantum.Simulation.dll Callback called when an event raised in a predicted frame was canceled in a verified frame due to a roll-back / missed prediction. Synchronised events are only raised on verified frames and thus will never be canceled; this is useful to graciously discard non-sync'ed events in the view. public sealed class CallbackEventCanceled : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackEventCanceled Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields EventKey The event key of the event that was canceled. public EventKey EventKey Field Value EventKey ID The const CallbackEventCanceled callback id. public const int ID = 7 Field Value int"
  },
  "api/Quantum.CallbackEventConfirmed.html": {
    "href": "api/Quantum.CallbackEventConfirmed.html",
    "title": "Class CallbackEventConfirmed | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackEventConfirmed Namespace Quantum Assembly Quantum.Simulation.dll Callback called when an event was confirmed by a verified frame. public sealed class CallbackEventConfirmed : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackEventConfirmed Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields EventKey The event key of the event that has been verified and confirmed. public EventKey EventKey Field Value EventKey ID The const CallbackEventConfirmed callback id. public const int ID = 8 Field Value int"
  },
  "api/Quantum.CallbackGameDestroyed.html": {
    "href": "api/Quantum.CallbackGameDestroyed.html",
    "title": "Class CallbackGameDestroyed | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackGameDestroyed Namespace Quantum Assembly Quantum.Simulation.dll Callback called when the game was destroyed. public sealed class CallbackGameDestroyed : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackGameDestroyed Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields ID The const CallbackGameDestroyed callback id. public const int ID = 4 Field Value int"
  },
  "api/Quantum.CallbackGameInit.html": {
    "href": "api/Quantum.CallbackGameInit.html",
    "title": "Class CallbackGameInit | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackGameInit Namespace Quantum Assembly Quantum.Simulation.dll Callback called when the game is about to start. public sealed class CallbackGameInit : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackGameInit Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields ID The const CallbackGameInit callback id. public const int ID = 1 Field Value int IsResync Is true when the simulation is paused and waits for snapshot to commence the start. public bool IsResync Field Value bool"
  },
  "api/Quantum.CallbackGameResynced.html": {
    "href": "api/Quantum.CallbackGameResynced.html",
    "title": "Class CallbackGameResynced | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackGameResynced Namespace Quantum Assembly Quantum.Simulation.dll Callback called when the game has been re-synchronized from a snapshot and is about to start. Will be followed by the CallbackGameStarted callback.\"/> public sealed class CallbackGameResynced : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackGameResynced Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields ID The const CallbackGameResynced callback id. public const int ID = 3 Field Value int"
  },
  "api/Quantum.CallbackGameStarted.html": {
    "href": "api/Quantum.CallbackGameStarted.html",
    "title": "Class CallbackGameStarted | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackGameStarted Namespace Quantum Assembly Quantum.Simulation.dll Is called during OnGameStart(DeterministicFrame) or OnGameResync() when the game is started after systems are initialized and the snapshot has arrived for late-joining clients. public sealed class CallbackGameStarted : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackGameStarted Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields ID The const CallbackGameStarted callback id. public const int ID = 2 Field Value int IsResync Is true if the game was started from a snapshot. public bool IsResync Field Value bool"
  },
  "api/Quantum.CallbackId.html": {
    "href": "api/Quantum.CallbackId.html",
    "title": "Enum CallbackId | Rwby Vytal Versus Documentation",
    "keywords": "Enum CallbackId Namespace Quantum Assembly Quantum.Simulation.dll Quantum game callback ids. public enum CallbackId Fields ChecksumComputed = 12 Callback called when a checksum has been computed. ChecksumError = 9 Callback called on a checksum error. ChecksumErrorFrameDump = 10 Callback called a frame dump is received due to a checksum error. EventCanceled = 7 Callback called when an event raised in a predicted frame was canceled in a verified frame due to a roll-back / missed prediction. EventConfirmed = 8 Callback called when an event was confirmed by a verified frame. GameDestroyed = 4 Callback called when the game was destroyed. GameInit = 1 Callback called when the game has been started. GameResynced = 3 Callback called when the game has been re-synchronized from a snapshot. GameStarted = 2 Callback called when the game has been started. InputConfirmed = 11 Callback when input was confirmed. PlayerAddConfirmed = 14 Callback when a local player was successfully added to the game. PlayerAddFailed = 16 Callback when a adding a local player failed. PlayerRemoveConfirmed = 15 Callback when a local player was successfully removed from the game. PlayerRemoveFailed = 17 Callback when removing a local player failed. PluginDisconnect = 13 Callback called when the local client is disconnected by the plugin. PollInput = 0 Callback called when the simulation queries local input. SimulateFinished = 6 Callback called when frame simulation has completed. UpdateView = 5 Callback guaranteed to be called every rendered frame. UserCallbackIdStart = 18 A tag where user callbacks can start."
  },
  "api/Quantum.CallbackInputConfirmed.html": {
    "href": "api/Quantum.CallbackInputConfirmed.html",
    "title": "Class CallbackInputConfirmed | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackInputConfirmed Namespace Quantum Assembly Quantum.Simulation.dll Callback when input was confirmed. public sealed class CallbackInputConfirmed : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackInputConfirmed Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields ID The const CallbackInputConfirmed callback id. public const int ID = 11 Field Value int Input The verified input object. public DeterministicFrameInputTemp Input Field Value DeterministicFrameInputTemp"
  },
  "api/Quantum.CallbackLocalPlayerAddConfirmed.html": {
    "href": "api/Quantum.CallbackLocalPlayerAddConfirmed.html",
    "title": "Class CallbackLocalPlayerAddConfirmed | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackLocalPlayerAddConfirmed Namespace Quantum Assembly Quantum.Simulation.dll Callback when a local player was successfully added to the game. public sealed class CallbackLocalPlayerAddConfirmed : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackLocalPlayerAddConfirmed Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields Frame The frame the player was added. public Frame Frame Field Value Frame ID The const CallbackLocalPlayerAddConfirmed callback id. public const int ID = 14 Field Value int Player The global player number. public PlayerRef Player Field Value PlayerRef PlayerSlot The local player index. public int PlayerSlot Field Value int"
  },
  "api/Quantum.CallbackLocalPlayerAddFailed.html": {
    "href": "api/Quantum.CallbackLocalPlayerAddFailed.html",
    "title": "Class CallbackLocalPlayerAddFailed | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackLocalPlayerAddFailed Namespace Quantum Assembly Quantum.Simulation.dll Callback when a adding a local player failed. public sealed class CallbackLocalPlayerAddFailed : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackLocalPlayerAddFailed Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields ID The const CallbackLocalPlayerAddFailed callback id. public const int ID = 17 Field Value int Message The error debug message. public string Message Field Value string PlayerSlot The player slot that was tried to be added and failed. public int PlayerSlot Field Value int"
  },
  "api/Quantum.CallbackLocalPlayerRemoveConfirmed.html": {
    "href": "api/Quantum.CallbackLocalPlayerRemoveConfirmed.html",
    "title": "Class CallbackLocalPlayerRemoveConfirmed | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackLocalPlayerRemoveConfirmed Namespace Quantum Assembly Quantum.Simulation.dll Callback when a local player was successfully removed from the game. public sealed class CallbackLocalPlayerRemoveConfirmed : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackLocalPlayerRemoveConfirmed Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields Frame The frame the player was removed. public Frame Frame Field Value Frame ID The const CallbackLocalPlayerRemoveConfirmed callback id. public const int ID = 16 Field Value int Player The global player number that was removed. public PlayerRef Player Field Value PlayerRef PlayerSlot The local player slot that was removed. public int PlayerSlot Field Value int"
  },
  "api/Quantum.CallbackLocalPlayerRemoveFailed.html": {
    "href": "api/Quantum.CallbackLocalPlayerRemoveFailed.html",
    "title": "Class CallbackLocalPlayerRemoveFailed | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackLocalPlayerRemoveFailed Namespace Quantum Assembly Quantum.Simulation.dll Callback when removing a local player failed. public sealed class CallbackLocalPlayerRemoveFailed : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackLocalPlayerRemoveFailed Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields ID The const CallbackLocalPlayerRemoveFailed callback id. public const int ID = 15 Field Value int Message The error debug message. public string Message Field Value string PlayerSlot The local player slot that was tried to be removed and failed. public int PlayerSlot Field Value int"
  },
  "api/Quantum.CallbackPluginDisconnect.html": {
    "href": "api/Quantum.CallbackPluginDisconnect.html",
    "title": "Class CallbackPluginDisconnect | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackPluginDisconnect Namespace Quantum Assembly Quantum.Simulation.dll Callback called when the local client is disconnected by the plugin. public sealed class CallbackPluginDisconnect : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackPluginDisconnect Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields ID The const CallbackPluginDisconnect callback id. public const int ID = 13 Field Value int Reason Debug string of the disconnect reason. public string Reason Field Value string"
  },
  "api/Quantum.CallbackPollInput.html": {
    "href": "api/Quantum.CallbackPollInput.html",
    "title": "Class CallbackPollInput | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackPollInput Namespace Quantum Assembly Quantum.Simulation.dll Callback called when the simulation queries local input. public sealed class CallbackPollInput : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackPollInput Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields Frame The frame number the input is polled for. public int Frame Field Value int ID The const CallbackPollInput id. public const int ID = 0 Field Value int PlayerSlot The local player slot the input is polled for (this is not the global player number). public int PlayerSlot Field Value int Properties Flags Access the input flags. Use SetInput(Input, DeterministicInputFlags) to set. public DeterministicInputFlags Flags { get; } Property Value DeterministicInputFlags Input Access the set input. Use SetInput(Input, DeterministicInputFlags) to set. public Input Input { get; } Property Value Input IsFirstInThisUpdate Is set to true if this is first time ever that input is pulled in this simulation. public bool IsFirstInThisUpdate { get; } Property Value bool IsInputSet Will be marked as set after SetInput(Input, DeterministicInputFlags) has been called. public bool IsInputSet { get; } Property Value bool Player Obsolete, renamed to PlayerSlot. [Obsolete(\"Renamed to PlayerSlot because it's the local player slot instead of a global player.\")] public int Player { get; set; } Property Value int Methods SetInput(QTuple<Input, DeterministicInputFlags>) Set the polled input result. public void SetInput(QTuple<Input, DeterministicInputFlags> input) Parameters input QTuple<Input, DeterministicInputFlags> Input tuple SetInput(Input, DeterministicInputFlags) Set the polled input result. public void SetInput(Input input, DeterministicInputFlags flags) Parameters input Input Input object flags DeterministicInputFlags Flags"
  },
  "api/Quantum.CallbackSimulateFinished.html": {
    "href": "api/Quantum.CallbackSimulateFinished.html",
    "title": "Class CallbackSimulateFinished | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackSimulateFinished Namespace Quantum Assembly Quantum.Simulation.dll Callback called when frame simulation has completed. public sealed class CallbackSimulateFinished : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackSimulateFinished Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields Frame The frame that was simulated. public Frame Frame Field Value Frame ID The const CallbackSimulateFinished callback id. public const int ID = 6 Field Value int"
  },
  "api/Quantum.CallbackUpdateView.html": {
    "href": "api/Quantum.CallbackUpdateView.html",
    "title": "Class CallbackUpdateView | Rwby Vytal Versus Documentation",
    "keywords": "Class CallbackUpdateView Namespace Quantum Assembly Quantum.Simulation.dll Callback guaranteed to be called every rendered frame. public sealed class CallbackUpdateView : QuantumGame.CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase CallbackUpdateView Implements IDispatchable Inherited Members QuantumGame.CallbackBase.Game QuantumGame.CallbackBase.GetCallbackType(CallbackId) Fields ID The const CallbackUpdateView callback id. public const int ID = 5 Field Value int"
  },
  "api/Quantum.ChangeGroundedStateAction.html": {
    "href": "api/Quantum.ChangeGroundedStateAction.html",
    "title": "Class ChangeGroundedStateAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ChangeGroundedStateAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ChangeGroundedStateAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ChangeGroundedStateAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields toType public StateGroundedType toType Field Value StateGroundedType Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ChangeMovesetAction.html": {
    "href": "api/Quantum.ChangeMovesetAction.html",
    "title": "Class ChangeMovesetAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ChangeMovesetAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ChangeMovesetAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ChangeMovesetAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields toMoveset public AssetRef<HNSFState> toMoveset Field Value AssetRef<HNSFState> Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CharaAnimator.html": {
    "href": "api/Quantum.CharaAnimator.html",
    "title": "Struct CharaAnimator | Rwby Vytal Versus Documentation",
    "keywords": "Struct CharaAnimator Namespace Quantum Assembly Quantum.Simulation.dll public struct CharaAnimator : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 80 Field Value int state public CharaAnimatorState state Field Value CharaAnimatorState Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.CharaAnimatorState.html": {
    "href": "api/Quantum.CharaAnimatorState.html",
    "title": "Struct CharaAnimatorState | Rwby Vytal Versus Documentation",
    "keywords": "Struct CharaAnimatorState Namespace Quantum Assembly Quantum.Simulation.dll public struct CharaAnimatorState Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 80 Field Value int autoPlay public QBoolean autoPlay Field Value QBoolean layer0Frame public int layer0Frame Field Value int layer0MixerParam public FPVector2 layer0MixerParam Field Value FPVector2 layer0Set public AssetRef<AnimationEntry> layer0Set Field Value AssetRef<AnimationEntry> layer0Weight public FP layer0Weight Field Value FP layer1Frame public int layer1Frame Field Value int layer1MixerParam public FPVector2 layer1MixerParam Field Value FPVector2 layer1Set public AssetRef<AnimationEntry> layer1Set Field Value AssetRef<AnimationEntry> layer1Weight public FP layer1Weight Field Value FP Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.CharaDefinitionAsset.html": {
    "href": "api/Quantum.CharaDefinitionAsset.html",
    "title": "Class CharaDefinitionAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class CharaDefinitionAsset Namespace Quantum Assembly Quantum.Simulation.dll public class CharaDefinitionAsset : AssetObject Inheritance object Object ScriptableObject AssetObject CharaDefinitionAsset Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields CharacterPrototype public AssetRef<EntityPrototype> CharacterPrototype Field Value AssetRef<EntityPrototype> cutsceneGroupingPrefab public GameObject cutsceneGroupingPrefab Field Value GameObject fighterDefinition public ScriptableObject fighterDefinition Field Value ScriptableObject health public int health Field Value int parameters public AssetRef<AIConfig> parameters Field Value AssetRef<AIConfig> specialIntros public FighterSpecialIntroDefinition[] specialIntros Field Value FighterSpecialIntroDefinition[] statesets public List<AssetRef<HNSFStateSet>> statesets Field Value List<AssetRef<HNSFStateSet>>"
  },
  "api/Quantum.CharaInputs.html": {
    "href": "api/Quantum.CharaInputs.html",
    "title": "Struct CharaInputs | Rwby Vytal Versus Documentation",
    "keywords": "Struct CharaInputs Namespace Quantum Assembly Quantum.Simulation.dll public struct CharaInputs : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 104 Field Value int backwardHoldTime public ushort backwardHoldTime Field Value ushort blockHoldTime public ushort blockHoldTime Field Value ushort camEuler public FPVector3 camEuler Field Value FPVector3 dashHoldTime public ushort dashHoldTime Field Value ushort extraBuffer public int extraBuffer Field Value int forwardHoldTime public ushort forwardHoldTime Field Value ushort heavyHoldTime public ushort heavyHoldTime Field Value ushort ignoreButtons public PlayerInputButtonType ignoreButtons Field Value PlayerInputButtonType ignoreMovement public QBoolean ignoreMovement Field Value QBoolean inputBuffer public QListPtr<NetworkButtons> inputBuffer Field Value QListPtr<NetworkButtons> inputDisabled public QListPtr<NetworkButtons> inputDisabled Field Value QListPtr<NetworkButtons> jumpHoldTime public ushort jumpHoldTime Field Value ushort lastMoveInput public FPVector2 lastMoveInput Field Value FPVector2 lastSpecialInput public PlayerInputButtonType lastSpecialInput Field Value PlayerInputButtonType leftHoldTime public ushort leftHoldTime Field Value ushort lightHoldTime public ushort lightHoldTime Field Value ushort lockOnHoldTime public ushort lockOnHoldTime Field Value ushort moveInput public FPVector2 moveInput Field Value FPVector2 rightHoldTime public ushort rightHoldTime Field Value ushort uniqueHoldTime public ushort uniqueHoldTime Field Value ushort Properties CameraForward public FPVector3 CameraForward { get; } Property Value FPVector3 CameraRight public FPVector3 CameraRight { get; } Property Value FPVector3 Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.CharaLink.html": {
    "href": "api/Quantum.CharaLink.html",
    "title": "Struct CharaLink | Rwby Vytal Versus Documentation",
    "keywords": "Struct CharaLink Namespace Quantum Assembly Quantum.Simulation.dll public struct CharaLink : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 8 Field Value int charaDefinition public AssetRef<CharaDefinitionAsset> charaDefinition Field Value AssetRef<CharaDefinitionAsset> Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.CharaLinkSystem.html": {
    "href": "api/Quantum.CharaLinkSystem.html",
    "title": "Class CharaLinkSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class CharaLinkSystem Namespace Quantum Assembly Quantum.Simulation.dll [Preserve] public class CharaLinkSystem : SystemSignalsOnly, ISignalOnComponentAdded<CharaLink>, ISignalOnComponentRemoved<CharaLink>, ISignal Inheritance object SystemBase SystemSignalsOnly CharaLinkSystem Implements ISignalOnComponentAdded<CharaLink> ISignalOnComponentRemoved<CharaLink> ISignal Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, CharaLink*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, CharaLink* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component CharaLink* The component that was added. OnRemoved(Frame, EntityRef, CharaLink*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, CharaLink* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component CharaLink* The component that was removed."
  },
  "api/Quantum.CharaPhysics.html": {
    "href": "api/Quantum.CharaPhysics.html",
    "title": "Struct CharaPhysics | Rwby Vytal Versus Documentation",
    "keywords": "Struct CharaPhysics Namespace Quantum Assembly Quantum.Simulation.dll public struct CharaPhysics : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 64 Field Value int conservedIntertia public FPVector3 conservedIntertia Field Value FPVector3 currentGroundedState public StateGroundedType currentGroundedState Field Value StateGroundedType externalCollisionMultiplier public FP externalCollisionMultiplier Field Value FP rotationDir public FPVector3 rotationDir Field Value FPVector3 Methods GetDynamicVelocity(Frame, EntityRef) public FPVector3 GetDynamicVelocity(Frame f, EntityRef entity) Parameters f Frame entity EntityRef Returns FPVector3 GetHashCode() public override int GetHashCode() Returns int GetKinematicVelocity(Frame, EntityRef) public FPVector3 GetKinematicVelocity(Frame f, EntityRef entity) Parameters f Frame entity EntityRef Returns FPVector3 GetOverallVelocity(Frame, EntityRef) public FPVector3 GetOverallVelocity(Frame f, EntityRef entity) Parameters f Frame entity EntityRef Returns FPVector3 Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer SetDynamicVelocty(Frame, EntityRef, FPVector3) public void SetDynamicVelocty(Frame f, EntityRef entity, FPVector3 velocity) Parameters f Frame entity EntityRef velocity FPVector3 SetKinematicVelocity(Frame, EntityRef, FPVector3) public void SetKinematicVelocity(Frame f, EntityRef entity, FPVector3 velocity) Parameters f Frame entity EntityRef velocity FPVector3 SetOverallVelocity(Frame, EntityRef, FPVector3) public void SetOverallVelocity(Frame f, EntityRef entity, FPVector3 velocity) Parameters f Frame entity EntityRef velocity FPVector3"
  },
  "api/Quantum.CharaStateMachineSystem.Filter.html": {
    "href": "api/Quantum.CharaStateMachineSystem.Filter.html",
    "title": "Struct CharaStateMachineSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct CharaStateMachineSystem.Filter Namespace Quantum Assembly Quantum.Simulation.dll public struct CharaStateMachineSystem.Filter Fields CharaStateMachines public CharaStateMachines* CharaStateMachines Field Value CharaStateMachines* Entity public EntityRef Entity Field Value EntityRef"
  },
  "api/Quantum.CharaStateMachineSystem.html": {
    "href": "api/Quantum.CharaStateMachineSystem.html",
    "title": "Class CharaStateMachineSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class CharaStateMachineSystem Namespace Quantum Assembly Quantum.Simulation.dll [Preserve] public class CharaStateMachineSystem : SystemMainThreadFilter<CharaStateMachineSystem.Filter>, ISignalOnComponentAdded<CharaStateMachines>, ISignalOnComponentRemoved<CharaStateMachines>, ISignalOnComponentAdded<IsThrowing>, ISignalOnComponentRemoved<IsThrowing>, ISignal Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<CharaStateMachineSystem.Filter> CharaStateMachineSystem Implements ISignalOnComponentAdded<CharaStateMachines> ISignalOnComponentRemoved<CharaStateMachines> ISignalOnComponentAdded<IsThrowing> ISignalOnComponentRemoved<IsThrowing> ISignal Inherited Members SystemMainThreadFilter<CharaStateMachineSystem.Filter>.UseCulling SystemMainThreadFilter<CharaStateMachineSystem.Filter>.Without SystemMainThreadFilter<CharaStateMachineSystem.Filter>.Any SystemMainThreadFilter<CharaStateMachineSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, CharaStateMachines*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame frame, EntityRef entity, CharaStateMachines* component) Parameters frame Frame entity EntityRef The entity that the component was added to. component CharaStateMachines* The component that was added. OnAdded(Frame, EntityRef, IsThrowing*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, IsThrowing* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component IsThrowing* The component that was added. OnRemoved(Frame, EntityRef, CharaStateMachines*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, CharaStateMachines* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component CharaStateMachines* The component that was removed. OnRemoved(Frame, EntityRef, IsThrowing*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, IsThrowing* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component IsThrowing* The component that was removed. Update(Frame, ref Filter) Override to add workload. public override void Update(Frame frame, ref CharaStateMachineSystem.Filter filter) Parameters frame Frame filter CharaStateMachineSystem.Filter The frame object."
  },
  "api/Quantum.CharaStateMachines.html": {
    "href": "api/Quantum.CharaStateMachines.html",
    "title": "Struct CharaStateMachines | Rwby Vytal Versus Documentation",
    "keywords": "Struct CharaStateMachines Namespace Quantum Assembly Quantum.Simulation.dll public struct CharaStateMachines : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 192 Field Value int blackboard public AIBlackboardComponent blackboard Field Value AIBlackboardComponent blackboardInitializer public AssetRef<AIBlackboardInitializer> blackboardInitializer Field Value AssetRef<AIBlackboardInitializer> config public AssetRef<AIConfigBase> config Field Value AssetRef<AIConfigBase> disableAutoUpdates public QBoolean disableAutoUpdates Field Value QBoolean specials public QListPtr<AssetRef<HNSFSpecialSet>> specials Field Value QListPtr<AssetRef<HNSFSpecialSet>> specialsPage public int specialsPage Field Value int stateAgent public HNSFStateAgent stateAgent Field Value HNSFStateAgent taggedStates public AssetRef<HNSFTaggedStatesAsset> taggedStates Field Value AssetRef<HNSFTaggedStatesAsset> Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.CharaStateUpdateAction.html": {
    "href": "api/Quantum.CharaStateUpdateAction.html",
    "title": "Class CharaStateUpdateAction | Rwby Vytal Versus Documentation",
    "keywords": "Class CharaStateUpdateAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CharaStateUpdateAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction CharaStateUpdateAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkForTransitions public bool checkForTransitions Field Value bool throweeId public int throweeId Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CharacterIntroType.html": {
    "href": "api/Quantum.CharacterIntroType.html",
    "title": "Enum CharacterIntroType | Rwby Vytal Versus Documentation",
    "keywords": "Enum CharacterIntroType Namespace Quantum Assembly Quantum.Simulation.dll public enum CharacterIntroType Fields Generic = 2 None = 0 Special = 1"
  },
  "api/Quantum.CharacterStateUpdateLeaf.html": {
    "href": "api/Quantum.CharacterStateUpdateLeaf.html",
    "title": "Class CharacterStateUpdateLeaf | Rwby Vytal Versus Documentation",
    "keywords": "Class CharacterStateUpdateLeaf Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CharacterStateUpdateLeaf : BTLeaf Inheritance object Object ScriptableObject AssetObject BTNode BTLeaf CharacterStateUpdateLeaf Inherited Members BTLeaf.Services BTLeaf._serviceInstances BTLeaf.OnStartedRunning(BTParams, ref AIContext) BTLeaf.OnEnter(BTParams, ref AIContext) BTLeaf.OnExit(BTParams, ref AIContext) BTLeaf.Loaded(IResourceManager, Native.Allocator) BTLeaf.ServiceInstances BTLeaf.NodeType BTNode.Label BTNode.Id BTNode.Init(BTParams, ref AIContext) BTNode.OnAbort(BTParams, ref AIContext, BTAbort) BTNode.OnReset(BTParams, ref AIContext) BTNode.CheckConditions(BTParams, ref AIContext) BTNode.OnDynamicRun(BTParams, ref AIContext) BTNode.ChildCompletedRunning(BTParams, BTStatus) BTNode.GetStatus(FrameBase, BTAgent*) BTNode.SetStatus(FrameBase, BTStatus, BTAgent*) BTNode.GetStatus(FrameThreadSafe, BTAgent*) BTNode.SetStatus(FrameThreadSafe, BTStatus, BTAgent*) BTNode.EvaluateAbortNode(BTParams) BTNode.Execute(BTParams, ref AIContext, bool) AssetObject.Identifier AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods OnUpdate(BTParams, ref AIContext) protected override BTStatus OnUpdate(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext Returns BTStatus"
  },
  "api/Quantum.ChargeLevelDecision.html": {
    "href": "api/Quantum.ChargeLevelDecision.html",
    "title": "Class ChargeLevelDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class ChargeLevelDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ChargeLevelDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision ChargeLevelDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields level public int level Field Value int orHigher public bool orHigher Field Value bool Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CheckCharaCurrentStateByTagFunction.StateGroupType.html": {
    "href": "api/Quantum.CheckCharaCurrentStateByTagFunction.StateGroupType.html",
    "title": "Enum CheckCharaCurrentStateByTagFunction.StateGroupType | Rwby Vytal Versus Documentation",
    "keywords": "Enum CheckCharaCurrentStateByTagFunction.StateGroupType Namespace Quantum Assembly Quantum.Simulation.dll public enum CheckCharaCurrentStateByTagFunction.StateGroupType Fields Global = 0 Group = 1 Moveset = 2 State = 3"
  },
  "api/Quantum.CheckCharaCurrentStateByTagFunction.html": {
    "href": "api/Quantum.CheckCharaCurrentStateByTagFunction.html",
    "title": "Class CheckCharaCurrentStateByTagFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class CheckCharaCurrentStateByTagFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CheckCharaCurrentStateByTagFunction : AIFunctionBase<bool> Inheritance object Object ScriptableObject AssetObject AIFunctionBase AIFunctionBase<bool> CheckCharaCurrentStateByTagFunction Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields stateGroupToCheck public CheckCharaCurrentStateByTagFunction.StateGroupType stateGroupToCheck Field Value CheckCharaCurrentStateByTagFunction.StateGroupType stateTag public AssetRef<Tag> stateTag Field Value AssetRef<Tag> Methods Execute(FrameThreadSafe, EntityRef, ref AIContext) public override bool Execute(FrameThreadSafe frame, EntityRef entity, ref AIContext aiContext) Parameters frame FrameThreadSafe entity EntityRef aiContext AIContext Returns bool"
  },
  "api/Quantum.CheckCharaNextStateByTagFunction.html": {
    "href": "api/Quantum.CheckCharaNextStateByTagFunction.html",
    "title": "Class CheckCharaNextStateByTagFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class CheckCharaNextStateByTagFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CheckCharaNextStateByTagFunction : AIFunctionBase<bool> Inheritance object Object ScriptableObject AssetObject AIFunctionBase AIFunctionBase<bool> CheckCharaNextStateByTagFunction Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields stateTag public AssetRef<Tag> stateTag Field Value AssetRef<Tag> Methods Execute(FrameThreadSafe, EntityRef, ref AIContext) public override bool Execute(FrameThreadSafe frame, EntityRef entity, ref AIContext aiContext) Parameters frame FrameThreadSafe entity EntityRef aiContext AIContext Returns bool"
  },
  "api/Quantum.ChecksumErrorFrameDumpContext.html": {
    "href": "api/Quantum.ChecksumErrorFrameDumpContext.html",
    "title": "Class ChecksumErrorFrameDumpContext | Rwby Vytal Versus Documentation",
    "keywords": "Class ChecksumErrorFrameDumpContext Namespace Quantum Assembly Quantum.Simulation.dll Gathers additional meta data during the Quantum game callback Photon.Deterministic.IDeterministicGame.GetExtraErrorFrameDumpData(Photon.Deterministic.DeterministicFrame) in response to a checksum error. public class ChecksumErrorFrameDumpContext Inheritance object ChecksumErrorFrameDumpContext Constructors ChecksumErrorFrameDumpContext(QuantumGame, Frame) Constructor. public ChecksumErrorFrameDumpContext(QuantumGame game, Frame frame) Parameters game QuantumGame Game frame Frame Frame Fields AssetDBChecksums AssetDB checksums. public QTuple<AssetGuid, ulong>[] AssetDBChecksums Field Value QTuple<AssetGuid, ulong>[] SimulationConfig The simulation config. public SimulationConfig SimulationConfig Field Value SimulationConfig Methods Deserialize(QuantumGame, BinaryReader) Deserialize the additional meta data. public static ChecksumErrorFrameDumpContext Deserialize(QuantumGame game, BinaryReader reader) Parameters game QuantumGame Game reader BinaryReader Reader object Returns ChecksumErrorFrameDumpContext Serialize(QuantumGame, BinaryWriter) Serialize the additional meta data. public void Serialize(QuantumGame game, BinaryWriter writer) Parameters game QuantumGame Game writer BinaryWriter Writer object"
  },
  "api/Quantum.ChecksumFile.ChecksumEntry.html": {
    "href": "api/Quantum.ChecksumFile.ChecksumEntry.html",
    "title": "Struct ChecksumFile.ChecksumEntry | Rwby Vytal Versus Documentation",
    "keywords": "Struct ChecksumFile.ChecksumEntry Namespace Quantum Assembly Quantum.Simulation.dll Represents one recorded checksum. [Serializable] public struct ChecksumFile.ChecksumEntry Fields ChecksumAsLong Unity JSON cannot read the unsigned long data type. We can convert on this level, keeping the ULong CalculateChecksum() signature and encode the checksum as a long for serialization. Any other ideas? public long ChecksumAsLong Field Value long Frame The frame number the checksum was recorded for. public int Frame Field Value int"
  },
  "api/Quantum.ChecksumFile.html": {
    "href": "api/Quantum.ChecksumFile.html",
    "title": "Class ChecksumFile | Rwby Vytal Versus Documentation",
    "keywords": "Class ChecksumFile Namespace Quantum Assembly Quantum.Simulation.dll A serializable object that contains recorded checksums for a Quantum session. [Serializable] public class ChecksumFile Inheritance object ChecksumFile Fields Checksums All recorded checksums. public ChecksumFile.ChecksumEntry[] Checksums Field Value ChecksumEntry[] GrowSize Grow the checksum array during recording by this amount. public const int GrowSize = 3600 Field Value int Methods Clone() Clone this object and discard empty checksum entries. public ChecksumFile Clone() Returns ChecksumFile New checksum object to save to a replay for example"
  },
  "api/Quantum.ChecksumFileHelper.html": {
    "href": "api/Quantum.ChecksumFileHelper.html",
    "title": "Class ChecksumFileHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class ChecksumFileHelper Namespace Quantum Assembly Quantum.Simulation.dll Helper methods to convert between ulong and long. public static class ChecksumFileHelper Inheritance object ChecksumFileHelper Methods LongToULong(long) Reverse the conversion ulong to long. public static ulong LongToULong(long value) Parameters value long Value to convert back Returns ulong The ulong value representaiton of a long UlongToLong(ulong) Convert a ulong to a long. public static long UlongToLong(ulong value) Parameters value ulong Value to convert Returns long Converted to long"
  },
  "api/Quantum.ClampFPFunction.html": {
    "href": "api/Quantum.ClampFPFunction.html",
    "title": "Class ClampFPFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class ClampFPFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ClampFPFunction : StateFunctionFP Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FP> StateFunctionFP ClampFPFunction Inherited Members HNSFStateFunction<FP>.Label HNSFStateFunction<FP>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields maxValue public HNSFParamFP maxValue Field Value HNSFParamFP minValue public HNSFParamFP minValue Field Value HNSFParamFP param public HNSFParamFP param Field Value HNSFParamFP Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FP Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FP"
  },
  "api/Quantum.ClampForcesAction.ForceGroupType.html": {
    "href": "api/Quantum.ClampForcesAction.ForceGroupType.html",
    "title": "Enum ClampForcesAction.ForceGroupType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ClampForcesAction.ForceGroupType Namespace Quantum Assembly Quantum.Simulation.dll public enum ClampForcesAction.ForceGroupType Fields Both = 2 Gravity = 1 Movement = 0"
  },
  "api/Quantum.ClampForcesAction.html": {
    "href": "api/Quantum.ClampForcesAction.html",
    "title": "Class ClampForcesAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ClampForcesAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Clamp Forces\", 0)] public class ClampForcesAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ClampForcesAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields forceToClamp public ClampForcesAction.ForceGroupType forceToClamp Field Value ClampForcesAction.ForceGroupType maxMagnitude public HNSFParamFP maxMagnitude Field Value HNSFParamFP minMagnitude public HNSFParamFP minMagnitude Field Value HNSFParamFP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ClampIntFunction.html": {
    "href": "api/Quantum.ClampIntFunction.html",
    "title": "Class ClampIntFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class ClampIntFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ClampIntFunction : StateFunctionInt Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<int> StateFunctionInt ClampIntFunction Inherited Members HNSFStateFunction<int>.Label HNSFStateFunction<int>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields maxValue public HNSFParamInt maxValue Field Value HNSFParamInt minValue public HNSFParamInt minValue Field Value HNSFParamInt param public HNSFParamInt param Field Value HNSFParamInt Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override int Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int"
  },
  "api/Quantum.ClashCombatPair.html": {
    "href": "api/Quantum.ClashCombatPair.html",
    "title": "Struct ClashCombatPair | Rwby Vytal Versus Documentation",
    "keywords": "Struct ClashCombatPair Namespace Quantum Assembly Quantum.Simulation.dll public struct ClashCombatPair Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 40 Field Value int entityA public EntityRef entityA Field Value EntityRef entityAClashLevel public int entityAClashLevel Field Value int entityAHitbox public EntityRef entityAHitbox Field Value EntityRef entityB public EntityRef entityB Field Value EntityRef entityBClashLevel public int entityBClashLevel Field Value int entityBHitbox public EntityRef entityBHitbox Field Value EntityRef Methods GetClashLevelDifference() public int GetClashLevelDifference() Returns int GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.ClearAttackStringAction.html": {
    "href": "api/Quantum.ClearAttackStringAction.html",
    "title": "Class ClearAttackStringAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ClearAttackStringAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ClearAttackStringAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ClearAttackStringAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields printString public bool printString Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ClearChargeAction.html": {
    "href": "api/Quantum.ClearChargeAction.html",
    "title": "Class ClearChargeAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ClearChargeAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ClearChargeAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ClearChargeAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ClearComboAction.html": {
    "href": "api/Quantum.ClearComboAction.html",
    "title": "Class ClearComboAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ClearComboAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ClearComboAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ClearComboAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields dontClearComboCounter public bool dontClearComboCounter Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ClearHitEntitiesAction.html": {
    "href": "api/Quantum.ClearHitEntitiesAction.html",
    "title": "Class ClearHitEntitiesAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ClearHitEntitiesAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ClearHitEntitiesAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ClearHitEntitiesAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ClearTrackedStatesAction.html": {
    "href": "api/Quantum.ClearTrackedStatesAction.html",
    "title": "Class ClearTrackedStatesAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ClearTrackedStatesAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ClearTrackedStatesAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ClearTrackedStatesAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CollisionCombatPair.html": {
    "href": "api/Quantum.CollisionCombatPair.html",
    "title": "Struct CollisionCombatPair | Rwby Vytal Versus Documentation",
    "keywords": "Struct CollisionCombatPair Namespace Quantum Assembly Quantum.Simulation.dll public struct CollisionCombatPair Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 40 Field Value int distance public FP distance Field Value FP entityA public EntityRef entityA Field Value EntityRef entityACollbox public EntityRef entityACollbox Field Value EntityRef entityB public EntityRef entityB Field Value EntityRef entityBCollbox public EntityRef entityBCollbox Field Value EntityRef Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.Collisionbox.html": {
    "href": "api/Quantum.Collisionbox.html",
    "title": "Struct Collisionbox | Rwby Vytal Versus Documentation",
    "keywords": "Struct Collisionbox Namespace Quantum Assembly Quantum.Simulation.dll public struct Collisionbox : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 16 Field Value int active public QBoolean active Field Value QBoolean id public int id Field Value int owner public EntityRef owner Field Value EntityRef Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.CombatBox.html": {
    "href": "api/Quantum.CombatBox.html",
    "title": "Struct CombatBox | Rwby Vytal Versus Documentation",
    "keywords": "Struct CombatBox Namespace Quantum Assembly Quantum.Simulation.dll public struct CombatBox : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.CombatBoxesAsset.html": {
    "href": "api/Quantum.CombatBoxesAsset.html",
    "title": "Class CombatBoxesAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatBoxesAsset Namespace Quantum Assembly Quantum.Simulation.dll public class CombatBoxesAsset : AssetObject Inheritance object Object ScriptableObject AssetObject CombatBoxesAsset Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields hitboxGroupStartFrame public List<int> hitboxGroupStartFrame Field Value List<int> hitboxSets public List<BoxSet> hitboxSets Field Value List<BoxSet> hurtboxGroupStartFrame public List<int> hurtboxGroupStartFrame Field Value List<int> hurtboxSets public List<BoxSet> hurtboxSets Field Value List<BoxSet>"
  },
  "api/Quantum.CombatConstants.html": {
    "href": "api/Quantum.CombatConstants.html",
    "title": "Class CombatConstants | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatConstants Namespace Quantum Assembly Quantum.Simulation.dll public static class CombatConstants Inheritance object CombatConstants Fields comboDecayGravityMultiStartValue public static int comboDecayGravityMultiStartValue Field Value int comboDecayHorLaunchValueLimit public static int comboDecayHorLaunchValueLimit Field Value int comboDecayLaunchValueLimit public static int comboDecayLaunchValueLimit Field Value int comboDecayLaunchValueMinDecay public static int comboDecayLaunchValueMinDecay Field Value int comboTimeBefore1Hitstun public static int comboTimeBefore1Hitstun Field Value int"
  },
  "api/Quantum.CombatHelper.html": {
    "href": "api/Quantum.CombatHelper.html",
    "title": "Class CombatHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatHelper Namespace Quantum Assembly Quantum.Simulation.dll public static class CombatHelper Inheritance object CombatHelper Fields CombatBoxesStateActionTypes public static List<Type> CombatBoxesStateActionTypes Field Value List<Type> Methods WillBeHitThisFrame(Frame, EntityRef) public static bool WillBeHitThisFrame(Frame f, EntityRef entity) Parameters f Frame entity EntityRef Returns bool WillBeHitThisFrame(Frame, EntityRef, out FPVector3) public static bool WillBeHitThisFrame(Frame f, EntityRef entity, out FPVector3 originOfAttack) Parameters f Frame entity EntityRef originOfAttack FPVector3 Returns bool WillBeHitThisFrame(Frame, EntityRef, out EntityRef, bool, bool) public static bool WillBeHitThisFrame(Frame f, EntityRef entity, out EntityRef originEntityRef, bool returnHitboxIfNoOwner = false, bool failIfNoEntity = false) Parameters f Frame entity EntityRef originEntityRef EntityRef returnHitboxIfNoOwner bool failIfNoEntity bool Returns bool"
  },
  "api/Quantum.CombatHitDetectionInfo.html": {
    "href": "api/Quantum.CombatHitDetectionInfo.html",
    "title": "Struct CombatHitDetectionInfo | Rwby Vytal Versus Documentation",
    "keywords": "Struct CombatHitDetectionInfo Namespace Quantum Assembly Quantum.Simulation.dll public struct CombatHitDetectionInfo : IComponentSingleton, IComponent Implements IComponentSingleton IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 16 Field Value int clashCombatPairs public QDictionaryPtr<EntityRef, ClashCombatPair> clashCombatPairs Field Value QDictionaryPtr<EntityRef, ClashCombatPair> collisionPairs public QDictionaryPtr<EntityRef, CollisionCombatPair> collisionPairs Field Value QDictionaryPtr<EntityRef, CollisionCombatPair> hitboxCombatPairAttackee public QDictionaryPtr<EntityRef, HitboxCombatPair> hitboxCombatPairAttackee Field Value QDictionaryPtr<EntityRef, HitboxCombatPair> hitboxCombatPairAttacker public QDictionaryPtr<EntityRef, HitboxCombatPair> hitboxCombatPairAttacker Field Value QDictionaryPtr<EntityRef, HitboxCombatPair> Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.CombatHitDetectionSystem.html": {
    "href": "api/Quantum.CombatHitDetectionSystem.html",
    "title": "Class CombatHitDetectionSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatHitDetectionSystem Namespace Quantum Assembly Quantum.Simulation.dll [Preserve] public class CombatHitDetectionSystem : SystemMainThread, ISignalOnComponentAdded<BoxCombatant>, ISignalOnComponentRemoved<BoxCombatant>, ISignalOnComponentAdded<CombatHitDetectionInfo>, ISignalOnComponentRemoved<CombatHitDetectionInfo>, ISignalOnComponentAdded<Fighter>, ISignalOnComponentRemoved<Fighter>, ISignalOnComponentAdded<FighterArticles>, ISignalOnComponentRemoved<FighterArticles>, ISignal Inheritance object SystemBase SystemMainThread CombatHitDetectionSystem Implements ISignalOnComponentAdded<BoxCombatant> ISignalOnComponentRemoved<BoxCombatant> ISignalOnComponentAdded<CombatHitDetectionInfo> ISignalOnComponentRemoved<CombatHitDetectionInfo> ISignalOnComponentAdded<Fighter> ISignalOnComponentRemoved<Fighter> ISignalOnComponentAdded<FighterArticles> ISignalOnComponentRemoved<FighterArticles> ISignal Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, BoxCombatant*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, BoxCombatant* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component BoxCombatant* The component that was added. OnAdded(Frame, EntityRef, CombatHitDetectionInfo*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, CombatHitDetectionInfo* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component CombatHitDetectionInfo* The component that was added. OnAdded(Frame, EntityRef, Fighter*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, Fighter* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component Fighter* The component that was added. OnAdded(Frame, EntityRef, FighterArticles*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, FighterArticles* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component FighterArticles* The component that was added. OnRemoved(Frame, EntityRef, BoxCombatant*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, BoxCombatant* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component BoxCombatant* The component that was removed. OnRemoved(Frame, EntityRef, CombatHitDetectionInfo*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, CombatHitDetectionInfo* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component CombatHitDetectionInfo* The component that was removed. OnRemoved(Frame, EntityRef, Fighter*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, Fighter* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component Fighter* The component that was removed. OnRemoved(Frame, EntityRef, FighterArticles*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, FighterArticles* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component FighterArticles* The component that was removed. Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/Quantum.CombatHitResolverSystem.html": {
    "href": "api/Quantum.CombatHitResolverSystem.html",
    "title": "Class CombatHitResolverSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatHitResolverSystem Namespace Quantum Assembly Quantum.Simulation.dll [Preserve] public class CombatHitResolverSystem : SystemMainThread Inheritance object SystemBase SystemMainThread CombatHitResolverSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/Quantum.CombatTargeter.html": {
    "href": "api/Quantum.CombatTargeter.html",
    "title": "Struct CombatTargeter | Rwby Vytal Versus Documentation",
    "keywords": "Struct CombatTargeter Namespace Quantum Assembly Quantum.Simulation.dll public struct CombatTargeter : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 80 Field Value int hardLocked public QBoolean hardLocked Field Value QBoolean lookForward public FPVector3 lookForward Field Value FPVector3 lookRight public FPVector3 lookRight Field Value FPVector3 softTarget public EntityRef softTarget Field Value EntityRef targetDistance public FP targetDistance Field Value FP targetEntity public EntityRef targetEntity Field Value EntityRef Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.CombatTeam.html": {
    "href": "api/Quantum.CombatTeam.html",
    "title": "Struct CombatTeam | Rwby Vytal Versus Documentation",
    "keywords": "Struct CombatTeam Namespace Quantum Assembly Quantum.Simulation.dll public struct CombatTeam : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int value public int value Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.CombatantHasHitDecision.html": {
    "href": "api/Quantum.CombatantHasHitDecision.html",
    "title": "Class CombatantHasHitDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatantHasHitDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CombatantHasHitDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision CombatantHasHitDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields minimumHitCount public int minimumHitCount Field Value int Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CombatantHitCountDecision.html": {
    "href": "api/Quantum.CombatantHitCountDecision.html",
    "title": "Class CombatantHitCountDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatantHitCountDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CombatantHitCountDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision CombatantHitCountDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields hitCheckTypes public StandardHitReactions[] hitCheckTypes Field Value StandardHitReactions[] minimumHitCount public int minimumHitCount Field Value int Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CombatboxBroadphaseSystem.Partition.html": {
    "href": "api/Quantum.CombatboxBroadphaseSystem.Partition.html",
    "title": "Struct CombatboxBroadphaseSystem.Partition | Rwby Vytal Versus Documentation",
    "keywords": "Struct CombatboxBroadphaseSystem.Partition Namespace Quantum Assembly Quantum.Simulation.dll public struct CombatboxBroadphaseSystem.Partition Fields collisionboxes public List<EntityRef> collisionboxes Field Value List<EntityRef> hitboxes public List<EntityRef> hitboxes Field Value List<EntityRef> hurtboxes public List<EntityRef> hurtboxes Field Value List<EntityRef>"
  },
  "api/Quantum.CombatboxBroadphaseSystem.html": {
    "href": "api/Quantum.CombatboxBroadphaseSystem.html",
    "title": "Class CombatboxBroadphaseSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatboxBroadphaseSystem Namespace Quantum Assembly Quantum.Simulation.dll [Preserve] public class CombatboxBroadphaseSystem : SystemMainThread Inheritance object SystemBase SystemMainThread CombatboxBroadphaseSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Fields combatboxPartitions public static Dictionary<Vector3Int, CombatboxBroadphaseSystem.Partition> combatboxPartitions Field Value Dictionary<Vector3Int, CombatboxBroadphaseSystem.Partition> gridSize public int gridSize Field Value int Methods ConvertToGridPartition(FPVector3) public Vector3Int ConvertToGridPartition(FPVector3 spatialPosition) Parameters spatialPosition FPVector3 Returns Vector3Int Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/Quantum.CombatboxNarrowphaseSystem.PairEntry.html": {
    "href": "api/Quantum.CombatboxNarrowphaseSystem.PairEntry.html",
    "title": "Struct CombatboxNarrowphaseSystem.PairEntry | Rwby Vytal Versus Documentation",
    "keywords": "Struct CombatboxNarrowphaseSystem.PairEntry Namespace Quantum Assembly Quantum.Simulation.dll public struct CombatboxNarrowphaseSystem.PairEntry Constructors PairEntry(EntityRef, EntityRef) public PairEntry(EntityRef a, EntityRef b) Parameters a EntityRef b EntityRef PairEntry(EntityRef, EntityRef, FP) public PairEntry(EntityRef a, EntityRef b, FP overlap) Parameters a EntityRef b EntityRef overlap FP Fields a public EntityRef a Field Value EntityRef b public EntityRef b Field Value EntityRef overlapPenetration public FP overlapPenetration Field Value FP Methods Equals(PairEntry) public bool Equals(CombatboxNarrowphaseSystem.PairEntry other) Parameters other CombatboxNarrowphaseSystem.PairEntry Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.CombatboxNarrowphaseSystem.html": {
    "href": "api/Quantum.CombatboxNarrowphaseSystem.html",
    "title": "Class CombatboxNarrowphaseSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatboxNarrowphaseSystem Namespace Quantum Assembly Quantum.Simulation.dll [Preserve] public class CombatboxNarrowphaseSystem : SystemMainThread Inheritance object SystemBase SystemMainThread CombatboxNarrowphaseSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Fields collisionboxToCollisionboxCollisions public static HashSet<CombatboxNarrowphaseSystem.PairEntry> collisionboxToCollisionboxCollisions Field Value HashSet<CombatboxNarrowphaseSystem.PairEntry> hitboxToHitboxCollisions public static HashSet<CombatboxNarrowphaseSystem.PairEntry> hitboxToHitboxCollisions Field Value HashSet<CombatboxNarrowphaseSystem.PairEntry> hitboxToHurtboxCollisions public static HashSet<CombatboxNarrowphaseSystem.PairEntry> hitboxToHurtboxCollisions Field Value HashSet<CombatboxNarrowphaseSystem.PairEntry> Methods Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/Quantum.CombatboxResolverSystem.html": {
    "href": "api/Quantum.CombatboxResolverSystem.html",
    "title": "Class CombatboxResolverSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatboxResolverSystem Namespace Quantum Assembly Quantum.Simulation.dll [Preserve] public class CombatboxResolverSystem : SystemMainThread Inheritance object SystemBase SystemMainThread CombatboxResolverSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/Quantum.CommonInputConditions.html": {
    "href": "api/Quantum.CommonInputConditions.html",
    "title": "Class CommonInputConditions | Rwby Vytal Versus Documentation",
    "keywords": "Class CommonInputConditions Namespace Quantum Assembly Quantum.Simulation.dll public static class CommonInputConditions Inheritance object CommonInputConditions Fields backForward public static InputCondition[] backForward Field Value InputCondition[] dTapBackward public static InputCondition[] dTapBackward Field Value InputCondition[] dTapForward public static InputCondition[] dTapForward Field Value InputCondition[] dTapLeft public static InputCondition[] dTapLeft Field Value InputCondition[] dTapRight public static InputCondition[] dTapRight Field Value InputCondition[]"
  },
  "api/Quantum.Constants.html": {
    "href": "api/Quantum.Constants.html",
    "title": "Class Constants | Rwby Vytal Versus Documentation",
    "keywords": "Class Constants Namespace Quantum Assembly Quantum.Simulation.dll public static class Constants Inheritance object Constants Fields INPUT_BUFFER_CURRENT public const int INPUT_BUFFER_CURRENT = 59 Field Value int INPUT_BUFFER_MAX public const int INPUT_BUFFER_MAX = 60 Field Value int NETWORKBUTTONS_SIZE public const int NETWORKBUTTONS_SIZE = 4 Field Value int"
  },
  "api/Quantum.Core.CullingSystem2D.html": {
    "href": "api/Quantum.Core.CullingSystem2D.html",
    "title": "Class CullingSystem2D | Rwby Vytal Versus Documentation",
    "keywords": "Class CullingSystem2D Namespace Quantum.Core Assembly Quantum.Simulation.dll During Predicted frames, culls all cullable entities with Quantum.Transform2D that are positioned out of the prediction area. [Preserve] public class CullingSystem2D : SystemBase Inheritance object SystemBase CullingSystem2D Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Schedule(Frame, TaskHandle) Override to add tasks to this system. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The system task graph."
  },
  "api/Quantum.Core.CullingSystem3D.html": {
    "href": "api/Quantum.Core.CullingSystem3D.html",
    "title": "Class CullingSystem3D | Rwby Vytal Versus Documentation",
    "keywords": "Class CullingSystem3D Namespace Quantum.Core Assembly Quantum.Simulation.dll During Predicted frames, culls all cullable entities with Quantum.Transform3D that are positioned out of the prediction area. [Preserve] public class CullingSystem3D : SystemBase Inheritance object SystemBase CullingSystem3D Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Schedule(Frame, TaskHandle) Override to add tasks to this system. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The system task graph."
  },
  "api/Quantum.Core.DebugCommand.Payload.html": {
    "href": "api/Quantum.Core.DebugCommand.Payload.html",
    "title": "Struct DebugCommand.Payload | Rwby Vytal Versus Documentation",
    "keywords": "Struct DebugCommand.Payload Namespace Quantum.Core Assembly Quantum.Simulation.dll The debug command payload. public struct DebugCommand.Payload Fields Components Optionally a component set to destroy. public ComponentSet Components Field Value ComponentSet Data Serialized user data. For example entity prototype information to create a new entity. public byte[] Data Field Value byte[] Entity The referenced entity to destroy or the created entity id. public EntityRef Entity Field Value EntityRef Id The command unique id. public long Id Field Value long Type The DebugCommandType. public int Type Field Value int"
  },
  "api/Quantum.Core.DebugCommand.html": {
    "href": "api/Quantum.Core.DebugCommand.html",
    "title": "Class DebugCommand | Rwby Vytal Versus Documentation",
    "keywords": "Class DebugCommand Namespace Quantum.Core Assembly Quantum.Simulation.dll The DebugCommand class allows to send debug commands to the simulation. It's used by the Quantum state inspector for example. The system is completely disabled in non-development builds or when defining QUANTUM_DEBUG_COMMAND_DISABLED. public static class DebugCommand Inheritance object DebugCommand Properties IsEnabled Returns true when the debug command system is enabled. public static bool IsEnabled { get; } Property Value bool Methods CreateDestroyPayload(EntityRef) Factory to create a destroy entity debug command payload. public static DebugCommand.Payload CreateDestroyPayload(EntityRef entityRef) Parameters entityRef EntityRef Entity to destroy. Returns DebugCommand.Payload Debug command payload. CreateMaterializePayload(EntityRef, EntityPrototype, IAssetSerializer) Factory to create the payload to create a new entity from an entity prototype. public static DebugCommand.Payload CreateMaterializePayload(EntityRef entityRef, EntityPrototype prototype, IAssetSerializer serializer) Parameters entityRef EntityRef If set, then the existing entity will be overwritten, if not set a new entity will be created. prototype EntityPrototype Optionally the entity prototype to use. Can be null. serializer IAssetSerializer The serializer. Returns DebugCommand.Payload The debug command payload. CreateRemoveComponentPayload(EntityRef, Type) Factory to create the payload to remove a component from an entity. public static DebugCommand.Payload CreateRemoveComponentPayload(EntityRef entityRef, Type componentType) Parameters entityRef EntityRef The entity to remove a component from. componentType Type The component type to remove. Returns DebugCommand.Payload The debug command payload. Reset() Reset the debug command system and invalidate the CommandExecuted callback. public static void Reset() Send(QuantumGame, params Payload[]) Sends a debug command. public static bool Send(QuantumGame game, params DebugCommand.Payload[] payload) Parameters game QuantumGame The reference game. payload Payload[] The command payloads can include multiple instances. Returns bool Events CommandExecuted A callback Action that is invoked when a debug command was executed. public static event Action<DebugCommand.Payload, Exception> CommandExecuted Event Type Action<DebugCommand.Payload, Exception>"
  },
  "api/Quantum.Core.DebugCommandType.html": {
    "href": "api/Quantum.Core.DebugCommandType.html",
    "title": "Class DebugCommandType | Rwby Vytal Versus Documentation",
    "keywords": "Class DebugCommandType Namespace Quantum.Core Assembly Quantum.Simulation.dll Predefined debug commands. public static class DebugCommandType Inheritance object DebugCommandType Fields Create Create a new entity. public const int Create = 0 Field Value int Destroy Destroy an entity or a component. public const int Destroy = 1 Field Value int UserCommandTypeStart Add used defined debug commands types starting from this value. public const int UserCommandTypeStart = 1000 Field Value int"
  },
  "api/Quantum.Core.EntityPrototypeSystem.html": {
    "href": "api/Quantum.Core.EntityPrototypeSystem.html",
    "title": "Class EntityPrototypeSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityPrototypeSystem Namespace Quantum.Core Assembly Quantum.Simulation.dll The Quantum core system that creates map entities from the map prototype. Switching maps will destroy all entities and create new ones. [Preserve] public sealed class EntityPrototypeSystem : SystemSignalsOnly, ISignalOnMapChanged, ISignal Inheritance object SystemBase SystemSignalsOnly EntityPrototypeSystem Implements ISignalOnMapChanged ISignal Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnInit(Frame) Create and destroy map entities of the initial map. public override void OnInit(Frame f) Parameters f Frame The frame reference. OnMapChanged(Frame, AssetRef<Map>) Destroy current map entities and create new ones from the new map. public void OnMapChanged(Frame f, AssetRef<Map> previousMap) Parameters f Frame The frame reference. previousMap AssetRef<Map> The previous map."
  },
  "api/Quantum.Core.NavigationSystem.html": {
    "href": "api/Quantum.Core.NavigationSystem.html",
    "title": "Class NavigationSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class NavigationSystem Namespace Quantum.Core Assembly Quantum.Simulation.dll The Quantum core navigation system. [Preserve] public class NavigationSystem : SystemBase, INavigationCallbacks Inheritance object SystemBase NavigationSystem Implements INavigationCallbacks Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnMoveAgent(EntityRef, FPVector2) This callback is only called when Quantum.NavMeshAgentConfig.MovementType is set to Quantum.Navigation.MovementType.Callback.\"/> It can be used to implement a custom steering behavior for the agent using the desiredDirection which is an outcome of the pathfinding and avoidance systems. public void OnMoveAgent(EntityRef entity, FPVector2 desiredDirection) Parameters entity EntityRef Agent entity desiredDirection FPVector2 Desired movement direction OnSearchFailed(EntityRef, ref bool) The path finding request issued by Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase, Photon.Deterministic.FPVector3, Quantum.NavMesh) failed. Set resetAgent parameter to true when a new target for the agent was issued inside this callback. public void OnSearchFailed(EntityRef entity, ref bool resetAgent) Parameters entity EntityRef Agent entity resetAgent bool A flag to prevent resetting the agent after this callback. OnWaypointReached(EntityRef, FPVector3, WaypointFlag, ref bool) Callback is executed when a waypoint has been reached. Set resetAgent parameter to true when a new target for the agent was issued inside this callback. public void OnWaypointReached(EntityRef entity, FPVector3 waypoint, Navigation.WaypointFlag waypointFlags, ref bool resetAgent) Parameters entity EntityRef Agent entity waypoint FPVector3 World position waypoint waypointFlags Navigation.WaypointFlag Waypoint flags resetAgent bool A flag to prevent resetting the agent after this callback. Schedule(Frame, TaskHandle) Create the navigation system update task graph. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The frame reference. taskHandle TaskHandle The root task handle used to create new tasks. Returns TaskHandle Updated task handle with the navigation update graph."
  },
  "api/Quantum.Core.PhysicsSystem2D.html": {
    "href": "api/Quantum.Core.PhysicsSystem2D.html",
    "title": "Class PhysicsSystem2D | Rwby Vytal Versus Documentation",
    "keywords": "Class PhysicsSystem2D Namespace Quantum.Core Assembly Quantum.Simulation.dll The Quantum core physics system. [Preserve] public class PhysicsSystem2D : SystemBase, ICollisionCallbacks2D Inheritance object SystemBase PhysicsSystem2D Implements ICollisionCallbacks2D Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnCollision2D(FrameBase, CollisionInfo2D) Called once per frame while two non-trigger 2D colliders are touching. public void OnCollision2D(FrameBase f, CollisionInfo2D info) Parameters f FrameBase The frame in which the collision happened. info CollisionInfo2D The Quantum.CollisionInfo2D with data about the collision. OnCollisionEnter2D(FrameBase, CollisionInfo2D) Called once two non-trigger 2D colliders start touching. public void OnCollisionEnter2D(FrameBase f, CollisionInfo2D info) Parameters f FrameBase The frame in which the collision happened. info CollisionInfo2D The Quantum.CollisionInfo2D with data about the collision. OnCollisionExit2D(FrameBase, ExitInfo2D) Called once two non-trigger 2D colliders stop touching. public void OnCollisionExit2D(FrameBase f, ExitInfo2D info) Parameters f FrameBase The frame in which the entities stopped touching. info ExitInfo2D The Quantum.ExitInfo2D with the entities that were touching. OnInit(Frame) Initializes the 2D physics system. public override void OnInit(Frame f) Parameters f Frame The frame reference. OnTrigger2D(FrameBase, TriggerInfo2D) Called once per frame while a non-trigger and a trigger 2D colliders are touching. public void OnTrigger2D(FrameBase f, TriggerInfo2D info) Parameters f FrameBase The frame in which the collision happened. info TriggerInfo2D The Quantum.TriggerInfo2D with data about the trigger collision. OnTriggerEnter2D(FrameBase, TriggerInfo2D) Called once a non-trigger and a trigger 2D colliders start touching. public void OnTriggerEnter2D(FrameBase f, TriggerInfo2D info) Parameters f FrameBase The frame in which the collision happened. info TriggerInfo2D The Quantum.TriggerInfo2D with data about the trigger collision. OnTriggerExit2D(FrameBase, ExitInfo2D) Called once a non-trigger and a trigger 2D colliders stop touching. public void OnTriggerExit2D(FrameBase f, ExitInfo2D info) Parameters f FrameBase The frame in which the entities stopped touching. info ExitInfo2D The Quantum.ExitInfo2D with the entities that were touching. Schedule(Frame, TaskHandle) Create the 2D physics system update task graph. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The frame reference. taskHandle TaskHandle The initial task handle. Returns TaskHandle The updated task handle with the physics update graph."
  },
  "api/Quantum.Core.PhysicsSystem3D.html": {
    "href": "api/Quantum.Core.PhysicsSystem3D.html",
    "title": "Class PhysicsSystem3D | Rwby Vytal Versus Documentation",
    "keywords": "Class PhysicsSystem3D Namespace Quantum.Core Assembly Quantum.Simulation.dll The Quantum 3D physics system. [Preserve] public class PhysicsSystem3D : SystemBase, ICollisionCallbacks3D Inheritance object SystemBase PhysicsSystem3D Implements ICollisionCallbacks3D Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnCollision3D(FrameBase, CollisionInfo3D) Called once per frame while two non-trigger 3D colliders are touching. public void OnCollision3D(FrameBase f, CollisionInfo3D info) Parameters f FrameBase The frame in which the collision happened. info CollisionInfo3D The Quantum.CollisionInfo3D with data about the collision. OnCollisionEnter3D(FrameBase, CollisionInfo3D) Called once two non-trigger 3D colliders start touching. public void OnCollisionEnter3D(FrameBase f, CollisionInfo3D info) Parameters f FrameBase The frame in which the collision happened. info CollisionInfo3D The Quantum.CollisionInfo3D with data about the collision. OnCollisionExit3D(FrameBase, ExitInfo3D) Called once two non-trigger 3D colliders stop touching. public void OnCollisionExit3D(FrameBase f, ExitInfo3D info) Parameters f FrameBase The frame in which the entities stopped touching. info ExitInfo3D The Quantum.ExitInfo3D with the entities that were touching. OnInit(Frame) Initializes the 3D physics system. public override void OnInit(Frame f) Parameters f Frame The frame reference. OnTrigger3D(FrameBase, TriggerInfo3D) Called once per frame while a non-trigger and a trigger 3D colliders are touching. public void OnTrigger3D(FrameBase f, TriggerInfo3D info) Parameters f FrameBase The frame in which the collision happened. info TriggerInfo3D The Quantum.TriggerInfo3D with data about the trigger collision. OnTriggerEnter3D(FrameBase, TriggerInfo3D) Called once a non-trigger and a trigger 3D colliders start touching. public void OnTriggerEnter3D(FrameBase f, TriggerInfo3D info) Parameters f FrameBase The frame in which the collision happened. info TriggerInfo3D The Quantum.TriggerInfo3D with data about the trigger collision. OnTriggerExit3D(FrameBase, ExitInfo3D) Called once a non-trigger and a trigger 3D colliders stop touching. public void OnTriggerExit3D(FrameBase f, ExitInfo3D info) Parameters f FrameBase The frame in which the entities stopped touching. info ExitInfo3D The Quantum.ExitInfo3D with the entities that were touching. Schedule(Frame, TaskHandle) Create the 3D physics system update task graph. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The frame reference. taskHandle TaskHandle The initial task handle. Returns TaskHandle The updated task handle with the physics update graph."
  },
  "api/Quantum.Core.PlayerConnectedSystem.html": {
    "href": "api/Quantum.Core.PlayerConnectedSystem.html",
    "title": "Class PlayerConnectedSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class PlayerConnectedSystem Namespace Quantum.Core Assembly Quantum.Simulation.dll The Quantum core player connected system. It will detect changes in the Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef) and call ISignalOnPlayerConnected and ISignalOnPlayerDisconnected respectively. [Preserve] public class PlayerConnectedSystem : SystemMainThread Inheritance object SystemBase SystemMainThread PlayerConnectedSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame) Update the player connected system. public override void Update(Frame f) Parameters f Frame The frame reference."
  },
  "api/Quantum.Core.html": {
    "href": "api/Quantum.Core.html",
    "title": "Namespace Quantum.Core | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Quantum.Core Classes CullingSystem2D During Predicted frames, culls all cullable entities with Quantum.Transform2D that are positioned out of the prediction area. CullingSystem3D During Predicted frames, culls all cullable entities with Quantum.Transform3D that are positioned out of the prediction area. DebugCommand The DebugCommand class allows to send debug commands to the simulation. It's used by the Quantum state inspector for example. The system is completely disabled in non-development builds or when defining QUANTUM_DEBUG_COMMAND_DISABLED. DebugCommandType Predefined debug commands. EntityPrototypeSystem The Quantum core system that creates map entities from the map prototype. Switching maps will destroy all entities and create new ones. NavigationSystem The Quantum core navigation system. PhysicsSystem2D The Quantum core physics system. PhysicsSystem3D The Quantum 3D physics system. PlayerConnectedSystem The Quantum core player connected system. It will detect changes in the Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef) and call ISignalOnPlayerConnected and ISignalOnPlayerDisconnected respectively. Structs DebugCommand.Payload The debug command payload."
  },
  "api/Quantum.CreateOrUpdateCollisionbox.html": {
    "href": "api/Quantum.CreateOrUpdateCollisionbox.html",
    "title": "Class CreateOrUpdateCollisionbox | Rwby Vytal Versus Documentation",
    "keywords": "Class CreateOrUpdateCollisionbox Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CreateOrUpdateCollisionbox : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction CreateOrUpdateCollisionbox Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields autoDelete public bool autoDelete Field Value bool boxExtents [DrawIf(\"shapeType\", 2, CompareOperator.Equal, DrawIfMode.ReadOnly)] public FPVector3 boxExtents Field Value FPVector3 collisionboxIdentifer public int collisionboxIdentifer Field Value int extents [DrawIf(\"shapeType\", 32, CompareOperator.Equal, DrawIfMode.ReadOnly)] public FP extents Field Value FP offset public FPVector3 offset Field Value FPVector3 radius [DrawIf(\"shapeType\", 2, CompareOperator.NotEqual, DrawIfMode.ReadOnly)] public FP radius Field Value FP shapeType public Shape3DType shapeType Field Value Shape3DType useECBPosition public bool useECBPosition Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CreateOrUpdateHitbox.html": {
    "href": "api/Quantum.CreateOrUpdateHitbox.html",
    "title": "Class CreateOrUpdateHitbox | Rwby Vytal Versus Documentation",
    "keywords": "Class CreateOrUpdateHitbox Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CreateOrUpdateHitbox : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction CreateOrUpdateHitbox Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields autoDelete public bool autoDelete Field Value bool boxExtents [DrawIf(\"shapeType\", 2, CompareOperator.Equal, DrawIfMode.ReadOnly)] public FPVector3 boxExtents Field Value FPVector3 extents [DrawIf(\"shapeType\", 32, CompareOperator.Equal, DrawIfMode.ReadOnly)] public FP extents Field Value FP hitInfo public AssetRef<HitInfo> hitInfo Field Value AssetRef<HitInfo> hitboxIdentifer public int hitboxIdentifer Field Value int offset public FPVector3 offset Field Value FPVector3 priority public int priority Field Value int radius [DrawIf(\"shapeType\", 2, CompareOperator.NotEqual, DrawIfMode.ReadOnly)] public FP radius Field Value FP shapeType public Shape3DType shapeType Field Value Shape3DType useECBPosition public bool useECBPosition Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CreateOrUpdateHurtbox.html": {
    "href": "api/Quantum.CreateOrUpdateHurtbox.html",
    "title": "Class CreateOrUpdateHurtbox | Rwby Vytal Versus Documentation",
    "keywords": "Class CreateOrUpdateHurtbox Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CreateOrUpdateHurtbox : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction CreateOrUpdateHurtbox Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields autoDelete public bool autoDelete Field Value bool boxExtents public FPVector3 boxExtents Field Value FPVector3 hurtboxIdentifier public int hurtboxIdentifier Field Value int offset public FPVector3 offset Field Value FPVector3 priority public int priority Field Value int radius public FP radius Field Value FP shapeType public Shape3DType shapeType Field Value Shape3DType useECBPosition public bool useECBPosition Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CreateOrUpdateThrowbox.html": {
    "href": "api/Quantum.CreateOrUpdateThrowbox.html",
    "title": "Class CreateOrUpdateThrowbox | Rwby Vytal Versus Documentation",
    "keywords": "Class CreateOrUpdateThrowbox Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CreateOrUpdateThrowbox : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction CreateOrUpdateThrowbox Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields autoDelete public bool autoDelete Field Value bool boxExtents [DrawIf(\"shapeType\", 2, CompareOperator.Equal, DrawIfMode.ReadOnly)] public FPVector3 boxExtents Field Value FPVector3 extents [DrawIf(\"shapeType\", 32, CompareOperator.Equal, DrawIfMode.ReadOnly)] public FP extents Field Value FP hitboxIdentifer public int hitboxIdentifer Field Value int offset public FPVector3 offset Field Value FPVector3 priority public int priority Field Value int radius [DrawIf(\"shapeType\", 2, CompareOperator.NotEqual, DrawIfMode.ReadOnly)] public FP radius Field Value FP shapeType public Shape3DType shapeType Field Value Shape3DType throwInfo public AssetRef<ThrowInfo> throwInfo Field Value AssetRef<ThrowInfo> useECBPosition public bool useECBPosition Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CurrentMovesetDecision.html": {
    "href": "api/Quantum.CurrentMovesetDecision.html",
    "title": "Class CurrentMovesetDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class CurrentMovesetDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CurrentMovesetDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision CurrentMovesetDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields wantedMoveset public AssetRef<HNSFState> wantedMoveset Field Value AssetRef<HNSFState> Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CurrentStatesetDecision.html": {
    "href": "api/Quantum.CurrentStatesetDecision.html",
    "title": "Class CurrentStatesetDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class CurrentStatesetDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class CurrentStatesetDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision CurrentStatesetDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields wantedStateSet public AssetRef<HNSFStateSet> wantedStateSet Field Value AssetRef<HNSFStateSet> Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.CustomKCCSystem.Filter.html": {
    "href": "api/Quantum.CustomKCCSystem.Filter.html",
    "title": "Struct CustomKCCSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct CustomKCCSystem.Filter Namespace Quantum Assembly Quantum.Simulation.dll public struct CustomKCCSystem.Filter Fields Entity public EntityRef Entity Field Value EntityRef KCC public KCC* KCC Field Value KCC*"
  },
  "api/Quantum.CustomKCCSystem.html": {
    "href": "api/Quantum.CustomKCCSystem.html",
    "title": "Class CustomKCCSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class CustomKCCSystem Namespace Quantum Assembly Quantum.Simulation.dll [Preserve] public class CustomKCCSystem : SystemMainThreadFilter<CustomKCCSystem.Filter>, ISignalOnComponentAdded<KCC>, ISignalOnComponentRemoved<KCC>, ISignalOnComponentAdded<CharaPhysics>, ISignal Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<CustomKCCSystem.Filter> CustomKCCSystem Implements ISignalOnComponentAdded<KCC> ISignalOnComponentRemoved<KCC> ISignalOnComponentAdded<CharaPhysics> ISignal Inherited Members SystemMainThreadFilter<CustomKCCSystem.Filter>.UseCulling SystemMainThreadFilter<CustomKCCSystem.Filter>.Without SystemMainThreadFilter<CustomKCCSystem.Filter>.Any SystemMainThreadFilter<CustomKCCSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, CharaPhysics*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, CharaPhysics* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component CharaPhysics* The component that was added. Update(Frame, ref Filter) Override to add workload. public override void Update(Frame frame, ref CustomKCCSystem.Filter filter) Parameters frame Frame filter CustomKCCSystem.Filter The frame object."
  },
  "api/Quantum.DebugMessageAction.html": {
    "href": "api/Quantum.DebugMessageAction.html",
    "title": "Class DebugMessageAction | Rwby Vytal Versus Documentation",
    "keywords": "Class DebugMessageAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class DebugMessageAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction DebugMessageAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields messageToPrint public string messageToPrint Field Value string Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.DeterministicCommandSetup.EventCommandFactories.html": {
    "href": "api/Quantum.DeterministicCommandSetup.EventCommandFactories.html",
    "title": "Delegate DeterministicCommandSetup.EventCommandFactories | Rwby Vytal Versus Documentation",
    "keywords": "Delegate DeterministicCommandSetup.EventCommandFactories Namespace Quantum Assembly Quantum.Simulation.dll public delegate void DeterministicCommandSetup.EventCommandFactories(ICollection<IDeterministicCommandFactory> factories, RuntimeConfig gameConfig, SimulationConfig simulationConfig) Parameters factories ICollection<IDeterministicCommandFactory> gameConfig RuntimeConfig simulationConfig SimulationConfig"
  },
  "api/Quantum.DeterministicCommandSetup.html": {
    "href": "api/Quantum.DeterministicCommandSetup.html",
    "title": "Class DeterministicCommandSetup | Rwby Vytal Versus Documentation",
    "keywords": "Class DeterministicCommandSetup Namespace Quantum Assembly Quantum.Simulation.dll A partial static class to extend by implementing the partial method AddCommandFactoriesUser(ICollection<IDeterministicCommandFactory>, RuntimeConfig, SimulationConfig). It's used to create the Quantum command factories when initializing the simulation, either Photon.Deterministic.DeterministicCommand or Photon.Deterministic.DeterministicCommandPool<T> object. Only commands added here can be invoked by the simulation. public static class DeterministicCommandSetup Inheritance object DeterministicCommandSetup Fields WhenAddCommandFactories public static DeterministicCommandSetup.EventCommandFactories WhenAddCommandFactories Field Value DeterministicCommandSetup.EventCommandFactories Methods GetCommandFactories(RuntimeConfig, SimulationConfig) Creates a list of command factories for a Quantum simulation. public static IDeterministicCommandFactory[] GetCommandFactories(RuntimeConfig gameConfig, SimulationConfig simulationConfig) Parameters gameConfig RuntimeConfig The used RuntimeConfig simulationConfig SimulationConfig The used SimulationConfig Returns IDeterministicCommandFactory[] List of command factories"
  },
  "api/Quantum.DeterministicSystemSetup.html": {
    "href": "api/Quantum.DeterministicSystemSetup.html",
    "title": "Class DeterministicSystemSetup | Rwby Vytal Versus Documentation",
    "keywords": "Class DeterministicSystemSetup Namespace Quantum Assembly Quantum.Simulation.dll Responsible for instantiating Quantum systems on simulation start. User systems can be added by adding a SystemsConfig to the RuntimeConfig. Or adding them in the user callback AddSystemsUser(ICollection<SystemBase>, RuntimeConfig, SimulationConfig, SystemsConfig). public static class DeterministicSystemSetup Inheritance object DeterministicSystemSetup Methods CreateSystems(RuntimeConfig, SimulationConfig, SystemsConfig) The methods instantiates requested Quantum systems when starting the simulation. It first tries to call the legacy system setup method (SystemSetup class), if the method is found it will return those systems on not use the provided systems config. If systemsConfig is null only the default Quantum system are created. Otherwise the types inside systemsConfig are created. Debug build will add the DebugCommand system. Disable this by defining QUANTUM_DEBUG_COMMAND_DISABLED. Finally the AddSystemsUser(ICollection<SystemBase>, RuntimeConfig, SimulationConfig, SystemsConfig) partial method is called to allow changes to the final system list. public static ICollection<SystemBase> CreateSystems(RuntimeConfig gameConfig, SimulationConfig simulationConfig, SystemsConfig systemsConfig) Parameters gameConfig RuntimeConfig Runtime config. simulationConfig SimulationConfig Simulation config. systemsConfig SystemsConfig List of systems to create. Returns ICollection<SystemBase> Collection of Quantum system objects."
  },
  "api/Quantum.DirectDamageAction.html": {
    "href": "api/Quantum.DirectDamageAction.html",
    "title": "Class DirectDamageAction | Rwby Vytal Versus Documentation",
    "keywords": "Class DirectDamageAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class DirectDamageAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction DirectDamageAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields hitInfo public AssetRef<HitInfo> hitInfo Field Value AssetRef<HitInfo> releaseThrowee public bool releaseThrowee Field Value bool throweeId public int throweeId Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.DisableHardTargetingEntityAction.ModifyType.html": {
    "href": "api/Quantum.DisableHardTargetingEntityAction.ModifyType.html",
    "title": "Enum DisableHardTargetingEntityAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum DisableHardTargetingEntityAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum DisableHardTargetingEntityAction.ModifyType Fields Add = 0 Remove = 1"
  },
  "api/Quantum.DisableHardTargetingEntityAction.html": {
    "href": "api/Quantum.DisableHardTargetingEntityAction.html",
    "title": "Class DisableHardTargetingEntityAction | Rwby Vytal Versus Documentation",
    "keywords": "Class DisableHardTargetingEntityAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class DisableHardTargetingEntityAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction DisableHardTargetingEntityAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields modifyType public DisableHardTargetingEntityAction.ModifyType modifyType Field Value DisableHardTargetingEntityAction.ModifyType timer public int timer Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.DisableLastInputAction.html": {
    "href": "api/Quantum.DisableLastInputAction.html",
    "title": "Class DisableLastInputAction | Rwby Vytal Versus Documentation",
    "keywords": "Class DisableLastInputAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class DisableLastInputAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction DisableLastInputAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.DoChargeAction.html": {
    "href": "api/Quantum.DoChargeAction.html",
    "title": "Class DoChargeAction | Rwby Vytal Versus Documentation",
    "keywords": "Class DoChargeAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class DoChargeAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction DoChargeAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields buttonsToHold public PlayerInputButtonType buttonsToHold Field Value PlayerInputButtonType canHoldCharge public bool canHoldCharge Field Value bool chargePerLevel public int[] chargePerLevel Field Value int[] Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.DotNetRunnerFactory.html": {
    "href": "api/Quantum.DotNetRunnerFactory.html",
    "title": "Class DotNetRunnerFactory | Rwby Vytal Versus Documentation",
    "keywords": "Class DotNetRunnerFactory Namespace Quantum Assembly Quantum.Simulation.dll Platform dependent information and factory methods for the SessionRunner. This implementation of the IRunnerFactory is not unused in Unity but in standalone Quantum applications and on the Quantum server plugin. public class DotNetRunnerFactory : IRunnerFactory Inheritance object DotNetRunnerFactory Implements IRunnerFactory Properties CreatePlaformInfo Gather the platform information. public virtual DeterministicPlatformInfo CreatePlaformInfo { get; } Property Value DeterministicPlatformInfo CreateTaskFactory Create a Quantum task factory. public virtual TaskFactory CreateTaskFactory { get; } Property Value TaskFactory UpdateDB The action to when an update to the AssetDB is required. Not required. public virtual Action UpdateDB { get; } Property Value Action Methods CreateGame(QuantumGameStartParameters) Instantiate the QuantumGame. public virtual IDeterministicGame CreateGame(QuantumGameStartParameters startParameters) Parameters startParameters QuantumGameStartParameters Start parameters Returns IDeterministicGame Instance of IDeterministicGame CreateNativeAllocator() public static Native.Allocator CreateNativeAllocator() Returns Native.Allocator CreateNativeUtils() public static Native.Utility CreateNativeUtils() Returns Native.Utility CreatePlatformInfo() Static method to create platform info. Initializes statics Photon.Deterministic.Native.Utils and Quantum.MemoryLayoutVerifier.Platform. public static DeterministicPlatformInfo CreatePlatformInfo() Returns DeterministicPlatformInfo Platform information data CreateProfiler(string, DeterministicSessionConfig, DeterministicPlatformInfo, IDeterministicGame) The callback can be used to create and attach local profiler before the Quantum simulation has been started. No profilers are created. public virtual void CreateProfiler(string clientId, DeterministicSessionConfig deterministicConfig, DeterministicPlatformInfo platformInfo, IDeterministicGame game) Parameters clientId string Quantum client id deterministicConfig DeterministicSessionConfig Session config platformInfo DeterministicPlatformInfo Platform info game IDeterministicGame Game CreateRunner(Arguments) Instantiate a SessionRunner. public virtual SessionRunner CreateRunner(SessionRunner.Arguments arguments) Parameters arguments SessionRunner.Arguments Session arguments Returns SessionRunner A session runner Init() public static void Init()"
  },
  "api/Quantum.DotNetSessionRunner.html": {
    "href": "api/Quantum.DotNetSessionRunner.html",
    "title": "Class DotNetSessionRunner | Rwby Vytal Versus Documentation",
    "keywords": "Class DotNetSessionRunner Namespace Quantum Assembly Quantum.Simulation.dll This class implements the Photon.Deterministic.IDeterministicSessionRunner interface and contains code to glue together the Quantum server and Quantum session runner. This was formerly part of the Quantum Server SDK. public class DotNetSessionRunner Inheritance object DotNetSessionRunner Properties AssetSerializer Get and set the AssetSerializer directly after Photon.Deterministic.IDeterministicSessionRunner creation, until it is possible to pass it internally. public IAssetSerializer AssetSerializer { get; set; } Property Value IAssetSerializer CallbackDispatcher Access Quantum callbacks. public object CallbackDispatcher { get; } Property Value object CustomResourceManager Assign a custom resource manager which will use the cached static resource manager as Quantum.ResourceManagerStatic.FallbackResourceManager. Must be set right after creation. public ResourceManagerStatic CustomResourceManager { get; set; } Property Value ResourceManagerStatic EventDispatcher Access Quantum events. public object EventDispatcher { get; } Property Value object OnGameResult Callback raised on game result events from the simulation. public Action<byte[]> OnGameResult { get; set; } Property Value Action<byte[]> Runner Grants access to the Quantum session runner. public SessionRunner Runner { get; } Property Value SessionRunner Methods Init(DeterministicSessionRunnerInitArguments) Initialized the server simulation. It initializes static classes like FPLut, Native.Utils and instantiates a static resource manager that is shared over multiple server simulations. This method throws exceptions on errors. public void Init(DeterministicSessionRunnerInitArguments args) Parameters args DeterministicSessionRunnerInitArguments Service(double) Implements the server update callback. public void Service(double gameTime) Parameters gameTime double Game time in seconds Shutdown() Disposes the Quantum runner. public void Shutdown() Start(DeterministicSessionRunnerStartArguments) Implements the start of the Quantum online session. Instantiates a Quantum runner. public void Start(DeterministicSessionRunnerStartArguments args) Parameters args DeterministicSessionRunnerStartArguments Start arguments TryCreateSnapshot(ref int, ref byte[]) Implements the server snapshot requested callback. This will use the most recent simulated frame on the server to use as a snapshot for late-joining clients. Which will bypass requesting buddy snapshots from other clients. public bool TryCreateSnapshot(ref int tick, ref byte[] data) Parameters tick int The tick of the snapshot. data byte[] DeterministicFrame object serialized. Returns bool True, if the snapshot was set."
  },
  "api/Quantum.DotNetTaskRunner.html": {
    "href": "api/Quantum.DotNetTaskRunner.html",
    "title": "Class DotNetTaskRunner | Rwby Vytal Versus Documentation",
    "keywords": "Class DotNetTaskRunner Namespace Quantum Assembly Quantum.Simulation.dll The implementation of Photon.Deterministic.IDeterministicPlatformTaskRunner for .Net frameworks. Not used when running the simulation in Unity. public class DotNetTaskRunner Inheritance object DotNetTaskRunner Methods Dispose() Dispose the object. public void Dispose() PollForComplete() Poll the task runner for completion. public bool PollForComplete() Returns bool Schedule(Action[]) Schedules actions to be executed by the task runner. public void Schedule(Action[] delegates) Parameters delegates Action[] Array of actions WaitForComplete() Wait for the task runner to complete all scheduled actions. public void WaitForComplete()"
  },
  "api/Quantum.DummyAerialRecoveryDirection.html": {
    "href": "api/Quantum.DummyAerialRecoveryDirection.html",
    "title": "Enum DummyAerialRecoveryDirection | Rwby Vytal Versus Documentation",
    "keywords": "Enum DummyAerialRecoveryDirection Namespace Quantum Assembly Quantum.Simulation.dll public enum DummyAerialRecoveryDirection Fields Away = 1 InPlace = 0 Left = 3 Random = 5 Right = 4 Towards = 2"
  },
  "api/Quantum.DummyBlockBehaviour.html": {
    "href": "api/Quantum.DummyBlockBehaviour.html",
    "title": "Enum DummyBlockBehaviour | Rwby Vytal Versus Documentation",
    "keywords": "Enum DummyBlockBehaviour Namespace Quantum Assembly Quantum.Simulation.dll public enum DummyBlockBehaviour Fields BlockAfterXHits = 2 BlockAll = 1 NoBlock = 0 Random = 3"
  },
  "api/Quantum.DummyBlockDirection.html": {
    "href": "api/Quantum.DummyBlockDirection.html",
    "title": "Enum DummyBlockDirection | Rwby Vytal Versus Documentation",
    "keywords": "Enum DummyBlockDirection Namespace Quantum Assembly Quantum.Simulation.dll public enum DummyBlockDirection Fields AllDirections = 1 InitialDirection = 0"
  },
  "api/Quantum.DummyConfigBehaviour.html": {
    "href": "api/Quantum.DummyConfigBehaviour.html",
    "title": "Enum DummyConfigBehaviour | Rwby Vytal Versus Documentation",
    "keywords": "Enum DummyConfigBehaviour Namespace Quantum Assembly Quantum.Simulation.dll public enum DummyConfigBehaviour Fields DoubleJump = 2 Jumping = 1 Standing = 0"
  },
  "api/Quantum.DummyConfigCounterhit.html": {
    "href": "api/Quantum.DummyConfigCounterhit.html",
    "title": "Enum DummyConfigCounterhit | Rwby Vytal Versus Documentation",
    "keywords": "Enum DummyConfigCounterhit Namespace Quantum Assembly Quantum.Simulation.dll public enum DummyConfigCounterhit Fields AlwaysCounterhit = 1 AlwaysPunishCounter = 2 RandomAnyCounter = 5 RandomCounterhit = 3 RandomPunishCounter = 4 Standard = 0"
  },
  "api/Quantum.DummyConfiguration.html": {
    "href": "api/Quantum.DummyConfiguration.html",
    "title": "Struct DummyConfiguration | Rwby Vytal Versus Documentation",
    "keywords": "Struct DummyConfiguration Namespace Quantum Assembly Quantum.Simulation.dll public struct DummyConfiguration : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 608 Field Value int aerialRecovery public DummyThrowEscape aerialRecovery Field Value DummyThrowEscape aerialRecoveryDirection public DummyAerialRecoveryDirection aerialRecoveryDirection Field Value DummyAerialRecoveryDirection behaviour public DummyConfigBehaviour behaviour Field Value DummyConfigBehaviour blockBehaviour public DummyBlockBehaviour blockBehaviour Field Value DummyBlockBehaviour blockDirection public DummyBlockDirection blockDirection Field Value DummyBlockDirection controlType public DummyControlType controlType Field Value DummyControlType counterhit public DummyConfigCounterhit counterhit Field Value DummyConfigCounterhit frameInput public Input frameInput Field Value Input framesBeforeGroundRecovery public byte framesBeforeGroundRecovery Field Value byte framesToHoldBlockAfterBlockstunEnded public byte framesToHoldBlockAfterBlockstunEnded Field Value byte groundRecovery public DummyGroundRecovery groundRecovery Field Value DummyGroundRecovery hitsBeforeShouldBlock public byte hitsBeforeShouldBlock Field Value byte loopPlayRecordings public QBoolean loopPlayRecordings Field Value QBoolean techRollDirection public DummyTechRollDirection techRollDirection Field Value DummyTechRollDirection throwEscape public DummyThrowEscape throwEscape Field Value DummyThrowEscape Properties recordingSlots public FixedArray<DummyRecordingSlot> recordingSlots { get; } Property Value FixedArray<DummyRecordingSlot> reversalsOnBlock public FixedArray<DummyRecordingSlot> reversalsOnBlock { get; } Property Value FixedArray<DummyRecordingSlot> reversalsOnDamaged public FixedArray<DummyRecordingSlot> reversalsOnDamaged { get; } Property Value FixedArray<DummyRecordingSlot> reversalsOnWakeup public FixedArray<DummyRecordingSlot> reversalsOnWakeup { get; } Property Value FixedArray<DummyRecordingSlot> Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.DummyControlType.html": {
    "href": "api/Quantum.DummyControlType.html",
    "title": "Enum DummyControlType | Rwby Vytal Versus Documentation",
    "keywords": "Enum DummyControlType Namespace Quantum Assembly Quantum.Simulation.dll public enum DummyControlType Fields CPU = 1 Dummy = 0"
  },
  "api/Quantum.DummyGroundRecovery.html": {
    "href": "api/Quantum.DummyGroundRecovery.html",
    "title": "Enum DummyGroundRecovery | Rwby Vytal Versus Documentation",
    "keywords": "Enum DummyGroundRecovery Namespace Quantum Assembly Quantum.Simulation.dll public enum DummyGroundRecovery Fields NeutralTech = 3 None = 0 QuickTech = 1 Random = 4 TechRoll = 2"
  },
  "api/Quantum.DummyRecordingSlot.html": {
    "href": "api/Quantum.DummyRecordingSlot.html",
    "title": "Struct DummyRecordingSlot | Rwby Vytal Versus Documentation",
    "keywords": "Struct DummyRecordingSlot Namespace Quantum Assembly Quantum.Simulation.dll public struct DummyRecordingSlot Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 12 Field Value int active public QBoolean active Field Value QBoolean delay public byte delay Field Value byte inputs public QListPtr<Input> inputs Field Value QListPtr<Input> slotChance public byte slotChance Field Value byte Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.DummyTechRollDirection.html": {
    "href": "api/Quantum.DummyTechRollDirection.html",
    "title": "Enum DummyTechRollDirection | Rwby Vytal Versus Documentation",
    "keywords": "Enum DummyTechRollDirection Namespace Quantum Assembly Quantum.Simulation.dll public enum DummyTechRollDirection Fields Away = 0 Left = 2 Random = 4 Right = 3 Towards = 1"
  },
  "api/Quantum.DummyThrowEscape.html": {
    "href": "api/Quantum.DummyThrowEscape.html",
    "title": "Enum DummyThrowEscape | Rwby Vytal Versus Documentation",
    "keywords": "Enum DummyThrowEscape Namespace Quantum Assembly Quantum.Simulation.dll public enum DummyThrowEscape Fields Active = 1 Inactive = 0 Random = 2"
  },
  "api/Quantum.EKCCCollisionSource.html": {
    "href": "api/Quantum.EKCCCollisionSource.html",
    "title": "Enum EKCCCollisionSource | Rwby Vytal Versus Documentation",
    "keywords": "Enum EKCCCollisionSource Namespace Quantum Assembly Quantum.Simulation.dll public enum EKCCCollisionSource : byte Fields Collider = 2 Entity = 1 None = 0"
  },
  "api/Quantum.EKCCCollisionType.html": {
    "href": "api/Quantum.EKCCCollisionType.html",
    "title": "Enum EKCCCollisionType | Rwby Vytal Versus Documentation",
    "keywords": "Enum EKCCCollisionType Namespace Quantum Assembly Quantum.Simulation.dll Defines collision type between KCC and overlapping collider surface calculated from depenetration or a trigger. None - Default. Ground - Angle between Up and normalized depenetration vector is between 0 and KCCData.MaxGroundAngle. Slope - Angle between Up and normalized depenetration vector is between KCCData.MaxGroundAngle and (90 - KCCData.MaxWallAngle). Wall - Angle between Back and normalized depenetration vector is between -KCCData.MaxWallAngle and KCCData.MaxWallAngle. Hang - Angle between Back and normalized depenetration vector is between -30 and -KCCData.MaxWallAngle. Top - Angle between Back and normalized depenetration vector is lower than -30. Trigger - Overlapping collider - trigger. Penetration is unknown. public enum EKCCCollisionType : byte Fields Ground = 1 Hang = 8 None = 0 Slope = 2 Top = 16 Trigger = 32 Wall = 4"
  },
  "api/Quantum.EKCCIgnoreSource.html": {
    "href": "api/Quantum.EKCCIgnoreSource.html",
    "title": "Enum EKCCIgnoreSource | Rwby Vytal Versus Documentation",
    "keywords": "Enum EKCCIgnoreSource Namespace Quantum Assembly Quantum.Simulation.dll public enum EKCCIgnoreSource : byte Fields Collider = 2 Entity = 1 None = 0"
  },
  "api/Quantum.EKCCProcessorSource.html": {
    "href": "api/Quantum.EKCCProcessorSource.html",
    "title": "Enum EKCCProcessorSource | Rwby Vytal Versus Documentation",
    "keywords": "Enum EKCCProcessorSource Namespace Quantum Assembly Quantum.Simulation.dll public enum EKCCProcessorSource : byte Fields EntityCollider = 3 Modifier = 1 None = 0 StaticCollider = 2"
  },
  "api/Quantum.EQS.EnvQueryGenerator.ProjectionType.html": {
    "href": "api/Quantum.EQS.EnvQueryGenerator.ProjectionType.html",
    "title": "Enum EnvQueryGenerator.ProjectionType | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnvQueryGenerator.ProjectionType Namespace Quantum.EQS Assembly Quantum.Simulation.dll public enum EnvQueryGenerator.ProjectionType Fields Navigation = 1 None = 0 Trace = 2"
  },
  "api/Quantum.EQS.EnvQueryGenerator.html": {
    "href": "api/Quantum.EQS.EnvQueryGenerator.html",
    "title": "Class EnvQueryGenerator | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryGenerator Namespace Quantum.EQS Assembly Quantum.Simulation.dll [Serializable] public class EnvQueryGenerator : AssetObject Inheritance object Object ScriptableObject AssetObject EnvQueryGenerator Derived EnvQueryGeneratorComposite EnvQueryGeneratorPointCircle EnvQueryGeneratorPointGrid Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields projectionLayerMask public LayerMask projectionLayerMask Field Value LayerMask projectionType public EnvQueryGenerator.ProjectionType projectionType Field Value EnvQueryGenerator.ProjectionType Methods CreateBroadphaseQueryForItems(Frame, EnvQueryCached*, int, Transform3D) public virtual int CreateBroadphaseQueryForItems(Frame frame, EnvQueryCached* envQuery, int numTests, Transform3D centerOfItems) Parameters frame Frame envQuery EnvQueryCached* numTests int centerOfItems Transform3D Returns int GenerateItems(Frame, EnvQuery*, int, Transform3D) public virtual List<EnvQueryItem> GenerateItems(Frame frame, EnvQuery* envQuery, int numTests, Transform3D centerOfItems) Parameters frame Frame envQuery EnvQuery* numTests int centerOfItems Transform3D Returns List<EnvQueryItem> GenerateItemsFromBroadphaseQueries(Frame, EnvQueryCached*, int, Transform3D) public virtual void GenerateItemsFromBroadphaseQueries(Frame frame, EnvQueryCached* envQuery, int numTests, Transform3D centerOfItems) Parameters frame Frame envQuery EnvQueryCached* numTests int centerOfItems Transform3D GetPosition(Frame, EnvQueryContext, EnvQuery*) protected FPVector3 GetPosition(Frame frame, EnvQueryContext context, EnvQuery* envQuery) Parameters frame Frame context EnvQueryContext envQuery EnvQuery* Returns FPVector3 GetPosition(Frame, EnvQueryContext, EnvQueryCached*) protected FPVector3 GetPosition(Frame frame, EnvQueryContext context, EnvQueryCached* envQuery) Parameters frame Frame context EnvQueryContext envQuery EnvQueryCached* Returns FPVector3"
  },
  "api/Quantum.EQS.EnvQueryGeneratorComposite.html": {
    "href": "api/Quantum.EQS.EnvQueryGeneratorComposite.html",
    "title": "Class EnvQueryGeneratorComposite | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryGeneratorComposite Namespace Quantum.EQS Assembly Quantum.Simulation.dll [Serializable] public class EnvQueryGeneratorComposite : EnvQueryGenerator Inheritance object Object ScriptableObject AssetObject EnvQueryGenerator EnvQueryGeneratorComposite Inherited Members EnvQueryGenerator.projectionType EnvQueryGenerator.projectionLayerMask EnvQueryGenerator.CreateBroadphaseQueryForItems(Frame, EnvQueryCached*, int, Transform3D) EnvQueryGenerator.GenerateItemsFromBroadphaseQueries(Frame, EnvQueryCached*, int, Transform3D) EnvQueryGenerator.GetPosition(Frame, EnvQueryContext, EnvQuery*) EnvQueryGenerator.GetPosition(Frame, EnvQueryContext, EnvQueryCached*) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields generators public List<EnvQueryGenerator> generators Field Value List<EnvQueryGenerator> Methods GenerateItems(Frame, EnvQuery*, int, Transform3D) public override List<EnvQueryItem> GenerateItems(Frame frame, EnvQuery* envQuery, int numTests, Transform3D centerOfItems) Parameters frame Frame envQuery EnvQuery* numTests int centerOfItems Transform3D Returns List<EnvQueryItem>"
  },
  "api/Quantum.EQS.EnvQueryGeneratorPointCircle.html": {
    "href": "api/Quantum.EQS.EnvQueryGeneratorPointCircle.html",
    "title": "Class EnvQueryGeneratorPointCircle | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryGeneratorPointCircle Namespace Quantum.EQS Assembly Quantum.Simulation.dll [Serializable] public class EnvQueryGeneratorPointCircle : EnvQueryGenerator Inheritance object Object ScriptableObject AssetObject EnvQueryGenerator EnvQueryGeneratorPointCircle Inherited Members EnvQueryGenerator.projectionType EnvQueryGenerator.projectionLayerMask EnvQueryGenerator.CreateBroadphaseQueryForItems(Frame, EnvQueryCached*, int, Transform3D) EnvQueryGenerator.GenerateItemsFromBroadphaseQueries(Frame, EnvQueryCached*, int, Transform3D) EnvQueryGenerator.GetPosition(Frame, EnvQueryContext, EnvQuery*) EnvQueryGenerator.GetPosition(Frame, EnvQueryContext, EnvQueryCached*) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields generateAround public EnvQueryContext generateAround Field Value EnvQueryContext radius public FP radius Field Value FP spaceBetween public FP spaceBetween Field Value FP Methods GenerateItems(Frame, EnvQuery*, int, Transform3D) public override List<EnvQueryItem> GenerateItems(Frame frame, EnvQuery* envQuery, int numTests, Transform3D centerOfItems) Parameters frame Frame envQuery EnvQuery* numTests int centerOfItems Transform3D Returns List<EnvQueryItem> GenerateItems(Frame, EnvQuery*, int, Transform3D, FP, FP) public List<EnvQueryItem> GenerateItems(Frame frame, EnvQuery* envQuery, int numTests, Transform3D centerOfItems, FP radius, FP spaceBetween) Parameters frame Frame envQuery EnvQuery* numTests int centerOfItems Transform3D radius FP spaceBetween FP Returns List<EnvQueryItem>"
  },
  "api/Quantum.EQS.EnvQueryGeneratorPointGrid.html": {
    "href": "api/Quantum.EQS.EnvQueryGeneratorPointGrid.html",
    "title": "Class EnvQueryGeneratorPointGrid | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryGeneratorPointGrid Namespace Quantum.EQS Assembly Quantum.Simulation.dll [Serializable] public class EnvQueryGeneratorPointGrid : EnvQueryGenerator Inheritance object Object ScriptableObject AssetObject EnvQueryGenerator EnvQueryGeneratorPointGrid Inherited Members EnvQueryGenerator.projectionType EnvQueryGenerator.projectionLayerMask EnvQueryGenerator.GetPosition(Frame, EnvQueryContext, EnvQuery*) EnvQueryGenerator.GetPosition(Frame, EnvQueryContext, EnvQueryCached*) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields generateAround public EnvQueryContext generateAround Field Value EnvQueryContext postProjectionVerticalOffset [FormerlySerializedAs(\"portProjectionVerticalOffset\")] public FP postProjectionVerticalOffset Field Value FP preProjectionVerticalOffset public FP preProjectionVerticalOffset Field Value FP projectionUpDown public FP projectionUpDown Field Value FP radius public FP radius Field Value FP spaceBetween public FP spaceBetween Field Value FP Methods CreateBroadphaseQueryForItems(Frame, EnvQueryCached*, int, Transform3D) public override int CreateBroadphaseQueryForItems(Frame frame, EnvQueryCached* envQuery, int numTests, Transform3D centerOfItems) Parameters frame Frame envQuery EnvQueryCached* numTests int centerOfItems Transform3D Returns int GenerateItems(Frame, EnvQuery*, int, Transform3D) public override List<EnvQueryItem> GenerateItems(Frame frame, EnvQuery* envQuery, int numTests, Transform3D centerOfItems) Parameters frame Frame envQuery EnvQuery* numTests int centerOfItems Transform3D Returns List<EnvQueryItem> GenerateItemsFromBroadphaseQueries(Frame, EnvQueryCached*, int, Transform3D) public override void GenerateItemsFromBroadphaseQueries(Frame frame, EnvQueryCached* envQuery, int numTests, Transform3D centerOfItems) Parameters frame Frame envQuery EnvQueryCached* numTests int centerOfItems Transform3D"
  },
  "api/Quantum.EQS.EnvQueryTest.EnvQueryTestScoringEquation.html": {
    "href": "api/Quantum.EQS.EnvQueryTest.EnvQueryTestScoringEquation.html",
    "title": "Enum EnvQueryTest.EnvQueryTestScoringEquation | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnvQueryTest.EnvQueryTestScoringEquation Namespace Quantum.EQS Assembly Quantum.Simulation.dll public enum EnvQueryTest.EnvQueryTestScoringEquation Fields HalfSine = 3 HalfSineSquared = 5 InverseHalfSine = 4 InverseHalfSineSquared = 6 InverseLinear = 1 InverseSigmoidLike = 8 Linear = 0 SigmoidLike = 7 Square = 2"
  },
  "api/Quantum.EQS.EnvQueryTest.html": {
    "href": "api/Quantum.EQS.EnvQueryTest.html",
    "title": "Class EnvQueryTest | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryTest Namespace Quantum.EQS Assembly Quantum.Simulation.dll [Serializable] public class EnvQueryTest : AssetObject Inheritance object Object ScriptableObject AssetObject EnvQueryTest Derived EnvQueryTestDistance EnvQueryTestDot EnvQueryTestTrace Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields IsActive public bool IsActive Field Value bool ScaleFactor public FP ScaleFactor Field Value FP ScoringEquation public EnvQueryTest.EnvQueryTestScoringEquation ScoringEquation Field Value EnvQueryTest.EnvQueryTestScoringEquation testPurpose public EnvTestPurpose testPurpose Field Value EnvTestPurpose Methods FinalizeInjectionTest(Frame, EnvQueryCached*, int, ref int) public virtual void FinalizeInjectionTest(Frame frame, EnvQueryCached* envQuery, int currentTest, ref int queryCurrentIndex) Parameters frame Frame envQuery EnvQueryCached* currentTest int queryCurrentIndex int NormalizeItemScores(Frame, int, EnvQueryCached*) public void NormalizeItemScores(Frame frame, int currentTest, EnvQueryCached* envQuery) Parameters frame Frame currentTest int envQuery EnvQueryCached* NormalizeItemScores(Frame, int, List<EnvQueryItem>) public void NormalizeItemScores(Frame frame, int currentTest, List<EnvQueryItem> envQueryItems) Parameters frame Frame currentTest int envQueryItems List<EnvQueryItem> RunTest(Frame, EnvQuery*, int, List<EnvQueryItem>) public virtual void RunTest(Frame frame, EnvQuery* envQuery, int currentTest, List<EnvQueryItem> envQueryItems) Parameters frame Frame envQuery EnvQuery* currentTest int envQueryItems List<EnvQueryItem> StartInjectionTest(Frame, EnvQueryCached*, int, ref int) public virtual void StartInjectionTest(Frame frame, EnvQueryCached* envQuery, int currentTest, ref int queryCurrentIndex) Parameters frame Frame envQuery EnvQueryCached* currentTest int queryCurrentIndex int"
  },
  "api/Quantum.EQS.EnvQueryTestDistance.html": {
    "href": "api/Quantum.EQS.EnvQueryTestDistance.html",
    "title": "Class EnvQueryTestDistance | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryTestDistance Namespace Quantum.EQS Assembly Quantum.Simulation.dll public class EnvQueryTestDistance : EnvQueryTest Inheritance object Object ScriptableObject AssetObject EnvQueryTest EnvQueryTestDistance Inherited Members EnvQueryTest.testPurpose EnvQueryTest.IsActive EnvQueryTest.ScaleFactor EnvQueryTest.ScoringEquation EnvQueryTest.StartInjectionTest(Frame, EnvQueryCached*, int, ref int) EnvQueryTest.NormalizeItemScores(Frame, int, List<EnvQueryItem>) EnvQueryTest.NormalizeItemScores(Frame, int, EnvQueryCached*) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields distanceBeforeFilteredOut [DrawIf(\"testPurpose\", 1, CompareOperator.NotEqual, DrawIfMode.ReadOnly)] public FP distanceBeforeFilteredOut Field Value FP distanceTo public EnvQueryContext distanceTo Field Value EnvQueryContext Methods FinalizeInjectionTest(Frame, EnvQueryCached*, int, ref int) public override void FinalizeInjectionTest(Frame frame, EnvQueryCached* envQuery, int currentTest, ref int queryCurrentIndex) Parameters frame Frame envQuery EnvQueryCached* currentTest int queryCurrentIndex int RunTest(Frame, EnvQuery*, int, List<EnvQueryItem>) public override void RunTest(Frame frame, EnvQuery* envQuery, int currentTest, List<EnvQueryItem> envQueryItems) Parameters frame Frame envQuery EnvQuery* currentTest int envQueryItems List<EnvQueryItem>"
  },
  "api/Quantum.EQS.EnvQueryTestDot.DirMode.html": {
    "href": "api/Quantum.EQS.EnvQueryTestDot.DirMode.html",
    "title": "Enum EnvQueryTestDot.DirMode | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnvQueryTestDot.DirMode Namespace Quantum.EQS Assembly Quantum.Simulation.dll public enum EnvQueryTestDot.DirMode Fields Rotation = 0 TwoPoints = 1"
  },
  "api/Quantum.EQS.EnvQueryTestDot.LineDefinition.html": {
    "href": "api/Quantum.EQS.EnvQueryTestDot.LineDefinition.html",
    "title": "Struct EnvQueryTestDot.LineDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Struct EnvQueryTestDot.LineDefinition Namespace Quantum.EQS Assembly Quantum.Simulation.dll [Serializable] public struct EnvQueryTestDot.LineDefinition Fields LineFrom [DrawIf(\"mode\", 1, CompareOperator.Equal, DrawIfMode.ReadOnly)] public EnvQueryContext LineFrom Field Value EnvQueryContext LineTo [DrawIf(\"mode\", 1, CompareOperator.Equal, DrawIfMode.ReadOnly)] public EnvQueryContext LineTo Field Value EnvQueryContext mode public EnvQueryTestDot.DirMode mode Field Value EnvQueryTestDot.DirMode rotation [DrawIf(\"mode\", 0, CompareOperator.Equal, DrawIfMode.ReadOnly)] public EnvQueryContext rotation Field Value EnvQueryContext rotationMode [DrawIf(\"mode\", 0, CompareOperator.Equal, DrawIfMode.ReadOnly)] public EnvQueryTestDot.RotMode rotationMode Field Value EnvQueryTestDot.RotMode"
  },
  "api/Quantum.EQS.EnvQueryTestDot.RotMode.html": {
    "href": "api/Quantum.EQS.EnvQueryTestDot.RotMode.html",
    "title": "Enum EnvQueryTestDot.RotMode | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnvQueryTestDot.RotMode Namespace Quantum.EQS Assembly Quantum.Simulation.dll public enum EnvQueryTestDot.RotMode Fields Backward = 1 Forward = 0 Left = 3 Right = 2"
  },
  "api/Quantum.EQS.EnvQueryTestDot.TestMode.html": {
    "href": "api/Quantum.EQS.EnvQueryTestDot.TestMode.html",
    "title": "Enum EnvQueryTestDot.TestMode | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnvQueryTestDot.TestMode Namespace Quantum.EQS Assembly Quantum.Simulation.dll public enum EnvQueryTestDot.TestMode Fields Dot_2d = 1 Dot_3d = 0"
  },
  "api/Quantum.EQS.EnvQueryTestDot.html": {
    "href": "api/Quantum.EQS.EnvQueryTestDot.html",
    "title": "Class EnvQueryTestDot | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryTestDot Namespace Quantum.EQS Assembly Quantum.Simulation.dll public class EnvQueryTestDot : EnvQueryTest Inheritance object Object ScriptableObject AssetObject EnvQueryTest EnvQueryTestDot Inherited Members EnvQueryTest.testPurpose EnvQueryTest.IsActive EnvQueryTest.ScaleFactor EnvQueryTest.ScoringEquation EnvQueryTest.StartInjectionTest(Frame, EnvQueryCached*, int, ref int) EnvQueryTest.FinalizeInjectionTest(Frame, EnvQueryCached*, int, ref int) EnvQueryTest.NormalizeItemScores(Frame, int, List<EnvQueryItem>) EnvQueryTest.NormalizeItemScores(Frame, int, EnvQueryCached*) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields AbsoluteValue public bool AbsoluteValue Field Value bool lineA public EnvQueryTestDot.LineDefinition lineA Field Value EnvQueryTestDot.LineDefinition lineB public EnvQueryTestDot.LineDefinition lineB Field Value EnvQueryTestDot.LineDefinition testMode public EnvQueryTestDot.TestMode testMode Field Value EnvQueryTestDot.TestMode Methods RunTest(Frame, EnvQuery*, int, List<EnvQueryItem>) public override void RunTest(Frame frame, EnvQuery* envQuery, int currentTest, List<EnvQueryItem> envQueryItems) Parameters frame Frame envQuery EnvQuery* currentTest int envQueryItems List<EnvQueryItem>"
  },
  "api/Quantum.EQS.EnvQueryTestTrace.ShapeType.html": {
    "href": "api/Quantum.EQS.EnvQueryTestTrace.ShapeType.html",
    "title": "Enum EnvQueryTestTrace.ShapeType | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnvQueryTestTrace.ShapeType Namespace Quantum.EQS Assembly Quantum.Simulation.dll public enum EnvQueryTestTrace.ShapeType Fields Box = 2 Capsule = 3 Line = 0 Sphere = 1"
  },
  "api/Quantum.EQS.EnvQueryTestTrace.TraceHitType.html": {
    "href": "api/Quantum.EQS.EnvQueryTestTrace.TraceHitType.html",
    "title": "Enum EnvQueryTestTrace.TraceHitType | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnvQueryTestTrace.TraceHitType Namespace Quantum.EQS Assembly Quantum.Simulation.dll public enum EnvQueryTestTrace.TraceHitType Fields Hit = 0 NoHit = 1"
  },
  "api/Quantum.EQS.EnvQueryTestTrace.TraceType.html": {
    "href": "api/Quantum.EQS.EnvQueryTestTrace.TraceType.html",
    "title": "Enum EnvQueryTestTrace.TraceType | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnvQueryTestTrace.TraceType Namespace Quantum.EQS Assembly Quantum.Simulation.dll public enum EnvQueryTestTrace.TraceType Fields Invisible = 1 Visible = 0"
  },
  "api/Quantum.EQS.EnvQueryTestTrace.html": {
    "href": "api/Quantum.EQS.EnvQueryTestTrace.html",
    "title": "Class EnvQueryTestTrace | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryTestTrace Namespace Quantum.EQS Assembly Quantum.Simulation.dll public class EnvQueryTestTrace : EnvQueryTest Inheritance object Object ScriptableObject AssetObject EnvQueryTest EnvQueryTestTrace Inherited Members EnvQueryTest.testPurpose EnvQueryTest.IsActive EnvQueryTest.ScaleFactor EnvQueryTest.ScoringEquation EnvQueryTest.NormalizeItemScores(Frame, int, List<EnvQueryItem>) EnvQueryTest.NormalizeItemScores(Frame, int, EnvQueryCached*) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields fromHeightOffset public FP fromHeightOffset Field Value FP hitType public EnvQueryTestTrace.TraceHitType hitType Field Value EnvQueryTestTrace.TraceHitType layerMask public LayerMask layerMask Field Value LayerMask queryOptions public QueryOptions queryOptions Field Value QueryOptions toHeightOffset public FP toHeightOffset Field Value FP traceFrom public EnvQueryContext traceFrom Field Value EnvQueryContext traceShape public EnvQueryTestTrace.ShapeType traceShape Field Value EnvQueryTestTrace.ShapeType traceTo public EnvQueryContext traceTo Field Value EnvQueryContext traceType public EnvQueryTestTrace.TraceType traceType Field Value EnvQueryTestTrace.TraceType Methods FinalizeInjectionTest(Frame, EnvQueryCached*, int, ref int) public override void FinalizeInjectionTest(Frame frame, EnvQueryCached* envQuery, int currentTest, ref int queryCurrentIndex) Parameters frame Frame envQuery EnvQueryCached* currentTest int queryCurrentIndex int RunTest(Frame, EnvQuery*, int, List<EnvQueryItem>) public override void RunTest(Frame frame, EnvQuery* envQuery, int currentTest, List<EnvQueryItem> envQueryItems) Parameters frame Frame envQuery EnvQuery* currentTest int envQueryItems List<EnvQueryItem> StartInjectionTest(Frame, EnvQueryCached*, int, ref int) public override void StartInjectionTest(Frame frame, EnvQueryCached* envQuery, int currentTest, ref int queryCurrentIndex) Parameters frame Frame envQuery EnvQueryCached* currentTest int queryCurrentIndex int"
  },
  "api/Quantum.EQS.html": {
    "href": "api/Quantum.EQS.html",
    "title": "Namespace Quantum.EQS | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Quantum.EQS Classes EnvQueryGenerator EnvQueryGeneratorComposite EnvQueryGeneratorPointCircle EnvQueryGeneratorPointGrid EnvQueryTest EnvQueryTestDistance EnvQueryTestDot EnvQueryTestTrace Structs EnvQueryTestDot.LineDefinition Enums EnvQueryGenerator.ProjectionType EnvQueryTest.EnvQueryTestScoringEquation EnvQueryTestDot.DirMode EnvQueryTestDot.RotMode EnvQueryTestDot.TestMode EnvQueryTestTrace.ShapeType EnvQueryTestTrace.TraceHitType EnvQueryTestTrace.TraceType"
  },
  "api/Quantum.EffectsHelper.html": {
    "href": "api/Quantum.EffectsHelper.html",
    "title": "Class EffectsHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class EffectsHelper Namespace Quantum Assembly Quantum.Simulation.dll public static class EffectsHelper Inheritance object EffectsHelper Methods PlaySound(Frame, PlaySoundRequest, EntityRef, FPVector3) public static void PlaySound(Frame frame, PlaySoundRequest request, EntityRef entity, FPVector3 position) Parameters frame Frame request PlaySoundRequest entity EntityRef position FPVector3"
  },
  "api/Quantum.EmptyStateAction.html": {
    "href": "api/Quantum.EmptyStateAction.html",
    "title": "Class EmptyStateAction | Rwby Vytal Versus Documentation",
    "keywords": "Class EmptyStateAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class EmptyStateAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction EmptyStateAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.EnterInputMethod.html": {
    "href": "api/Quantum.EnterInputMethod.html",
    "title": "Enum EnterInputMethod | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnterInputMethod Namespace Quantum Assembly Quantum.Simulation.dll public enum EnterInputMethod Fields Normal = 0 Once = 2 OnceStrict = 3 Strict = 1"
  },
  "api/Quantum.EntityCenter.html": {
    "href": "api/Quantum.EntityCenter.html",
    "title": "Struct EntityCenter | Rwby Vytal Versus Documentation",
    "keywords": "Struct EntityCenter Namespace Quantum Assembly Quantum.Simulation.dll public struct EntityCenter : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 24 Field Value int value public FPVector3 value Field Value FPVector3 Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.EntityForce.html": {
    "href": "api/Quantum.EntityForce.html",
    "title": "Struct EntityForce | Rwby Vytal Versus Documentation",
    "keywords": "Struct EntityForce Namespace Quantum Assembly Quantum.Simulation.dll public struct EntityForce : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 24 Field Value int force public FPVector3 force Field Value FPVector3 Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.EntityHitDefinition.html": {
    "href": "api/Quantum.EntityHitDefinition.html",
    "title": "Struct EntityHitDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Struct EntityHitDefinition Namespace Quantum Assembly Quantum.Simulation.dll public struct EntityHitDefinition Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 16 Field Value int ent public EntityRef ent Field Value EntityRef hitByHitboxIdentifier public int hitByHitboxIdentifier Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.EnvQuery.html": {
    "href": "api/Quantum.EnvQuery.html",
    "title": "Struct EnvQuery | Rwby Vytal Versus Documentation",
    "keywords": "Struct EnvQuery Namespace Quantum Assembly Quantum.Simulation.dll public struct EnvQuery Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int CenterOfItems public Transform3D CenterOfItems Field Value Transform3D SIZE public const int SIZE = 152 Field Value int querier public EntityRef querier Field Value EntityRef queryAsset public AssetRef<EnvironmentQueryAsset> queryAsset Field Value AssetRef<EnvironmentQueryAsset> target public Transform3D target Field Value Transform3D targetEntity public EntityRef targetEntity Field Value EntityRef Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.EnvQueryCached.html": {
    "href": "api/Quantum.EnvQueryCached.html",
    "title": "Struct EnvQueryCached | Rwby Vytal Versus Documentation",
    "keywords": "Struct EnvQueryCached Namespace Quantum Assembly Quantum.Simulation.dll public struct EnvQueryCached : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int CenterOfItems public Transform3D CenterOfItems Field Value Transform3D SIZE public const int SIZE = 168 Field Value int broadphaseQueries public QListPtr<PhysicsQueryRef> broadphaseQueries Field Value QListPtr<PhysicsQueryRef> envQueryItems public QListPtr<EnvQueryItemCached> envQueryItems Field Value QListPtr<EnvQueryItemCached> querier public EntityRef querier Field Value EntityRef queryAsset public AssetRef<EnvironmentQueryAsset> queryAsset Field Value AssetRef<EnvironmentQueryAsset> stage public int stage Field Value int target public Transform3D target Field Value Transform3D targetEntity public EntityRef targetEntity Field Value EntityRef Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.EnvQueryContext.html": {
    "href": "api/Quantum.EnvQueryContext.html",
    "title": "Enum EnvQueryContext | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnvQueryContext Namespace Quantum Assembly Quantum.Simulation.dll public enum EnvQueryContext Fields Item = 1 Querier = 0 Target = 2"
  },
  "api/Quantum.EnvQueryHelper.html": {
    "href": "api/Quantum.EnvQueryHelper.html",
    "title": "Class EnvQueryHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryHelper Namespace Quantum Assembly Quantum.Simulation.dll public static class EnvQueryHelper Inheritance object EnvQueryHelper Methods DrawItems(Frame, EnvQuery*, List<EnvQueryItem>) public static void DrawItems(Frame frame, EnvQuery* envQuery, List<EnvQueryItem> queryItemsList) Parameters frame Frame envQuery EnvQuery* queryItemsList List<EnvQueryItem> TryExecuteQueryImmediate(Frame, EnvQuery*, out List<EnvQueryItem>) public static bool TryExecuteQueryImmediate(Frame frame, EnvQuery* envQuery, out List<EnvQueryItem> itemsSorted) Parameters frame Frame envQuery EnvQuery* itemsSorted List<EnvQueryItem> Returns bool"
  },
  "api/Quantum.EnvQueryHelperBroadphase.html": {
    "href": "api/Quantum.EnvQueryHelperBroadphase.html",
    "title": "Class EnvQueryHelperBroadphase | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryHelperBroadphase Namespace Quantum Assembly Quantum.Simulation.dll public static class EnvQueryHelperBroadphase Inheritance object EnvQueryHelperBroadphase Methods DrawItems(Frame, EnvQueryCached*) public static void DrawItems(Frame frame, EnvQueryCached* envQuery) Parameters frame Frame envQuery EnvQueryCached* StageFour(Frame, EnvQueryCached*) public static bool StageFour(Frame frame, EnvQueryCached* envQuery) Parameters frame Frame envQuery EnvQueryCached* Returns bool StageOne(Frame, EnvQueryCached*) public static bool StageOne(Frame frame, EnvQueryCached* envQuery) Parameters frame Frame envQuery EnvQueryCached* Returns bool StageThree(Frame, EnvQueryCached*) public static bool StageThree(Frame frame, EnvQueryCached* envQuery) Parameters frame Frame envQuery EnvQueryCached* Returns bool StageTwo(Frame, EnvQueryCached*) public static bool StageTwo(Frame frame, EnvQueryCached* envQuery) Parameters frame Frame envQuery EnvQueryCached* Returns bool TryGetBestPosition(Frame, EnvQueryCached*, out FPVector3) public static bool TryGetBestPosition(Frame frame, EnvQueryCached* envQuery, out FPVector3 position) Parameters frame Frame envQuery EnvQueryCached* position FPVector3 Returns bool"
  },
  "api/Quantum.EnvQueryInjectionSystem.Filter.html": {
    "href": "api/Quantum.EnvQueryInjectionSystem.Filter.html",
    "title": "Struct EnvQueryInjectionSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct EnvQueryInjectionSystem.Filter Namespace Quantum Assembly Quantum.Simulation.dll public struct EnvQueryInjectionSystem.Filter Fields Entity public EntityRef Entity Field Value EntityRef envQuery public EnvQueryCached* envQuery Field Value EnvQueryCached*"
  },
  "api/Quantum.EnvQueryInjectionSystem.html": {
    "href": "api/Quantum.EnvQueryInjectionSystem.html",
    "title": "Class EnvQueryInjectionSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryInjectionSystem Namespace Quantum Assembly Quantum.Simulation.dll public class EnvQueryInjectionSystem : SystemMainThreadFilter<EnvQueryInjectionSystem.Filter> Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<EnvQueryInjectionSystem.Filter> EnvQueryInjectionSystem Inherited Members SystemMainThreadFilter<EnvQueryInjectionSystem.Filter>.UseCulling SystemMainThreadFilter<EnvQueryInjectionSystem.Filter>.Without SystemMainThreadFilter<EnvQueryInjectionSystem.Filter>.Any SystemMainThreadFilter<EnvQueryInjectionSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame, ref Filter) Override to add workload. public override void Update(Frame f, ref EnvQueryInjectionSystem.Filter filter) Parameters f Frame The current frame. filter EnvQueryInjectionSystem.Filter The frame object."
  },
  "api/Quantum.EnvQueryItem.html": {
    "href": "api/Quantum.EnvQueryItem.html",
    "title": "Class EnvQueryItem | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryItem Namespace Quantum Assembly Quantum.Simulation.dll public class EnvQueryItem Inheritance object EnvQueryItem Constructors EnvQueryItem(int, FPVector3, FPVector3) public EnvQueryItem(int numOfTests, FPVector3 location, FPVector3 centerOfItems) Parameters numOfTests int location FPVector3 centerOfItems FPVector3 Fields IsValid public bool IsValid Field Value bool Score public FP Score Field Value FP TestResults public FP[] TestResults Field Value FP[] centerOfItems public FPVector3 centerOfItems Field Value FPVector3 location public FPVector3 location Field Value FPVector3 navLocation public FPVector3 navLocation Field Value FPVector3 Methods GetWorldPosition() public FPVector3 GetWorldPosition() Returns FPVector3 UpdateNavMeshProjection(Frame, FP, FP) public void UpdateNavMeshProjection(Frame frame, FP projectionRadius, FP postProjectionVerticalOffset) Parameters frame Frame projectionRadius FP postProjectionVerticalOffset FP UpdateTraceProjection(Frame, FP, FP, LayerMask) public void UpdateTraceProjection(Frame frame, FP projectionUpDown, FP postProjectionVerticalOffset, LayerMask projectionLayerMask) Parameters frame Frame projectionUpDown FP postProjectionVerticalOffset FP projectionLayerMask LayerMask"
  },
  "api/Quantum.EnvQueryItemCached.html": {
    "href": "api/Quantum.EnvQueryItemCached.html",
    "title": "Struct EnvQueryItemCached | Rwby Vytal Versus Documentation",
    "keywords": "Struct EnvQueryItemCached Namespace Quantum Assembly Quantum.Simulation.dll public struct EnvQueryItemCached Constructors EnvQueryItemCached(FPVector3) public EnvQueryItemCached(FPVector3 location) Parameters location FPVector3 Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int IsValid public QBoolean IsValid Field Value QBoolean SIZE public const int SIZE = 40 Field Value int Score public FP Score Field Value FP TestResults public QListPtr<FP> TestResults Field Value QListPtr<FP> location public FPVector3 location Field Value FPVector3 Methods CalculateTraceProjection(Frame, EnvQueryCached*, FP, LayerMask) public void CalculateTraceProjection(Frame frame, EnvQueryCached* envQuery, FP projectionUpDown, LayerMask projectionLayerMask) Parameters frame Frame envQuery EnvQueryCached* projectionUpDown FP projectionLayerMask LayerMask ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef FinalizeTraceProjection(Frame, EnvQueryCached*, FP, ref int) public void FinalizeTraceProjection(Frame frame, EnvQueryCached* envQuery, FP postProjectionVerticalOffset, ref int queryStartIndex) Parameters frame Frame envQuery EnvQueryCached* postProjectionVerticalOffset FP queryStartIndex int GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.EnvQuerySystem.Filter.html": {
    "href": "api/Quantum.EnvQuerySystem.Filter.html",
    "title": "Struct EnvQuerySystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct EnvQuerySystem.Filter Namespace Quantum Assembly Quantum.Simulation.dll public struct EnvQuerySystem.Filter Fields Entity public EntityRef Entity Field Value EntityRef envQuery public EnvQueryCached* envQuery Field Value EnvQueryCached*"
  },
  "api/Quantum.EnvQuerySystem.html": {
    "href": "api/Quantum.EnvQuerySystem.html",
    "title": "Class EnvQuerySystem | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQuerySystem Namespace Quantum Assembly Quantum.Simulation.dll public class EnvQuerySystem : SystemMainThreadFilter<EnvQueryInjectionSystem.Filter>, ISignalOnComponentAdded<EnvQueryCached>, ISignalOnComponentRemoved<EnvQueryCached>, ISignal Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<EnvQueryInjectionSystem.Filter> EnvQuerySystem Implements ISignalOnComponentAdded<EnvQueryCached> ISignalOnComponentRemoved<EnvQueryCached> ISignal Inherited Members SystemMainThreadFilter<EnvQueryInjectionSystem.Filter>.UseCulling SystemMainThreadFilter<EnvQueryInjectionSystem.Filter>.Without SystemMainThreadFilter<EnvQueryInjectionSystem.Filter>.Any SystemMainThreadFilter<EnvQueryInjectionSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, EnvQueryCached*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame frame, EntityRef entity, EnvQueryCached* component) Parameters frame Frame entity EntityRef The entity that the component was added to. component EnvQueryCached* The component that was added. OnRemoved(Frame, EntityRef, EnvQueryCached*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, EnvQueryCached* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component EnvQueryCached* The component that was removed. Update(Frame, ref Filter) Override to add workload. public override void Update(Frame f, ref EnvQueryInjectionSystem.Filter filter) Parameters f Frame The current frame. filter EnvQueryInjectionSystem.Filter The frame object."
  },
  "api/Quantum.EnvTestPurpose.html": {
    "href": "api/Quantum.EnvTestPurpose.html",
    "title": "Enum EnvTestPurpose | Rwby Vytal Versus Documentation",
    "keywords": "Enum EnvTestPurpose Namespace Quantum Assembly Quantum.Simulation.dll public enum EnvTestPurpose Fields FilterAndScore = 2 FilterOnly = 0 ScoreOnly = 1"
  },
  "api/Quantum.EnvironmentProcessor.html": {
    "href": "api/Quantum.EnvironmentProcessor.html",
    "title": "Class EnvironmentProcessor | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvironmentProcessor Namespace Quantum Assembly Quantum.Simulation.dll Movement implementation for default environment. public class EnvironmentProcessor : KCCProcessor, IBeforeMove, IAfterMoveStep Inheritance object Object ScriptableObject AssetObject KCCProcessor EnvironmentProcessor Implements IBeforeMove IAfterMoveStep Inherited Members KCCProcessor.OnEnter(KCCContext, KCCProcessorInfo, KCCOverlapHit) KCCProcessor.OnExit(KCCContext, KCCProcessorInfo) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields DynamicAirFriction [KCCHeader(\"Air\")] [KCCTooltip(\"Dynamic velocity is decelerated by actual dynamic speed multiplied by this. The faster KCC moves, the more deceleration is applied.\")] public FP DynamicAirFriction Field Value FP DynamicGroundFriction [KCCTooltip(\"Dynamic velocity is decelerated by actual dynamic speed multiplied by this. The faster KCC moves, the more deceleration is applied.\")] public FP DynamicGroundFriction Field Value FP Gravity [KCCTooltip(\"Custom gravity vector.\")] public FPVector3 Gravity Field Value FPVector3 JumpMultiplier [KCCTooltip(\"Custom jump multiplier.\")] public FP JumpMultiplier Field Value FP KinematicAirAcceleration [KCCTooltip(\"Kinematic velocity is accelerated by calculated kinematic speed multiplied by this.\")] public FP KinematicAirAcceleration Field Value FP KinematicAirFriction [KCCTooltip(\"Kinematic velocity is decelerated by actual kinematic speed multiplied by this. The faster KCC moves, the more deceleration is applied.\")] public FP KinematicAirFriction Field Value FP KinematicGroundAcceleration [KCCTooltip(\"Kinematic velocity is accelerated by calculated kinematic speed multiplied by this.\")] public FP KinematicGroundAcceleration Field Value FP KinematicGroundFriction [KCCTooltip(\"Kinematic velocity is decelerated by actual kinematic speed multiplied by this. The faster KCC moves, the more deceleration is applied.\")] public FP KinematicGroundFriction Field Value FP KinematicSpeed [KCCHeader(\"General\")] [KCCTooltip(\"Maximum allowed speed the KCC can move with player input.\")] public FP KinematicSpeed Field Value FP MaxGroundAngle [KCCHeader(\"Ground\")] [KCCTooltip(\"Maximum angle of walkable ground.\")] public FP MaxGroundAngle Field Value FP Methods AfterMoveStep(KCCContext, KCCProcessorInfo, KCCOverlapInfo) This callback is invoked after each KCC move step - this happens if the KCC moves too fast and the continuous collision detection (CCD) algorithm splits translation vector into multiple smaller steps. During CCD movement the KCCData.DeltaTime is scaled proportionally to size of the step. Not called if KCC.IsActive is set to false. public void AfterMoveStep(KCCContext context, KCCProcessorInfo processorInfo, KCCOverlapInfo overlapInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing the processor. overlapInfo KCCOverlapInfo Reference to all physics overlap hits in current move step and other metadata. BeforeMove(KCCContext, KCCProcessorInfo) This callback is invoked before KCC movement - on the beginning of KCC.Update(). Not called if KCC.IsActive is set to false. public void BeforeMove(KCCContext context, KCCProcessorInfo processorInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing this processor. ProcessAfterMoveStep(KCCContext, KCCProcessorInfo, KCCOverlapInfo) This callback is invoked after each KCC move step - this happens if the KCC moves too fast and the continuous collision detection (CCD) algorithm splits translation vector into multiple smaller steps. During CCD movement the KCCData.DeltaTime is scaled proportionally to size of the step. Not called if KCC.IsActive is set to false. public static void ProcessAfterMoveStep(KCCContext context, KCCProcessorInfo processorInfo, KCCOverlapInfo overlapInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing this processor. overlapInfo KCCOverlapInfo Reference to all physics overlap hits in current move step and other metadata. SetDynamicVelocity(KCCContext, ref KCCData, FP, FP, FP) public static void SetDynamicVelocity(KCCContext context, ref KCCData data, FP jumpMultiplier, FP groundFriction, FP airFriction) Parameters context KCCContext data KCCData jumpMultiplier FP groundFriction FP airFriction FP SetKinematicVelocity(KCCContext, ref KCCData, FP, FP, FP, FP, FP) public static void SetKinematicVelocity(KCCContext context, ref KCCData data, FP speed, FP groundAcceleration, FP airAcceleration, FP groundFriction, FP airFriction) Parameters context KCCContext data KCCData speed FP groundAcceleration FP airAcceleration FP groundFriction FP airFriction FP"
  },
  "api/Quantum.EnvironmentQueryAsset.html": {
    "href": "api/Quantum.EnvironmentQueryAsset.html",
    "title": "Class EnvironmentQueryAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvironmentQueryAsset Namespace Quantum Assembly Quantum.Simulation.dll public class EnvironmentQueryAsset : AssetObject Inheritance object Object ScriptableObject AssetObject EnvironmentQueryAsset Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields generator public EnvQueryGenerator generator Field Value EnvQueryGenerator tests public List<EnvQueryTest> tests Field Value List<EnvQueryTest> Methods CreateQuery(Frame, EntityRef) public EnvQuery CreateQuery(Frame frame, EntityRef querier) Parameters frame Frame querier EntityRef Returns EnvQuery TryCreateCachedQuery(Frame, EntityRef, out EntityRef) public bool TryCreateCachedQuery(Frame frame, EntityRef querier, out EntityRef envQuery) Parameters frame Frame querier EntityRef envQuery EntityRef Returns bool"
  },
  "api/Quantum.EventCauseHitstopShakeEvent.html": {
    "href": "api/Quantum.EventCauseHitstopShakeEvent.html",
    "title": "Class EventCauseHitstopShakeEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class EventCauseHitstopShakeEvent Namespace Quantum Assembly Quantum.Simulation.dll public class EventCauseHitstopShakeEvent : EventBase, IDispatchable Inheritance object EventBase EventCauseHitstopShakeEvent Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventCauseHitstopShakeEvent() public EventCauseHitstopShakeEvent() EventCauseHitstopShakeEvent(int, EventFlags) protected EventCauseHitstopShakeEvent(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 1 Field Value int fighterEntity public EntityRef fighterEntity Field Value EntityRef shakeFrames public int shakeFrames Field Value int Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventCharaLinkAddedEvent.html": {
    "href": "api/Quantum.EventCharaLinkAddedEvent.html",
    "title": "Class EventCharaLinkAddedEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class EventCharaLinkAddedEvent Namespace Quantum Assembly Quantum.Simulation.dll public class EventCharaLinkAddedEvent : EventBase, IDispatchable Inheritance object EventBase EventCharaLinkAddedEvent Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventCharaLinkAddedEvent() public EventCharaLinkAddedEvent() EventCharaLinkAddedEvent(int, EventFlags) protected EventCharaLinkAddedEvent(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 3 Field Value int charaDefinitionReference public AssetRef<CharaDefinitionAsset> charaDefinitionReference Field Value AssetRef<CharaDefinitionAsset> entity public EntityRef entity Field Value EntityRef Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventCharaLinkRemovedEvent.html": {
    "href": "api/Quantum.EventCharaLinkRemovedEvent.html",
    "title": "Class EventCharaLinkRemovedEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class EventCharaLinkRemovedEvent Namespace Quantum Assembly Quantum.Simulation.dll public class EventCharaLinkRemovedEvent : EventBase, IDispatchable Inheritance object EventBase EventCharaLinkRemovedEvent Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventCharaLinkRemovedEvent() public EventCharaLinkRemovedEvent() EventCharaLinkRemovedEvent(int, EventFlags) protected EventCharaLinkRemovedEvent(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 4 Field Value int charaDefinitionReference public AssetRef<CharaDefinitionAsset> charaDefinitionReference Field Value AssetRef<CharaDefinitionAsset> entity public EntityRef entity Field Value EntityRef Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventDispatcher.html": {
    "href": "api/Quantum.EventDispatcher.html",
    "title": "Class EventDispatcher | Rwby Vytal Versus Documentation",
    "keywords": "Class EventDispatcher Namespace Quantum Assembly Quantum.Simulation.dll Publish, subscribe pattern for Quantum events: Quantum.EventBase. Quantum events are used to communicate view relevant game updates from the simulation to the view. public class EventDispatcher : DispatcherBase, IEventDispatcher Inheritance object DispatcherBase EventDispatcher Implements IEventDispatcher Inherited Members DispatcherBase.GetIndex<TDispatchable>() DispatcherBase.Subscribe<TDispatchable>(object, DispatchableHandler<TDispatchable>, bool, uint, DispatchableFilter) DispatcherBase.Unsubscribe(DispatcherSubscription) DispatcherBase.UnsubscribeHandler<TDispatchable>(DispatchableHandler<TDispatchable>) DispatcherBase.UnsubscribeListener<TDispatchable>(object) DispatcherBase.SubscribeManual<TDispatchable>(DispatchableHandler<TDispatchable>, bool, DispatchableFilter) DispatcherBase.SubscribeManual<TDispatchable>(object, DispatchableHandler<TDispatchable>, bool, DispatchableFilter) DispatcherBase.Clear() DispatcherBase.RemoveDeadListeners() DispatcherBase.UnsubscribeListener(object) DispatcherBase.GetListenerStatus(object, uint) DispatcherBase.InvokeMeta<TDispatchable>(TDispatchable) DispatcherBase.InvokeMeta(int, IDispatchable) DispatcherBase.SubscribeInternal<TDispatchable>(object, DispatchableHandler<TDispatchable>, DispatchableFilter, uint) DispatcherBase.SubscribeManualInternal<TDispatchable>(object, DispatchableHandler<TDispatchable>, DispatchableFilter, bool) DispatcherBase.UnsubscribeInternal<TDispatchable>(object, DispatchableHandler<TDispatchable>) DispatcherBase.Next DispatcherBase.IsEmpty Constructors EventDispatcher() Creates the event dispatcher and initializes the event type mapping. public EventDispatcher() Methods Publish(EventBase) Publish an event. public bool Publish(EventBase e) Parameters e EventBase Event Returns bool True if the event was handled by any subscription"
  },
  "api/Quantum.EventEntityHit.html": {
    "href": "api/Quantum.EventEntityHit.html",
    "title": "Class EventEntityHit | Rwby Vytal Versus Documentation",
    "keywords": "Class EventEntityHit Namespace Quantum Assembly Quantum.Simulation.dll public class EventEntityHit : EventBase, IDispatchable Inheritance object EventBase EventEntityHit Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventEntityHit() public EventEntityHit() EventEntityHit(int, EventFlags) protected EventEntityHit(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 2 Field Value int entity public EntityRef entity Field Value EntityRef hitByEntity public EntityRef hitByEntity Field Value EntityRef Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventFighterDied.html": {
    "href": "api/Quantum.EventFighterDied.html",
    "title": "Class EventFighterDied | Rwby Vytal Versus Documentation",
    "keywords": "Class EventFighterDied Namespace Quantum Assembly Quantum.Simulation.dll public class EventFighterDied : EventBase, IDispatchable Inheritance object EventBase EventFighterDied Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventFighterDied() public EventFighterDied() EventFighterDied(int, EventFlags) protected EventFighterDied(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 6 Field Value int Position public FPVector3 Position Field Value FPVector3 WhoDied public EntityRef WhoDied Field Value EntityRef WhoKilled public EntityRef WhoKilled Field Value EntityRef Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventGameResult.html": {
    "href": "api/Quantum.EventGameResult.html",
    "title": "Class EventGameResult | Rwby Vytal Versus Documentation",
    "keywords": "Class EventGameResult Namespace Quantum Assembly Quantum.Simulation.dll Does not have to implement checksum, because it's a hard-coded synced event. public sealed class EventGameResult : EventBase, IDispatchable Inheritance object EventBase EventGameResult Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventGameResult() Constructor. public EventGameResult() Fields GameResult The game result that was created by the simulation. public GameResult GameResult Field Value GameResult ID The game result event id. public const int ID = 0 Field Value int Properties Game Override the Game accessor to return the specialized QuantumGame instead of the interface. public QuantumGame Game { get; set; } Property Value QuantumGame"
  },
  "api/Quantum.EventGamemodeStateChanged.html": {
    "href": "api/Quantum.EventGamemodeStateChanged.html",
    "title": "Class EventGamemodeStateChanged | Rwby Vytal Versus Documentation",
    "keywords": "Class EventGamemodeStateChanged Namespace Quantum Assembly Quantum.Simulation.dll public class EventGamemodeStateChanged : EventBase, IDispatchable Inheritance object EventBase EventGamemodeStateChanged Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventGamemodeStateChanged() public EventGamemodeStateChanged() EventGamemodeStateChanged(int, EventFlags) protected EventGamemodeStateChanged(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 7 Field Value int NewState public GenericGamemodeStates NewState Field Value GenericGamemodeStates OldState public GenericGamemodeStates OldState Field Value GenericGamemodeStates Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventGamemodeTeamScoreChanged.html": {
    "href": "api/Quantum.EventGamemodeTeamScoreChanged.html",
    "title": "Class EventGamemodeTeamScoreChanged | Rwby Vytal Versus Documentation",
    "keywords": "Class EventGamemodeTeamScoreChanged Namespace Quantum Assembly Quantum.Simulation.dll public class EventGamemodeTeamScoreChanged : EventBase, IDispatchable Inheritance object EventBase EventGamemodeTeamScoreChanged Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventGamemodeTeamScoreChanged() public EventGamemodeTeamScoreChanged() EventGamemodeTeamScoreChanged(int, EventFlags) protected EventGamemodeTeamScoreChanged(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 8 Field Value int newScore public int newScore Field Value int oldScore public int oldScore Field Value int team public int team Field Value int Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventHealthDecreased.html": {
    "href": "api/Quantum.EventHealthDecreased.html",
    "title": "Class EventHealthDecreased | Rwby Vytal Versus Documentation",
    "keywords": "Class EventHealthDecreased Namespace Quantum Assembly Quantum.Simulation.dll public class EventHealthDecreased : EventBase, IDispatchable Inheritance object EventBase EventHealthDecreased Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventHealthDecreased() public EventHealthDecreased() EventHealthDecreased(int, EventFlags) protected EventHealthDecreased(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 9 Field Value int entity public EntityRef entity Field Value EntityRef newHealth public int newHealth Field Value int oldHealth public int oldHealth Field Value int Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventHealthIncreased.html": {
    "href": "api/Quantum.EventHealthIncreased.html",
    "title": "Class EventHealthIncreased | Rwby Vytal Versus Documentation",
    "keywords": "Class EventHealthIncreased Namespace Quantum Assembly Quantum.Simulation.dll public class EventHealthIncreased : EventBase, IDispatchable Inheritance object EventBase EventHealthIncreased Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventHealthIncreased() public EventHealthIncreased() EventHealthIncreased(int, EventFlags) protected EventHealthIncreased(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 10 Field Value int entity public EntityRef entity Field Value EntityRef newHealth public int newHealth Field Value int oldHealth public int oldHealth Field Value int Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventPlayCutsceneEvent.html": {
    "href": "api/Quantum.EventPlayCutsceneEvent.html",
    "title": "Class EventPlayCutsceneEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class EventPlayCutsceneEvent Namespace Quantum Assembly Quantum.Simulation.dll public class EventPlayCutsceneEvent : EventBase, IDispatchable Inheritance object EventBase EventPlayCutsceneEvent Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventPlayCutsceneEvent() public EventPlayCutsceneEvent() EventPlayCutsceneEvent(int, EventFlags) protected EventPlayCutsceneEvent(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 11 Field Value int cutsceneSource public EntityRef cutsceneSource Field Value EntityRef cutsceneTag public AssetRef<Tag> cutsceneTag Field Value AssetRef<Tag> onlyPlayOnPlayerLocalMachine public QBoolean onlyPlayOnPlayerLocalMachine Field Value QBoolean Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventPlayEffectEvent.html": {
    "href": "api/Quantum.EventPlayEffectEvent.html",
    "title": "Class EventPlayEffectEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class EventPlayEffectEvent Namespace Quantum Assembly Quantum.Simulation.dll public class EventPlayEffectEvent : EventBase, IDispatchable Inheritance object EventBase EventPlayEffectEvent Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventPlayEffectEvent() public EventPlayEffectEvent() EventPlayEffectEvent(int, EventFlags) protected EventPlayEffectEvent(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 15 Field Value int parent public EntityRef parent Field Value EntityRef parented public QBoolean parented Field Value QBoolean position public FPVector3 position Field Value FPVector3 positionAsOffset public QBoolean positionAsOffset Field Value QBoolean rotation public FPVector3 rotation Field Value FPVector3 rotationAsOffset public QBoolean rotationAsOffset Field Value QBoolean visualEffectRef public AssetRef<VisualEffectEntry> visualEffectRef Field Value AssetRef<VisualEffectEntry> Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventPlaySoundEvent.html": {
    "href": "api/Quantum.EventPlaySoundEvent.html",
    "title": "Class EventPlaySoundEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class EventPlaySoundEvent Namespace Quantum Assembly Quantum.Simulation.dll public class EventPlaySoundEvent : EventBase, IDispatchable Inheritance object EventBase EventPlaySoundEvent Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventPlaySoundEvent() public EventPlaySoundEvent() EventPlaySoundEvent(int, EventFlags) protected EventPlaySoundEvent(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 13 Field Value int audioSourceConfig public AssetRef<AudioSourceConfig> audioSourceConfig Field Value AssetRef<AudioSourceConfig> cancelOthersSoundEntry public QBoolean cancelOthersSoundEntry Field Value QBoolean cancelOthersTag public QBoolean cancelOthersTag Field Value QBoolean maxPitch public FP maxPitch Field Value FP minPitch public FP minPitch Field Value FP owner public EntityRef owner Field Value EntityRef parentedTo public EntityRef parentedTo Field Value EntityRef position public FPVector3 position Field Value FPVector3 sound public AssetRef<SoundEntry> sound Field Value AssetRef<SoundEntry> tag public AssetRef<Tag> tag Field Value AssetRef<Tag> volume public FP volume Field Value FP Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventResetEntityAfterCutsceneEvent.html": {
    "href": "api/Quantum.EventResetEntityAfterCutsceneEvent.html",
    "title": "Class EventResetEntityAfterCutsceneEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class EventResetEntityAfterCutsceneEvent Namespace Quantum Assembly Quantum.Simulation.dll public class EventResetEntityAfterCutsceneEvent : EventBase, IDispatchable Inheritance object EventBase EventResetEntityAfterCutsceneEvent Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventResetEntityAfterCutsceneEvent() public EventResetEntityAfterCutsceneEvent() EventResetEntityAfterCutsceneEvent(int, EventFlags) protected EventResetEntityAfterCutsceneEvent(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 12 Field Value int playingEntity public EntityRef playingEntity Field Value EntityRef Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventStopCutsceneEvent.html": {
    "href": "api/Quantum.EventStopCutsceneEvent.html",
    "title": "Class EventStopCutsceneEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class EventStopCutsceneEvent Namespace Quantum Assembly Quantum.Simulation.dll public class EventStopCutsceneEvent : EventBase, IDispatchable Inheritance object EventBase EventStopCutsceneEvent Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventStopCutsceneEvent() public EventStopCutsceneEvent() EventStopCutsceneEvent(int, EventFlags) protected EventStopCutsceneEvent(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 14 Field Value int cutsceneSource public EntityRef cutsceneSource Field Value EntityRef cutsceneTag public AssetRef<Tag> cutsceneTag Field Value AssetRef<Tag> Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventStopEffectEvent.html": {
    "href": "api/Quantum.EventStopEffectEvent.html",
    "title": "Class EventStopEffectEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class EventStopEffectEvent Namespace Quantum Assembly Quantum.Simulation.dll public class EventStopEffectEvent : EventBase, IDispatchable Inheritance object EventBase EventStopEffectEvent Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventStopEffectEvent() public EventStopEffectEvent() EventStopEffectEvent(int, EventFlags) protected EventStopEffectEvent(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 16 Field Value int destroyAllParticles public QBoolean destroyAllParticles Field Value QBoolean identifier public int identifier Field Value int parent public EntityRef parent Field Value EntityRef Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.EventTeleportCameraEvent.html": {
    "href": "api/Quantum.EventTeleportCameraEvent.html",
    "title": "Class EventTeleportCameraEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class EventTeleportCameraEvent Namespace Quantum Assembly Quantum.Simulation.dll public class EventTeleportCameraEvent : EventBase, IDispatchable Inheritance object EventBase EventTeleportCameraEvent Implements IDispatchable Inherited Members EventBase.Tick EventBase.Id EventBase.OnReleased() EventBase.Synced EventBase.CanBeInvokedOnServer EventBase.CanBeInvokedOnClient Constructors EventTeleportCameraEvent() public EventTeleportCameraEvent() EventTeleportCameraEvent(int, EventFlags) protected EventTeleportCameraEvent(int id, EventFlags flags) Parameters id int flags EventFlags Fields ID public const int ID = 5 Field Value int callerEntity public EntityRef callerEntity Field Value EntityRef Properties Game public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Quantum.ExecuteIfConditionAction.html": {
    "href": "api/Quantum.ExecuteIfConditionAction.html",
    "title": "Class ExecuteIfConditionAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ExecuteIfConditionAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ExecuteIfConditionAction : AIAction Inheritance object Object ScriptableObject AssetObject AIActionBase AIAction ExecuteIfConditionAction Derived HFSMFaceEntityAction HFSMModifyInputAction Inherited Members AIAction.Execute(FrameThreadSafe, EntityRef, ref AIContext) AIActionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkCondition public bool checkCondition Field Value bool condition public AIParamBool condition Field Value AIParamBool Methods ConditionalExecute(Frame, EntityRef, ref AIContext, AIContextUser*, AIConfigBase) public virtual void ConditionalExecute(Frame frame, EntityRef entity, ref AIContext aiContext, AIContextUser* user, AIConfigBase aiConfig) Parameters frame Frame entity EntityRef aiContext AIContext user AIContextUser* aiConfig AIConfigBase Execute(Frame, EntityRef, ref AIContext) public override void Execute(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext"
  },
  "api/Quantum.ExternalBTLeaf.html": {
    "href": "api/Quantum.ExternalBTLeaf.html",
    "title": "Class ExternalBTLeaf | Rwby Vytal Versus Documentation",
    "keywords": "Class ExternalBTLeaf Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ExternalBTLeaf : BTLeaf Inheritance object Object ScriptableObject AssetObject BTNode BTLeaf ExternalBTLeaf Inherited Members BTLeaf.Services BTLeaf._serviceInstances BTLeaf.OnStartedRunning(BTParams, ref AIContext) BTLeaf.OnEnter(BTParams, ref AIContext) BTLeaf.OnExit(BTParams, ref AIContext) BTLeaf.Loaded(IResourceManager, Native.Allocator) BTLeaf.ServiceInstances BTLeaf.NodeType BTNode.Label BTNode.Id BTNode.OnAbort(BTParams, ref AIContext, BTAbort) BTNode.OnReset(BTParams, ref AIContext) BTNode.CheckConditions(BTParams, ref AIContext) BTNode.OnDynamicRun(BTParams, ref AIContext) BTNode.ChildCompletedRunning(BTParams, BTStatus) BTNode.GetStatus(FrameBase, BTAgent*) BTNode.SetStatus(FrameBase, BTStatus, BTAgent*) BTNode.GetStatus(FrameThreadSafe, BTAgent*) BTNode.SetStatus(FrameThreadSafe, BTStatus, BTAgent*) BTNode.EvaluateAbortNode(BTParams) BTNode.Execute(BTParams, ref AIContext, bool) AssetObject.Identifier AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields behaviourTree public AssetRef<BTRoot> behaviourTree Field Value AssetRef<BTRoot> Methods Init(BTParams, ref AIContext) public override void Init(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext OnUpdate(BTParams, ref AIContext) protected override BTStatus OnUpdate(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext Returns BTStatus"
  },
  "api/Quantum.ExternalStateAction.html": {
    "href": "api/Quantum.ExternalStateAction.html",
    "title": "Class ExternalStateAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ExternalStateAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ExternalStateAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ExternalStateAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields externalActionRefs public AssetRef<HNSFStateAction>[] externalActionRefs Field Value AssetRef<HNSFStateAction>[] Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.FPConstant.html": {
    "href": "api/Quantum.FPConstant.html",
    "title": "Class FPConstant | Rwby Vytal Versus Documentation",
    "keywords": "Class FPConstant Namespace Quantum Assembly Quantum.Simulation.dll public class FPConstant : AssetObject Inheritance object Object ScriptableObject AssetObject FPConstant Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.FPOperationFunction.OperationType.html": {
    "href": "api/Quantum.FPOperationFunction.OperationType.html",
    "title": "Enum FPOperationFunction.OperationType | Rwby Vytal Versus Documentation",
    "keywords": "Enum FPOperationFunction.OperationType Namespace Quantum Assembly Quantum.Simulation.dll public enum FPOperationFunction.OperationType Fields ADD = 2 DIVIDE = 1 MULTIPLY = 0 SUBTRACT = 3"
  },
  "api/Quantum.FPOperationFunction.html": {
    "href": "api/Quantum.FPOperationFunction.html",
    "title": "Class FPOperationFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class FPOperationFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FPOperationFunction : StateFunctionFP Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FP> StateFunctionFP FPOperationFunction Inherited Members HNSFStateFunction<FP>.Label HNSFStateFunction<FP>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields operation public FPOperationFunction.OperationType operation Field Value FPOperationFunction.OperationType valueA public HNSFParamFP valueA Field Value HNSFParamFP valueB public HNSFParamFP valueB Field Value HNSFParamFP Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FP Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FP"
  },
  "api/Quantum.FPParamDecision.CheckType.html": {
    "href": "api/Quantum.FPParamDecision.CheckType.html",
    "title": "Enum FPParamDecision.CheckType | Rwby Vytal Versus Documentation",
    "keywords": "Enum FPParamDecision.CheckType Namespace Quantum Assembly Quantum.Simulation.dll public enum FPParamDecision.CheckType Fields EQUAL = 0 GREATER_OR_EQUAL = 4 GREATER_THAN = 2 LESS_OR_EQUAL = 5 LESS_THAN = 3 NOT_EQUAL = 1"
  },
  "api/Quantum.FPParamDecision.html": {
    "href": "api/Quantum.FPParamDecision.html",
    "title": "Class FPParamDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class FPParamDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FPParamDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision FPParamDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkType public FPParamDecision.CheckType checkType Field Value FPParamDecision.CheckType paramA public HNSFParamFP paramA Field Value HNSFParamFP paramB public HNSFParamFP paramB Field Value HNSFParamFP Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.FPVector3MagnitudeFunction.html": {
    "href": "api/Quantum.FPVector3MagnitudeFunction.html",
    "title": "Class FPVector3MagnitudeFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class FPVector3MagnitudeFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FPVector3MagnitudeFunction : StateFunctionFP Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FP> StateFunctionFP FPVector3MagnitudeFunction Inherited Members HNSFStateFunction<FP>.Label HNSFStateFunction<FP>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields value public HNSFParamFPVector3 value Field Value HNSFParamFPVector3 Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FP Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FP"
  },
  "api/Quantum.FPVector3OperationFunction.OperationType.html": {
    "href": "api/Quantum.FPVector3OperationFunction.OperationType.html",
    "title": "Enum FPVector3OperationFunction.OperationType | Rwby Vytal Versus Documentation",
    "keywords": "Enum FPVector3OperationFunction.OperationType Namespace Quantum Assembly Quantum.Simulation.dll public enum FPVector3OperationFunction.OperationType Fields ADD = 0 SUBTRACT = 1"
  },
  "api/Quantum.FPVector3OperationFunction.html": {
    "href": "api/Quantum.FPVector3OperationFunction.html",
    "title": "Class FPVector3OperationFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class FPVector3OperationFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FPVector3OperationFunction : StateFunctionFPVector3 Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FPVector3> StateFunctionFPVector3 FPVector3OperationFunction Inherited Members HNSFStateFunction<FPVector3>.Label HNSFStateFunction<FPVector3>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields normalize public bool normalize Field Value bool operation public FPVector3OperationFunction.OperationType operation Field Value FPVector3OperationFunction.OperationType valueA public HNSFParamFPVector3 valueA Field Value HNSFParamFPVector3 valueB public HNSFParamFPVector3 valueB Field Value HNSFParamFPVector3 Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FPVector3 Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FPVector3"
  },
  "api/Quantum.FPVector3ToFPFunction.FPVector3ValueType.html": {
    "href": "api/Quantum.FPVector3ToFPFunction.FPVector3ValueType.html",
    "title": "Enum FPVector3ToFPFunction.FPVector3ValueType | Rwby Vytal Versus Documentation",
    "keywords": "Enum FPVector3ToFPFunction.FPVector3ValueType Namespace Quantum Assembly Quantum.Simulation.dll public enum FPVector3ToFPFunction.FPVector3ValueType Fields X = 0 XPlusZ = 3 Y = 1 Z = 2"
  },
  "api/Quantum.FPVector3ToFPFunction.html": {
    "href": "api/Quantum.FPVector3ToFPFunction.html",
    "title": "Class FPVector3ToFPFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class FPVector3ToFPFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FPVector3ToFPFunction : StateFunctionFP Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FP> StateFunctionFP FPVector3ToFPFunction Inherited Members HNSFStateFunction<FP>.Label HNSFStateFunction<FP>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields param public HNSFParamFPVector3 param Field Value HNSFParamFPVector3 valueWanted public FPVector3ToFPFunction.FPVector3ValueType valueWanted Field Value FPVector3ToFPFunction.FPVector3ValueType Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FP Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FP"
  },
  "api/Quantum.FPVector3TransformDirectionFunction.html": {
    "href": "api/Quantum.FPVector3TransformDirectionFunction.html",
    "title": "Class FPVector3TransformDirectionFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class FPVector3TransformDirectionFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FPVector3TransformDirectionFunction : StateFunctionFPVector3 Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FPVector3> StateFunctionFPVector3 FPVector3TransformDirectionFunction Inherited Members HNSFStateFunction<FPVector3>.Label HNSFStateFunction<FPVector3>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields directionVector public HNSFParamFPVector3 directionVector Field Value HNSFParamFPVector3 localVector public HNSFParamFPVector3 localVector Field Value HNSFParamFPVector3 Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FPVector3 Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FPVector3"
  },
  "api/Quantum.FacingTargetDecision.html": {
    "href": "api/Quantum.FacingTargetDecision.html",
    "title": "Class FacingTargetDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class FacingTargetDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FacingTargetDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision FacingTargetDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields maxAngle public FP maxAngle Field Value FP Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.FallSpeedDecision.CheckType.html": {
    "href": "api/Quantum.FallSpeedDecision.CheckType.html",
    "title": "Enum FallSpeedDecision.CheckType | Rwby Vytal Versus Documentation",
    "keywords": "Enum FallSpeedDecision.CheckType Namespace Quantum Assembly Quantum.Simulation.dll public enum FallSpeedDecision.CheckType Fields GREATER_THAN_VALUE = 3 IS_NEGATIVE = 0 IS_POSITIVE = 1 IS_ZERO_EPSILON = 2 LESS_THAN_VALUE = 4"
  },
  "api/Quantum.FallSpeedDecision.html": {
    "href": "api/Quantum.FallSpeedDecision.html",
    "title": "Class FallSpeedDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class FallSpeedDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FallSpeedDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision FallSpeedDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkType public FallSpeedDecision.CheckType checkType Field Value FallSpeedDecision.CheckType epsilon public FP epsilon Field Value FP Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.Fighter.html": {
    "href": "api/Quantum.Fighter.html",
    "title": "Struct Fighter | Rwby Vytal Versus Documentation",
    "keywords": "Struct Fighter Namespace Quantum Assembly Quantum.Simulation.dll public struct Fighter : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 72 Field Value int blockstun public int blockstun Field Value int bonusProration public FP bonusProration Field Value FP comboCounter public int comboCounter Field Value int comboDecay public int comboDecay Field Value int comboDuration public int comboDuration Field Value int comboStartFrame public int comboStartFrame Field Value int currentAttackString public QListPtr<AssetRef<HNSFState>> currentAttackString Field Value QListPtr<AssetRef<HNSFState>> currentProration public FP currentProration Field Value FP hitstop public int hitstop Field Value int hitstun public int hitstun Field Value int onDeathAction public AssetRef<HNSFStateAction> onDeathAction Field Value AssetRef<HNSFStateAction> onDespawnAction public AssetRef<HNSFStateAction> onDespawnAction Field Value AssetRef<HNSFStateAction> realComboCounter public int realComboCounter Field Value int Methods ApplyBonusProration(FP) public void ApplyBonusProration(FP bonus) Parameters bonus FP ClearAttackString(Frame) public void ClearAttackString(Frame f) Parameters f Frame ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int GetProratedDamage(FP) public FP GetProratedDamage(FP damage) Parameters damage FP Returns FP IsAttackInString(Frame, AssetRef<HNSFState>, int) public bool IsAttackInString(Frame f, AssetRef<HNSFState> attackState, int maxTimesInString = 1) Parameters f Frame attackState AssetRef<HNSFState> maxTimesInString int Returns bool IsAttackLastInStringXTimes(Frame, AssetRef<HNSFState>, int) public bool IsAttackLastInStringXTimes(Frame f, AssetRef<HNSFState> attackState, int checkLength = 1) Parameters f Frame attackState AssetRef<HNSFState> checkLength int Returns bool OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* PrintAttackString(Frame) public void PrintAttackString(Frame f) Parameters f Frame RegisterAttackToString(Frame, AssetRef<HNSFState>) public void RegisterAttackToString(Frame f, AssetRef<HNSFState> attackState) Parameters f Frame attackState AssetRef<HNSFState> Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.FighterArticle.html": {
    "href": "api/Quantum.FighterArticle.html",
    "title": "Struct FighterArticle | Rwby Vytal Versus Documentation",
    "keywords": "Struct FighterArticle Namespace Quantum Assembly Quantum.Simulation.dll public struct FighterArticle : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 8 Field Value int owner public EntityRef owner Field Value EntityRef Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.FighterArticles.html": {
    "href": "api/Quantum.FighterArticles.html",
    "title": "Struct FighterArticles | Rwby Vytal Versus Documentation",
    "keywords": "Struct FighterArticles Namespace Quantum Assembly Quantum.Simulation.dll public struct FighterArticles : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int articleRefs public QListPtr<EntityRef> articleRefs Field Value QListPtr<EntityRef> Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* RemoveArticle(EntityRef) public void RemoveArticle(EntityRef article) Parameters article EntityRef Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer SpawnProjectile(Frame, EntityRef, AssetRef<EntityPrototype>) public EntityRef SpawnProjectile(Frame f, EntityRef owner, AssetRef<EntityPrototype> projectilePrototype) Parameters f Frame owner EntityRef projectilePrototype AssetRef<EntityPrototype> Returns EntityRef TryGetLastProjectile(Frame, int, out EntityRef) public bool TryGetLastProjectile(Frame f, int offset, out EntityRef projectileRef) Parameters f Frame offset int projectileRef EntityRef Returns bool"
  },
  "api/Quantum.FighterEnvironmentProcessor.html": {
    "href": "api/Quantum.FighterEnvironmentProcessor.html",
    "title": "Class FighterEnvironmentProcessor | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterEnvironmentProcessor Namespace Quantum Assembly Quantum.Simulation.dll Movement implementation for default environment. public class FighterEnvironmentProcessor : KCCProcessor, IBeforeMove, IAfterMoveStep Inheritance object Object ScriptableObject AssetObject KCCProcessor FighterEnvironmentProcessor Implements IBeforeMove IAfterMoveStep Inherited Members KCCProcessor.OnEnter(KCCContext, KCCProcessorInfo, KCCOverlapHit) KCCProcessor.OnExit(KCCContext, KCCProcessorInfo) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields DynamicAirFriction [KCCHeader(\"Air\")] [KCCTooltip(\"Dynamic velocity is decelerated by actual dynamic speed multiplied by this. The faster KCC moves, the more deceleration is applied.\")] public FP DynamicAirFriction Field Value FP DynamicGroundFriction [KCCTooltip(\"Dynamic velocity is decelerated by actual dynamic speed multiplied by this. The faster KCC moves, the more deceleration is applied.\")] public FP DynamicGroundFriction Field Value FP ExternalCollisionStrength [Header(\"Other\")] public FP ExternalCollisionStrength Field Value FP JumpMultiplier [KCCTooltip(\"Custom jump multiplier.\")] public FP JumpMultiplier Field Value FP KinematicMaxSpeed [FormerlySerializedAs(\"KinematicSpeed\")] [KCCHeader(\"General\")] [KCCTooltip(\"Maximum allowed speed the KCC can move with player input.\")] public FP KinematicMaxSpeed Field Value FP MaxGroundAngle [KCCHeader(\"Ground\")] [KCCTooltip(\"Maximum angle of walkable ground.\")] public FP MaxGroundAngle Field Value FP Methods AfterMoveStep(KCCContext, KCCProcessorInfo, KCCOverlapInfo) This callback is invoked after each KCC move step - this happens if the KCC moves too fast and the continuous collision detection (CCD) algorithm splits translation vector into multiple smaller steps. During CCD movement the KCCData.DeltaTime is scaled proportionally to size of the step. Not called if KCC.IsActive is set to false. public void AfterMoveStep(KCCContext context, KCCProcessorInfo processorInfo, KCCOverlapInfo overlapInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing the processor. overlapInfo KCCOverlapInfo Reference to all physics overlap hits in current move step and other metadata. BeforeMove(KCCContext, KCCProcessorInfo) This callback is invoked before KCC movement - on the beginning of KCC.Update(). Not called if KCC.IsActive is set to false. public void BeforeMove(KCCContext context, KCCProcessorInfo processorInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing this processor. ProcessAfterMoveStep(KCCContext, KCCProcessorInfo, KCCOverlapInfo) This callback is invoked after each KCC move step - this happens if the KCC moves too fast and the continuous collision detection (CCD) algorithm splits translation vector into multiple smaller steps. During CCD movement the KCCData.DeltaTime is scaled proportionally to size of the step. Not called if KCC.IsActive is set to false. public static void ProcessAfterMoveStep(KCCContext context, KCCProcessorInfo processorInfo, KCCOverlapInfo overlapInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing this processor. overlapInfo KCCOverlapInfo Reference to all physics overlap hits in current move step and other metadata. SetDynamicVelocity(KCCContext, ref KCCData, FP, FP, FP, FP) public static void SetDynamicVelocity(KCCContext context, ref KCCData data, FP jumpMultiplier, FP groundFriction, FP airFriction, FP externalCollisionStrength) Parameters context KCCContext data KCCData jumpMultiplier FP groundFriction FP airFriction FP externalCollisionStrength FP SetKinematicVelocity(KCCContext, ref KCCData, FP) public static void SetKinematicVelocity(KCCContext context, ref KCCData data, FP speed) Parameters context KCCContext data KCCData speed FP"
  },
  "api/Quantum.FighterSpecialIntroDefinition.html": {
    "href": "api/Quantum.FighterSpecialIntroDefinition.html",
    "title": "Class FighterSpecialIntroDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterSpecialIntroDefinition Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FighterSpecialIntroDefinition Inheritance object FighterSpecialIntroDefinition Fields charaGuid public AssetGuid charaGuid Field Value AssetGuid cutsceneEndEuler public FPVector3[] cutsceneEndEuler Field Value FPVector3[] cutsceneEndPositions public FPVector2[] cutsceneEndPositions Field Value FPVector2[] cutsceneEndStates public Tag[] cutsceneEndStates Field Value Tag[] cutsceneStartEuler public FPVector3[] cutsceneStartEuler Field Value FPVector3[] cutsceneStartPositions public FPVector2[] cutsceneStartPositions Field Value FPVector2[] cutsceneStartStates public Tag[] cutsceneStartStates Field Value Tag[] cutsceneTag public Tag cutsceneTag Field Value Tag modifyEulerOnCutsceneEnd public bool modifyEulerOnCutsceneEnd Field Value bool modifyPositionsOnCutsceneEnd public bool modifyPositionsOnCutsceneEnd Field Value bool"
  },
  "api/Quantum.FindEnemyAction.html": {
    "href": "api/Quantum.FindEnemyAction.html",
    "title": "Class FindEnemyAction | Rwby Vytal Versus Documentation",
    "keywords": "Class FindEnemyAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FindEnemyAction : AIAction Inheritance object Object ScriptableObject AssetObject AIActionBase AIAction FindEnemyAction Inherited Members AIAction.Execute(FrameThreadSafe, EntityRef, ref AIContext) AIActionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkRadius public FP checkRadius Field Value FP emptySlot public bool emptySlot Field Value bool layerMask public LayerMask layerMask Field Value LayerMask runEvery public int runEvery Field Value int targetBlackboardKey public AIBlackboardValueKey targetBlackboardKey Field Value AIBlackboardValueKey Methods Execute(Frame, EntityRef, ref AIContext) public override void Execute(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext"
  },
  "api/Quantum.FindEnemyLeaf.html": {
    "href": "api/Quantum.FindEnemyLeaf.html",
    "title": "Class FindEnemyLeaf | Rwby Vytal Versus Documentation",
    "keywords": "Class FindEnemyLeaf Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FindEnemyLeaf : BTLeaf Inheritance object Object ScriptableObject AssetObject BTNode BTLeaf FindEnemyLeaf Inherited Members BTLeaf.Services BTLeaf._serviceInstances BTLeaf.OnStartedRunning(BTParams, ref AIContext) BTLeaf.OnEnter(BTParams, ref AIContext) BTLeaf.OnExit(BTParams, ref AIContext) BTLeaf.Loaded(IResourceManager, Native.Allocator) BTLeaf.ServiceInstances BTLeaf.NodeType BTNode.Label BTNode.Id BTNode.OnAbort(BTParams, ref AIContext, BTAbort) BTNode.OnReset(BTParams, ref AIContext) BTNode.CheckConditions(BTParams, ref AIContext) BTNode.OnDynamicRun(BTParams, ref AIContext) BTNode.ChildCompletedRunning(BTParams, BTStatus) BTNode.GetStatus(FrameBase, BTAgent*) BTNode.SetStatus(FrameBase, BTStatus, BTAgent*) BTNode.GetStatus(FrameThreadSafe, BTAgent*) BTNode.SetStatus(FrameThreadSafe, BTStatus, BTAgent*) BTNode.EvaluateAbortNode(BTParams) BTNode.Execute(BTParams, ref AIContext, bool) AssetObject.Identifier AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkRadius public FP checkRadius Field Value FP emptySlot public bool emptySlot Field Value bool layerMask public LayerMask layerMask Field Value LayerMask targetBlackboardKey public AIBlackboardValueKey targetBlackboardKey Field Value AIBlackboardValueKey Methods Init(BTParams, ref AIContext) public override void Init(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext OnUpdate(BTParams, ref AIContext) protected override BTStatus OnUpdate(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext Returns BTStatus"
  },
  "api/Quantum.FindWallAroundAction.html": {
    "href": "api/Quantum.FindWallAroundAction.html",
    "title": "Class FindWallAroundAction | Rwby Vytal Versus Documentation",
    "keywords": "Class FindWallAroundAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class FindWallAroundAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction FindWallAroundAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields angleOffset public FP angleOffset Field Value FP clearWallInfo public bool clearWallInfo Field Value bool maxAngle public FP maxAngle Field Value FP offset public FPVector3 offset Field Value FPVector3 raycastDistance public FP raycastDistance Field Value FP raycastMask public LayerMask raycastMask Field Value LayerMask raycasts public int raycasts Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.FlagsExtensions.html": {
    "href": "api/Quantum.FlagsExtensions.html",
    "title": "Class FlagsExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class FlagsExtensions Namespace Quantum Assembly Quantum.Simulation.dll public static class FlagsExtensions Inheritance object FlagsExtensions Methods ClearFlag(InputButtons, InputButtons) public static InputButtons ClearFlag(this InputButtons self, InputButtons flag) Parameters self InputButtons flag InputButtons Returns InputButtons IsFlagSet(InputButtons, InputButtons) public static bool IsFlagSet(this InputButtons self, InputButtons flag) Parameters self InputButtons flag InputButtons Returns bool SetFlag(InputButtons, InputButtons) public static InputButtons SetFlag(this InputButtons self, InputButtons flag) Parameters self InputButtons flag InputButtons Returns InputButtons"
  },
  "api/Quantum.ForceUngroundAction.html": {
    "href": "api/Quantum.ForceUngroundAction.html",
    "title": "Class ForceUngroundAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ForceUngroundAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ForceUngroundAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ForceUngroundAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.Frame.FrameEvents.html": {
    "href": "api/Quantum.Frame.FrameEvents.html",
    "title": "Struct Frame.FrameEvents | Rwby Vytal Versus Documentation",
    "keywords": "Struct Frame.FrameEvents Namespace Quantum Assembly Quantum.Simulation.dll public struct Frame.FrameEvents Constructors FrameEvents(Frame) public FrameEvents(Frame f) Parameters f Frame Properties EVENT_TYPE_COUNT public static int EVENT_TYPE_COUNT { get; } Property Value int EventTypeCount public static int EventTypeCount { get; } Property Value int Methods CauseHitstopShakeEvent(EntityRef, int) public EventCauseHitstopShakeEvent CauseHitstopShakeEvent(EntityRef fighterEntity, int shakeFrames) Parameters fighterEntity EntityRef shakeFrames int Returns EventCauseHitstopShakeEvent CharaLinkAddedEvent(EntityRef, AssetRef<CharaDefinitionAsset>) public EventCharaLinkAddedEvent CharaLinkAddedEvent(EntityRef entity, AssetRef<CharaDefinitionAsset> charaDefinitionReference) Parameters entity EntityRef charaDefinitionReference AssetRef<CharaDefinitionAsset> Returns EventCharaLinkAddedEvent CharaLinkRemovedEvent(EntityRef, AssetRef<CharaDefinitionAsset>) public EventCharaLinkRemovedEvent CharaLinkRemovedEvent(EntityRef entity, AssetRef<CharaDefinitionAsset> charaDefinitionReference) Parameters entity EntityRef charaDefinitionReference AssetRef<CharaDefinitionAsset> Returns EventCharaLinkRemovedEvent EntityHit(EntityRef, EntityRef) public EventEntityHit EntityHit(EntityRef entity, EntityRef hitByEntity) Parameters entity EntityRef hitByEntity EntityRef Returns EventEntityHit FighterDied(EntityRef, EntityRef, FPVector3) public EventFighterDied FighterDied(EntityRef WhoDied, EntityRef WhoKilled, FPVector3 Position) Parameters WhoDied EntityRef WhoKilled EntityRef Position FPVector3 Returns EventFighterDied GameResult(GameResult) public EventGameResult GameResult(GameResult gameResult) Parameters gameResult GameResult Returns EventGameResult GamemodeStateChanged(GenericGamemodeStates, GenericGamemodeStates) public EventGamemodeStateChanged GamemodeStateChanged(GenericGamemodeStates NewState, GenericGamemodeStates OldState) Parameters NewState GenericGamemodeStates OldState GenericGamemodeStates Returns EventGamemodeStateChanged GamemodeTeamScoreChanged(int, int, int) public EventGamemodeTeamScoreChanged GamemodeTeamScoreChanged(int team, int oldScore, int newScore) Parameters team int oldScore int newScore int Returns EventGamemodeTeamScoreChanged GetEventType(int) public static Type GetEventType(int eventID) Parameters eventID int Returns Type GetParentEventID(int) public static int GetParentEventID(int eventID) Parameters eventID int Returns int HealthDecreased(EntityRef, int, int) public EventHealthDecreased HealthDecreased(EntityRef entity, int oldHealth, int newHealth) Parameters entity EntityRef oldHealth int newHealth int Returns EventHealthDecreased HealthIncreased(EntityRef, int, int) public EventHealthIncreased HealthIncreased(EntityRef entity, int oldHealth, int newHealth) Parameters entity EntityRef oldHealth int newHealth int Returns EventHealthIncreased PlayCutsceneEvent(EntityRef, AssetRef<Tag>, QBoolean) public EventPlayCutsceneEvent PlayCutsceneEvent(EntityRef cutsceneSource, AssetRef<Tag> cutsceneTag, QBoolean onlyPlayOnPlayerLocalMachine) Parameters cutsceneSource EntityRef cutsceneTag AssetRef<Tag> onlyPlayOnPlayerLocalMachine QBoolean Returns EventPlayCutsceneEvent PlayEffectEvent(AssetRef<VisualEffectEntry>, EntityRef, QBoolean, QBoolean, FPVector3, QBoolean, FPVector3) public EventPlayEffectEvent PlayEffectEvent(AssetRef<VisualEffectEntry> visualEffectRef, EntityRef parent, QBoolean parented, QBoolean positionAsOffset, FPVector3 position, QBoolean rotationAsOffset, FPVector3 rotation) Parameters visualEffectRef AssetRef<VisualEffectEntry> parent EntityRef parented QBoolean positionAsOffset QBoolean position FPVector3 rotationAsOffset QBoolean rotation FPVector3 Returns EventPlayEffectEvent PlaySoundEvent(EntityRef, EntityRef, AssetRef<SoundEntry>, FP, FP, FP, QBoolean, QBoolean, AssetRef<AudioSourceConfig>, FPVector3, AssetRef<Tag>) public EventPlaySoundEvent PlaySoundEvent(EntityRef owner, EntityRef parentedTo, AssetRef<SoundEntry> sound, FP volume, FP minPitch, FP maxPitch, QBoolean cancelOthersSoundEntry, QBoolean cancelOthersTag, AssetRef<AudioSourceConfig> audioSourceConfig, FPVector3 position, AssetRef<Tag> tag) Parameters owner EntityRef parentedTo EntityRef sound AssetRef<SoundEntry> volume FP minPitch FP maxPitch FP cancelOthersSoundEntry QBoolean cancelOthersTag QBoolean audioSourceConfig AssetRef<AudioSourceConfig> position FPVector3 tag AssetRef<Tag> Returns EventPlaySoundEvent ResetEntityAfterCutsceneEvent(EntityRef) public EventResetEntityAfterCutsceneEvent ResetEntityAfterCutsceneEvent(EntityRef playingEntity) Parameters playingEntity EntityRef Returns EventResetEntityAfterCutsceneEvent StopCutsceneEvent(EntityRef, AssetRef<Tag>) public EventStopCutsceneEvent StopCutsceneEvent(EntityRef cutsceneSource, AssetRef<Tag> cutsceneTag) Parameters cutsceneSource EntityRef cutsceneTag AssetRef<Tag> Returns EventStopCutsceneEvent StopEffectEvent(EntityRef, int, QBoolean) public EventStopEffectEvent StopEffectEvent(EntityRef parent, int identifier, QBoolean destroyAllParticles) Parameters parent EntityRef identifier int destroyAllParticles QBoolean Returns EventStopEffectEvent TeleportCameraEvent(EntityRef) public EventTeleportCameraEvent TeleportCameraEvent(EntityRef callerEntity) Parameters callerEntity EntityRef Returns EventTeleportCameraEvent"
  },
  "api/Quantum.Frame.FrameSignals.html": {
    "href": "api/Quantum.Frame.FrameSignals.html",
    "title": "Struct Frame.FrameSignals | Rwby Vytal Versus Documentation",
    "keywords": "Struct Frame.FrameSignals Namespace Quantum Assembly Quantum.Simulation.dll The Quantum signal API consist of core and user-defined code-generated signals. public struct Frame.FrameSignals Constructors FrameSignals(Frame) Constructor. Only used internally. public FrameSignals(Frame f) Parameters f Frame The frame reference. Methods AuraDecreased(EntityRef, int, int) public void AuraDecreased(EntityRef entity, int oldAura, int newAura) Parameters entity EntityRef oldAura int newAura int AuraIncreased(EntityRef, int, int) public void AuraIncreased(EntityRef entity, int oldAura, int newAura) Parameters entity EntityRef oldAura int newAura int DespawnFighter(EntityRef) public void DespawnFighter(EntityRef entity) Parameters entity EntityRef GamemodeStateChanged(GenericGamemodeStates, GenericGamemodeStates) public void GamemodeStateChanged(GenericGamemodeStates newState, GenericGamemodeStates oldState) Parameters newState GenericGamemodeStates oldState GenericGamemodeStates GamemodeTeamScoreChanged(int, int, int) public void GamemodeTeamScoreChanged(int team, int oldValue, int newValue) Parameters team int oldValue int newValue int HealthDecreased(EntityRef, int, int) public void HealthDecreased(EntityRef entity, int oldHealth, int newHealth) Parameters entity EntityRef oldHealth int newHealth int HealthIncreased(EntityRef, int, int) public void HealthIncreased(EntityRef entity, int oldHealth, int newHealth) Parameters entity EntityRef oldHealth int newHealth int OnCollision2D(CollisionInfo2D) Called once per frame while two non-trigger 2D colliders are touching. public void OnCollision2D(CollisionInfo2D info) Parameters info CollisionInfo2D The Quantum.CollisionInfo2D with data about the collision. OnCollision3D(CollisionInfo3D) Called once per frame while two non-trigger 3D colliders are touching. public void OnCollision3D(CollisionInfo3D info) Parameters info CollisionInfo3D The Quantum.CollisionInfo3D with data about the collision. OnCollisionEnter2D(CollisionInfo2D) Called once two non-trigger 2D colliders start touching. public void OnCollisionEnter2D(CollisionInfo2D info) Parameters info CollisionInfo2D The Quantum.CollisionInfo2D with data about the collision. OnCollisionEnter3D(CollisionInfo3D) Called once two non-trigger 3D colliders start touching. public void OnCollisionEnter3D(CollisionInfo3D info) Parameters info CollisionInfo3D The Quantum.CollisionInfo3D with data about the collision. OnCollisionExit2D(ExitInfo2D) Called once two non-trigger 2D colliders stop touching. public void OnCollisionExit2D(ExitInfo2D info) Parameters info ExitInfo2D The Quantum.ExitInfo2D with the entities that were touching. OnCollisionExit3D(ExitInfo3D) Called once two non-trigger 3D colliders stop touching. public void OnCollisionExit3D(ExitInfo3D info) Parameters info ExitInfo3D The Quantum.ExitInfo3D with the entities that were touching. OnEntityPrototypeMaterialized(EntityRef, EntityPrototypeRef) This signal is called after an entity prototype has been materialized. During Load Map: the signal is invoked for all Entity and Entity Prototype pairs after all scene prototypes have been materialized. Created with Frame.Create(): the signal is invoked immediately after the prototype has been materialized. /// The frame reference. public void OnEntityPrototypeMaterialized(EntityRef entity, EntityPrototypeRef prototypeRef) Parameters entity EntityRef The entity that was created. prototypeRef EntityPrototypeRef The entity prototype that was materialized. OnMapChanged(AssetRef<Map>) This signal is called after the map has been changed by assigning a new map to Map. public void OnMapChanged(AssetRef<Map> previousMap) Parameters previousMap AssetRef<Map> The previous map OnNavMeshMoveAgent(EntityRef, FPVector2) Signal is called when the agent should move. The desired direction is influence by avoidance. The agent velocity should be set in the callback. Requires enabled Quantum.NavMeshAgentConfig.MovementType to be set to Callback. Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. public void OnNavMeshMoveAgent(EntityRef entity, FPVector2 desiredDirection) Parameters entity EntityRef The entity the navmesh agent component belongs to. desiredDirection FPVector2 The normalized direction that the internal steering and avoidance thinks the agent movement vector should be. OnNavMeshSearchFailed(EntityRef, ref bool) Signal is called when the agent could not find a path in the agent update after using Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase, Photon.Deterministic.FPVector3, Quantum.NavMesh) Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. public void OnNavMeshSearchFailed(EntityRef entity, ref bool resetAgent) Parameters entity EntityRef The entity the navmesh agent component belongs to resetAgent bool Set this to true if the agent should reset its internal state (default is true). OnNavMeshWaypointReached(EntityRef, FPVector3, WaypointFlag, ref bool) Signal is called when an agent reaches a waypoint. Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. public void OnNavMeshWaypointReached(EntityRef entity, FPVector3 waypoint, Navigation.WaypointFlag waypointFlags, ref bool resetAgent) Parameters entity EntityRef The entity the navmesh agent component belongs to waypoint FPVector3 The current waypoint position waypointFlags Navigation.WaypointFlag The current waypoint flags resetAgent bool If set to true the NavMeshPathfinder component will be cleared and stopped. Set to false if NavMeshPathfinder.SetTarget() was called inside the callback. OnPlayerAdded(PlayerRef, bool) This signal is called when a player was successfully added to the simulation and the server accepted the RuntimePlayer data. public void OnPlayerAdded(PlayerRef player, bool firstTime) Parameters player PlayerRef The player that was added. firstTime bool The first time that this player ref was assigned to a player at all. When firstTime is false the player ref is being reused by a different player. See documentation. OnPlayerConnected(PlayerRef) The signal is called when a player has successfully joined the simulation. It's originating from the PlayerConnectedSystem. The connected status is based on the Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef). The signal is always called from a verified frame. public void OnPlayerConnected(PlayerRef player) Parameters player PlayerRef The player that connected. OnPlayerDisconnected(PlayerRef) The signal is called when a player has been removed and disconnected from the simulation. It's originating from the PlayerConnectedSystem. The connected status is based on the Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef). The signal is always called from a verified frame. public void OnPlayerDisconnected(PlayerRef player) Parameters player PlayerRef The disconnected player. OnPlayerRemoved(PlayerRef) This signal is called when a player was removed from the simulation after the InputFlags are set to Photon.Deterministic.DeterministicInputFlags.PlayerNotPresent. public void OnPlayerRemoved(PlayerRef player) Parameters player PlayerRef The player that was removed. OnTrigger2D(TriggerInfo2D) Called once per frame while a non-trigger and a trigger 2D colliders are touching. public void OnTrigger2D(TriggerInfo2D info) Parameters info TriggerInfo2D The Quantum.TriggerInfo2D with data about the trigger collision. OnTrigger3D(TriggerInfo3D) Called once per frame while a non-trigger and a trigger 3D colliders are touching. public void OnTrigger3D(TriggerInfo3D info) Parameters info TriggerInfo3D The Quantum.TriggerInfo3D with data about the trigger collision. OnTriggerEnter2D(TriggerInfo2D) Called once a non-trigger and a trigger 2D colliders start touching. public void OnTriggerEnter2D(TriggerInfo2D info) Parameters info TriggerInfo2D The Quantum.TriggerInfo2D with data about the trigger collision. OnTriggerEnter3D(TriggerInfo3D) Called once a non-trigger and a trigger 3D colliders start touching. public void OnTriggerEnter3D(TriggerInfo3D info) Parameters info TriggerInfo3D The Quantum.TriggerInfo3D with data about the trigger collision. OnTriggerExit2D(ExitInfo2D) Called once a non-trigger and a trigger 2D colliders stop touching. public void OnTriggerExit2D(ExitInfo2D info) Parameters info ExitInfo2D The Quantum.ExitInfo2D with the entities that were touching. OnTriggerExit3D(ExitInfo3D) Called once a non-trigger and a trigger 3D colliders stop touching. public void OnTriggerExit3D(ExitInfo3D info) Parameters info ExitInfo3D The Quantum.ExitInfo3D with the entities that were touching."
  },
  "api/Quantum.Frame.html": {
    "href": "api/Quantum.Frame.html",
    "title": "Class Frame | Rwby Vytal Versus Documentation",
    "keywords": "Class Frame Namespace Quantum Assembly Quantum.Simulation.dll The user implementation of Quantum.Core.FrameBase that resides in the project quantum_state and has access to all user relevant classes. public class Frame : FrameBase Inheritance object DeterministicFrame FrameBase Frame Inherited Members FrameBase._ComponentSignalsOnAdded FrameBase._ComponentSignalsOnRemoved FrameBase._SignalOnEntityPrototypeMaterialized FrameBase._frameHeap FrameBase.Unsafe FrameBase.Physics2D FrameBase.Physics3D FrameBase.DefaultInitialCollectionCapacity FrameBase.Filter<T0>(ComponentSet, ComponentSet) FrameBase.Filter<T0, T1>(ComponentSet, ComponentSet) FrameBase.Filter<T0, T1, T2>(ComponentSet, ComponentSet) FrameBase.Filter<T0, T1, T2, T3>(ComponentSet, ComponentSet) FrameBase.Filter<T0, T1, T2, T3, T4>(ComponentSet, ComponentSet) FrameBase.Filter<T0, T1, T2, T3, T4, T5>(ComponentSet, ComponentSet) FrameBase.Filter<T0, T1, T2, T3, T4, T5, T6>(ComponentSet, ComponentSet) FrameBase.Filter<T0, T1, T2, T3, T4, T5, T6, T7>(ComponentSet, ComponentSet) FrameBase.IsPlayerVerifiedOrLocal(PlayerRef) FrameBase.GetMemoryStats() FrameBase.OnFrameSimulateBegin() FrameBase.OnFrameSimulateEnd() FrameBase.Culled(EntityRef) FrameBase.ComponentCount<T>(bool) FrameBase.ComponentCount(int, bool) FrameBase.Add<T>(EntityRef) FrameBase.Has(EntityRef, ComponentSet) FrameBase.AddAsset(AssetObject) FrameBase.ReplaceAsset(AssetGuid, AssetObject) FrameBase.LoadAsset(AssetGuid) FrameBase.DisposeAsset(AssetGuid) FrameBase.DisposeAsset(string, DatabaseType) FrameBase.FindAsset<T>(AssetGuid) FrameBase.FindAsset<T>(AssetRef) FrameBase.FindAsset<T>(AssetRef, out T) FrameBase.FindAsset<T>(AssetRef<T>) FrameBase.TryFindAsset<T>(AssetGuid, out T) FrameBase.TryFindAsset<T>(AssetRef, out T) FrameBase.TryFindAsset<T>(AssetRef<T>, out T) FrameBase.FindAsset<T>(string, DatabaseType) FrameBase.TryFindAsset<T>(string, out T, DatabaseType) FrameBase.FindPrototype(EntityPrototypeRef) FrameBase.FindPrototype(ComponentPrototypeRef) FrameBase.FindPrototype<T>(ComponentPrototypeRef) FrameBase.FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef) FrameBase.FindPrototype<TPrototypeRef, TPrototype>(TPrototypeRef, out TPrototype) FrameBase.ClearAllNavMeshRegions() FrameBase.GetAllEntityRefs(List<EntityRef>) FrameBase.ClearCulledState() FrameBase.Cull(EntityRef) FrameBase.IsCulled(EntityRef) FrameBase.SetCullable(EntityRef, bool) FrameBase.IsCullable(EntityRef) FrameBase.Exists(EntityRef) FrameBase.GetComponentIterator<T>() FrameBase.Add<T>(EntityRef, T) FrameBase.Add<T>(EntityRef, out T*) FrameBase.Add<T>(EntityRef, T, out T*) FrameBase.Add(EntityRef, int, void*) FrameBase.Add(EntityRef, int, out void*) FrameBase.Add(EntityRef, int, void*, out void*) FrameBase.AddOrGet<T>(EntityRef, out T*) FrameBase.AddOrGet(EntityRef, int, out void*) FrameBase.Set<T>(EntityRef, T) FrameBase.Set(EntityRef, int, void*) FrameBase.Get<T>(EntityRef) FrameBase.Has(EntityRef, int) FrameBase.Has<T>(EntityRef) FrameBase.TryGet<T>(EntityRef, out T) FrameBase.Remove<T>(EntityRef) FrameBase.Remove(EntityRef, Type) FrameBase.Remove(EntityRef, int) FrameBase.GetComponentSet(EntityRef) FrameBase.TryGetComponentSet(EntityRef, out ComponentSet) FrameBase.DestroyPending(EntityRef) FrameBase.Destroy(EntityRef) FrameBase.Create(AssetRef<EntityPrototype>) FrameBase.Create(EntityPrototype) FrameBase.Create(ComponentPrototypeSet[], Map) FrameBase.Set(EntityRef, AssetRef<EntityPrototype>) FrameBase.Set(EntityRef, EntityPrototype) FrameBase.Set(EntityRef, AssetRef<EntityPrototype>, out ComponentSet) FrameBase.Set(EntityRef, EntityPrototype, out ComponentSet) FrameBase.Create() FrameBase.GetSingleton<T>() FrameBase.GetSingletonEntityRef<T>() FrameBase.GetSingletonEntityRef(int) FrameBase.SetSingleton<T>(T, EntityRef) FrameBase.SetSingleton(int, void*, EntityRef) FrameBase.RemoveSingleton<T>() FrameBase.RemoveSingleton(Type) FrameBase.RemoveSingleton(int) FrameBase.TryGetSingletonEntityRef<T>(out EntityRef) FrameBase.TryGetSingletonEntityRef(int, out EntityRef) FrameBase.TryGetSingleton<T>(out T) FrameBase.GetOrAddSingleton<T>(EntityRef) FrameBase.FreeList<T>(QListPtr<T>) FrameBase.FreeList<T>(ref QListPtr<T>) FrameBase.TryFreeList<T>(QListPtr<T>) FrameBase.TryFreeList<T>(ref QListPtr<T>) FrameBase.ResolveList<T>(QListPtr<T>) FrameBase.TryResolveList<T>(QListPtr<T>, out QList<T>) FrameBase.AllocateList<T>(int) FrameBase.AllocateList<T>(QListPtr<T>, int) FrameBase.AllocateList<T>(out QListPtr<T>, int) FrameBase.TryAllocateList<T>(ref QListPtr<T>, int) FrameBase.FreeHashSet<T>(QHashSetPtr<T>) FrameBase.FreeHashSet<T>(ref QHashSetPtr<T>) FrameBase.TryFreeHashSet<T>(QHashSetPtr<T>) FrameBase.TryFreeHashSet<T>(ref QHashSetPtr<T>) FrameBase.ResolveHashSet<T>(QHashSetPtr<T>) FrameBase.TryResolveHashSet<T>(QHashSetPtr<T>, out QHashSet<T>) FrameBase.AllocateHashSet<T>(int) FrameBase.AllocateHashSet<T>(QHashSetPtr<T>, int) FrameBase.AllocateHashSet<T>(out QHashSetPtr<T>, int) FrameBase.TryAllocateHashSet<T>(ref QHashSetPtr<T>, int) FrameBase.FreeDictionary<K, V>(QDictionaryPtr<K, V>) FrameBase.FreeDictionary<K, V>(ref QDictionaryPtr<K, V>) FrameBase.TryFreeDictionary<K, V>(QDictionaryPtr<K, V>) FrameBase.TryFreeDictionary<K, V>(ref QDictionaryPtr<K, V>) FrameBase.ResolveDictionary<K, V>(QDictionaryPtr<K, V>) FrameBase.TryResolveDictionary<K, V>(QDictionaryPtr<K, V>, out QDictionary<K, V>) FrameBase.AllocateDictionary<K, V>(int) FrameBase.AllocateDictionary<K, V>(QDictionaryPtr<K, V>, int) FrameBase.AllocateDictionary<K, V>(out QDictionaryPtr<K, V>, int) FrameBase.TryAllocateDictionary<K, V>(ref QDictionaryPtr<K, V>, int) FrameBase.ResolveDictionary<K, V>(QDictionaryPtr<K, V>, EnumEqualityComparer.Tag) FrameBase.TryResolveDictionary<K, V>(QDictionaryPtr<K, V>, out QEnumDictionary<K, V>, EnumEqualityComparer.Tag) FrameBase.AllocateDictionary<K, V>(int, EnumEqualityComparer.Tag) FrameBase.AllocateDictionary<K, V>(QDictionaryPtr<K, V>, int, EnumEqualityComparer.Tag) FrameBase.AllocateDictionary<K, V>(out QDictionaryPtr<K, V>, int, EnumEqualityComparer.Tag) FrameBase.TryAllocateDictionary<K, V>(ref QDictionaryPtr<K, V>, int, EnumEqualityComparer.Tag) FrameBase.Print(FrameBase, FramePrinter, bool) FrameBase.Serialize(FrameBase, FrameSerializer) FrameBase.Copy(FrameBase, FrameBase) FrameBase.Initialize(FrameBase, FrameBase.EntitiesConfig, int) FrameBase.DynamicAssetDB FrameBase.Navigation FrameBase.Layers FrameBase.Heap Extension Methods BotSDKUtils.CalculateBotSDKGameTime(Frame) Constructors Frame(FrameContext, SystemBase[], SystemBase[], DeterministicSessionConfig, RuntimeConfig, SimulationConfig, FP) Create a new frame object. public Frame(FrameContext context, SystemBase[] systemsAll, SystemBase[] systemsRoots, DeterministicSessionConfig sessionConfig, RuntimeConfig runtimeConfig, SimulationConfig simulationConfig, FP deltaTime) Parameters context FrameContext systemsAll SystemBase[] systemsRoots SystemBase[] sessionConfig DeterministicSessionConfig runtimeConfig RuntimeConfig simulationConfig SimulationConfig deltaTime FP Fields DumpFlag_AssetDBCheckums If set the frame dump will print Asset DB checksums. public const int DumpFlag_AssetDBCheckums = 1024 Field Value int DumpFlag_ComponentChecksums If set the frame dump will print component checksums. public const int DumpFlag_ComponentChecksums = 512 Field Value int DumpFlag_NoDeterministicSessionConfig If set the Photon.Deterministic.DeterministicSessionConfig will not be printed in the frame dump during DumpFrame(int). public const int DumpFlag_NoDeterministicSessionConfig = 16 Field Value int DumpFlag_NoDynamicDB If set the Dynamic Asset DB will not be printed in the frame dump during DumpFrame(int). public const int DumpFlag_NoDynamicDB = 64 Field Value int DumpFlag_NoIsVerified Is set the frame dump will not print the IsVerified information. public const int DumpFlag_NoIsVerified = 2048 Field Value int DumpFlag_NoRuntimeConfig If set the RuntimeConfig will not be printed in the frame dump during DumpFrame(int). public const int DumpFlag_NoRuntimeConfig = 8 Field Value int DumpFlag_NoRuntimePlayers If set the RuntimePlayers will not be printed in the frame dump during DumpFrame(int). public const int DumpFlag_NoRuntimePlayers = 32 Field Value int DumpFlag_NoSimulationConfig If set the SimulationConfig will not be printed in the frame dump during DumpFrame(int). public const int DumpFlag_NoSimulationConfig = 2 Field Value int DumpFlag_PrintRawValues If set the frame dump will print more raw values like pointers. public const int DumpFlag_PrintRawValues = 256 Field Value int DumpFlag_ReadableDynamicDB If set the Dynamic Asset DB will be dumped in readable form during DumpFrame(int). public const int DumpFlag_ReadableDynamicDB = 128 Field Value int Events Access the Quantum event API. Events are a fine-grained solution to communicate from the simulation to the view. Events should never be used to modify/update part of the game state. Custom events are defined in the DSL. public Frame.FrameEvents Events Field Value Frame.FrameEvents Signals Access the Quantum signal API. Signals are function signatures used as a decoupled inter-system communication API similar to a publisher/subscriber API or observer pattern. Custom signals are defined in the DSL. public Frame.FrameSignals Signals Field Value Frame.FrameSignals Properties CommitCommandsMode Returns the mode that commands are committed to the simulation. public override CommitCommandsModes CommitCommandsMode { get; } Property Value CommitCommandsModes Context The frame user context public FrameContextUser Context { get; } Property Value FrameContextUser DeltaTime Delta time in seconds. Can be set during run-time. public override FP DeltaTime { get; set; } Property Value FP FrameMetaData Returns the frame meta data. public override FrameMetaData* FrameMetaData { get; } Property Value FrameMetaData* Global Access the global read and write struct with generated variables by the Quantum DSL compiler. Globals can be declared in any .qtn file by using the global scope. Like all things DSL-defined, global variables are part of the state and are fully compatible with the predict-rollback system. An alternative to global variables are the Singleton Components. global { FPVector3 Foo; } public _globals_* Global { get; } Property Value _globals_* Map Retrieves the Quantum map asset. Can be set during run-time. If assigned value is different than the current one, signal ISignalOnMapChanged is raised. public override sealed Map Map { get; set; } Property Value Map MapAssetRef Get or set the map asset reference. Can be set during run-time. If assigned value is different than the current one, signal ISignalOnMapChanged is raised. public AssetRef<Map> MapAssetRef { get; set; } Property Value AssetRef<Map> NavMeshRegionMask Returns the global navmesh region mask that controls toggling on/off regions. public override NavMeshRegionMask* NavMeshRegionMask { get; } Property Value NavMeshRegionMask* PhysicsSceneSettings Globally access the physics settings which are taken from the SimulationConfig during the Frame constructor. public override sealed PhysicsSceneSettings* PhysicsSceneSettings { get; } Property Value PhysicsSceneSettings* PlayerConnectedCount Returns the number of players that are currently connected, requires the PlayerConnectedSystem. public int PlayerConnectedCount { get; } Property Value int PlayerCount Returns the max player count that the simulation was started with Photon.Deterministic.DeterministicSessionConfig.PlayerCount. public int PlayerCount { get; } Property Value int RNG The randomization session started with the seed from the RuntimeConfig used to start the simulation with. public RNGSession* RNG { get; } Property Value RNGSession* RuntimeConfig The deserialized RuntimeConfig used for this session. public RuntimeConfig RuntimeConfig { get; } Property Value RuntimeConfig SessionConfig The Photon.Deterministic.DeterministicSessionConfig used for this session. public DeterministicSessionConfig SessionConfig { get; } Property Value DeterministicSessionConfig SimulationConfig The SimulationConfig used for this session. public SimulationConfig SimulationConfig { get; } Property Value SimulationConfig SystemsAll All systems running in the session. public SystemBase[] SystemsAll { get; } Property Value SystemBase[] UpdateRate See Photon.Deterministic.DeterministicSession.SimulationRate. This getter acquires the value from the SessionConfig though. public override int UpdateRate { get; } Property Value int _physicsState2D Returns the physics 2D engine state. protected override PhysicsEngineState* _physicsState2D { get; } Property Value PhysicsEngineState* _physicsState3D Returns the physics 3d engine state. protected override PhysicsEngineState* _physicsState3D { get; } Property Value PhysicsEngineState* Methods ActorIdToAllPlayers(int) Returns all players with a certain ActorId (Photon client id). public PlayerRef[] ActorIdToAllPlayers(int actorId) Parameters actorId int Actor id Returns PlayerRef[] Array of player references ActorIdToFirstPlayer(int) Returns the first player that is using a certain ActorId (Photon client id). public PlayerRef? ActorIdToFirstPlayer(int actorId) Parameters actorId int Actor id Returns PlayerRef? Player reference or null if actor id was not found BuildSignalsArrayOnComponentAdded<T>() public void BuildSignalsArrayOnComponentAdded<T>() where T : unmanaged, IComponent Type Parameters T BuildSignalsArrayOnComponentRemoved<T>() public void BuildSignalsArrayOnComponentRemoved<T>() where T : unmanaged, IComponent Type Parameters T CalculateChecksum() Calculates a checksum for the current game state. If the game is not started with DisableSharedChecksumSerializer flag, this method is not thread-safe, i.e. calling it from multiple threads for frames from the same simulation is going to break. public override sealed ulong CalculateChecksum() Returns ulong CalculateChecksum(bool) Calculates a checksum for the current game state. public ulong CalculateChecksum(bool useSharedSerializer) Parameters useSharedSerializer bool True - use shared checksum serializer to avoid allocs (not thread-safe). Returns ulong Copy(DeterministicFrame) Copies the complete frame memory. protected override sealed void Copy(DeterministicFrame frame) Parameters frame DeterministicFrame Input frame object Deserialize(byte[]) Load all frame data from the serialized frame. public override void Deserialize(byte[] data) Parameters data byte[] Serialized frame. DumpFrame(int) Dump the frame in human readable form into a string. public override sealed string DumpFrame(int dumpFlags = 0) Parameters dumpFlags int Flags to control the output for example DumpFlag_AssetDBCheckums. Returns string Frame string representation. Free() Frees the resources used by the frame. public override sealed void Free() GetPlayerData(PlayerRef) Gets the runtime player configuration data for a certain player. public RuntimePlayer GetPlayerData(PlayerRef player) Parameters player PlayerRef Player ref Returns RuntimePlayer Player config or null if player was not found GetPlayerInput(PlayerRef) public Input* GetPlayerInput(PlayerRef player) Parameters player PlayerRef Returns Input* InPredictionArea(FPVector2) See InPredictionArea(FPVector3). public bool InPredictionArea(FPVector2 position) Parameters position FPVector2 Returns bool InPredictionArea(FPVector3) Test is a position is inside the prediction area. public bool InPredictionArea(FPVector3 position) Parameters position FPVector3 Position Returns bool True if the position is inside the prediction area. InitStatic() Initialized Quantum static type registry. public static void InitStatic() PlayerToActorId(PlayerRef) Converts a Quantum PlayerRef to an ActorId (Photon client id). public int? PlayerToActorId(PlayerRef player) Parameters player PlayerRef Player reference Returns int? ActorId or null if payer was not found Serialize(DeterministicFrameSerializeMode) Serializes the frame using a temporary buffer (20MB). public override byte[] Serialize(DeterministicFrameSerializeMode mode) Parameters mode DeterministicFrameSerializeMode Returns byte[] Serialize(DeterministicFrameSerializeMode, byte[], out FrameSerializer, int, bool) public ArraySegment<byte> Serialize(DeterministicFrameSerializeMode mode, byte[] buffer, out FrameSerializer serializer, int offset = 0, bool allocOutput = false) Parameters mode DeterministicFrameSerializeMode buffer byte[] serializer FrameSerializer offset int allocOutput bool Returns ArraySegment<byte> Serialize(DeterministicFrameSerializeMode, byte[], int, bool) Serializes the frame using buffer as a buffer for temporary data. If allocOutput is set to false, then buffer is also used for the final data - use offset and count from the result to access the part of buffer where serialized frame is stored. If allocOutput is set to true then a new array is allocated for the result. Despite accepting a buffer, this method still allocates a few small temporary objects. SerializeAssets(Stream, AssetObject[]) is also going to allocate when serializing DynamicAssetDB, but how much depends on the serializer itself and the number of dynamic assets. public ArraySegment<byte> Serialize(DeterministicFrameSerializeMode mode, byte[] buffer, int offset = 0, bool allocOutput = false) Parameters mode DeterministicFrameSerializeMode buffer byte[] offset int allocOutput bool Returns ArraySegment<byte> Segment of buffer where the serialized frame is stored Remarks Do not serialize during GameStart callback because systems have not been initialized, yet. Rather use CallbackSimulateFinished to wait for the first update. SetPlayerInput(PlayerRef, Input) public void SetPlayerInput(PlayerRef player, Input input) Parameters player PlayerRef input Input SetPredictionArea(FPVector2, FP) See SetPredictionArea(FPVector3, FP). public void SetPredictionArea(FPVector2 position, FP radius) Parameters position FPVector2 radius FP SetPredictionArea(FPVector3, FP) Set the prediction area. public void SetPredictionArea(FPVector3 position, FP radius) Parameters position FPVector3 Center of the prediction area radius FP Radius of the prediction area SystemDisable(Type) public void SystemDisable(Type t) Parameters t Type SystemDisable<T>() Disables a system. public void SystemDisable<T>() where T : SystemBase Type Parameters T System type Examples // test for a certain asset and disable the system during its OnInit method public override void OnInit(Frame f) { var testSettings = f.FindAsset<NavMeshAgentsSettings>(f.Map.UserAsset.Id); if (testSettings == null) { f.SystemDisable<NavMeshAgentTestSystem>(); return; } //.. } SystemDisable<T>(T) public void SystemDisable<T>(T system) where T : SystemBase Parameters system T Type Parameters T SystemEnable(Type) public void SystemEnable(Type t) Parameters t Type SystemEnable<T>() Enable a system. public void SystemEnable<T>() where T : SystemBase Type Parameters T System type SystemIsEnabledInHierarchy(SystemBase) public bool SystemIsEnabledInHierarchy(SystemBase system) Parameters system SystemBase Returns bool SystemIsEnabledInHierarchy(Type) public bool SystemIsEnabledInHierarchy(Type t) Parameters t Type Returns bool SystemIsEnabledInHierarchy<T>() public bool SystemIsEnabledInHierarchy<T>() where T : SystemBase Returns bool Type Parameters T SystemIsEnabledSelf(SystemBase) public bool SystemIsEnabledSelf(SystemBase s) Parameters s SystemBase Returns bool SystemIsEnabledSelf(Type) public bool SystemIsEnabledSelf(Type t) Parameters t Type Returns bool SystemIsEnabledSelf<T>() Test if a system is enabled. public bool SystemIsEnabledSelf<T>() where T : SystemBase Returns bool True if the system is enabled Type Parameters T System type UpdatePlayerData(IDeterministicGame) public void UpdatePlayerData(IDeterministicGame game) Parameters game IDeterministicGame"
  },
  "api/Quantum.FrameContextUser.html": {
    "href": "api/Quantum.FrameContextUser.html",
    "title": "Class FrameContextUser | Rwby Vytal Versus Documentation",
    "keywords": "Class FrameContextUser Namespace Quantum Assembly Quantum.Simulation.dll Use this class to extend the Quantum.Core.FrameContext class. public class FrameContextUser : FrameContext Inheritance object FrameContext FrameContextUser Inherited Members FrameContext.IsLocalPlayer(PlayerRef) FrameContext.OnGameStart(DeterministicFrame) FrameContext.OnSimulationBegin() FrameContext.OnSimulationEnd() FrameContext.OnFrameSimulationBegin(FrameBase) FrameContext.OnFrameSimulationEnd() FrameContext.TempAllocate(int, int) FrameContext.TempAllocateAndClear(int, int) FrameContext.AcquireEvent<T>(int) FrameContext.ReleaseEvent(EventBase) FrameContext.SetPredictionArea(FPVector3, FP) FrameContext.InPredictionArea(DeterministicFrame, FPVector3) FrameContext.InPredictionArea(DeterministicFrame, FPVector2) FrameContext.Physics2D FrameContext.Physics3D FrameContext.Allocator FrameContext.TaskContext FrameContext.ProfilerContext FrameContext.Events FrameContext.Culling FrameContext.CommandSerializer FrameContext.AssetSerializer FrameContext.ResourceManager FrameContext.AssetDB FrameContext.UseSharedChecksumSerializer FrameContext.SharedChecksumSerializer FrameContext.HeapTrackingMode FrameContext.HeapTracker FrameContext.PhysicsConfig FrameContext.IsServer FrameContext.PredictionAreaCenter FrameContext.PredictionAreaRadius Constructors FrameContextUser(Args) Frame context user constructor. public FrameContextUser(FrameContext.Args args) Parameters args FrameContext.Args Methods Dispose() Dispose user systems and memory. public override sealed void Dispose()"
  },
  "api/Quantum.FrameThreadSafeExtensions.html": {
    "href": "api/Quantum.FrameThreadSafeExtensions.html",
    "title": "Class FrameThreadSafeExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class FrameThreadSafeExtensions Namespace Quantum Assembly Quantum.Simulation.dll Extension methods for the Quantum.FrameThreadSafe class. public static class FrameThreadSafeExtensions Inheritance object FrameThreadSafeExtensions Methods GetGlobal(FrameThreadSafe) A convenience method to get the global state from a frame without having to cast it. public static _globals_* GetGlobal(this FrameThreadSafe frame) Parameters frame FrameThreadSafe Returns _globals_*"
  },
  "api/Quantum.GainAuraPassively.html": {
    "href": "api/Quantum.GainAuraPassively.html",
    "title": "Struct GainAuraPassively | Rwby Vytal Versus Documentation",
    "keywords": "Struct GainAuraPassively Namespace Quantum Assembly Quantum.Simulation.dll public struct GainAuraPassively : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int auraGainDelay public int auraGainDelay Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.GameResult.html": {
    "href": "api/Quantum.GameResult.html",
    "title": "Class GameResult | Rwby Vytal Versus Documentation",
    "keywords": "Class GameResult Namespace Quantum Assembly Quantum.Simulation.dll The game result class can be extended by a partial class. It is used with the EventGameResult to report the game result to the server. See the online documentation for more information. [Serializable] public class GameResult : IGameResult Inheritance object GameResult Implements IGameResult Fields Frame The frame when the game result was created. public int Frame Field Value int"
  },
  "api/Quantum.GamemodeQuantumData.html": {
    "href": "api/Quantum.GamemodeQuantumData.html",
    "title": "Class GamemodeQuantumData | Rwby Vytal Versus Documentation",
    "keywords": "Class GamemodeQuantumData Namespace Quantum Assembly Quantum.Simulation.dll public class GamemodeQuantumData : AssetObject Inheritance object Object ScriptableObject AssetObject GamemodeQuantumData Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields gamemodeLogic public AssetRef<HFSMRoot> gamemodeLogic Field Value AssetRef<HFSMRoot>"
  },
  "api/Quantum.GamemodeSettingsBase.html": {
    "href": "api/Quantum.GamemodeSettingsBase.html",
    "title": "Class GamemodeSettingsBase | Rwby Vytal Versus Documentation",
    "keywords": "Class GamemodeSettingsBase Namespace Quantum Assembly Quantum.Simulation.dll public class GamemodeSettingsBase : AssetObject Inheritance object Object ScriptableObject AssetObject GamemodeSettingsBase Derived TeamVersusSettings TrainingSettings Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.GenericGamemodeGlobals.html": {
    "href": "api/Quantum.GenericGamemodeGlobals.html",
    "title": "Struct GenericGamemodeGlobals | Rwby Vytal Versus Documentation",
    "keywords": "Struct GenericGamemodeGlobals Namespace Quantum Assembly Quantum.Simulation.dll public struct GenericGamemodeGlobals : IComponentSingleton, IComponent Implements IComponentSingleton IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int CurrentState public GenericGamemodeStates CurrentState Field Value GenericGamemodeStates DelayedState public GenericGamemodeStates DelayedState Field Value GenericGamemodeStates DelayedStateTimer public FP DelayedStateTimer Field Value FP PreviousState public GenericGamemodeStates PreviousState Field Value GenericGamemodeStates SIZE public const int SIZE = 24 Field Value int playersFinishedIntro public QHashSetPtr<int> playersFinishedIntro Field Value QHashSetPtr<int> Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.GenericGamemodeStates.html": {
    "href": "api/Quantum.GenericGamemodeStates.html",
    "title": "Enum GenericGamemodeStates | Rwby Vytal Versus Documentation",
    "keywords": "Enum GenericGamemodeStates Namespace Quantum Assembly Quantum.Simulation.dll public enum GenericGamemodeStates Fields CharacterIntro = 4 Countdown = 5 Game = 6 Lobby = 1 MapIntro = 3 Off = 0 Outro = 7 Postgame = 9 Pregame = 2 VictoryScreen = 8"
  },
  "api/Quantum.GenericStateAgent.html": {
    "href": "api/Quantum.GenericStateAgent.html",
    "title": "Struct GenericStateAgent | Rwby Vytal Versus Documentation",
    "keywords": "Struct GenericStateAgent Namespace Quantum Assembly Quantum.Simulation.dll public struct GenericStateAgent : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 80 Field Value int blackboard public AIBlackboardComponent blackboard Field Value AIBlackboardComponent blackboardInitializer public AssetRef<AIBlackboardInitializer> blackboardInitializer Field Value AssetRef<AIBlackboardInitializer> config public AssetRef<AIConfigBase> config Field Value AssetRef<AIConfigBase> disableAutoUpdates public QBoolean disableAutoUpdates Field Value QBoolean stateData public HNSFStateAgentData stateData Field Value HNSFStateAgentData stateSet public AssetRef<HNSFStateSet> stateSet Field Value AssetRef<HNSFStateSet> Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.GetAuraFunction.html": {
    "href": "api/Quantum.GetAuraFunction.html",
    "title": "Class GetAuraFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetAuraFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetAuraFunction : StateFunctionInt Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<int> StateFunctionInt GetAuraFunction Inherited Members HNSFStateFunction<int>.Label HNSFStateFunction<int>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override int Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int"
  },
  "api/Quantum.GetCharacterForceFunction.ForceType.html": {
    "href": "api/Quantum.GetCharacterForceFunction.ForceType.html",
    "title": "Enum GetCharacterForceFunction.ForceType | Rwby Vytal Versus Documentation",
    "keywords": "Enum GetCharacterForceFunction.ForceType Namespace Quantum Assembly Quantum.Simulation.dll public enum GetCharacterForceFunction.ForceType Fields Both = 2 Gravity = 1 Movement = 0"
  },
  "api/Quantum.GetCharacterForceFunction.html": {
    "href": "api/Quantum.GetCharacterForceFunction.html",
    "title": "Class GetCharacterForceFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetCharacterForceFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetCharacterForceFunction : StateFunctionFPVector3 Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FPVector3> StateFunctionFPVector3 GetCharacterForceFunction Inherited Members HNSFStateFunction<FPVector3>.Label HNSFStateFunction<FPVector3>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields forceType public GetCharacterForceFunction.ForceType forceType Field Value GetCharacterForceFunction.ForceType Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FPVector3 Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FPVector3"
  },
  "api/Quantum.GetDummyConfigAIFunction.DummyEnumType.html": {
    "href": "api/Quantum.GetDummyConfigAIFunction.DummyEnumType.html",
    "title": "Enum GetDummyConfigAIFunction.DummyEnumType | Rwby Vytal Versus Documentation",
    "keywords": "Enum GetDummyConfigAIFunction.DummyEnumType Namespace Quantum Assembly Quantum.Simulation.dll public enum GetDummyConfigAIFunction.DummyEnumType Fields behaviour = 1 blockBehaviour = 3 blockDirection = 6 controlType = 0 counterhit = 2 framesBeforeGroundRecovery = 9 framesToHoldBlockAfterBlockstunEnded = 5 groundRecovery = 8 hitsBeforeShouldBlock = 4 throwEscape = 7"
  },
  "api/Quantum.GetDummyConfigAIFunction.html": {
    "href": "api/Quantum.GetDummyConfigAIFunction.html",
    "title": "Class GetDummyConfigAIFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetDummyConfigAIFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetDummyConfigAIFunction : AIFunctionBase<int> Inheritance object Object ScriptableObject AssetObject AIFunctionBase AIFunctionBase<int> GetDummyConfigAIFunction Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields enumToGet public GetDummyConfigAIFunction.DummyEnumType enumToGet Field Value GetDummyConfigAIFunction.DummyEnumType Methods Execute(FrameThreadSafe, EntityRef, ref AIContext) public override int Execute(FrameThreadSafe frame, EntityRef entity, ref AIContext aiContext) Parameters frame FrameThreadSafe entity EntityRef aiContext AIContext Returns int"
  },
  "api/Quantum.GetFighterVariableFunction.FighterVariableType.html": {
    "href": "api/Quantum.GetFighterVariableFunction.FighterVariableType.html",
    "title": "Enum GetFighterVariableFunction.FighterVariableType | Rwby Vytal Versus Documentation",
    "keywords": "Enum GetFighterVariableFunction.FighterVariableType Namespace Quantum Assembly Quantum.Simulation.dll public enum GetFighterVariableFunction.FighterVariableType Fields blockstun = 2 hitstop = 0 hitstun = 1"
  },
  "api/Quantum.GetFighterVariableFunction.html": {
    "href": "api/Quantum.GetFighterVariableFunction.html",
    "title": "Class GetFighterVariableFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetFighterVariableFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetFighterVariableFunction : StateFunctionInt Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<int> StateFunctionInt GetFighterVariableFunction Inherited Members HNSFStateFunction<int>.Label HNSFStateFunction<int>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields variableType public GetFighterVariableFunction.FighterVariableType variableType Field Value GetFighterVariableFunction.FighterVariableType Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override int Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int"
  },
  "api/Quantum.GetHitInfoFpVector3Function.HitInfoValueType.html": {
    "href": "api/Quantum.GetHitInfoFpVector3Function.HitInfoValueType.html",
    "title": "Enum GetHitInfoFpVector3Function.HitInfoValueType | Rwby Vytal Versus Documentation",
    "keywords": "Enum GetHitInfoFpVector3Function.HitInfoValueType Namespace Quantum Assembly Quantum.Simulation.dll public enum GetHitInfoFpVector3Function.HitInfoValueType Fields BlockForceAerial = 3 BlockForceGround = 2 GroundBounceForce = 4 HitForceAerial = 1 HitForceGround = 0 WallBounceForce = 5"
  },
  "api/Quantum.GetHitInfoFpVector3Function.html": {
    "href": "api/Quantum.GetHitInfoFpVector3Function.html",
    "title": "Class GetHitInfoFpVector3Function | Rwby Vytal Versus Documentation",
    "keywords": "Class GetHitInfoFpVector3Function Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetHitInfoFpVector3Function : StateFunctionFPVector3 Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FPVector3> StateFunctionFPVector3 GetHitInfoFpVector3Function Inherited Members HNSFStateFunction<FPVector3>.Label HNSFStateFunction<FPVector3>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields hitInfoValue public GetHitInfoFpVector3Function.HitInfoValueType hitInfoValue Field Value GetHitInfoFpVector3Function.HitInfoValueType Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FPVector3 Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FPVector3"
  },
  "api/Quantum.GetHitboxHitCountFunction.html": {
    "href": "api/Quantum.GetHitboxHitCountFunction.html",
    "title": "Class GetHitboxHitCountFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetHitboxHitCountFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetHitboxHitCountFunction : StateFunctionFP Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FP> StateFunctionFP GetHitboxHitCountFunction Inherited Members HNSFStateFunction<FP>.Label HNSFStateFunction<FP>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields hitboxIdentifier public int hitboxIdentifier Field Value int Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FP Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FP"
  },
  "api/Quantum.GetHitstunFunction.html": {
    "href": "api/Quantum.GetHitstunFunction.html",
    "title": "Class GetHitstunFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetHitstunFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetHitstunFunction : StateFunctionInt Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<int> StateFunctionInt GetHitstunFunction Inherited Members HNSFStateFunction<int>.Label HNSFStateFunction<int>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override int Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int"
  },
  "api/Quantum.GetPositionFunction.PositionType.html": {
    "href": "api/Quantum.GetPositionFunction.PositionType.html",
    "title": "Enum GetPositionFunction.PositionType | Rwby Vytal Versus Documentation",
    "keywords": "Enum GetPositionFunction.PositionType Namespace Quantum Assembly Quantum.Simulation.dll public enum GetPositionFunction.PositionType Fields ArticleOwner = 3 HardTarget = 1 Self = 0 SoftTarget = 2"
  },
  "api/Quantum.GetPositionFunction.html": {
    "href": "api/Quantum.GetPositionFunction.html",
    "title": "Class GetPositionFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetPositionFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetPositionFunction : StateFunctionFPVector3 Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FPVector3> StateFunctionFPVector3 GetPositionFunction Inherited Members HNSFStateFunction<FPVector3>.Label HNSFStateFunction<FPVector3>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields positionType public GetPositionFunction.PositionType[] positionType Field Value PositionType[] Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FPVector3 Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FPVector3"
  },
  "api/Quantum.GetStateByTagFunction.html": {
    "href": "api/Quantum.GetStateByTagFunction.html",
    "title": "Class GetStateByTagFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetStateByTagFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetStateByTagFunction : StateFunctionAssetRef Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<AssetRef> StateFunctionAssetRef GetStateByTagFunction Inherited Members HNSFStateFunction<AssetRef>.Label HNSFStateFunction<AssetRef>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields tag public AssetRef<Tag> tag Field Value AssetRef<Tag> Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override AssetRef Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns AssetRef"
  },
  "api/Quantum.GetTotalHitCountFunction.html": {
    "href": "api/Quantum.GetTotalHitCountFunction.html",
    "title": "Class GetTotalHitCountFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetTotalHitCountFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetTotalHitCountFunction : StateFunctionInt Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<int> StateFunctionInt GetTotalHitCountFunction Inherited Members HNSFStateFunction<int>.Label HNSFStateFunction<int>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override int Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int"
  },
  "api/Quantum.GetTotalHitstunFunction.html": {
    "href": "api/Quantum.GetTotalHitstunFunction.html",
    "title": "Class GetTotalHitstunFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetTotalHitstunFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetTotalHitstunFunction : StateFunctionInt Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<int> StateFunctionInt GetTotalHitstunFunction Inherited Members HNSFStateFunction<int>.Label HNSFStateFunction<int>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override int Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int"
  },
  "api/Quantum.GetWallNormalFunction.html": {
    "href": "api/Quantum.GetWallNormalFunction.html",
    "title": "Class GetWallNormalFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class GetWallNormalFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class GetWallNormalFunction : StateFunctionFPVector3 Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FPVector3> StateFunctionFPVector3 GetWallNormalFunction Inherited Members HNSFStateFunction<FPVector3>.Label HNSFStateFunction<FPVector3>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields removeY public bool removeY Field Value bool Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FPVector3 Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FPVector3"
  },
  "api/Quantum.GlobalScriptToMakeSureThereAreNoCompileErrors.html": {
    "href": "api/Quantum.GlobalScriptToMakeSureThereAreNoCompileErrors.html",
    "title": "Class GlobalScriptToMakeSureThereAreNoCompileErrors | Rwby Vytal Versus Documentation",
    "keywords": "Class GlobalScriptToMakeSureThereAreNoCompileErrors Namespace Quantum Assembly Assembly-CSharp.dll public class GlobalScriptToMakeSureThereAreNoCompileErrors Inheritance object GlobalScriptToMakeSureThereAreNoCompileErrors"
  },
  "api/Quantum.GotWallInfo.html": {
    "href": "api/Quantum.GotWallInfo.html",
    "title": "Struct GotWallInfo | Rwby Vytal Versus Documentation",
    "keywords": "Struct GotWallInfo Namespace Quantum Assembly Quantum.Simulation.dll public struct GotWallInfo : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 88 Field Value int info public Hit3D info Field Value Hit3D Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.GroundSnapProcessor.html": {
    "href": "api/Quantum.GroundSnapProcessor.html",
    "title": "Class GroundSnapProcessor | Rwby Vytal Versus Documentation",
    "keywords": "Class GroundSnapProcessor Namespace Quantum Assembly Quantum.Simulation.dll This processor snaps character down after losing grounded state. public class GroundSnapProcessor : KCCProcessor, IAfterMoveStep Inheritance object Object ScriptableObject AssetObject KCCProcessor GroundSnapProcessor Implements IAfterMoveStep Inherited Members KCCProcessor.OnEnter(KCCContext, KCCProcessorInfo, KCCOverlapHit) KCCProcessor.OnExit(KCCContext, KCCProcessorInfo) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields SnapDistance [KCCTooltip(\"Maximum ground check distance for snapping.\")] public FP SnapDistance Field Value FP SnapSpeed [KCCTooltip(\"Ground snapping speed per second.\")] public FP SnapSpeed Field Value FP Methods AfterMoveStep(KCCContext, KCCProcessorInfo, KCCOverlapInfo) This callback is invoked after each KCC move step - this happens if the KCC moves too fast and the continuous collision detection (CCD) algorithm splits translation vector into multiple smaller steps. During CCD movement the KCCData.DeltaTime is scaled proportionally to size of the step. Not called if KCC.IsActive is set to false. public void AfterMoveStep(KCCContext context, KCCProcessorInfo processorInfo, KCCOverlapInfo overlapInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing this processor. overlapInfo KCCOverlapInfo Reference to all physics overlap hits in current move step and other metadata."
  },
  "api/Quantum.HFSMCharaCurrentStateByTagDecision.StateGroupType.html": {
    "href": "api/Quantum.HFSMCharaCurrentStateByTagDecision.StateGroupType.html",
    "title": "Enum HFSMCharaCurrentStateByTagDecision.StateGroupType | Rwby Vytal Versus Documentation",
    "keywords": "Enum HFSMCharaCurrentStateByTagDecision.StateGroupType Namespace Quantum Assembly Quantum.Simulation.dll public enum HFSMCharaCurrentStateByTagDecision.StateGroupType Fields Global = 0 Group = 1 Moveset = 2 State = 3"
  },
  "api/Quantum.HFSMCharaCurrentStateByTagDecision.html": {
    "href": "api/Quantum.HFSMCharaCurrentStateByTagDecision.html",
    "title": "Class HFSMCharaCurrentStateByTagDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HFSMCharaCurrentStateByTagDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HFSMCharaCurrentStateByTagDecision : HFSMDecision Inheritance object Object ScriptableObject AssetObject HFSMDecisionBase HFSMDecision HFSMCharaCurrentStateByTagDecision Inherited Members HFSMDecision.Decide(FrameThreadSafe, EntityRef, ref AIContext) HFSMDecisionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields stateGroupToCheck public HFSMCharaCurrentStateByTagDecision.StateGroupType stateGroupToCheck Field Value HFSMCharaCurrentStateByTagDecision.StateGroupType stateTag public AssetRef<Tag> stateTag Field Value AssetRef<Tag> Methods Decide(Frame, EntityRef, ref AIContext) public override bool Decide(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext Returns bool"
  },
  "api/Quantum.HFSMCharaInDangerDecision.html": {
    "href": "api/Quantum.HFSMCharaInDangerDecision.html",
    "title": "Class HFSMCharaInDangerDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HFSMCharaInDangerDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HFSMCharaInDangerDecision : HFSMDecision Inheritance object Object ScriptableObject AssetObject HFSMDecisionBase HFSMDecision HFSMCharaInDangerDecision Inherited Members HFSMDecision.Decide(FrameThreadSafe, EntityRef, ref AIContext) HFSMDecisionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields attackOriginEntity public AIBlackboardValueKey attackOriginEntity Field Value AIBlackboardValueKey attackOriginPoint public AIBlackboardValueKey attackOriginPoint Field Value AIBlackboardValueKey Methods Decide(Frame, EntityRef, ref AIContext) public override bool Decide(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext Returns bool"
  },
  "api/Quantum.HFSMCharaNextStateByTagDecision.html": {
    "href": "api/Quantum.HFSMCharaNextStateByTagDecision.html",
    "title": "Class HFSMCharaNextStateByTagDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HFSMCharaNextStateByTagDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HFSMCharaNextStateByTagDecision : HFSMDecision Inheritance object Object ScriptableObject AssetObject HFSMDecisionBase HFSMDecision HFSMCharaNextStateByTagDecision Inherited Members HFSMDecision.Decide(FrameThreadSafe, EntityRef, ref AIContext) HFSMDecisionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields stateTag public AssetRef<Tag> stateTag Field Value AssetRef<Tag> Methods Decide(Frame, EntityRef, ref AIContext) public override bool Decide(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext Returns bool"
  },
  "api/Quantum.HFSMCharaStunOverDecision.StunType.html": {
    "href": "api/Quantum.HFSMCharaStunOverDecision.StunType.html",
    "title": "Enum HFSMCharaStunOverDecision.StunType | Rwby Vytal Versus Documentation",
    "keywords": "Enum HFSMCharaStunOverDecision.StunType Namespace Quantum Assembly Quantum.Simulation.dll public enum HFSMCharaStunOverDecision.StunType Fields Blockstun = 1 Hitstun = 0"
  },
  "api/Quantum.HFSMCharaStunOverDecision.html": {
    "href": "api/Quantum.HFSMCharaStunOverDecision.html",
    "title": "Class HFSMCharaStunOverDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HFSMCharaStunOverDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HFSMCharaStunOverDecision : HFSMDecision Inheritance object Object ScriptableObject AssetObject HFSMDecisionBase HFSMDecision HFSMCharaStunOverDecision Inherited Members HFSMDecision.Decide(FrameThreadSafe, EntityRef, ref AIContext) HFSMDecisionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields stunType public HFSMCharaStunOverDecision.StunType stunType Field Value HFSMCharaStunOverDecision.StunType Methods Decide(Frame, EntityRef, ref AIContext) public override bool Decide(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext Returns bool"
  },
  "api/Quantum.HFSMDecision.html": {
    "href": "api/Quantum.HFSMDecision.html",
    "title": "Class HFSMDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HFSMDecision Namespace Quantum Assembly Quantum.Simulation.dll public abstract class HFSMDecision : HFSMDecisionBase Inheritance object Object ScriptableObject AssetObject HFSMDecisionBase HFSMDecision Derived HFSMCharaCurrentStateByTagDecision HFSMCharaInDangerDecision HFSMCharaNextStateByTagDecision HFSMCharaStunOverDecision IntComparisonDecision TrainingAIDummyBehaviourDecision Inherited Members HFSMDecisionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Decide(Frame, EntityRef, ref AIContext) public virtual bool Decide(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext Returns bool Decide(FrameThreadSafe, EntityRef, ref AIContext) public override bool Decide(FrameThreadSafe frame, EntityRef entity, ref AIContext aiContext) Parameters frame FrameThreadSafe entity EntityRef aiContext AIContext Returns bool"
  },
  "api/Quantum.HFSMFaceEntityAction.html": {
    "href": "api/Quantum.HFSMFaceEntityAction.html",
    "title": "Class HFSMFaceEntityAction | Rwby Vytal Versus Documentation",
    "keywords": "Class HFSMFaceEntityAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HFSMFaceEntityAction : ExecuteIfConditionAction Inheritance object Object ScriptableObject AssetObject AIActionBase AIAction ExecuteIfConditionAction HFSMFaceEntityAction Inherited Members ExecuteIfConditionAction.checkCondition ExecuteIfConditionAction.condition ExecuteIfConditionAction.Execute(Frame, EntityRef, ref AIContext) AIAction.Execute(FrameThreadSafe, EntityRef, ref AIContext) AIActionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields entityRef public AIParamEntityRef entityRef Field Value AIParamEntityRef Methods ConditionalExecute(Frame, EntityRef, ref AIContext, AIContextUser*, AIConfigBase) public override void ConditionalExecute(Frame frame, EntityRef entity, ref AIContext aiContext, AIContextUser* user, AIConfigBase aiConfig) Parameters frame Frame entity EntityRef aiContext AIContext user AIContextUser* aiConfig AIConfigBase"
  },
  "api/Quantum.HFSMFindDangerSourceAction.html": {
    "href": "api/Quantum.HFSMFindDangerSourceAction.html",
    "title": "Class HFSMFindDangerSourceAction | Rwby Vytal Versus Documentation",
    "keywords": "Class HFSMFindDangerSourceAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HFSMFindDangerSourceAction : AIAction Inheritance object Object ScriptableObject AssetObject AIActionBase AIAction HFSMFindDangerSourceAction Inherited Members AIAction.Execute(FrameThreadSafe, EntityRef, ref AIContext) AIActionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields attackOriginEntity public AIBlackboardValueKey attackOriginEntity Field Value AIBlackboardValueKey attackOriginPoint public AIBlackboardValueKey attackOriginPoint Field Value AIBlackboardValueKey Methods Execute(Frame, EntityRef, ref AIContext) public override void Execute(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext"
  },
  "api/Quantum.HFSMModifyInputAction.ModifyType.html": {
    "href": "api/Quantum.HFSMModifyInputAction.ModifyType.html",
    "title": "Enum HFSMModifyInputAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum HFSMModifyInputAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum HFSMModifyInputAction.ModifyType Fields Add = 1 Remove = 2 Set = 0"
  },
  "api/Quantum.HFSMModifyInputAction.html": {
    "href": "api/Quantum.HFSMModifyInputAction.html",
    "title": "Class HFSMModifyInputAction | Rwby Vytal Versus Documentation",
    "keywords": "Class HFSMModifyInputAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HFSMModifyInputAction : ExecuteIfConditionAction Inheritance object Object ScriptableObject AssetObject AIActionBase AIAction ExecuteIfConditionAction HFSMModifyInputAction Inherited Members ExecuteIfConditionAction.checkCondition ExecuteIfConditionAction.condition ExecuteIfConditionAction.Execute(Frame, EntityRef, ref AIContext) AIAction.Execute(FrameThreadSafe, EntityRef, ref AIContext) AIActionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields input public PlayerInputButtonType input Field Value PlayerInputButtonType modifyType public HFSMModifyInputAction.ModifyType modifyType Field Value HFSMModifyInputAction.ModifyType Methods ConditionalExecute(Frame, EntityRef, ref AIContext, AIContextUser*, AIConfigBase) public override void ConditionalExecute(Frame frame, EntityRef entity, ref AIContext aiContext, AIContextUser* user, AIConfigBase aiConfig) Parameters frame Frame entity EntityRef aiContext AIContext user AIContextUser* aiConfig AIConfigBase"
  },
  "api/Quantum.HNSFANDDecision.html": {
    "href": "api/Quantum.HNSFANDDecision.html",
    "title": "Class HNSFANDDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFANDDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HNSFANDDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision HNSFANDDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields decisionRefs public AssetRef<HNSFStateDecision>[] decisionRefs Field Value AssetRef<HNSFStateDecision>[] Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.HNSFConfig.EValueType.html": {
    "href": "api/Quantum.HNSFConfig.EValueType.html",
    "title": "Enum HNSFConfig.EValueType | Rwby Vytal Versus Documentation",
    "keywords": "Enum HNSFConfig.EValueType Namespace Quantum Assembly Quantum.Simulation.dll public enum HNSFConfig.EValueType Fields AssetRef = 9 Bool = 2 Byte = 3 EntityRef = 8 FP = 4 FPVector2 = 5 FPVector3 = 6 Int = 1 None = 0 String = 7"
  },
  "api/Quantum.HNSFConfig.KeyValuePair.html": {
    "href": "api/Quantum.HNSFConfig.KeyValuePair.html",
    "title": "Class HNSFConfig.KeyValuePair | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFConfig.KeyValuePair Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HNSFConfig.KeyValuePair Inheritance object HNSFConfig.KeyValuePair Fields Key public string Key Field Value string Type public HNSFConfig.EValueType Type Field Value HNSFConfig.EValueType Value public HNSFConfig.Value Value Field Value HNSFConfig.Value"
  },
  "api/Quantum.HNSFConfig.Value.html": {
    "href": "api/Quantum.HNSFConfig.Value.html",
    "title": "Struct HNSFConfig.Value | Rwby Vytal Versus Documentation",
    "keywords": "Struct HNSFConfig.Value Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public struct HNSFConfig.Value Fields AssetRef public AssetRef AssetRef Field Value AssetRef Boolean public bool Boolean Field Value bool Byte public byte Byte Field Value byte EntityRef public EntityRef EntityRef Field Value EntityRef FP public FP FP Field Value FP FPVector2 public FPVector2 FPVector2 Field Value FPVector2 FPVector3 public FPVector3 FPVector3 Field Value FPVector3 Integer public int Integer Field Value int String public string String Field Value string"
  },
  "api/Quantum.HNSFConfig.html": {
    "href": "api/Quantum.HNSFConfig.html",
    "title": "Class HNSFConfig | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFConfig Namespace Quantum Assembly Quantum.Simulation.dll public class HNSFConfig : AssetObject Inheritance object Object ScriptableObject AssetObject HNSFConfig Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields KeyValuePairs public List<HNSFConfig.KeyValuePair> KeyValuePairs Field Value List<HNSFConfig.KeyValuePair> Properties Count public int Count { get; } Property Value int"
  },
  "api/Quantum.HNSFExternalActions.html": {
    "href": "api/Quantum.HNSFExternalActions.html",
    "title": "Class HNSFExternalActions | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFExternalActions Namespace Quantum Assembly Quantum.Simulation.dll public class HNSFExternalActions : AssetObject Inheritance object Object ScriptableObject AssetObject HNSFExternalActions Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields data public AssetRef<HNSFStateAction>[] data Field Value AssetRef<HNSFStateAction>[] Methods Execute(FrameThreadSafe, FP, HNSFStateAgentData*, EntityRef, ref HNSFStateContext) public bool Execute(FrameThreadSafe frame, FP deltaTime, HNSFStateAgentData* hnsfData, EntityRef entity, ref HNSFStateContext context) Parameters frame FrameThreadSafe deltaTime FP hnsfData HNSFStateAgentData* entity EntityRef context HNSFStateContext Returns bool"
  },
  "api/Quantum.HNSFNOTDecision.html": {
    "href": "api/Quantum.HNSFNOTDecision.html",
    "title": "Class HNSFNOTDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFNOTDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HNSFNOTDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision HNSFNOTDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields decisionRef public AssetRef<HNSFStateDecision> decisionRef Field Value AssetRef<HNSFStateDecision> Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.HNSFORDecision.html": {
    "href": "api/Quantum.HNSFORDecision.html",
    "title": "Class HNSFORDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFORDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HNSFORDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision HNSFORDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields decisionRefs public AssetRef<HNSFStateDecision>[] decisionRefs Field Value AssetRef<HNSFStateDecision>[] Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.HNSFParam-1.html": {
    "href": "api/Quantum.HNSFParam-1.html",
    "title": "Class HNSFParam<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFParam<T> Namespace Quantum Assembly Quantum.Simulation.dll public abstract class HNSFParam<T> Type Parameters T Inheritance object HNSFParam<T> Derived HNSFParamAssetRef HNSFParamBool HNSFParamByte HNSFParamFP HNSFParamFPVector2 HNSFParamFPVector3 HNSFParamInt Fields DefaultValue public T DefaultValue Field Value T Key public string Key Field Value string Source public HNSFParamSource Source Field Value HNSFParamSource Methods GetBlackboardValue(BlackboardValue) protected abstract T GetBlackboardValue(BlackboardValue value) Parameters value BlackboardValue Returns T GetConfigValue(KeyValuePair) protected abstract T GetConfigValue(AIConfigBase.KeyValuePair configPair) Parameters configPair AIConfigBase.KeyValuePair Returns T GetFunctionValue(Frame, EntityRef, ref HNSFStateContext) protected abstract T GetFunctionValue(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns T GetFunctionValue(FrameThreadSafe, EntityRef, ref HNSFStateContext) protected abstract T GetFunctionValue(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns T Resolve(Frame, EntityRef, ref HNSFStateContext) Use this to solve the AIParam value when the source of the value is unknown public T Resolve(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns T ResolveBlackboard(Frame, AIBlackboardComponent*) Use this if the it is known that the AIParam stores specifically a Blackboard value public T ResolveBlackboard(Frame frame, AIBlackboardComponent* blackboard) Parameters frame Frame blackboard AIBlackboardComponent* Returns T ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*) Use this if the it is known that the AIParam stores specifically a Blackboard value public T ResolveBlackboard(FrameThreadSafe frame, AIBlackboardComponent* blackboard) Parameters frame FrameThreadSafe blackboard AIBlackboardComponent* Returns T ResolveFunction(Frame, EntityRef, ref HNSFStateContext) Use this if the it is known that the HNSFParam stores specifically a Func public T ResolveFunction(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns T ResolveFunction(FrameThreadSafe, EntityRef, ref HNSFStateContext) Use this if the it is known that the HNSFParam stores specifically a Func public T ResolveFunction(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns T"
  },
  "api/Quantum.HNSFParamAssetRef.html": {
    "href": "api/Quantum.HNSFParamAssetRef.html",
    "title": "Class HNSFParamAssetRef | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFParamAssetRef Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public sealed class HNSFParamAssetRef : HNSFParam<AssetRef> Inheritance object HNSFParam<AssetRef> HNSFParamAssetRef Inherited Members HNSFParam<AssetRef>.Source HNSFParam<AssetRef>.Key HNSFParam<AssetRef>.DefaultValue HNSFParam<AssetRef>.Resolve(Frame, EntityRef, ref HNSFStateContext) HNSFParam<AssetRef>.ResolveBlackboard(Frame, AIBlackboardComponent*) HNSFParam<AssetRef>.ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*) HNSFParam<AssetRef>.ResolveFunction(Frame, EntityRef, ref HNSFStateContext) HNSFParam<AssetRef>.ResolveFunction(FrameThreadSafe, EntityRef, ref HNSFStateContext) Fields functionRef public AssetRef<HNSFStateFunction> functionRef Field Value AssetRef<HNSFStateFunction> Methods GetBlackboardValue(BlackboardValue) protected override AssetRef GetBlackboardValue(BlackboardValue value) Parameters value BlackboardValue Returns AssetRef GetConfigValue(KeyValuePair) protected override AssetRef GetConfigValue(AIConfigBase.KeyValuePair configPair) Parameters configPair AIConfigBase.KeyValuePair Returns AssetRef GetFunctionValue(Frame, EntityRef, ref HNSFStateContext) protected override AssetRef GetFunctionValue(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns AssetRef GetFunctionValue(FrameThreadSafe, EntityRef, ref HNSFStateContext) protected override AssetRef GetFunctionValue(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns AssetRef Operators implicit operator HNSFParamAssetRef(AssetRef) public static implicit operator HNSFParamAssetRef(AssetRef value) Parameters value AssetRef Returns HNSFParamAssetRef"
  },
  "api/Quantum.HNSFParamBool.html": {
    "href": "api/Quantum.HNSFParamBool.html",
    "title": "Class HNSFParamBool | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFParamBool Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public sealed class HNSFParamBool : HNSFParam<bool> Inheritance object HNSFParam<bool> HNSFParamBool Inherited Members HNSFParam<bool>.Source HNSFParam<bool>.Key HNSFParam<bool>.DefaultValue HNSFParam<bool>.Resolve(Frame, EntityRef, ref HNSFStateContext) HNSFParam<bool>.ResolveBlackboard(Frame, AIBlackboardComponent*) HNSFParam<bool>.ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*) HNSFParam<bool>.ResolveFunction(Frame, EntityRef, ref HNSFStateContext) HNSFParam<bool>.ResolveFunction(FrameThreadSafe, EntityRef, ref HNSFStateContext) Fields FunctionRef public AssetRef<HNSFStateFunction> FunctionRef Field Value AssetRef<HNSFStateFunction> Methods GetBlackboardValue(BlackboardValue) protected override bool GetBlackboardValue(BlackboardValue value) Parameters value BlackboardValue Returns bool GetConfigValue(KeyValuePair) protected override bool GetConfigValue(AIConfigBase.KeyValuePair configPair) Parameters configPair AIConfigBase.KeyValuePair Returns bool GetFunctionValue(Frame, EntityRef, ref HNSFStateContext) protected override bool GetFunctionValue(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool GetFunctionValue(FrameThreadSafe, EntityRef, ref HNSFStateContext) protected override bool GetFunctionValue(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns bool Operators implicit operator HNSFParamBool(bool) public static implicit operator HNSFParamBool(bool value) Parameters value bool Returns HNSFParamBool"
  },
  "api/Quantum.HNSFParamByte.html": {
    "href": "api/Quantum.HNSFParamByte.html",
    "title": "Class HNSFParamByte | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFParamByte Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public sealed class HNSFParamByte : HNSFParam<byte> Inheritance object HNSFParam<byte> HNSFParamByte Inherited Members HNSFParam<byte>.Source HNSFParam<byte>.Key HNSFParam<byte>.DefaultValue HNSFParam<byte>.Resolve(Frame, EntityRef, ref HNSFStateContext) HNSFParam<byte>.ResolveBlackboard(Frame, AIBlackboardComponent*) HNSFParam<byte>.ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*) HNSFParam<byte>.ResolveFunction(Frame, EntityRef, ref HNSFStateContext) HNSFParam<byte>.ResolveFunction(FrameThreadSafe, EntityRef, ref HNSFStateContext) Fields FunctionRef public AssetRef<HNSFStateFunction> FunctionRef Field Value AssetRef<HNSFStateFunction> Methods GetBlackboardValue(BlackboardValue) protected override byte GetBlackboardValue(BlackboardValue value) Parameters value BlackboardValue Returns byte GetConfigValue(KeyValuePair) protected override byte GetConfigValue(AIConfigBase.KeyValuePair configPair) Parameters configPair AIConfigBase.KeyValuePair Returns byte GetFunctionValue(Frame, EntityRef, ref HNSFStateContext) protected override byte GetFunctionValue(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns byte GetFunctionValue(FrameThreadSafe, EntityRef, ref HNSFStateContext) protected override byte GetFunctionValue(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns byte Operators implicit operator HNSFParamByte(byte) public static implicit operator HNSFParamByte(byte value) Parameters value byte Returns HNSFParamByte"
  },
  "api/Quantum.HNSFParamFP.html": {
    "href": "api/Quantum.HNSFParamFP.html",
    "title": "Class HNSFParamFP | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFParamFP Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public sealed class HNSFParamFP : HNSFParam<FP> Inheritance object HNSFParam<FP> HNSFParamFP Inherited Members HNSFParam<FP>.Source HNSFParam<FP>.Key HNSFParam<FP>.DefaultValue HNSFParam<FP>.Resolve(Frame, EntityRef, ref HNSFStateContext) HNSFParam<FP>.ResolveBlackboard(Frame, AIBlackboardComponent*) HNSFParam<FP>.ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*) HNSFParam<FP>.ResolveFunction(Frame, EntityRef, ref HNSFStateContext) HNSFParam<FP>.ResolveFunction(FrameThreadSafe, EntityRef, ref HNSFStateContext) Fields FunctionRef public AssetRef<HNSFStateFunction> FunctionRef Field Value AssetRef<HNSFStateFunction> Methods GetBlackboardValue(BlackboardValue) protected override FP GetBlackboardValue(BlackboardValue value) Parameters value BlackboardValue Returns FP GetConfigValue(KeyValuePair) protected override FP GetConfigValue(AIConfigBase.KeyValuePair configPair) Parameters configPair AIConfigBase.KeyValuePair Returns FP GetFunctionValue(Frame, EntityRef, ref HNSFStateContext) protected override FP GetFunctionValue(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FP GetFunctionValue(FrameThreadSafe, EntityRef, ref HNSFStateContext) protected override FP GetFunctionValue(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns FP Operators implicit operator HNSFParamFP(FP) public static implicit operator HNSFParamFP(FP value) Parameters value FP Returns HNSFParamFP"
  },
  "api/Quantum.HNSFParamFPVector2.html": {
    "href": "api/Quantum.HNSFParamFPVector2.html",
    "title": "Class HNSFParamFPVector2 | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFParamFPVector2 Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public sealed class HNSFParamFPVector2 : HNSFParam<FPVector2> Inheritance object HNSFParam<FPVector2> HNSFParamFPVector2 Inherited Members HNSFParam<FPVector2>.Source HNSFParam<FPVector2>.Key HNSFParam<FPVector2>.DefaultValue HNSFParam<FPVector2>.Resolve(Frame, EntityRef, ref HNSFStateContext) HNSFParam<FPVector2>.ResolveBlackboard(Frame, AIBlackboardComponent*) HNSFParam<FPVector2>.ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*) HNSFParam<FPVector2>.ResolveFunction(Frame, EntityRef, ref HNSFStateContext) HNSFParam<FPVector2>.ResolveFunction(FrameThreadSafe, EntityRef, ref HNSFStateContext) Fields FunctionRef public AssetRef<HNSFStateFunction> FunctionRef Field Value AssetRef<HNSFStateFunction> Methods GetBlackboardValue(BlackboardValue) protected override FPVector2 GetBlackboardValue(BlackboardValue value) Parameters value BlackboardValue Returns FPVector2 GetConfigValue(KeyValuePair) protected override FPVector2 GetConfigValue(AIConfigBase.KeyValuePair configPair) Parameters configPair AIConfigBase.KeyValuePair Returns FPVector2 GetFunctionValue(Frame, EntityRef, ref HNSFStateContext) protected override FPVector2 GetFunctionValue(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FPVector2 GetFunctionValue(FrameThreadSafe, EntityRef, ref HNSFStateContext) protected override FPVector2 GetFunctionValue(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns FPVector2 Operators implicit operator HNSFParamFPVector2(FPVector2) public static implicit operator HNSFParamFPVector2(FPVector2 value) Parameters value FPVector2 Returns HNSFParamFPVector2"
  },
  "api/Quantum.HNSFParamFPVector3.html": {
    "href": "api/Quantum.HNSFParamFPVector3.html",
    "title": "Class HNSFParamFPVector3 | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFParamFPVector3 Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public sealed class HNSFParamFPVector3 : HNSFParam<FPVector3> Inheritance object HNSFParam<FPVector3> HNSFParamFPVector3 Inherited Members HNSFParam<FPVector3>.Source HNSFParam<FPVector3>.Key HNSFParam<FPVector3>.DefaultValue HNSFParam<FPVector3>.Resolve(Frame, EntityRef, ref HNSFStateContext) HNSFParam<FPVector3>.ResolveBlackboard(Frame, AIBlackboardComponent*) HNSFParam<FPVector3>.ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*) HNSFParam<FPVector3>.ResolveFunction(Frame, EntityRef, ref HNSFStateContext) HNSFParam<FPVector3>.ResolveFunction(FrameThreadSafe, EntityRef, ref HNSFStateContext) Fields FunctionRef public AssetRef<HNSFStateFunction> FunctionRef Field Value AssetRef<HNSFStateFunction> Methods GetBlackboardValue(BlackboardValue) protected override FPVector3 GetBlackboardValue(BlackboardValue value) Parameters value BlackboardValue Returns FPVector3 GetConfigValue(KeyValuePair) protected override FPVector3 GetConfigValue(AIConfigBase.KeyValuePair configPair) Parameters configPair AIConfigBase.KeyValuePair Returns FPVector3 GetFunctionValue(Frame, EntityRef, ref HNSFStateContext) protected override FPVector3 GetFunctionValue(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FPVector3 GetFunctionValue(FrameThreadSafe, EntityRef, ref HNSFStateContext) protected override FPVector3 GetFunctionValue(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns FPVector3 Operators implicit operator HNSFParamFPVector3(FPVector3) public static implicit operator HNSFParamFPVector3(FPVector3 value) Parameters value FPVector3 Returns HNSFParamFPVector3"
  },
  "api/Quantum.HNSFParamInt.html": {
    "href": "api/Quantum.HNSFParamInt.html",
    "title": "Class HNSFParamInt | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFParamInt Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public sealed class HNSFParamInt : HNSFParam<int> Inheritance object HNSFParam<int> HNSFParamInt Inherited Members HNSFParam<int>.Source HNSFParam<int>.Key HNSFParam<int>.DefaultValue HNSFParam<int>.Resolve(Frame, EntityRef, ref HNSFStateContext) HNSFParam<int>.ResolveBlackboard(Frame, AIBlackboardComponent*) HNSFParam<int>.ResolveBlackboard(FrameThreadSafe, AIBlackboardComponent*) HNSFParam<int>.ResolveFunction(Frame, EntityRef, ref HNSFStateContext) HNSFParam<int>.ResolveFunction(FrameThreadSafe, EntityRef, ref HNSFStateContext) Fields FunctionRef public AssetRef<HNSFStateFunction> FunctionRef Field Value AssetRef<HNSFStateFunction> Methods GetBlackboardValue(BlackboardValue) protected override int GetBlackboardValue(BlackboardValue value) Parameters value BlackboardValue Returns int GetConfigValue(KeyValuePair) protected override int GetConfigValue(AIConfigBase.KeyValuePair configPair) Parameters configPair AIConfigBase.KeyValuePair Returns int GetFunctionValue(Frame, EntityRef, ref HNSFStateContext) protected override int GetFunctionValue(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int GetFunctionValue(FrameThreadSafe, EntityRef, ref HNSFStateContext) protected override int GetFunctionValue(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns int Operators implicit operator HNSFParamInt(int) public static implicit operator HNSFParamInt(int value) Parameters value int Returns HNSFParamInt"
  },
  "api/Quantum.HNSFParamSource.html": {
    "href": "api/Quantum.HNSFParamSource.html",
    "title": "Enum HNSFParamSource | Rwby Vytal Versus Documentation",
    "keywords": "Enum HNSFParamSource Namespace Quantum Assembly Quantum.Simulation.dll public enum HNSFParamSource Fields Blackboard = 3 Config = 2 Function = 4 None = 0 Value = 1"
  },
  "api/Quantum.HNSFSpecialSet.StateWithCondition.html": {
    "href": "api/Quantum.HNSFSpecialSet.StateWithCondition.html",
    "title": "Class HNSFSpecialSet.StateWithCondition | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFSpecialSet.StateWithCondition Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HNSFSpecialSet.StateWithCondition Inheritance object HNSFSpecialSet.StateWithCondition Fields checkToStateCondition public bool checkToStateCondition Field Value bool condition public AssetRef<HNSFStateDecision> condition Field Value AssetRef<HNSFStateDecision> overrideTransitionRequests public bool overrideTransitionRequests Field Value bool state public AssetRef<HNSFState> state Field Value AssetRef<HNSFState> toFrame public int toFrame Field Value int"
  },
  "api/Quantum.HNSFSpecialSet.html": {
    "href": "api/Quantum.HNSFSpecialSet.html",
    "title": "Class HNSFSpecialSet | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFSpecialSet Namespace Quantum Assembly Quantum.Simulation.dll public class HNSFSpecialSet : AssetObject Inheritance object Object ScriptableObject AssetObject HNSFSpecialSet Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields states public HNSFSpecialSet.StateWithCondition[] states Field Value StateWithCondition[] Methods GetBestState(Frame, EntityRef, ref HNSFStateContext) public bool GetBestState(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.HNSFState.html": {
    "href": "api/Quantum.HNSFState.html",
    "title": "Class HNSFState | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFState Namespace Quantum Assembly Quantum.Simulation.dll public class HNSFState : AssetObject Inheritance object Object ScriptableObject AssetObject HNSFState Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields Label public string Label Field Value string autoIncrement public bool autoIncrement Field Value bool autoLoop public bool autoLoop Field Value bool autoLoopFrame public int autoLoopFrame Field Value int baseState public AssetRef<HNSFState> baseState Field Value AssetRef<HNSFState> clearInputBuffer public bool clearInputBuffer Field Value bool conditions public AssetRef<HNSFStateDecision>[] conditions Field Value AssetRef<HNSFStateDecision>[] data public AssetRef<HNSFStateAction>[] data Field Value AssetRef<HNSFStateAction>[] displayName public string displayName Field Value string dontClearHitEntities public bool dontClearHitEntities Field Value bool initialGroundedState public StateGroundedType initialGroundedState Field Value StateGroundedType moveHitCounter public int moveHitCounter Field Value int processBaseStateFirst public bool processBaseStateFirst Field Value bool stateGroup public AssetRef<HNSFState> stateGroup Field Value AssetRef<HNSFState> totalFrames public int totalFrames Field Value int useBaseState public bool useBaseState Field Value bool Methods CheckConditions(Frame, EntityRef, ref HNSFStateContext) public bool CheckConditions(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool CheckIfShouldExecuteAction(HNSFStateAction, List<Type>, List<Type>) public static bool CheckIfShouldExecuteAction(HNSFStateAction action, List<Type> whitelist = null, List<Type> blacklist = null) Parameters action HNSFStateAction whitelist List<Type> blacklist List<Type> Returns bool Execute(ref FrameThreadSafe, FP, HNSFStateAgentData*, EntityRef, ref HNSFStateContext, List<Type>, List<Type>) Executes the state with the information given. public bool Execute(ref FrameThreadSafe frame, FP deltaTime, HNSFStateAgentData* hnsfData, EntityRef entity, ref HNSFStateContext context, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame FrameThreadSafe deltaTime FP hnsfData HNSFStateAgentData* entity EntityRef context HNSFStateContext whitelist List<Type> blacklist List<Type> Returns bool If a transition occurs, returns True."
  },
  "api/Quantum.HNSFStateAction.TargetType.html": {
    "href": "api/Quantum.HNSFStateAction.TargetType.html",
    "title": "Enum HNSFStateAction.TargetType | Rwby Vytal Versus Documentation",
    "keywords": "Enum HNSFStateAction.TargetType Namespace Quantum Assembly Quantum.Simulation.dll public enum HNSFStateAction.TargetType Fields LockOnTarget = 2 Self = 0 Throwee = 1"
  },
  "api/Quantum.HNSFStateAction.html": {
    "href": "api/Quantum.HNSFStateAction.html",
    "title": "Class HNSFStateAction | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFStateAction Namespace Quantum Assembly Quantum.Simulation.dll public class HNSFStateAction : AssetObject Inheritance object Object ScriptableObject AssetObject HNSFStateAction Derived ApplyGravityAction ApplyMovementAction ApplySlopeMovementAction ApplyTractionAction ArticleDestroySelfAction AttemptHardKnockdownAction AttemptSpecialsAction ChangeGroundedStateAction ChangeMovesetAction CharaStateUpdateAction ClampForcesAction ClearAttackStringAction ClearChargeAction ClearComboAction ClearHitEntitiesAction ClearTrackedStatesAction CreateOrUpdateCollisionbox CreateOrUpdateHitbox CreateOrUpdateHurtbox CreateOrUpdateThrowbox DebugMessageAction DirectDamageAction DisableHardTargetingEntityAction DisableLastInputAction DoChargeAction EmptyStateAction ExternalStateAction FindWallAroundAction ForceUngroundAction ModifyAnimationFrameAction ModifyAuraAction ModifyBlackboardBoolAction ModifyBlackboardFPAction ModifyBlackboardIntAction ModifyForcesAction ModifyGravityAction ModifyHitstopAction ModifyHitstunAction ModifyInertiaAction ModifyPassiveAuraGainDelayAction ModifyPhysicsForcesAction ModifySpecialPageAction ModifySpecialPageSetAction ModifyStateFrameAction MoveTowardsPhysicsForceAction MultiplyForcesAction PlayEffectOnChargeLevelAction PlayRandomSoundAction PlaySoundAction PlayVisualEffectAction RegisterAttackToStringAction ReleaseThroweeAction RequestStateChangeAction RequestStateChangeByTagAction RequestStateChangeListAction RotateTowardsAction SelectSoftTargetAction SetAIConfigAction SetAnimFrameBasedOnHitstunAction SetAnimMixerFPParamAction SetAnimationAction SetAnimationMixerForMovementtion SetAnimationMixerParamAction SetArticleLookRotationAction SetCollisionHardnessAction SetCounterhitableAction SetECBAction SetECBPositionFromAnimationCurveAction SetFighterVariableAction SetHitReactionAction SetLastHitAsThroweeAction SetMovementAction SetPositionAction SetRotationAction SetTargetableAction SetVisibilityAction SnapToECBAction SpawnArticleAction StandardDeathAction StandardHitClashAction StandardHitResponseAction StartCutsceneAction StopCutsceneAction StopVisualEffectAction TeleportRelatedToTargetAction TrackStateAction Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields Label public string Label Field Value string actionDisabled public bool actionDisabled Field Value bool children public AssetRef<HNSFStateAction>[] children Field Value AssetRef<HNSFStateAction>[] decision public AssetRef<HNSFStateDecision>[] decision Field Value AssetRef<HNSFStateDecision>[] frameRanges public ActionRange[] frameRanges Field Value ActionRange[] parent public AssetRef<HNSFStateAction> parent Field Value AssetRef<HNSFStateAction> targetType public HNSFStateAction.TargetType targetType Field Value HNSFStateAction.TargetType Methods Copy(HNSFStateAction) public virtual void Copy(HNSFStateAction target) Parameters target HNSFStateAction Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) public bool Execute(Frame frame, EntityRef entity, HNSFStateAgentData* data, FP rangePercent, ref HNSFStateContext stateContext, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame Frame entity EntityRef data HNSFStateAgentData* rangePercent FP stateContext HNSFStateContext whitelist List<Type> blacklist List<Type> Returns bool Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) public bool Execute(Frame frame, EntityRef entity, HNSFStateAgentData* data, ref HNSFStateContext stateContext, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame Frame entity EntityRef data HNSFStateAgentData* stateContext HNSFStateContext whitelist List<Type> blacklist List<Type> Returns bool Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) public bool Execute(ref FrameThreadSafe frame, EntityRef entity, HNSFStateAgentData* data, ref HNSFStateContext stateContext, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame FrameThreadSafe entity EntityRef data HNSFStateAgentData* stateContext HNSFStateContext whitelist List<Type> blacklist List<Type> Returns bool ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public virtual bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.HNSFStateAgent.html": {
    "href": "api/Quantum.HNSFStateAgent.html",
    "title": "Struct HNSFStateAgent | Rwby Vytal Versus Documentation",
    "keywords": "Struct HNSFStateAgent Namespace Quantum Assembly Quantum.Simulation.dll public struct HNSFStateAgent : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 136 Field Value int globalStateData public HNSFStateAgentData globalStateData Field Value HNSFStateAgentData groupStateData public HNSFStateAgentData groupStateData Field Value HNSFStateAgentData movesetStateData public HNSFStateAgentData movesetStateData Field Value HNSFStateAgentData stateData public HNSFStateAgentData stateData Field Value HNSFStateAgentData stateSet public AssetRef<HNSFStateSet> stateSet Field Value AssetRef<HNSFStateSet> Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.HNSFStateAgentData.html": {
    "href": "api/Quantum.HNSFStateAgentData.html",
    "title": "Struct HNSFStateAgentData | Rwby Vytal Versus Documentation",
    "keywords": "Struct HNSFStateAgentData Namespace Quantum Assembly Quantum.Simulation.dll public struct HNSFStateAgentData Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 32 Field Value int dontAutoIncrementFrame public QBoolean dontAutoIncrementFrame Field Value QBoolean frame public int frame Field Value int state public AssetRef<HNSFState> state Field Value AssetRef<HNSFState> toFrame public int toFrame Field Value int toState public AssetRef<HNSFState> toState Field Value AssetRef<HNSFState> toStateRequested public QBoolean toStateRequested Field Value QBoolean Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.HNSFStateContext.html": {
    "href": "api/Quantum.HNSFStateContext.html",
    "title": "Struct HNSFStateContext | Rwby Vytal Versus Documentation",
    "keywords": "Struct HNSFStateContext Namespace Quantum Assembly Quantum.Simulation.dll public struct HNSFStateContext Constructors HNSFStateContext(HNSFStateAgentData*, AIBlackboardComponent*, AIConfigBase, AssetRef<HNSFState>, int) public HNSFStateContext(HNSFStateAgentData* agentData, AIBlackboardComponent* blackboard, AIConfigBase aiConfig, AssetRef<HNSFState> workingState, int stateFrame) Parameters agentData HNSFStateAgentData* blackboard AIBlackboardComponent* aiConfig AIConfigBase workingState AssetRef<HNSFState> stateFrame int HNSFStateContext(HNSFStateAgentData*, AIBlackboardComponent*, AIConfigBase, int) public HNSFStateContext(HNSFStateAgentData* agentData, AIBlackboardComponent* blackboard, AIConfigBase aiConfig, int stateFrame) Parameters agentData HNSFStateAgentData* blackboard AIBlackboardComponent* aiConfig AIConfigBase stateFrame int Fields agentData public readonly HNSFStateAgentData* agentData Field Value HNSFStateAgentData* aiConfig public readonly AIConfigBase aiConfig Field Value AIConfigBase blackboard public readonly AIBlackboardComponent* blackboard Field Value AIBlackboardComponent* stateFrame public int stateFrame Field Value int workingState public AssetRef<HNSFState> workingState Field Value AssetRef<HNSFState>"
  },
  "api/Quantum.HNSFStateDecision.html": {
    "href": "api/Quantum.HNSFStateDecision.html",
    "title": "Class HNSFStateDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFStateDecision Namespace Quantum Assembly Quantum.Simulation.dll public class HNSFStateDecision : AssetObject Inheritance object Object ScriptableObject AssetObject HNSFStateDecision Derived BoolParamDecision ButtonHeldDecision ChargeLevelDecision CombatantHasHitDecision CombatantHitCountDecision CurrentMovesetDecision CurrentStatesetDecision FPParamDecision FacingTargetDecision FallSpeedDecision HNSFANDDecision HNSFNOTDecision HNSFORDecision HasClashedDecision HasValidHardTargetDecision HasValidSoftTargetDecision HasValidThroweesDecision HasWallDecision InAuraBurnoutDecision InputButtonDecision InputConditionDecision InputDirectionDecision InputMovementMagnitudeDecision IntParamDecision IntParamPercentageDecision IntValueDecision IsBeingThrownDecision IsDeadDecision IsMaxChargeDecision MoveInAttackStringDecision MoveIsLastInAttackStringDecision NextStateDecision NextStatesetDecision PhysicsGroundedDecision PhysicsShapeOverlapDecision StateGroundedDecision StateTrackedDecision Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields Label public string Label Field Value string Methods Decide(Frame, EntityRef, ref HNSFStateContext) public virtual bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) public virtual bool DecideThreadSafe(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.HNSFStateFunction-1.html": {
    "href": "api/Quantum.HNSFStateFunction-1.html",
    "title": "Class HNSFStateFunction<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFStateFunction<T> Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HNSFStateFunction<T> : HNSFStateFunction Type Parameters T Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<T> Derived StateFunctionAssetRef StateFunctionAssetRefList StateFunctionBool StateFunctionBoolList StateFunctionByteList StateFunctionEntityRef StateFunctionEntityRefList StateFunctionFP StateFunctionFPList StateFunctionFPVector2 StateFunctionFPVector2List StateFunctionFPVector3 StateFunctionFPVector3List StateFunctionInt StateFunctionIntegerList Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields Label public string Label Field Value string Methods Execute(Frame, EntityRef, ref HNSFStateContext) public virtual T Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns T Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) public virtual T Execute(FrameThreadSafe frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame FrameThreadSafe entity EntityRef stateContext HNSFStateContext Returns T"
  },
  "api/Quantum.HNSFStateFunction.html": {
    "href": "api/Quantum.HNSFStateFunction.html",
    "title": "Class HNSFStateFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFStateFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HNSFStateFunction : AssetObject Inheritance object Object ScriptableObject AssetObject HNSFStateFunction Derived HNSFStateFunction<T> Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.HNSFStateHelper.Chara.html": {
    "href": "api/Quantum.HNSFStateHelper.Chara.html",
    "title": "Class HNSFStateHelper.Chara | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFStateHelper.Chara Namespace Quantum Assembly Quantum.Simulation.dll public static class HNSFStateHelper.Chara Inheritance object HNSFStateHelper.Chara Methods CheckForStateChange(Frame, EntityRef, CharaStateMachines*, AIConfigBase, List<Type>, List<Type>) public static void CheckForStateChange(Frame frame, EntityRef entity, CharaStateMachines* charaStateMachines, AIConfigBase config, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame Frame entity EntityRef charaStateMachines CharaStateMachines* config AIConfigBase whitelist List<Type> blacklist List<Type> UpdateCharaStateMachines(Frame, EntityRef, CharaStateMachines*, AIConfigBase, bool, List<Type>, List<Type>) public static void UpdateCharaStateMachines(Frame frame, EntityRef entity, CharaStateMachines* charaStateMachines, AIConfigBase config, bool checkForTransitions = true, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame Frame entity EntityRef charaStateMachines CharaStateMachines* config AIConfigBase checkForTransitions bool whitelist List<Type> blacklist List<Type> UpdateCharaStateMachines(Frame, EntityRef, bool) public static void UpdateCharaStateMachines(Frame frame, EntityRef entity, bool checkForTransitions = true) Parameters frame Frame entity EntityRef checkForTransitions bool UpdateState(Frame, HNSFStateAgentData*, EntityRef, AIBlackboardComponent*, AIConfigBase, List<Type>, List<Type>) public static void UpdateState(Frame frame, HNSFStateAgentData* agentData, EntityRef entity, AIBlackboardComponent* blackboard, AIConfigBase aiConfig, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame Frame agentData HNSFStateAgentData* entity EntityRef blackboard AIBlackboardComponent* aiConfig AIConfigBase whitelist List<Type> blacklist List<Type>"
  },
  "api/Quantum.HNSFStateHelper.ThreadSafe.html": {
    "href": "api/Quantum.HNSFStateHelper.ThreadSafe.html",
    "title": "Class HNSFStateHelper.ThreadSafe | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFStateHelper.ThreadSafe Namespace Quantum Assembly Quantum.Simulation.dll public static class HNSFStateHelper.ThreadSafe Inheritance object HNSFStateHelper.ThreadSafe Methods Update(FrameThreadSafe, FP, HNSFStateAgentData*, EntityRef, HNSFState, ref HNSFStateContext, List<Type>, List<Type>) public static void Update(FrameThreadSafe frame, FP deltaTime, HNSFStateAgentData* data, EntityRef entity, HNSFState state, ref HNSFStateContext stateContext, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame FrameThreadSafe deltaTime FP data HNSFStateAgentData* entity EntityRef state HNSFState stateContext HNSFStateContext whitelist List<Type> blacklist List<Type> Update(FrameThreadSafe, FP, HNSFStateAgentData*, EntityRef, ref HNSFStateContext, List<Type>, List<Type>) public static void Update(FrameThreadSafe frame, FP deltaTime, HNSFStateAgentData* data, EntityRef entity, ref HNSFStateContext stateContext, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame FrameThreadSafe deltaTime FP data HNSFStateAgentData* entity EntityRef stateContext HNSFStateContext whitelist List<Type> blacklist List<Type>"
  },
  "api/Quantum.HNSFStateHelper.html": {
    "href": "api/Quantum.HNSFStateHelper.html",
    "title": "Class HNSFStateHelper | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFStateHelper Namespace Quantum Assembly Quantum.Simulation.dll public static class HNSFStateHelper Inheritance object HNSFStateHelper Methods CauseStateTransition(Frame, FP, EntityRef, HNSFState, ref HNSFStateContext, bool, List<Type>, List<Type>) public static void CauseStateTransition(Frame frame, FP deltaTime, EntityRef entity, HNSFState currentState, ref HNSFStateContext stateContext, bool cleanup = false, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame Frame deltaTime FP entity EntityRef currentState HNSFState stateContext HNSFStateContext cleanup bool whitelist List<Type> blacklist List<Type> CauseStateTransition(Frame, FP, EntityRef, ref HNSFStateContext, bool, List<Type>, List<Type>) public static void CauseStateTransition(Frame frame, FP deltaTime, EntityRef entity, ref HNSFStateContext stateContext, bool cleanup = false, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame Frame deltaTime FP entity EntityRef stateContext HNSFStateContext cleanup bool whitelist List<Type> blacklist List<Type> ChangeMoveset(Frame, FP, EntityRef, AssetRef<HNSFState>, HNSFStateAgent*, AIBlackboardComponent*, AIConfigBase) public static void ChangeMoveset(Frame frame, FP deltaTime, EntityRef entity, AssetRef<HNSFState> toMovesetRef, HNSFStateAgent* stateAgent, AIBlackboardComponent* blackboard, AIConfigBase config) Parameters frame Frame deltaTime FP entity EntityRef toMovesetRef AssetRef<HNSFState> stateAgent HNSFStateAgent* blackboard AIBlackboardComponent* config AIConfigBase ConvertFrameNumber(int, int) public static int ConvertFrameNumber(int stateTotalFrames, int number) Parameters stateTotalFrames int number int Returns int IsFrameWithinRanges(ActionRange[], int, int) public static bool IsFrameWithinRanges(this ActionRange[] actionRangeList, int stateTotalFrames, int frame) Parameters actionRangeList ActionRange[] stateTotalFrames int frame int Returns bool IsFrameWithinRanges(ActionRange[], int, int, out FP) public static bool IsFrameWithinRanges(this ActionRange[] actionRangeList, int stateTotalFrames, int frame, out FP percentage) Parameters actionRangeList ActionRange[] stateTotalFrames int frame int percentage FP Returns bool Update(Frame, FP, EntityRef, HNSFState, ref HNSFStateContext, List<Type>, List<Type>) public static void Update(Frame frame, FP deltaTime, EntityRef entity, HNSFState state, ref HNSFStateContext context, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame Frame deltaTime FP entity EntityRef state HNSFState context HNSFStateContext whitelist List<Type> blacklist List<Type> Update(Frame, FP, EntityRef, ref HNSFStateContext, List<Type>, List<Type>) public static void Update(Frame frame, FP deltaTime, EntityRef entity, ref HNSFStateContext context, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame Frame deltaTime FP entity EntityRef context HNSFStateContext whitelist List<Type> blacklist List<Type> UpdateState(Frame, EntityRef, ref HNSFStateContext, List<Type>, List<Type>) public static void UpdateState(Frame frame, EntityRef entity, ref HNSFStateContext stateContext, List<Type> whitelist = null, List<Type> blacklist = null) Parameters frame Frame entity EntityRef stateContext HNSFStateContext whitelist List<Type> blacklist List<Type>"
  },
  "api/Quantum.HNSFStateSet.html": {
    "href": "api/Quantum.HNSFStateSet.html",
    "title": "Class HNSFStateSet | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFStateSet Namespace Quantum Assembly Quantum.Simulation.dll public class HNSFStateSet : AssetObject Inheritance object Object ScriptableObject AssetObject HNSFStateSet Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields Label public string Label Field Value string aerialGlobalState public AssetRef<HNSFState> aerialGlobalState Field Value AssetRef<HNSFState> defaultMoveset public AssetRef<HNSFState> defaultMoveset Field Value AssetRef<HNSFState> defaultSpecials public AssetRef<HNSFSpecialSet>[] defaultSpecials Field Value AssetRef<HNSFSpecialSet>[] groundedGlobalState public AssetRef<HNSFState> groundedGlobalState Field Value AssetRef<HNSFState> specials public AssetRef<HNSFSpecialSet>[] specials Field Value AssetRef<HNSFSpecialSet>[] states public AssetRef<HNSFState>[] states Field Value AssetRef<HNSFState>[]"
  },
  "api/Quantum.HNSFTaggedStatesAsset.TagHNSFStateDefinition.html": {
    "href": "api/Quantum.HNSFTaggedStatesAsset.TagHNSFStateDefinition.html",
    "title": "Class HNSFTaggedStatesAsset.TagHNSFStateDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFTaggedStatesAsset.TagHNSFStateDefinition Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HNSFTaggedStatesAsset.TagHNSFStateDefinition Inheritance object HNSFTaggedStatesAsset.TagHNSFStateDefinition Fields name public string name Field Value string state public AssetRef<HNSFState> state Field Value AssetRef<HNSFState> tag public AssetRef<Tag> tag Field Value AssetRef<Tag>"
  },
  "api/Quantum.HNSFTaggedStatesAsset.html": {
    "href": "api/Quantum.HNSFTaggedStatesAsset.html",
    "title": "Class HNSFTaggedStatesAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFTaggedStatesAsset Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HNSFTaggedStatesAsset : AssetObject Inheritance object Object ScriptableObject AssetObject HNSFTaggedStatesAsset Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Get(AssetRef<Tag>) public AssetRef<HNSFState> Get(AssetRef<Tag> tagRef) Parameters tagRef AssetRef<Tag> Returns AssetRef<HNSFState> TryGetValue(AssetRef<Tag>, out AssetRef<HNSFState>) public bool TryGetValue(AssetRef<Tag> tagRef, out AssetRef<HNSFState> stateRef) Parameters tagRef AssetRef<Tag> stateRef AssetRef<HNSFState> Returns bool"
  },
  "api/Quantum.HardTargetEntityDisabled.html": {
    "href": "api/Quantum.HardTargetEntityDisabled.html",
    "title": "Struct HardTargetEntityDisabled | Rwby Vytal Versus Documentation",
    "keywords": "Struct HardTargetEntityDisabled Namespace Quantum Assembly Quantum.Simulation.dll public struct HardTargetEntityDisabled : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int removeTimer public int removeTimer Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.HasClashedDecision.html": {
    "href": "api/Quantum.HasClashedDecision.html",
    "title": "Class HasClashedDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HasClashedDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HasClashedDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision HasClashedDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.HasValidHardTargetDecision.html": {
    "href": "api/Quantum.HasValidHardTargetDecision.html",
    "title": "Class HasValidHardTargetDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HasValidHardTargetDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HasValidHardTargetDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision HasValidHardTargetDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.HasValidSoftTargetDecision.html": {
    "href": "api/Quantum.HasValidSoftTargetDecision.html",
    "title": "Class HasValidSoftTargetDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HasValidSoftTargetDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HasValidSoftTargetDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision HasValidSoftTargetDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.HasValidThroweesDecision.html": {
    "href": "api/Quantum.HasValidThroweesDecision.html",
    "title": "Class HasValidThroweesDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HasValidThroweesDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HasValidThroweesDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision HasValidThroweesDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields throweesToCheckByID public int[] throweesToCheckByID Field Value int[] Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.HasWallDecision.html": {
    "href": "api/Quantum.HasWallDecision.html",
    "title": "Class HasWallDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class HasWallDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HasWallDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision HasWallDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields distanceCheck public FP distanceCheck Field Value FP Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.Health.html": {
    "href": "api/Quantum.Health.html",
    "title": "Struct Health | Rwby Vytal Versus Documentation",
    "keywords": "Struct Health Namespace Quantum Assembly Quantum.Simulation.dll public struct Health : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int value public int value Field Value int Methods ApplyDamage(Frame, EntityRef, int, bool, bool) public void ApplyDamage(Frame frame, EntityRef entity, int damage, bool doesNotKill, bool clampAtZero = true) Parameters frame Frame entity EntityRef damage int doesNotKill bool clampAtZero bool ApplyDamage_NoSignal(int, bool, bool) public void ApplyDamage_NoSignal(int damage, bool doesNotKill, bool clampAtZero = true) Parameters damage int doesNotKill bool clampAtZero bool ApplyHealing(Frame, EntityRef, int, int) public void ApplyHealing(Frame frame, EntityRef entity, int healing, int maxHealth) Parameters frame Frame entity EntityRef healing int maxHealth int ApplyHealing_NoSignal(int, int) public void ApplyHealing_NoSignal(int healing, int maxHealth) Parameters healing int maxHealth int GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.HitInfo.html": {
    "href": "api/Quantum.HitInfo.html",
    "title": "Class HitInfo | Rwby Vytal Versus Documentation",
    "keywords": "Class HitInfo Namespace Quantum Assembly Quantum.Simulation.dll public class HitInfo : AssetObject Inheritance object Object ScriptableObject AssetObject HitInfo Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields airReaction public AssetRef<StateFunctionAssetRef> airReaction Field Value AssetRef<StateFunctionAssetRef> attackLevel public int attackLevel Field Value int attackerHitstop public int attackerHitstop Field Value int auraDamageOnBlock public int auraDamageOnBlock Field Value int auraDamageOnHit public int auraDamageOnHit Field Value int auraGainDelayOnBlock public int auraGainDelayOnBlock Field Value int auraGainDelayOnHit public int auraGainDelayOnHit Field Value int auraGainedOnBlock public int auraGainedOnBlock Field Value int auraGainedOnHit public int auraGainedOnHit Field Value int autoLinkBox public bool autoLinkBox Field Value bool autolink public bool autolink Field Value bool autolinkBoxPercent public FP autolinkBoxPercent Field Value FP autolinkPercent public FP autolinkPercent Field Value FP blockForceAerial public FPVector3 blockForceAerial Field Value FPVector3 blockForceGrounded public FPVector3 blockForceGrounded Field Value FPVector3 blockstun public int blockstun Field Value int bonusProration public FP bonusProration Field Value FP breaksThrow public bool breaksThrow Field Value bool cameraShakeLength public FP cameraShakeLength Field Value FP cameraShakeStrength public int cameraShakeStrength Field Value int chipDamage public int chipDamage Field Value int clashLevel public int clashLevel Field Value int comboDecay public int comboDecay Field Value int comboProration public FP comboProration Field Value FP counterhitInfo public AssetRef<HitInfo> counterhitInfo Field Value AssetRef<HitInfo> damage public int damage Field Value int doesNotKill public bool doesNotKill Field Value bool dontClash public bool dontClash Field Value bool firstHitComboDecay public int firstHitComboDecay Field Value int firstHitProtation public FP firstHitProtation Field Value FP forceIgnoreRotY public bool forceIgnoreRotY Field Value bool groundBounceForce public FPVector3 groundBounceForce Field Value FPVector3 groundBounces public bool groundBounces Field Value bool groundReaction public AssetRef<StateFunctionAssetRef> groundReaction Field Value AssetRef<StateFunctionAssetRef> hardKnockdown public bool hardKnockdown Field Value bool hasCustomGravity public bool hasCustomGravity Field Value bool hasCustonTraction public bool hasCustonTraction Field Value bool hitForceAerial public FPVector3 hitForceAerial Field Value FPVector3 hitForceGrounded public FPVector3 hitForceGrounded Field Value FPVector3 hitStrength public HitStrengthType hitStrength Field Value HitStrengthType hitstop public int hitstop Field Value int hitstun public int hitstun Field Value int hitstunGravity public FP hitstunGravity Field Value FP hitstunTraction public FP hitstunTraction Field Value FP ignoreGravityProration public bool ignoreGravityProration Field Value bool ignoreHitstunScaling public bool ignoreHitstunScaling Field Value bool ignoreHorizontalLaunchProration public bool ignoreHorizontalLaunchProration Field Value bool ignoreLaunchProration public bool ignoreLaunchProration Field Value bool ignoreProration public bool ignoreProration Field Value bool onBlockedEffects public AssetRef<VisualEffectEntry>[] onBlockedEffects Field Value AssetRef<VisualEffectEntry>[] onBlockedSounds public PlaySoundRequest[] onBlockedSounds Field Value PlaySoundRequest[] onHitEffects public AssetRef<VisualEffectEntry>[] onHitEffects Field Value AssetRef<VisualEffectEntry>[] onHitSounds public PlaySoundRequest[] onHitSounds Field Value PlaySoundRequest[] punishCounterhitInfo public AssetRef<HitInfo> punishCounterhitInfo Field Value AssetRef<HitInfo> unblockable public bool unblockable Field Value bool untech public int untech Field Value int wallBounceForce public FPVector3 wallBounceForce Field Value FPVector3 wallBounces public bool wallBounces Field Value bool"
  },
  "api/Quantum.HitReactionGuardFunction.html": {
    "href": "api/Quantum.HitReactionGuardFunction.html",
    "title": "Class HitReactionGuardFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class HitReactionGuardFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class HitReactionGuardFunction : StateFunctionInt Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<int> StateFunctionInt HitReactionGuardFunction Inherited Members HNSFStateFunction<int>.Label HNSFStateFunction<int>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields canBeChipKilled public bool canBeChipKilled Field Value bool functionIfGuardFailed public StateFunctionInt functionIfGuardFailed Field Value StateFunctionInt guardAngle public FP guardAngle Field Value FP Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override int Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int"
  },
  "api/Quantum.HitStrengthType.html": {
    "href": "api/Quantum.HitStrengthType.html",
    "title": "Enum HitStrengthType | Rwby Vytal Versus Documentation",
    "keywords": "Enum HitStrengthType Namespace Quantum Assembly Quantum.Simulation.dll public enum HitStrengthType Fields Heavy = 2 Light = 0 Medium = 1"
  },
  "api/Quantum.Hitbox.html": {
    "href": "api/Quantum.Hitbox.html",
    "title": "Struct Hitbox | Rwby Vytal Versus Documentation",
    "keywords": "Struct Hitbox Namespace Quantum Assembly Quantum.Simulation.dll public struct Hitbox : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 32 Field Value int active public QBoolean active Field Value QBoolean hitInfoRef public AssetRef hitInfoRef Field Value AssetRef id public int id Field Value int isThrow public QBoolean isThrow Field Value QBoolean owner public EntityRef owner Field Value EntityRef priority public int priority Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.HitboxCombatPair.html": {
    "href": "api/Quantum.HitboxCombatPair.html",
    "title": "Struct HitboxCombatPair | Rwby Vytal Versus Documentation",
    "keywords": "Struct HitboxCombatPair Namespace Quantum Assembly Quantum.Simulation.dll public struct HitboxCombatPair Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 40 Field Value int attackeeHitboxOrHurtbox public EntityRef attackeeHitboxOrHurtbox Field Value EntityRef attackeeHurtboxPriority public int attackeeHurtboxPriority Field Value int attacker public EntityRef attacker Field Value EntityRef attackerHitbox public EntityRef attackerHitbox Field Value EntityRef attackerHitboxPriority public int attackerHitboxPriority Field Value int isThrow public QBoolean isThrow Field Value QBoolean result public HitboxResolveResult result Field Value HitboxResolveResult Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.Hurtbox.html": {
    "href": "api/Quantum.Hurtbox.html",
    "title": "Struct Hurtbox | Rwby Vytal Versus Documentation",
    "keywords": "Struct Hurtbox Namespace Quantum Assembly Quantum.Simulation.dll public struct Hurtbox : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 24 Field Value int active public QBoolean active Field Value QBoolean id public int id Field Value int owner public EntityRef owner Field Value EntityRef priority public int priority Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.IAfterMove.html": {
    "href": "api/Quantum.IAfterMove.html",
    "title": "Interface IAfterMove | Rwby Vytal Versus Documentation",
    "keywords": "Interface IAfterMove Namespace Quantum Assembly Quantum.Simulation.dll public interface IAfterMove Methods AfterMove(KCCContext, KCCProcessorInfo) This callback is invoked after KCC movement - on the end of KCC.Update(). Not called if KCC.IsActive is set to false. void AfterMove(KCCContext context, KCCProcessorInfo processorInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing the processor."
  },
  "api/Quantum.IAfterMoveStep.html": {
    "href": "api/Quantum.IAfterMoveStep.html",
    "title": "Interface IAfterMoveStep | Rwby Vytal Versus Documentation",
    "keywords": "Interface IAfterMoveStep Namespace Quantum Assembly Quantum.Simulation.dll public interface IAfterMoveStep Methods AfterMoveStep(KCCContext, KCCProcessorInfo, KCCOverlapInfo) This callback is invoked after each KCC move step - this happens if the KCC moves too fast and the continuous collision detection (CCD) algorithm splits translation vector into multiple smaller steps. During CCD movement the KCCData.DeltaTime is scaled proportionally to size of the step. Not called if KCC.IsActive is set to false. void AfterMoveStep(KCCContext context, KCCProcessorInfo processorInfo, KCCOverlapInfo overlapInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing the processor. overlapInfo KCCOverlapInfo Reference to all physics overlap hits in current move step and other metadata."
  },
  "api/Quantum.IAssetSerializerLegacyExtensions.html": {
    "href": "api/Quantum.IAssetSerializerLegacyExtensions.html",
    "title": "Class IAssetSerializerLegacyExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class IAssetSerializerLegacyExtensions Namespace Quantum Assembly Quantum.Simulation.dll public static class IAssetSerializerLegacyExtensions Inheritance object IAssetSerializerLegacyExtensions Methods DeserializeAssets(IAssetSerializer, byte[]) [Obsolete(\"Use AssetsFromByteArray instead\")] public static IEnumerable<AssetObject> DeserializeAssets(this IAssetSerializer serializer, byte[] data) Parameters serializer IAssetSerializer data byte[] Returns IEnumerable<AssetObject> SerializeAssets(IAssetSerializer, IEnumerable<AssetObject>) [Obsolete(\"Use AssetsToByteArray instead\")] public static byte[] SerializeAssets(this IAssetSerializer serializer, IEnumerable<AssetObject> assets) Parameters serializer IAssetSerializer assets IEnumerable<AssetObject> Returns byte[]"
  },
  "api/Quantum.IBeforeMove.html": {
    "href": "api/Quantum.IBeforeMove.html",
    "title": "Interface IBeforeMove | Rwby Vytal Versus Documentation",
    "keywords": "Interface IBeforeMove Namespace Quantum Assembly Quantum.Simulation.dll public interface IBeforeMove Methods BeforeMove(KCCContext, KCCProcessorInfo) This callback is invoked before KCC movement - on the beginning of KCC.Update(). Not called if KCC.IsActive is set to false. void BeforeMove(KCCContext context, KCCProcessorInfo processorInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing the processor."
  },
  "api/Quantum.IGameStateGroup.html": {
    "href": "api/Quantum.IGameStateGroup.html",
    "title": "Interface IGameStateGroup | Rwby Vytal Versus Documentation",
    "keywords": "Interface IGameStateGroup Namespace Quantum Assembly Quantum.Simulation.dll public interface IGameStateGroup"
  },
  "api/Quantum.IGameStateGroupCharacterIntro.html": {
    "href": "api/Quantum.IGameStateGroupCharacterIntro.html",
    "title": "Interface IGameStateGroupCharacterIntro | Rwby Vytal Versus Documentation",
    "keywords": "Interface IGameStateGroupCharacterIntro Namespace Quantum Assembly Quantum.Simulation.dll public interface IGameStateGroupCharacterIntro : IGameStateGroup"
  },
  "api/Quantum.IGameStateGroupCountdown.html": {
    "href": "api/Quantum.IGameStateGroupCountdown.html",
    "title": "Interface IGameStateGroupCountdown | Rwby Vytal Versus Documentation",
    "keywords": "Interface IGameStateGroupCountdown Namespace Quantum Assembly Quantum.Simulation.dll public interface IGameStateGroupCountdown : IGameStateGroup"
  },
  "api/Quantum.IGameStateGroupGame.html": {
    "href": "api/Quantum.IGameStateGroupGame.html",
    "title": "Interface IGameStateGroupGame | Rwby Vytal Versus Documentation",
    "keywords": "Interface IGameStateGroupGame Namespace Quantum Assembly Quantum.Simulation.dll public interface IGameStateGroupGame : IGameStateGroup"
  },
  "api/Quantum.IGameStateGroupLobby.html": {
    "href": "api/Quantum.IGameStateGroupLobby.html",
    "title": "Interface IGameStateGroupLobby | Rwby Vytal Versus Documentation",
    "keywords": "Interface IGameStateGroupLobby Namespace Quantum Assembly Quantum.Simulation.dll public interface IGameStateGroupLobby : IGameStateGroup"
  },
  "api/Quantum.IGameStateGroupMapIntro.html": {
    "href": "api/Quantum.IGameStateGroupMapIntro.html",
    "title": "Interface IGameStateGroupMapIntro | Rwby Vytal Versus Documentation",
    "keywords": "Interface IGameStateGroupMapIntro Namespace Quantum Assembly Quantum.Simulation.dll public interface IGameStateGroupMapIntro : IGameStateGroup"
  },
  "api/Quantum.IGameStateGroupOutro.html": {
    "href": "api/Quantum.IGameStateGroupOutro.html",
    "title": "Interface IGameStateGroupOutro | Rwby Vytal Versus Documentation",
    "keywords": "Interface IGameStateGroupOutro Namespace Quantum Assembly Quantum.Simulation.dll public interface IGameStateGroupOutro : IGameStateGroup"
  },
  "api/Quantum.IGameStateGroupPostgame.html": {
    "href": "api/Quantum.IGameStateGroupPostgame.html",
    "title": "Interface IGameStateGroupPostgame | Rwby Vytal Versus Documentation",
    "keywords": "Interface IGameStateGroupPostgame Namespace Quantum Assembly Quantum.Simulation.dll public interface IGameStateGroupPostgame : IGameStateGroup"
  },
  "api/Quantum.IGameStateGroupPregame.html": {
    "href": "api/Quantum.IGameStateGroupPregame.html",
    "title": "Interface IGameStateGroupPregame | Rwby Vytal Versus Documentation",
    "keywords": "Interface IGameStateGroupPregame Namespace Quantum Assembly Quantum.Simulation.dll public interface IGameStateGroupPregame : IGameStateGroup"
  },
  "api/Quantum.IGameStateGroupVictory.html": {
    "href": "api/Quantum.IGameStateGroupVictory.html",
    "title": "Interface IGameStateGroupVictory | Rwby Vytal Versus Documentation",
    "keywords": "Interface IGameStateGroupVictory Namespace Quantum Assembly Quantum.Simulation.dll public interface IGameStateGroupVictory : IGameStateGroup"
  },
  "api/Quantum.IRunnerFactory.html": {
    "href": "api/Quantum.IRunnerFactory.html",
    "title": "Interface IRunnerFactory | Rwby Vytal Versus Documentation",
    "keywords": "Interface IRunnerFactory Namespace Quantum Assembly Quantum.Simulation.dll The interface for the runner factory. It creates platform specific objects to run the Quantum simulation. public interface IRunnerFactory Properties CreatePlaformInfo Gather the platform information. There is a spelling mistake in the method name, but it's considered a bigger annoyance to change the interface. DeterministicPlatformInfo CreatePlaformInfo { get; } Property Value DeterministicPlatformInfo CreateTaskFactory Create a Quantum task factory. TaskFactory CreateTaskFactory { get; } Property Value TaskFactory UpdateDB The action to when an update to the AssetDB is required. Action UpdateDB { get; } Property Value Action Methods CreateGame(QuantumGameStartParameters) Instantiate an implementation of the Photon.Deterministic.IDeterministicGame. IDeterministicGame CreateGame(QuantumGameStartParameters startParameters) Parameters startParameters QuantumGameStartParameters Start parameters Returns IDeterministicGame Instance of IDeterministicGame CreateProfiler(string, DeterministicSessionConfig, DeterministicPlatformInfo, IDeterministicGame) The callback can be used to create and attach local profiler before the Quantum simulation has been started. void CreateProfiler(string clientId, DeterministicSessionConfig deterministicConfig, DeterministicPlatformInfo platformInfo, IDeterministicGame game) Parameters clientId string Quantum client id deterministicConfig DeterministicSessionConfig Session config platformInfo DeterministicPlatformInfo Platform info game IDeterministicGame Game CreateRunner(Arguments) Create an object that the SessionRunner is running on. For Unity it is wrapped in a MonoBehaviour. SessionRunner CreateRunner(SessionRunner.Arguments arguments) Parameters arguments SessionRunner.Arguments Session arguments Returns SessionRunner A session runner"
  },
  "api/Quantum.ISignalAuraDecreased.html": {
    "href": "api/Quantum.ISignalAuraDecreased.html",
    "title": "Interface ISignalAuraDecreased | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalAuraDecreased Namespace Quantum Assembly Quantum.Simulation.dll public interface ISignalAuraDecreased : ISignal Inherited Members ISignal.RuntimeIndex Methods AuraDecreased(Frame, EntityRef, int, int) void AuraDecreased(Frame f, EntityRef entity, int oldAura, int newAura) Parameters f Frame entity EntityRef oldAura int newAura int"
  },
  "api/Quantum.ISignalAuraIncreased.html": {
    "href": "api/Quantum.ISignalAuraIncreased.html",
    "title": "Interface ISignalAuraIncreased | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalAuraIncreased Namespace Quantum Assembly Quantum.Simulation.dll public interface ISignalAuraIncreased : ISignal Inherited Members ISignal.RuntimeIndex Methods AuraIncreased(Frame, EntityRef, int, int) void AuraIncreased(Frame f, EntityRef entity, int oldAura, int newAura) Parameters f Frame entity EntityRef oldAura int newAura int"
  },
  "api/Quantum.ISignalDespawnFighter.html": {
    "href": "api/Quantum.ISignalDespawnFighter.html",
    "title": "Interface ISignalDespawnFighter | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalDespawnFighter Namespace Quantum Assembly Quantum.Simulation.dll public interface ISignalDespawnFighter : ISignal Inherited Members ISignal.RuntimeIndex Methods DespawnFighter(Frame, EntityRef) void DespawnFighter(Frame f, EntityRef entity) Parameters f Frame entity EntityRef"
  },
  "api/Quantum.ISignalGamemodeStateChanged.html": {
    "href": "api/Quantum.ISignalGamemodeStateChanged.html",
    "title": "Interface ISignalGamemodeStateChanged | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalGamemodeStateChanged Namespace Quantum Assembly Quantum.Simulation.dll public interface ISignalGamemodeStateChanged : ISignal Inherited Members ISignal.RuntimeIndex Methods GamemodeStateChanged(Frame, GenericGamemodeStates, GenericGamemodeStates) void GamemodeStateChanged(Frame f, GenericGamemodeStates newState, GenericGamemodeStates oldState) Parameters f Frame newState GenericGamemodeStates oldState GenericGamemodeStates"
  },
  "api/Quantum.ISignalGamemodeTeamScoreChanged.html": {
    "href": "api/Quantum.ISignalGamemodeTeamScoreChanged.html",
    "title": "Interface ISignalGamemodeTeamScoreChanged | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalGamemodeTeamScoreChanged Namespace Quantum Assembly Quantum.Simulation.dll public interface ISignalGamemodeTeamScoreChanged : ISignal Inherited Members ISignal.RuntimeIndex Methods GamemodeTeamScoreChanged(Frame, int, int, int) void GamemodeTeamScoreChanged(Frame f, int team, int oldValue, int newValue) Parameters f Frame team int oldValue int newValue int"
  },
  "api/Quantum.ISignalHealthDecreased.html": {
    "href": "api/Quantum.ISignalHealthDecreased.html",
    "title": "Interface ISignalHealthDecreased | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalHealthDecreased Namespace Quantum Assembly Quantum.Simulation.dll public interface ISignalHealthDecreased : ISignal Inherited Members ISignal.RuntimeIndex Methods HealthDecreased(Frame, EntityRef, int, int) void HealthDecreased(Frame f, EntityRef entity, int oldHealth, int newHealth) Parameters f Frame entity EntityRef oldHealth int newHealth int"
  },
  "api/Quantum.ISignalHealthIncreased.html": {
    "href": "api/Quantum.ISignalHealthIncreased.html",
    "title": "Interface ISignalHealthIncreased | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalHealthIncreased Namespace Quantum Assembly Quantum.Simulation.dll public interface ISignalHealthIncreased : ISignal Inherited Members ISignal.RuntimeIndex Methods HealthIncreased(Frame, EntityRef, int, int) void HealthIncreased(Frame f, EntityRef entity, int oldHealth, int newHealth) Parameters f Frame entity EntityRef oldHealth int newHealth int"
  },
  "api/Quantum.ISignalOnCollision2D.html": {
    "href": "api/Quantum.ISignalOnCollision2D.html",
    "title": "Interface ISignalOnCollision2D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnCollision2D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once per frame while two non-trigger 2D colliders are touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnCollision2D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnCollision2D(Frame, CollisionInfo2D) Called once per frame while two non-trigger 2D colliders are touching. void OnCollision2D(Frame f, CollisionInfo2D info) Parameters f Frame The frame in which the collision happened. info CollisionInfo2D The Quantum.CollisionInfo2D with data about the collision."
  },
  "api/Quantum.ISignalOnCollision3D.html": {
    "href": "api/Quantum.ISignalOnCollision3D.html",
    "title": "Interface ISignalOnCollision3D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnCollision3D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once per frame while two non-trigger 3D colliders are touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnCollision3D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnCollision3D(Frame, CollisionInfo3D) Called once per frame while two non-trigger 3D colliders are touching. void OnCollision3D(Frame f, CollisionInfo3D info) Parameters f Frame The frame in which the collision happened. info CollisionInfo3D The Quantum.CollisionInfo3D with data about the collision."
  },
  "api/Quantum.ISignalOnCollisionEnter2D.html": {
    "href": "api/Quantum.ISignalOnCollisionEnter2D.html",
    "title": "Interface ISignalOnCollisionEnter2D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnCollisionEnter2D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once two non-trigger 2D colliders start touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnCollisionEnter2D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnCollisionEnter2D(Frame, CollisionInfo2D) Called once two non-trigger 2D colliders start touching. void OnCollisionEnter2D(Frame f, CollisionInfo2D info) Parameters f Frame The frame in which the collision happened. info CollisionInfo2D The Quantum.CollisionInfo2D with data about the collision."
  },
  "api/Quantum.ISignalOnCollisionEnter3D.html": {
    "href": "api/Quantum.ISignalOnCollisionEnter3D.html",
    "title": "Interface ISignalOnCollisionEnter3D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnCollisionEnter3D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once two non-trigger 3D colliders start touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnCollisionEnter3D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnCollisionEnter3D(Frame, CollisionInfo3D) Called once two non-trigger 3D colliders start touching. void OnCollisionEnter3D(Frame f, CollisionInfo3D info) Parameters f Frame The frame in which the collision happened. info CollisionInfo3D The Quantum.CollisionInfo3D with data about the collision."
  },
  "api/Quantum.ISignalOnCollisionExit2D.html": {
    "href": "api/Quantum.ISignalOnCollisionExit2D.html",
    "title": "Interface ISignalOnCollisionExit2D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnCollisionExit2D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once two non-trigger 2D colliders stop touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnCollisionExit2D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnCollisionExit2D(Frame, ExitInfo2D) Called once two non-trigger 2D colliders stop touching. void OnCollisionExit2D(Frame f, ExitInfo2D info) Parameters f Frame The frame in which the entities stopped touching. info ExitInfo2D The Quantum.ExitInfo2D with the entities that were touching."
  },
  "api/Quantum.ISignalOnCollisionExit3D.html": {
    "href": "api/Quantum.ISignalOnCollisionExit3D.html",
    "title": "Interface ISignalOnCollisionExit3D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnCollisionExit3D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once two non-trigger 3D colliders stop touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnCollisionExit3D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnCollisionExit3D(Frame, ExitInfo3D) Called once two non-trigger 3D colliders stop touching. void OnCollisionExit3D(Frame f, ExitInfo3D info) Parameters f Frame The frame in which the entities stopped touching. info ExitInfo3D The Quantum.ExitInfo3D with the entities that were touching."
  },
  "api/Quantum.ISignalOnComponentAdded-1.html": {
    "href": "api/Quantum.ISignalOnComponentAdded-1.html",
    "title": "Interface ISignalOnComponentAdded<T> | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnComponentAdded<T> Namespace Quantum Assembly Quantum.Simulation.dll The signal is called after a component of the desired type has been added to an entity. public interface ISignalOnComponentAdded<T> : ISignal where T : unmanaged, IComponent Type Parameters T Component type Inherited Members ISignal.RuntimeIndex Methods OnAdded(Frame, EntityRef, T*) The signal is called after a component of the desired type has been added to an entity. void OnAdded(Frame f, EntityRef entity, T* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component T* The component that was added."
  },
  "api/Quantum.ISignalOnComponentRemoved-1.html": {
    "href": "api/Quantum.ISignalOnComponentRemoved-1.html",
    "title": "Interface ISignalOnComponentRemoved<T> | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnComponentRemoved<T> Namespace Quantum Assembly Quantum.Simulation.dll The signal is called after a component of the desired type has been removed from an entity. public interface ISignalOnComponentRemoved<T> : ISignal where T : unmanaged, IComponent Type Parameters T Component type Inherited Members ISignal.RuntimeIndex Methods OnRemoved(Frame, EntityRef, T*) The signal is called after a component of the desired type has been removed from an entity. void OnRemoved(Frame f, EntityRef entity, T* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component T* The component that was removed."
  },
  "api/Quantum.ISignalOnEntityPrototypeMaterialized.html": {
    "href": "api/Quantum.ISignalOnEntityPrototypeMaterialized.html",
    "title": "Interface ISignalOnEntityPrototypeMaterialized | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnEntityPrototypeMaterialized Namespace Quantum Assembly Quantum.Simulation.dll This signal is called after an entity prototype has been materialized. During Load Map: the signal is invoked for all Entity and Entity Prototype pairs after all scene prototypes have been materialized. Created with Frame.Create(): the signal is invoked immediately after the prototype has been materialized. /// The frame reference. public interface ISignalOnEntityPrototypeMaterialized : ISignal Inherited Members ISignal.RuntimeIndex Methods OnEntityPrototypeMaterialized(Frame, EntityRef, EntityPrototypeRef) This signal is called after an entity prototype has been materialized. During Load Map: the signal is invoked for all Entity and Entity Prototype pairs after all scene prototypes have been materialized. Created with Frame.Create(): the signal is invoked immediately after the prototype has been materialized. /// The frame reference. void OnEntityPrototypeMaterialized(Frame f, EntityRef entity, EntityPrototypeRef prototypeRef) Parameters f Frame entity EntityRef The entity that was created. prototypeRef EntityPrototypeRef The entity prototype that was materialized."
  },
  "api/Quantum.ISignalOnMapChanged.html": {
    "href": "api/Quantum.ISignalOnMapChanged.html",
    "title": "Interface ISignalOnMapChanged | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnMapChanged Namespace Quantum Assembly Quantum.Simulation.dll This signal is called after the map has been changed by assigning a new map to Map. public interface ISignalOnMapChanged : ISignal Inherited Members ISignal.RuntimeIndex Methods OnMapChanged(Frame, AssetRef<Map>) This signal is called after the map has been changed by assigning a new map to Map. void OnMapChanged(Frame f, AssetRef<Map> previousMap) Parameters f Frame The frame reference previousMap AssetRef<Map> The previous map"
  },
  "api/Quantum.ISignalOnNavMeshMoveAgent.html": {
    "href": "api/Quantum.ISignalOnNavMeshMoveAgent.html",
    "title": "Interface ISignalOnNavMeshMoveAgent | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnNavMeshMoveAgent Namespace Quantum Assembly Quantum.Simulation.dll Signal is called when the agent should move. The desired direction is influence by avoidance. The agent velocity should be set in the callback. Requires enabled Quantum.NavMeshAgentConfig.MovementType to be set to Callback. Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. public interface ISignalOnNavMeshMoveAgent : ISignal Inherited Members ISignal.RuntimeIndex Methods OnNavMeshMoveAgent(Frame, EntityRef, FPVector2) Signal is called when the agent should move. The desired direction is influence by avoidance. The agent velocity should be set in the callback. Requires enabled Quantum.NavMeshAgentConfig.MovementType to be set to Callback. Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. void OnNavMeshMoveAgent(Frame f, EntityRef entity, FPVector2 desiredDirection) Parameters f Frame The frame reference. entity EntityRef The entity the navmesh agent component belongs to. desiredDirection FPVector2 The normalized direction that the internal steering and avoidance thinks the agent movement vector should be."
  },
  "api/Quantum.ISignalOnNavMeshSearchFailed.html": {
    "href": "api/Quantum.ISignalOnNavMeshSearchFailed.html",
    "title": "Interface ISignalOnNavMeshSearchFailed | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnNavMeshSearchFailed Namespace Quantum Assembly Quantum.Simulation.dll Signal is called when the agent could not find a path in the agent update after using Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase, Photon.Deterministic.FPVector3, Quantum.NavMesh) Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. public interface ISignalOnNavMeshSearchFailed : ISignal Inherited Members ISignal.RuntimeIndex Methods OnNavMeshSearchFailed(Frame, EntityRef, ref bool) Signal is called when the agent could not find a path in the agent update after using Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase, Photon.Deterministic.FPVector3, Quantum.NavMesh) Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. void OnNavMeshSearchFailed(Frame f, EntityRef entity, ref bool resetAgent) Parameters f Frame The frame reference. entity EntityRef The entity the navmesh agent component belongs to resetAgent bool Set this to true if the agent should reset its internal state (default is true)."
  },
  "api/Quantum.ISignalOnNavMeshWaypointReached.html": {
    "href": "api/Quantum.ISignalOnNavMeshWaypointReached.html",
    "title": "Interface ISignalOnNavMeshWaypointReached | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnNavMeshWaypointReached Namespace Quantum Assembly Quantum.Simulation.dll Signal is called when an agent reaches a waypoint. Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. public interface ISignalOnNavMeshWaypointReached : ISignal Inherited Members ISignal.RuntimeIndex Methods OnNavMeshWaypointReached(Frame, EntityRef, FPVector3, WaypointFlag, ref bool) Signal is called when an agent reaches a waypoint. Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. void OnNavMeshWaypointReached(Frame f, EntityRef entity, FPVector3 waypoint, Navigation.WaypointFlag waypointFlags, ref bool resetAgent) Parameters f Frame The frame reference. entity EntityRef The entity the navmesh agent component belongs to waypoint FPVector3 The current waypoint position waypointFlags Navigation.WaypointFlag The current waypoint flags resetAgent bool If set to true the NavMeshPathfinder component will be cleared and stopped. Set to false if NavMeshPathfinder.SetTarget() was called inside the callback."
  },
  "api/Quantum.ISignalOnPlayerAdded.html": {
    "href": "api/Quantum.ISignalOnPlayerAdded.html",
    "title": "Interface ISignalOnPlayerAdded | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnPlayerAdded Namespace Quantum Assembly Quantum.Simulation.dll This signal is called when a player was successfully added to the simulation and the server accepted the RuntimePlayer data. public interface ISignalOnPlayerAdded : ISignal Inherited Members ISignal.RuntimeIndex Methods OnPlayerAdded(Frame, PlayerRef, bool) This signal is called when a player was successfully added to the simulation and the server accepted the RuntimePlayer data. void OnPlayerAdded(Frame f, PlayerRef player, bool firstTime) Parameters f Frame The frame reference. player PlayerRef The player that was added. firstTime bool The first time that this player ref was assigned to a player at all. When firstTime is false the player ref is being reused by a different player. See documentation."
  },
  "api/Quantum.ISignalOnPlayerConnected.html": {
    "href": "api/Quantum.ISignalOnPlayerConnected.html",
    "title": "Interface ISignalOnPlayerConnected | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnPlayerConnected Namespace Quantum Assembly Quantum.Simulation.dll The signal is called when a player has successfully joined the simulation. It's originating from the PlayerConnectedSystem. The connected status is based on the Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef). The signal is always called from a verified frame. public interface ISignalOnPlayerConnected : ISignal Inherited Members ISignal.RuntimeIndex Methods OnPlayerConnected(Frame, PlayerRef) The signal is called when a player has successfully joined the simulation. It's originating from the PlayerConnectedSystem. The connected status is based on the Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef). The signal is always called from a verified frame. void OnPlayerConnected(Frame f, PlayerRef player) Parameters f Frame The frame reference. player PlayerRef The player that connected."
  },
  "api/Quantum.ISignalOnPlayerDataSet.html": {
    "href": "api/Quantum.ISignalOnPlayerDataSet.html",
    "title": "Interface ISignalOnPlayerDataSet | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnPlayerDataSet Namespace Quantum Assembly Quantum.Simulation.dll Obsolete: use ISignalOnPlayerAdded. [Obsolete(\"Use new interface ISignalOnPlayerAdded and change signature to OnPlayerAdded(Frame f, PlayerRef player, bool firstTime)\")] public interface ISignalOnPlayerDataSet : ISignal Inherited Members ISignal.RuntimeIndex Methods OnPlayerDataSet(Frame, PlayerRef) Is called when a player and his RuntimePlayer was added to the simulation. void OnPlayerDataSet(Frame f, PlayerRef player) Parameters f Frame Frame player PlayerRef Player"
  },
  "api/Quantum.ISignalOnPlayerDisconnected.html": {
    "href": "api/Quantum.ISignalOnPlayerDisconnected.html",
    "title": "Interface ISignalOnPlayerDisconnected | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnPlayerDisconnected Namespace Quantum Assembly Quantum.Simulation.dll The signal is called when a player has been removed and disconnected from the simulation. It's originating from the PlayerConnectedSystem. The connected status is based on the Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef). The signal is always called from a verified frame. public interface ISignalOnPlayerDisconnected : ISignal Inherited Members ISignal.RuntimeIndex Methods OnPlayerDisconnected(Frame, PlayerRef) The signal is called when a player has been removed and disconnected from the simulation. It's originating from the PlayerConnectedSystem. The connected status is based on the Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef). The signal is always called from a verified frame. void OnPlayerDisconnected(Frame f, PlayerRef player) Parameters f Frame The frame reference. player PlayerRef The disconnected player."
  },
  "api/Quantum.ISignalOnPlayerRemoved.html": {
    "href": "api/Quantum.ISignalOnPlayerRemoved.html",
    "title": "Interface ISignalOnPlayerRemoved | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnPlayerRemoved Namespace Quantum Assembly Quantum.Simulation.dll This signal is called when a player was removed from the simulation after the InputFlags are set to Photon.Deterministic.DeterministicInputFlags.PlayerNotPresent. public interface ISignalOnPlayerRemoved : ISignal Inherited Members ISignal.RuntimeIndex Methods OnPlayerRemoved(Frame, PlayerRef) This signal is called when a player was removed from the simulation after the InputFlags are set to Photon.Deterministic.DeterministicInputFlags.PlayerNotPresent. void OnPlayerRemoved(Frame f, PlayerRef player) Parameters f Frame The frame reference. player PlayerRef The player that was removed."
  },
  "api/Quantum.ISignalOnTrigger2D.html": {
    "href": "api/Quantum.ISignalOnTrigger2D.html",
    "title": "Interface ISignalOnTrigger2D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnTrigger2D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once per frame while a non-trigger and a trigger 2D colliders are touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnTrigger2D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnTrigger2D(Frame, TriggerInfo2D) Called once per frame while a non-trigger and a trigger 2D colliders are touching. void OnTrigger2D(Frame f, TriggerInfo2D info) Parameters f Frame The frame in which the collision happened. info TriggerInfo2D The Quantum.TriggerInfo2D with data about the trigger collision."
  },
  "api/Quantum.ISignalOnTrigger3D.html": {
    "href": "api/Quantum.ISignalOnTrigger3D.html",
    "title": "Interface ISignalOnTrigger3D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnTrigger3D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once per frame while a non-trigger and a trigger 3D colliders are touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnTrigger3D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnTrigger3D(Frame, TriggerInfo3D) Called once per frame while a non-trigger and a trigger 3D colliders are touching. void OnTrigger3D(Frame f, TriggerInfo3D info) Parameters f Frame The frame in which the collision happened. info TriggerInfo3D The Quantum.TriggerInfo3D with data about the trigger collision."
  },
  "api/Quantum.ISignalOnTriggerEnter2D.html": {
    "href": "api/Quantum.ISignalOnTriggerEnter2D.html",
    "title": "Interface ISignalOnTriggerEnter2D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnTriggerEnter2D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once a non-trigger and a trigger 2D colliders start touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnTriggerEnter2D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnTriggerEnter2D(Frame, TriggerInfo2D) Called once a non-trigger and a trigger 2D colliders start touching. void OnTriggerEnter2D(Frame f, TriggerInfo2D info) Parameters f Frame The frame in which the collision happened. info TriggerInfo2D The Quantum.TriggerInfo2D with data about the trigger collision."
  },
  "api/Quantum.ISignalOnTriggerEnter3D.html": {
    "href": "api/Quantum.ISignalOnTriggerEnter3D.html",
    "title": "Interface ISignalOnTriggerEnter3D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnTriggerEnter3D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once a non-trigger and a trigger 3D colliders start touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnTriggerEnter3D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnTriggerEnter3D(Frame, TriggerInfo3D) Called once a non-trigger and a trigger 3D colliders start touching. void OnTriggerEnter3D(Frame f, TriggerInfo3D info) Parameters f Frame The frame in which the collision happened. info TriggerInfo3D The Quantum.TriggerInfo3D with data about the trigger collision."
  },
  "api/Quantum.ISignalOnTriggerExit2D.html": {
    "href": "api/Quantum.ISignalOnTriggerExit2D.html",
    "title": "Interface ISignalOnTriggerExit2D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnTriggerExit2D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once a non-trigger and a trigger 2D colliders stop touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnTriggerExit2D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnTriggerExit2D(Frame, ExitInfo2D) Called once a non-trigger and a trigger 2D colliders stop touching. void OnTriggerExit2D(Frame f, ExitInfo2D info) Parameters f Frame The frame in which the entities stopped touching. info ExitInfo2D The Quantum.ExitInfo2D with the entities that were touching."
  },
  "api/Quantum.ISignalOnTriggerExit3D.html": {
    "href": "api/Quantum.ISignalOnTriggerExit3D.html",
    "title": "Interface ISignalOnTriggerExit3D | Rwby Vytal Versus Documentation",
    "keywords": "Interface ISignalOnTriggerExit3D Namespace Quantum Assembly Quantum.Simulation.dll Interface for receiving callbacks once a non-trigger and a trigger 3D colliders stop touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. public interface ISignalOnTriggerExit3D : ISignal Inherited Members ISignal.RuntimeIndex Methods OnTriggerExit3D(Frame, ExitInfo3D) Called once a non-trigger and a trigger 3D colliders stop touching. void OnTriggerExit3D(Frame f, ExitInfo3D info) Parameters f Frame The frame in which the entities stopped touching. info ExitInfo3D The Quantum.ExitInfo3D with the entities that were touching."
  },
  "api/Quantum.InAuraBurnout.html": {
    "href": "api/Quantum.InAuraBurnout.html",
    "title": "Struct InAuraBurnout | Rwby Vytal Versus Documentation",
    "keywords": "Struct InAuraBurnout Namespace Quantum Assembly Quantum.Simulation.dll public struct InAuraBurnout : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.InAuraBurnoutDecision.html": {
    "href": "api/Quantum.InAuraBurnoutDecision.html",
    "title": "Class InAuraBurnoutDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class InAuraBurnoutDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class InAuraBurnoutDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision InAuraBurnoutDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.InCounterhitState.html": {
    "href": "api/Quantum.InCounterhitState.html",
    "title": "Struct InCounterhitState | Rwby Vytal Versus Documentation",
    "keywords": "Struct InCounterhitState Namespace Quantum Assembly Quantum.Simulation.dll public struct InCounterhitState : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.InHitstunDecorator.html": {
    "href": "api/Quantum.InHitstunDecorator.html",
    "title": "Class InHitstunDecorator | Rwby Vytal Versus Documentation",
    "keywords": "Class InHitstunDecorator Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class InHitstunDecorator : BTDecorator Inheritance object Object ScriptableObject AssetObject BTNode BTDecorator InHitstunDecorator Inherited Members BTDecorator.Child BTDecorator.AbortType BTDecorator._childInstance BTDecorator.OnReset(BTParams, ref AIContext) BTDecorator.OnUpdate(BTParams, ref AIContext) BTDecorator.OnDynamicRun(BTParams, ref AIContext) BTDecorator.Loaded(IResourceManager, Native.Allocator) BTDecorator.ChildInstance BTDecorator.NodeType BTNode.Label BTNode.Id BTNode.Init(BTParams, ref AIContext) BTNode.OnStartedRunning(BTParams, ref AIContext) BTNode.OnAbort(BTParams, ref AIContext, BTAbort) BTNode.ChildCompletedRunning(BTParams, BTStatus) BTNode.GetStatus(FrameBase, BTAgent*) BTNode.SetStatus(FrameBase, BTStatus, BTAgent*) BTNode.GetStatus(FrameThreadSafe, BTAgent*) BTNode.SetStatus(FrameThreadSafe, BTStatus, BTAgent*) BTNode.EvaluateAbortNode(BTParams) BTNode.Execute(BTParams, ref AIContext, bool) AssetObject.Identifier AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods CheckConditions(BTParams, ref AIContext) public override bool CheckConditions(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext Returns bool OnEnter(BTParams, ref AIContext) public override void OnEnter(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext OnExit(BTParams, ref AIContext) public override void OnExit(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext"
  },
  "api/Quantum.InPunishCounterState.html": {
    "href": "api/Quantum.InPunishCounterState.html",
    "title": "Struct InPunishCounterState | Rwby Vytal Versus Documentation",
    "keywords": "Struct InPunishCounterState Namespace Quantum Assembly Quantum.Simulation.dll public struct InPunishCounterState : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.InactiveTaskRunner.html": {
    "href": "api/Quantum.InactiveTaskRunner.html",
    "title": "Class InactiveTaskRunner | Rwby Vytal Versus Documentation",
    "keywords": "Class InactiveTaskRunner Namespace Quantum Assembly Quantum.Simulation.dll An implementation of Photon.Deterministic.IDeterministicPlatformTaskRunner that forces the Quantum task system to run synchronously (single-threaded). public class InactiveTaskRunner Inheritance object InactiveTaskRunner Methods Dispose() Dispose the object. public void Dispose() PollForComplete() Poll the task runner for completion. public bool PollForComplete() Returns bool Schedule(Action[]) Schedules actions to be executed by the task runner. public void Schedule(Action[] delegates) Parameters delegates Action[] Array of actions WaitForComplete() Wait for the task runner to complete all scheduled actions. public void WaitForComplete()"
  },
  "api/Quantum.Input.html": {
    "href": "api/Quantum.Input.html",
    "title": "Struct Input | Rwby Vytal Versus Documentation",
    "keywords": "Struct Input Namespace Quantum Assembly Quantum.Simulation.dll public struct Input Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Ability1 public Button Ability1 Field Value Button Ability2 public Button Ability2 Field Value Button Ability3 public Button Ability3 Field Value Button Ability4 public Button Ability4 Field Value Button Block public Button Block Field Value Button Dash public Button Dash Field Value Button Extra1 public Button Extra1 Field Value Button Extra2 public Button Extra2 Field Value Button Extra3 public Button Extra3 Field Value Button Extra4 public Button Extra4 Field Value Button Heavy public Button Heavy Field Value Button Jump public Button Jump Field Value Button Light public Button Light Field Value Button LockOn public Button LockOn Field Value Button SIZE public const int SIZE = 280 Field Value int Taunt public Button Taunt Field Value Button Unique public Button Unique Field Value Button backward public Button backward Field Value Button camEuler public FPVector3 camEuler Field Value FPVector3 forward public Button forward Field Value Button left public Button left Field Value Button moveInput public FPVector2 moveInput Field Value FPVector2 right public Button right Field Value Button Properties MAX_COUNT public static int MAX_COUNT { get; } Property Value int MaxCount public static int MaxCount { get; } Property Value int Methods Clear() public void Clear() GetHashCode() public override int GetHashCode() Returns int IsDown(InputButtons) public bool IsDown(InputButtons button) Parameters button InputButtons Returns bool Read(FrameSerializer) public static Input Read(FrameSerializer serializer) Parameters serializer FrameSerializer Returns Input Serialize(void*, FrameSerializer) public static void Serialize(void* input, FrameSerializer serializer) Parameters input void* serializer FrameSerializer WasPressed(InputButtons) public bool WasPressed(InputButtons button) Parameters button InputButtons Returns bool Write(FrameSerializer, Input) public static void Write(FrameSerializer serializer, Input i) Parameters serializer FrameSerializer i Input"
  },
  "api/Quantum.InputBitmask.html": {
    "href": "api/Quantum.InputBitmask.html",
    "title": "Struct InputBitmask | Rwby Vytal Versus Documentation",
    "keywords": "Struct InputBitmask Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public struct InputBitmask Fields checkNot public bool checkNot Field Value bool input public PlayerInputButtonType input Field Value PlayerInputButtonType lenience public int lenience Field Value int"
  },
  "api/Quantum.InputButtonDecision.ButtonStateType.html": {
    "href": "api/Quantum.InputButtonDecision.ButtonStateType.html",
    "title": "Enum InputButtonDecision.ButtonStateType | Rwby Vytal Versus Documentation",
    "keywords": "Enum InputButtonDecision.ButtonStateType Namespace Quantum Assembly Quantum.Simulation.dll public enum InputButtonDecision.ButtonStateType Fields FirstPress = 1 IsDown = 0 IsUp = 3 Released = 2"
  },
  "api/Quantum.InputButtonDecision.html": {
    "href": "api/Quantum.InputButtonDecision.html",
    "title": "Class InputButtonDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class InputButtonDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class InputButtonDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision InputButtonDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields buffer public int buffer Field Value int button public PlayerInputButtonType button Field Value PlayerInputButtonType buttonState public InputButtonDecision.ButtonStateType buttonState Field Value InputButtonDecision.ButtonStateType checkAbilityButton public bool checkAbilityButton Field Value bool checkType public ButtonDataCheckType checkType Field Value ButtonDataCheckType offset public int offset Field Value int Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.InputButtons.html": {
    "href": "api/Quantum.InputButtons.html",
    "title": "Enum InputButtons | Rwby Vytal Versus Documentation",
    "keywords": "Enum InputButtons Namespace Quantum Assembly Quantum.Simulation.dll [Flags] public enum InputButtons Extension Methods FlagsExtensions.ClearFlag(InputButtons, InputButtons) FlagsExtensions.IsFlagSet(InputButtons, InputButtons) FlagsExtensions.SetFlag(InputButtons, InputButtons) Fields Ability1 = 2048 Ability2 = 4096 Ability3 = 8192 Ability4 = 16384 Block = 1024 Dash = 128 Extra1 = 32768 Extra2 = 65536 Extra3 = 131072 Extra4 = 262144 Heavy = 32 Jump = 256 Light = 16 LockOn = 512 Taunt = 524288 Unique = 64 backward = 2 forward = 1 left = 4 right = 8"
  },
  "api/Quantum.InputCondition.html": {
    "href": "api/Quantum.InputCondition.html",
    "title": "Struct InputCondition | Rwby Vytal Versus Documentation",
    "keywords": "Struct InputCondition Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public struct InputCondition Fields ignoreDisableInput public bool ignoreDisableInput Field Value bool impreciseInputCount public int impreciseInputCount Field Value int method public EnterInputMethod method Field Value EnterInputMethod sequence public InputBitmask[] sequence Field Value InputBitmask[]"
  },
  "api/Quantum.InputConditionDecision.html": {
    "href": "api/Quantum.InputConditionDecision.html",
    "title": "Class InputConditionDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class InputConditionDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class InputConditionDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision InputConditionDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields inputConditionListAssetRef public AssetRef<InputConditionListAsset>[] inputConditionListAssetRef Field Value AssetRef<InputConditionListAsset>[] offset public int offset Field Value int Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.InputConditionListAsset.html": {
    "href": "api/Quantum.InputConditionListAsset.html",
    "title": "Class InputConditionListAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class InputConditionListAsset Namespace Quantum Assembly Quantum.Simulation.dll public class InputConditionListAsset : AssetObject Inheritance object Object ScriptableObject AssetObject InputConditionListAsset Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields conditions public InputCondition[] conditions Field Value InputCondition[]"
  },
  "api/Quantum.InputDirectionDecision.InputSourceType.html": {
    "href": "api/Quantum.InputDirectionDecision.InputSourceType.html",
    "title": "Enum InputDirectionDecision.InputSourceType | Rwby Vytal Versus Documentation",
    "keywords": "Enum InputDirectionDecision.InputSourceType Namespace Quantum Assembly Quantum.Simulation.dll public enum InputDirectionDecision.InputSourceType Fields custom = 5 none = 0 rotation = 2 slope = 3 stick = 1 targetLook = 4"
  },
  "api/Quantum.InputDirectionDecision.html": {
    "href": "api/Quantum.InputDirectionDecision.html",
    "title": "Class InputDirectionDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class InputDirectionDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class InputDirectionDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision InputDirectionDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields inputACustom public HNSFParamFPVector3 inputACustom Field Value HNSFParamFPVector3 inputASource public InputDirectionDecision.InputSourceType[] inputASource Field Value InputSourceType[] inputBCustom public HNSFParamFPVector3 inputBCustom Field Value HNSFParamFPVector3 inputBSource public InputDirectionDecision.InputSourceType[] inputBSource Field Value InputSourceType[] maxValue public HNSFParamFP maxValue Field Value HNSFParamFP minValue public HNSFParamFP minValue Field Value HNSFParamFP Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.InputMovementMagnitudeDecision.CheckType.html": {
    "href": "api/Quantum.InputMovementMagnitudeDecision.CheckType.html",
    "title": "Enum InputMovementMagnitudeDecision.CheckType | Rwby Vytal Versus Documentation",
    "keywords": "Enum InputMovementMagnitudeDecision.CheckType Namespace Quantum Assembly Quantum.Simulation.dll public enum InputMovementMagnitudeDecision.CheckType Fields IsMoving = 0 IsNotMoving = 1 Values = 2"
  },
  "api/Quantum.InputMovementMagnitudeDecision.html": {
    "href": "api/Quantum.InputMovementMagnitudeDecision.html",
    "title": "Class InputMovementMagnitudeDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class InputMovementMagnitudeDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class InputMovementMagnitudeDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision InputMovementMagnitudeDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields alsoCheckLastInput public bool alsoCheckLastInput Field Value bool checkType public InputMovementMagnitudeDecision.CheckType checkType Field Value InputMovementMagnitudeDecision.CheckType maxValue public FP maxValue Field Value FP minValue public FP minValue Field Value FP Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.InputProvider.html": {
    "href": "api/Quantum.InputProvider.html",
    "title": "Class InputProvider | Rwby Vytal Versus Documentation",
    "keywords": "Class InputProvider Namespace Quantum Assembly Quantum.Simulation.dll The input provider is used to push recorded inputs into the simulation. This class uses the full input history instead of delta compressed input stream which uses a large memory footprint. public class InputProvider Inheritance object InputProvider Constructors InputProvider(DeterministicSessionConfig, int, int) Construct an input provider with a given capacity and grow size. public InputProvider(DeterministicSessionConfig config, int capacity = 3600, int growSize = 0) Parameters config DeterministicSessionConfig Session config used to gather PlayerCount and RollbackWindow capacity int The initial capacity growSize int The grow size, 0 means doubling the buffer InputProvider(DeterministicTickInputSet[]) Construct an input provider with a given list of inputs. public InputProvider(DeterministicTickInputSet[] inputList) Parameters inputList DeterministicTickInputSet[] Input list InputProvider(int, int, int, int) Construct an input provider with a given player count, start frame, capacity and grow size. public InputProvider(int playerCount, int startFrame, int capacity, int growSize) Parameters playerCount int Player count startFrame int Start frame capacity int The initial capacity growSize int The grow size, 0 means doubling the buffer Methods AddRpc(int, byte[], bool) Unused. public void AddRpc(int player, byte[] data, bool command) Parameters player int data byte[] command bool CanSimulate(int) Returns true if the input provider can simulate the given frame. public bool CanSimulate(int frame) Parameters frame int Requested frame Returns bool True if the input for this frame is available Clear(int) Clear all recorded inputs. Usually called after a resync. public void Clear(int startFrame) Parameters startFrame int New start frame ExportToList(int) Export the inputs to a list. public DeterministicTickInputSet[] ExportToList(int verifiedFrame) Parameters verifiedFrame int The max frame that in input available for Returns DeterministicTickInputSet[] A list on inputs that can be saved to a file. GetInput(int, int) Returns input for a given frame and player. public DeterministicFrameInputTemp GetInput(int frame, int player) Parameters frame int Requested frame player int Requested player Returns DeterministicFrameInputTemp Input object for that player and frame GetRpc(int, int) Reads a rpc from the input provider. public QTuple<byte[], bool> GetRpc(int frame, int player) Parameters frame int Frame player int Player Returns QTuple<byte[], bool> The rpc and a bool that is true when the rpc is a command ImportFromList(DeterministicTickInputSet[]) Import a list of inputs into the input provider. public void ImportFromList(DeterministicTickInputSet[] inputList) Parameters inputList DeterministicTickInputSet[] A reference to the imported list is internally copied. InjectInput(DeterministicTickInput, bool) Injects a random input. public void InjectInput(DeterministicTickInput input, bool localReplay) Parameters input DeterministicTickInput Input to inject localReplay bool If set to true the input sent flag is set to true OnInputConfirmed(QuantumGame, DeterministicFrameInputTemp) This callback is called when an input was confirmed and can be recorded. public void OnInputConfirmed(QuantumGame game, DeterministicFrameInputTemp input) Parameters game QuantumGame The game input DeterministicFrameInputTemp The confirmed input"
  },
  "api/Quantum.InputProviderExtensions.html": {
    "href": "api/Quantum.InputProviderExtensions.html",
    "title": "Class InputProviderExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class InputProviderExtensions Namespace Quantum Assembly Quantum.Simulation.dll Input provider extension methods. public static class InputProviderExtensions Inheritance object InputProviderExtensions Methods Clear(DeterministicTickInput) Clear an input data object. public static void Clear(this DeterministicTickInput input) Parameters input DeterministicTickInput Input to clear Clear(DeterministicTickInputSet) Clear this input set. public static void Clear(this DeterministicTickInputSet set) Parameters set DeterministicTickInputSet Input set CopyFrom(DeterministicTickInput, DeterministicTickInput) Copy and clone an input data object. public static void CopyFrom(this DeterministicTickInput input, DeterministicTickInput otherInput) Parameters input DeterministicTickInput Destination input otherInput DeterministicTickInput Source input IsComplete(DeterministicTickInputSet) Return true if the input set has valid input for each player. public static bool IsComplete(this DeterministicTickInputSet set) Parameters set DeterministicTickInputSet Input set Returns bool True if the set is complete IsFinished(DeterministicTickInputSet) Return true if this set is completed and sent. public static bool IsFinished(this DeterministicTickInputSet set) Parameters set DeterministicTickInputSet Input set to check Returns bool True if all inputs in this set are valid and have been sent Set(DeterministicTickInput, DeterministicFrameInputTemp) Set the content of a Photon.Deterministic.DeterministicTickInput from a Photon.Deterministic.DeterministicFrameInputTemp. public static void Set(this DeterministicTickInput input, DeterministicFrameInputTemp temp) Parameters input DeterministicTickInput Destination input temp DeterministicFrameInputTemp Source input"
  },
  "api/Quantum.IntComparisonAIFunction.html": {
    "href": "api/Quantum.IntComparisonAIFunction.html",
    "title": "Class IntComparisonAIFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class IntComparisonAIFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class IntComparisonAIFunction : AIFunctionBase<bool> Inheritance object Object ScriptableObject AssetObject AIFunctionBase AIFunctionBase<bool> IntComparisonAIFunction Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields comparison public EValueComparison comparison Field Value EValueComparison paramA public AIParamInt paramA Field Value AIParamInt paramB public AIParamInt paramB Field Value AIParamInt Methods Execute(FrameThreadSafe, EntityRef, ref AIContext) public override bool Execute(FrameThreadSafe frame, EntityRef entity, ref AIContext aiContext) Parameters frame FrameThreadSafe entity EntityRef aiContext AIContext Returns bool"
  },
  "api/Quantum.IntComparisonDecision.html": {
    "href": "api/Quantum.IntComparisonDecision.html",
    "title": "Class IntComparisonDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class IntComparisonDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class IntComparisonDecision : HFSMDecision Inheritance object Object ScriptableObject AssetObject HFSMDecisionBase HFSMDecision IntComparisonDecision Inherited Members HFSMDecision.Decide(FrameThreadSafe, EntityRef, ref AIContext) HFSMDecisionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields comparison public EValueComparison comparison Field Value EValueComparison paramA public AIParamInt paramA Field Value AIParamInt paramB public AIParamInt paramB Field Value AIParamInt Methods Decide(Frame, EntityRef, ref AIContext) public override bool Decide(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext Returns bool"
  },
  "api/Quantum.IntOperationFunction.OperationType.html": {
    "href": "api/Quantum.IntOperationFunction.OperationType.html",
    "title": "Enum IntOperationFunction.OperationType | Rwby Vytal Versus Documentation",
    "keywords": "Enum IntOperationFunction.OperationType Namespace Quantum Assembly Quantum.Simulation.dll public enum IntOperationFunction.OperationType Fields ADD = 2 DIVIDE = 1 MULTIPLY = 0 SUBTRACT = 3"
  },
  "api/Quantum.IntOperationFunction.html": {
    "href": "api/Quantum.IntOperationFunction.html",
    "title": "Class IntOperationFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class IntOperationFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class IntOperationFunction : StateFunctionInt Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<int> StateFunctionInt IntOperationFunction Inherited Members HNSFStateFunction<int>.Label HNSFStateFunction<int>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields operation public IntOperationFunction.OperationType operation Field Value IntOperationFunction.OperationType valueA public HNSFParamInt valueA Field Value HNSFParamInt valueB public HNSFParamInt valueB Field Value HNSFParamInt Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override int Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int"
  },
  "api/Quantum.IntParamDecision.CheckType.html": {
    "href": "api/Quantum.IntParamDecision.CheckType.html",
    "title": "Enum IntParamDecision.CheckType | Rwby Vytal Versus Documentation",
    "keywords": "Enum IntParamDecision.CheckType Namespace Quantum Assembly Quantum.Simulation.dll public enum IntParamDecision.CheckType Fields EQUAL = 0 GREATER_OR_EQUAL = 4 GREATER_THAN = 2 LESS_OR_EQUAL = 5 LESS_THAN = 3 NOT_EQUAL = 1"
  },
  "api/Quantum.IntParamDecision.html": {
    "href": "api/Quantum.IntParamDecision.html",
    "title": "Class IntParamDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class IntParamDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class IntParamDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision IntParamDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkType public IntParamDecision.CheckType checkType Field Value IntParamDecision.CheckType paramA public HNSFParamInt paramA Field Value HNSFParamInt paramB public HNSFParamInt paramB Field Value HNSFParamInt Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.IntParamPercentageDecision.CheckType.html": {
    "href": "api/Quantum.IntParamPercentageDecision.CheckType.html",
    "title": "Enum IntParamPercentageDecision.CheckType | Rwby Vytal Versus Documentation",
    "keywords": "Enum IntParamPercentageDecision.CheckType Namespace Quantum Assembly Quantum.Simulation.dll public enum IntParamPercentageDecision.CheckType Fields EQUAL = 0 GREATER_OR_EQUAL = 4 GREATER_THAN = 2 LESS_OR_EQUAL = 5 LESS_THAN = 3 NOT_EQUAL = 1"
  },
  "api/Quantum.IntParamPercentageDecision.html": {
    "href": "api/Quantum.IntParamPercentageDecision.html",
    "title": "Class IntParamPercentageDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class IntParamPercentageDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class IntParamPercentageDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision IntParamPercentageDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkType public IntParamPercentageDecision.CheckType checkType Field Value IntParamPercentageDecision.CheckType paramA public HNSFParamInt paramA Field Value HNSFParamInt paramB public HNSFParamInt paramB Field Value HNSFParamInt percentage public HNSFParamFP percentage Field Value HNSFParamFP Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.IntValueDecision.CheckType.html": {
    "href": "api/Quantum.IntValueDecision.CheckType.html",
    "title": "Enum IntValueDecision.CheckType | Rwby Vytal Versus Documentation",
    "keywords": "Enum IntValueDecision.CheckType Namespace Quantum Assembly Quantum.Simulation.dll public enum IntValueDecision.CheckType Fields IN_BETWEEN = 1 LESS_THAN = 2 MORE_THAN = 0"
  },
  "api/Quantum.IntValueDecision.html": {
    "href": "api/Quantum.IntValueDecision.html",
    "title": "Class IntValueDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class IntValueDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class IntValueDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision IntValueDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkType public IntValueDecision.CheckType checkType Field Value IntValueDecision.CheckType limitHigh public int limitHigh Field Value int limitLow public int limitLow Field Value int value public HNSFParamInt value Field Value HNSFParamInt Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.IsBeingThrownDecision.html": {
    "href": "api/Quantum.IsBeingThrownDecision.html",
    "title": "Class IsBeingThrownDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class IsBeingThrownDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class IsBeingThrownDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision IsBeingThrownDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.IsChargingAttack.html": {
    "href": "api/Quantum.IsChargingAttack.html",
    "title": "Struct IsChargingAttack | Rwby Vytal Versus Documentation",
    "keywords": "Struct IsChargingAttack Namespace Quantum Assembly Quantum.Simulation.dll public struct IsChargingAttack : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 16 Field Value int chargeLevel public int chargeLevel Field Value int currentCharge public int currentCharge Field Value int maxCharge public int maxCharge Field Value int newChargeLevel public QBoolean newChargeLevel Field Value QBoolean Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.IsDead.html": {
    "href": "api/Quantum.IsDead.html",
    "title": "Struct IsDead | Rwby Vytal Versus Documentation",
    "keywords": "Struct IsDead Namespace Quantum Assembly Quantum.Simulation.dll public struct IsDead : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int diedFrame public int diedFrame Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.IsDeadDecision.html": {
    "href": "api/Quantum.IsDeadDecision.html",
    "title": "Class IsDeadDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class IsDeadDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class IsDeadDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision IsDeadDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.IsInThrow.html": {
    "href": "api/Quantum.IsInThrow.html",
    "title": "Struct IsInThrow | Rwby Vytal Versus Documentation",
    "keywords": "Struct IsInThrow Namespace Quantum Assembly Quantum.Simulation.dll public struct IsInThrow : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 16 Field Value int id public int id Field Value int thrower public EntityRef thrower Field Value EntityRef Methods EscapeThrow(Frame, EntityRef) public static void EscapeThrow(Frame frame, EntityRef entityRef) Parameters frame Frame entityRef EntityRef GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.IsInvisible.html": {
    "href": "api/Quantum.IsInvisible.html",
    "title": "Struct IsInvisible | Rwby Vytal Versus Documentation",
    "keywords": "Struct IsInvisible Namespace Quantum Assembly Quantum.Simulation.dll public struct IsInvisible : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.IsMaxChargeDecision.html": {
    "href": "api/Quantum.IsMaxChargeDecision.html",
    "title": "Class IsMaxChargeDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class IsMaxChargeDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class IsMaxChargeDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision IsMaxChargeDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.IsThrowing.html": {
    "href": "api/Quantum.IsThrowing.html",
    "title": "Struct IsThrowing | Rwby Vytal Versus Documentation",
    "keywords": "Struct IsThrowing Namespace Quantum Assembly Quantum.Simulation.dll public struct IsThrowing : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int throwees public QDictionaryPtr<int, EntityRef> throwees Field Value QDictionaryPtr<int, EntityRef> Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* ReleaseAllThrowees(Frame, EntityRef) public void ReleaseAllThrowees(Frame f, EntityRef entity) Parameters f Frame entity EntityRef ReleaseThrowee(Frame, EntityRef, EntityRef) public void ReleaseThrowee(Frame f, EntityRef entity, EntityRef throwee) Parameters f Frame entity EntityRef throwee EntityRef ReleaseThrowee(Frame, EntityRef, int) public void ReleaseThrowee(Frame f, EntityRef entity, int throweeId) Parameters f Frame entity EntityRef throweeId int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.IsUntargetable.html": {
    "href": "api/Quantum.IsUntargetable.html",
    "title": "Struct IsUntargetable | Rwby Vytal Versus Documentation",
    "keywords": "Struct IsUntargetable Namespace Quantum Assembly Quantum.Simulation.dll public struct IsUntargetable : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.KCC.html": {
    "href": "api/Quantum.KCC.html",
    "title": "Struct KCC | Rwby Vytal Versus Documentation",
    "keywords": "Struct KCC Namespace Quantum Assembly Quantum.Simulation.dll public struct KCC : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Collisions [ExcludeFromPrototype] public QListPtr<KCCCollision> Collisions Field Value QListPtr<KCCCollision> Data [ExcludeFromPrototype] public KCCData Data Field Value KCCData Ignores [ExcludeFromPrototype] public QHashSetPtr<KCCIgnore> Ignores Field Value QHashSetPtr<KCCIgnore> IsInitialized [ExcludeFromPrototype] public QBoolean IsInitialized Field Value QBoolean Modifiers [ExcludeFromPrototype] public QListPtr<KCCModifier> Modifiers Field Value QListPtr<KCCModifier> SIZE public const int SIZE = 608 Field Value int Settings public AssetRef<KCCSettings> Settings Field Value AssetRef<KCCSettings> Properties GroundNormal Combined normal of all touching colliders. Normals less distant from up direction have bigger impacton final normal. public FPVector3 GroundNormal { get; } Property Value FPVector3 HasJumped Flag that indicates the KCC has jumped in current tick. public bool HasJumped { get; } Property Value bool IsActive Controls execution of the KCC. public bool IsActive { get; } Property Value bool IsGrounded Flag that indicates the KCC is touching a collider with normal angle lower than KCCData.MaxGroundAngle. public bool IsGrounded { get; } Property Value bool IsSnappingToGround Indicates the KCC temporarily lost grounded state and is snapping to ground. public bool IsSnappingToGround { get; } Property Value bool IsSteppingUp Indicates the KCC is stepping up. public bool IsSteppingUp { get; } Property Value bool Position Calculated position which is propagated to Transform on the end of KCC.Update(). public FPVector3 Position { get; } Property Value FPVector3 RealSpeed Speed calculated from real position change. public FP RealSpeed { get; } Property Value FP RealVelocity Velocity calculated from real position change. public FPVector3 RealVelocity { get; } Property Value FPVector3 Methods AddExternalDelta(FPVector3) Add position delta from external sources. Will be consumed by following KCC update. public void AddExternalDelta(FPVector3 delta) Parameters delta FPVector3 AddExternalForce(FPVector3) Add force from external sources. Should propagate in processors to KCCData.DynamicVelocity. public void AddExternalForce(FPVector3 force) Parameters force FPVector3 AddExternalImpulse(FPVector3) Add impulse from external sources. Should propagate in processors to KCCData.DynamicVelocity. public void AddExternalImpulse(FPVector3 impulse) Parameters impulse FPVector3 AddLookRotation(FP, FP) Add pitch and yaw look rotation. Resulting values are clamped to <-90, 90> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void AddLookRotation(FP pitchDelta, FP yawDelta) Parameters pitchDelta FP yawDelta FP AddLookRotation(FP, FP, FP, FP) Add pitch and yaw look rotation. Resulting values are clamped to <minPitch, maxPitch> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void AddLookRotation(FP pitchDelta, FP yawDelta, FP minPitch, FP maxPitch) Parameters pitchDelta FP yawDelta FP minPitch FP maxPitch FP AddLookRotation(FPVector2) Add pitch (x) and yaw (y) look rotation. Resulting values are clamped to <-90, 90> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void AddLookRotation(FPVector2 lookRotationDelta) Parameters lookRotationDelta FPVector2 AddLookRotation(FPVector2, FP, FP) Add pitch (x) and yaw (y) look rotation. Resulting values are clamped to <minPitch, maxPitch> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void AddLookRotation(FPVector2 lookRotationDelta, FP minPitch, FP maxPitch) Parameters lookRotationDelta FPVector2 minPitch FP maxPitch FP AddModifier<T>(KCCContext, AssetRef<T>, EntityRef, bool) Register custom modifier processor to KCC.Modifiers. public bool AddModifier<T>(KCCContext context, AssetRef<T> processorAsset, EntityRef entity, bool forceAdd = false) where T : KCCProcessor Parameters context KCCContext Reference to KCCContext from within KCC update. processorAsset AssetRef<T> Reference to a KCCProcessor asset. entity EntityRef Reference to an entity assigned to the processor. forceAdd bool Ignore result from KCCProcessor.OnEnter() and force add the modifier. Be careful with this option. Returns bool Type Parameters T AddModifier<T>(KCCContext, AssetRef<T>, bool) Register custom modifier processor to KCC.Modifiers. public bool AddModifier<T>(KCCContext context, AssetRef<T> processorAsset, bool forceAdd = false) where T : KCCProcessor Parameters context KCCContext Reference to KCCContext from within KCC update. processorAsset AssetRef<T> Reference to a KCCProcessor asset. forceAdd bool Ignore result from KCCProcessor.OnEnter() and force add the modifier. Be careful with this option. Returns bool Type Parameters T CapsuleCast(KCCContext, KCCShapeCastInfo, FPVector3, FP, FP, FPVector3, FP, QueryOptions) Capsule cast using same filtering as for KCC physics query. public bool CapsuleCast(KCCContext context, KCCShapeCastInfo shapeCastInfo, FPVector3 position, FP radius, FP height, FPVector3 direction, FP maxDistance, QueryOptions queryOptions) Parameters context KCCContext Reference to KCCContext from within KCC udpate. shapeCastInfo KCCShapeCastInfo Contains results of the cast sorted by distance. position FPVector3 Bottom position of the capsule. radius FP Radius of the capsule. height FP Height of the capsule. direction FPVector3 Direction of the cast. maxDistance FP Distance of the cast. queryOptions QueryOptions Use for custom query filtering. Returns bool CapsuleOverlap(KCCContext, KCCOverlapInfo, FPVector3, FP, FP, QueryOptions) Capsule overlap using same filtering as for KCC physics query. public bool CapsuleOverlap(KCCContext context, KCCOverlapInfo overlapInfo, FPVector3 position, FP radius, FP height, QueryOptions queryOptions) Parameters context KCCContext Reference to KCCContext from within KCC udpate. overlapInfo KCCOverlapInfo Contains results of the overlap. position FPVector3 Bottom position of the capsule. radius FP Radius of the capsule. height FP Height of the capsule. queryOptions QueryOptions Use for custom query filtering. Returns bool ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef Deinitialize(KCCContext) Deinitialize KCC component. Called when the entity is destroyed. public void Deinitialize(KCCContext context) Parameters context KCCContext GetHashCode() public override int GetHashCode() Returns int GetLookRotation(bool, bool) Returns current look rotation. public FPVector2 GetLookRotation(bool pitch = true, bool yaw = true) Parameters pitch bool yaw bool Returns FPVector2 Initialize(KCCContext) Initialize KCC component. Called when the entity is created. public void Initialize(KCCContext context) Parameters context KCCContext Jump(FPVector3) Add jump impulse, which should be propagated by processors to KCCData.DynamicVelocity. The impulse will be processed in following KCC update. public void Jump(FPVector3 impulse) Parameters impulse FPVector3 OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* RayCast(KCCContext, KCCShapeCastInfo, FPVector3, FPVector3, FP, QueryOptions) Ray cast using same filtering as for KCC physics query. public bool RayCast(KCCContext context, KCCShapeCastInfo shapeCastInfo, FPVector3 position, FPVector3 direction, FP maxDistance, QueryOptions queryOptions) Parameters context KCCContext Reference to KCCContext from within KCC udpate. shapeCastInfo KCCShapeCastInfo Contains results of the cast sorted by distance. position FPVector3 Origin position of the cast. direction FPVector3 Direction of the cast. maxDistance FP Distance of the cast. queryOptions QueryOptions Use for custom query filtering. Returns bool RemoveModifier<T>(KCCContext, AssetRef<T>, EntityRef, bool) Unregister custom modifier processor from KCC.Modifiers. Removed processor won't execute any pending callbacks. public bool RemoveModifier<T>(KCCContext context, AssetRef<T> processorAsset, EntityRef entity, bool forceRemove = false) where T : KCCProcessor Parameters context KCCContext Reference to KCCContext from within KCC update. processorAsset AssetRef<T> Reference to a KCCProcessor asset. entity EntityRef Reference to an entity assigned to the processor. forceRemove bool Ignore result from KCCProcessor.OnExit() and force remove the modifier. Be careful with this option. Returns bool Type Parameters T RemoveModifier<T>(KCCContext, AssetRef<T>, bool) Unregister custom modifier processor from KCC.Modifiers. Removed processor won't execute any pending callbacks. public bool RemoveModifier<T>(KCCContext context, AssetRef<T> processorAsset, bool forceRemove = false) where T : KCCProcessor Parameters context KCCContext Reference to KCCContext from within KCC update. processorAsset AssetRef<T> Reference to a KCCProcessor asset. forceRemove bool Ignore result from KCCProcessor.OnExit() and force remove the modifier. Be careful with this option. Returns bool Type Parameters T ResetData() Resets most of the KCCData properties to default. This is a soft reset and won't remove registered modifier processors. Active collisions will be removed in following KCC.Update() call. For immediate, full cleanup including OnExit() callback on all processors use Deinitialize(). public void ResetData() ResolvePenetration(KCCContext, KCCOverlapInfo, ref KCCData, FPVector3, FPVector3, FP, FP, FP, LayerMask, int) Returns position depenetrated from all overlapping colliders and updates ground related data in KCCData. public FPVector3 ResolvePenetration(KCCContext context, KCCOverlapInfo overlapInfo, ref KCCData data, FPVector3 basePosition, FPVector3 targetPosition, FP radius, FP height, FP extent, LayerMask layerMask, int maxSteps) Parameters context KCCContext overlapInfo KCCOverlapInfo data KCCData basePosition FPVector3 targetPosition FPVector3 radius FP height FP extent FP layerMask LayerMask maxSteps int Returns FPVector3 ResolvePenetration(KCCContext, KCCOverlapInfo, ref KCCData, FPVector3, FPVector3, int) Returns position depenetrated from all overlapping colliders and updates ground related data in KCCData. public FPVector3 ResolvePenetration(KCCContext context, KCCOverlapInfo overlapInfo, ref KCCData data, FPVector3 basePosition, FPVector3 targetPosition, int maxSteps = 1) Parameters context KCCContext overlapInfo KCCOverlapInfo data KCCData basePosition FPVector3 targetPosition FPVector3 maxSteps int Returns FPVector3 Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer SetActive(bool) Controls execution of the KCC. No movement/callbacks are executed if the KCC is inactive. Setting KCC inactive also forces all tracked collisions being removed in following Update(). public void SetActive(bool isActive) Parameters isActive bool SetDynamicVelocity(FPVector3) Set KCCData.DynamicVelocity. public void SetDynamicVelocity(FPVector3 velocity) Parameters velocity FPVector3 SetExternalDelta(FPVector3) Set position delta from external sources. Will be consumed by following KCC update. public void SetExternalDelta(FPVector3 delta) Parameters delta FPVector3 SetExternalForce(FPVector3) Set force from external sources. Should propagate in processors to KCCData.DynamicVelocity. public void SetExternalForce(FPVector3 force) Parameters force FPVector3 SetExternalImpulse(FPVector3) Set impulse from external sources. Should propagate in processors to KCCData.DynamicVelocity. public void SetExternalImpulse(FPVector3 impulse) Parameters impulse FPVector3 SetGravity(FPVector3) Set gravity vector. public void SetGravity(FPVector3 gravity) Parameters gravity FPVector3 Gravity vector. SetIgnoreCollider(Frame, EntityRef, bool) Add/remove entity to/from custom ignore list. public bool SetIgnoreCollider(Frame frame, EntityRef entity, bool ignore) Parameters frame Frame entity EntityRef ignore bool Returns bool True if there is a change in the ignore list. SetIgnoreCollider(Frame, int, bool) Add/remove static collider to/from custom ignore list. public bool SetIgnoreCollider(Frame frame, int colliderIndex, bool ignore) Parameters frame Frame colliderIndex int ignore bool Returns bool True if there is a change in the ignore list. SetInputDirection(FPVector3, bool) Set input direction of the KCC. public void SetInputDirection(FPVector3 direction, bool clampToNormalized = true) Parameters direction FPVector3 Input direction in world space. clampToNormalized bool Vector with magnitude greater than 1.0 is normalized. SetKinematicDirection(FPVector3) Set KCCData.KinematicDirection. public void SetKinematicDirection(FPVector3 direction) Parameters direction FPVector3 SetKinematicSpeed(FP) Set KCCData.KinematicSpeed. public void SetKinematicSpeed(FP speed) Parameters speed FP SetKinematicVelocity(FPVector3) Set KCCData.KinematicVelocity. public void SetKinematicVelocity(FPVector3 velocity) Parameters velocity FPVector3 SetLookRotation(FP, FP) Set pitch and yaw look rotation. Values are clamped to <-90, 90> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void SetLookRotation(FP pitch, FP yaw) Parameters pitch FP yaw FP SetLookRotation(FP, FP, FP, FP) Set pitch and yaw look rotation. Values are clamped to <minPitch, maxPitch> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void SetLookRotation(FP pitch, FP yaw, FP minPitch, FP maxPitch) Parameters pitch FP yaw FP minPitch FP maxPitch FP SetLookRotation(FPQuaternion, bool, bool) Set pitch and yaw look rotation. Roll is ignored (not supported). Values are clamped to <-90, 90> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void SetLookRotation(FPQuaternion lookRotation, bool preservePitch = false, bool preserveYaw = false) Parameters lookRotation FPQuaternion preservePitch bool preserveYaw bool SetLookRotation(FPVector2) Set pitch and yaw look rotation. Values are clamped to <-90, 90> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void SetLookRotation(FPVector2 lookRotation) Parameters lookRotation FPVector2 SetLookRotation(FPVector2, FP, FP) Set pitch and yaw look rotation. Values are clamped to <minPitch, maxPitch> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void SetLookRotation(FPVector2 lookRotation, FP minPitch, FP maxPitch) Parameters lookRotation FPVector2 minPitch FP maxPitch FP SphereCast(KCCContext, KCCShapeCastInfo, FPVector3, FP, FPVector3, FP, QueryOptions) Sphere cast using same filtering as for KCC physics query. public bool SphereCast(KCCContext context, KCCShapeCastInfo shapeCastInfo, FPVector3 position, FP radius, FPVector3 direction, FP maxDistance, QueryOptions queryOptions) Parameters context KCCContext Reference to KCCContext from within KCC udpate. shapeCastInfo KCCShapeCastInfo Contains results of the cast sorted by distance. position FPVector3 Center position of the sphere. radius FP Radius of the sphere. direction FPVector3 Direction of the cast. maxDistance FP Distance of the cast. queryOptions QueryOptions Use for custom query filtering. Returns bool SphereOverlap(KCCContext, KCCOverlapInfo, FPVector3, FP, QueryOptions) Sphere overlap using same filtering as for KCC physics query. public bool SphereOverlap(KCCContext context, KCCOverlapInfo overlapInfo, FPVector3 position, FP radius, QueryOptions queryOptions) Parameters context KCCContext Reference to KCCContext from within KCC udpate. overlapInfo KCCOverlapInfo Contains results of the overlap. position FPVector3 Center position of the sphere. radius FP Radius of the sphere. queryOptions QueryOptions Use for custom query filtering. Returns bool Teleport(FPVector3) Sets KCCData.DesiredPosition, KCCData.TargetPosition. Also sets KCCData.HasTeleported flag to true and clears KCCData.IsSteppingUp and KCCData.IsSnappingToGround. Calling this from within a processor stage effectively stops any pending move steps and forces KCC to update hits with new overlap query. Calling this from outside of the KCC.Update() has no effect, the change is not propagated to Transform component. public void Teleport(FPVector3 position) Parameters position FPVector3 TryAddModifier(KCCContext, AssetRef, bool) Try to register custom modifier processor to KCC.Modifiers. public bool TryAddModifier(KCCContext context, AssetRef asset, bool forceAdd = false) Parameters context KCCContext Reference to KCCContext from within KCC update. asset AssetRef Reference to a KCCProcessor asset. forceAdd bool Ignore result from KCCProcessor.OnEnter() and force add the modifier. Be careful with this option. Returns bool TryAddModifier(KCCContext, EntityRef, bool) Try to register custom modifier processor to KCC.Modifiers. public bool TryAddModifier(KCCContext context, EntityRef entity, bool forceAdd = false) Parameters context KCCContext Reference to KCCContext from within KCC update. entity EntityRef Reference to an entity with KCCProcessorSource component. forceAdd bool Ignore result from KCCProcessor.OnEnter() and force add the modifier. Be careful with this option. Returns bool TryRemoveModifier(KCCContext, AssetRef, bool) Try to unregister custom modifier processor from KCC.Modifiers. Removed processor won't execute any pending callbacks. public bool TryRemoveModifier(KCCContext context, AssetRef asset, bool forceRemove = false) Parameters context KCCContext Reference to KCCContext from within KCC update. asset AssetRef Reference to a KCCProcessor asset. forceRemove bool Ignore result from KCCProcessor.OnExit() and force remove the modifier. Be careful with this option. Returns bool TryRemoveModifier(KCCContext, EntityRef, bool) Try to unregister custom modifier processor from KCC.Modifiers. Removed processor won't execute any pending callbacks. public bool TryRemoveModifier(KCCContext context, EntityRef entity, bool forceRemove = false) Parameters context KCCContext Reference to KCCContext from within KCC update. entity EntityRef Reference to an entity assigned to a modifier. forceRemove bool Ignore result from KCCProcessor.OnExit() and force remove the modifier. Be careful with this option. Returns bool Update(KCCContext) public void Update(KCCContext context) Parameters context KCCContext"
  },
  "api/Quantum.KCCCollision.html": {
    "href": "api/Quantum.KCCCollision.html",
    "title": "Struct KCCCollision | Rwby Vytal Versus Documentation",
    "keywords": "Struct KCCCollision Namespace Quantum Assembly Quantum.Simulation.dll Internal data structure for tracking collisions. Do not use directly. public struct KCCCollision Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Processor public AssetRef Processor Field Value AssetRef Reference public EntityRef Reference Field Value EntityRef SIZE public const int SIZE = 24 Field Value int Source public EKCCCollisionSource Source Field Value EKCCCollisionSource Methods Equals(KCCCollision) public bool Equals(KCCCollision other) Parameters other KCCCollision Returns bool GetColliderIndex() Returns valid static collider index if the KCC collides a static collider. public int GetColliderIndex() Returns int GetEntity() Returns valid EntityRef if the KCC collides with an entity with a collider. public EntityRef GetEntity() Returns EntityRef GetHashCode() public override int GetHashCode() Returns int GetProcessorInfo() Returns info for processor callbacks based on this collision. public KCCProcessorInfo GetProcessorInfo() Returns KCCProcessorInfo Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.KCCContext.html": {
    "href": "api/Quantum.KCCContext.html",
    "title": "Class KCCContext | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCContext Namespace Quantum Assembly Quantum.Simulation.dll Container that provides access to Frame, KCC component, settings, reference to its entity and custom user data. An instance is passed as argument in KCC methods and callbacks and provides an easy way to extend with custom functionality. public class KCCContext Inheritance object KCCContext Fields Entity public EntityRef Entity Field Value EntityRef Frame public Frame Frame Field Value Frame KCC public KCC* KCC Field Value KCC* ResolveCollision public Func<KCCContext, Hit3D, bool> ResolveCollision Field Value Func<KCCContext, Hit3D, bool> Settings public KCCSettings Settings Field Value KCCSettings StageInfo public KCCStageInfo StageInfo Field Value KCCStageInfo Methods Get() public static KCCContext Get() Returns KCCContext Get(Frame, EntityRef) public static KCCContext Get(Frame frame, EntityRef entity) Parameters frame Frame entity EntityRef Returns KCCContext Get(Frame, EntityRef, KCC*) public static KCCContext Get(Frame frame, EntityRef entity, KCC* kcc) Parameters frame Frame entity EntityRef kcc KCC* Returns KCCContext Prepare(Frame, EntityRef, KCC*) Called before KCC initialization (ISignalOnComponentAdded), before KCC deinitialization (ISignalOnComponentRemoved) and before the KCC.Update(). Do not use. public void Prepare(Frame frame, EntityRef entity, KCC* kcc) Parameters frame Frame entity EntityRef kcc KCC* Reset() Called before returning KCCContext back to cache. Do not use. public void Reset() Return(KCCContext) public static void Return(KCCContext instance) Parameters instance KCCContext"
  },
  "api/Quantum.KCCData.html": {
    "href": "api/Quantum.KCCData.html",
    "title": "Struct KCCData | Rwby Vytal Versus Documentation",
    "keywords": "Struct KCCData Namespace Quantum Assembly Quantum.Simulation.dll public struct KCCData Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int BasePosition public FPVector3 BasePosition Field Value FPVector3 DeltaTime public FP DeltaTime Field Value FP DesiredPosition public FPVector3 DesiredPosition Field Value FPVector3 DynamicVelocity public FPVector3 DynamicVelocity Field Value FPVector3 ExternalCollisionImpulse public FPVector3 ExternalCollisionImpulse Field Value FPVector3 ExternalDelta public FPVector3 ExternalDelta Field Value FPVector3 ExternalForce public FPVector3 ExternalForce Field Value FPVector3 ExternalImpulse public FPVector3 ExternalImpulse Field Value FPVector3 Gravity public FPVector3 Gravity Field Value FPVector3 GroundAngle public FP GroundAngle Field Value FP GroundDistance public FP GroundDistance Field Value FP GroundNormal public FPVector3 GroundNormal Field Value FPVector3 GroundPosition public FPVector3 GroundPosition Field Value FPVector3 GroundTangent public FPVector3 GroundTangent Field Value FPVector3 HasJumped public QBoolean HasJumped Field Value QBoolean HasTeleported public QBoolean HasTeleported Field Value QBoolean Height public FP Height Field Value FP InputDirection public FPVector3 InputDirection Field Value FPVector3 IsActive public QBoolean IsActive Field Value QBoolean IsGrounded public QBoolean IsGrounded Field Value QBoolean IsSnappingToGround public QBoolean IsSnappingToGround Field Value QBoolean IsSteppingUp public QBoolean IsSteppingUp Field Value QBoolean JumpImpulse public FPVector3 JumpImpulse Field Value FPVector3 KinematicDirection public FPVector3 KinematicDirection Field Value FPVector3 KinematicSpeed public FP KinematicSpeed Field Value FP KinematicTangent public FPVector3 KinematicTangent Field Value FPVector3 KinematicVelocity public FPVector3 KinematicVelocity Field Value FPVector3 LookPitch public FP LookPitch Field Value FP LookYaw public FP LookYaw Field Value FP MaxGroundAngle public FP MaxGroundAngle Field Value FP MaxHangAngle public FP MaxHangAngle Field Value FP MaxWallAngle public FP MaxWallAngle Field Value FP PositionOffset public FPVector3 PositionOffset Field Value FPVector3 RealSpeed public FP RealSpeed Field Value FP RealVelocity public FPVector3 RealVelocity Field Value FPVector3 SIZE public const int SIZE = 584 Field Value int TargetPosition public FPVector3 TargetPosition Field Value FPVector3 WasGrounded public QBoolean WasGrounded Field Value QBoolean WasSnappingToGround public QBoolean WasSnappingToGround Field Value QBoolean WasSteppingUp public QBoolean WasSteppingUp Field Value QBoolean Properties DesiredVelocity Velocity used for KCC movement (KinematicVelocity + DynamicVelocity). public FPVector3 DesiredVelocity { get; } Property Value FPVector3 IsOnEdge Indicates the KCC temporarily or permanently lost grounded state. public bool IsOnEdge { get; } Property Value bool LookDirection Look direction based on LookRotation (LookPitch and LookYaw). public FPVector3 LookDirection { get; } Property Value FPVector3 LookRotation Look rotation based on LookPitch and LookYaw. public FPQuaternion LookRotation { get; } Property Value FPQuaternion TransformDirection Transform direction based on TransformRotation (LookYaw). public FPVector3 TransformDirection { get; } Property Value FPVector3 TransformRotation Transform rotation based on LookYaw. public FPQuaternion TransformRotation { get; } Property Value FPQuaternion Methods AddLookRotation(FP, FP) Add pitch and yaw look rotation. Resulting values are clamped to <-90, 90> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void AddLookRotation(FP pitchDelta, FP yawDelta) Parameters pitchDelta FP yawDelta FP AddLookRotation(FP, FP, FP, FP) Add pitch and yaw look rotation. Resulting values are clamped to <minPitch, maxPitch> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void AddLookRotation(FP pitchDelta, FP yawDelta, FP minPitch, FP maxPitch) Parameters pitchDelta FP yawDelta FP minPitch FP maxPitch FP AddLookRotation(FPVector2) Add pitch (x) and yaw (y) look rotation. Resulting values are clamped to <-90, 90> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void AddLookRotation(FPVector2 lookRotationDelta) Parameters lookRotationDelta FPVector2 AddLookRotation(FPVector2, FP, FP) Add pitch (x) and yaw (y) look rotation. Resulting values are clamped to <minPitch, maxPitch> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void AddLookRotation(FPVector2 lookRotationDelta, FP minPitch, FP maxPitch) Parameters lookRotationDelta FPVector2 minPitch FP maxPitch FP GetHashCode() public override int GetHashCode() Returns int GetLookRotation(bool, bool) Returns the look rotation vector with selected axes. public FPVector2 GetLookRotation(bool pitch = true, bool yaw = true) Parameters pitch bool yaw bool Returns FPVector2 Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer SetLookRotation(FP, FP) Set pitch and yaw look rotation. Values are clamped to <-90, 90> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void SetLookRotation(FP pitch, FP yaw) Parameters pitch FP yaw FP SetLookRotation(FP, FP, FP, FP) Set pitch and yaw look rotation. Values are clamped to <minPitch, maxPitch> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void SetLookRotation(FP pitch, FP yaw, FP minPitch, FP maxPitch) Parameters pitch FP yaw FP minPitch FP maxPitch FP SetLookRotation(FPQuaternion, bool, bool) Set pitch and yaw look rotation. Roll is ignored (not supported). Values are clamped to <-90, 90> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void SetLookRotation(FPQuaternion lookRotation, bool preservePitch = false, bool preserveYaw = false) Parameters lookRotation FPQuaternion preservePitch bool preserveYaw bool SetLookRotation(FPVector2) Set pitch (x) and yaw (y) look rotation. Values are clamped to <-90, 90> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void SetLookRotation(FPVector2 lookRotation) Parameters lookRotation FPVector2 SetLookRotation(FPVector2, FP, FP) Set pitch (x) and yaw (y) look rotation. Values are clamped to <minPitch, maxPitch> (pitch) and <-180, 180> (yaw). Changes are propagated to Transform component in following KCC update. public void SetLookRotation(FPVector2 lookRotation, FP minPitch, FP maxPitch) Parameters lookRotation FPVector2 minPitch FP maxPitch FP"
  },
  "api/Quantum.KCCHeaderAttribute.html": {
    "href": "api/Quantum.KCCHeaderAttribute.html",
    "title": "Class KCCHeaderAttribute | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCHeaderAttribute Namespace Quantum Assembly Quantum.Simulation.dll public sealed class KCCHeaderAttribute : Attribute Inheritance object Attribute KCCHeaderAttribute Constructors KCCHeaderAttribute(string) public KCCHeaderAttribute(string header) Parameters header string"
  },
  "api/Quantum.KCCIgnore.html": {
    "href": "api/Quantum.KCCIgnore.html",
    "title": "Struct KCCIgnore | Rwby Vytal Versus Documentation",
    "keywords": "Struct KCCIgnore Namespace Quantum Assembly Quantum.Simulation.dll Internal data structure for tracking ignored colliders. Do not use directly. public struct KCCIgnore Constructors KCCIgnore(EntityRef) public KCCIgnore(EntityRef entity) Parameters entity EntityRef KCCIgnore(int) public KCCIgnore(int colliderIndex) Parameters colliderIndex int Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Reference public EntityRef Reference Field Value EntityRef SIZE public const int SIZE = 16 Field Value int Source public EKCCIgnoreSource Source Field Value EKCCIgnoreSource Methods Equals(KCCIgnore) public bool Equals(KCCIgnore other) Parameters other KCCIgnore Returns bool GetEntity() public EntityRef GetEntity() Returns EntityRef GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.KCCMathUtility.html": {
    "href": "api/Quantum.KCCMathUtility.html",
    "title": "Class KCCMathUtility | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCMathUtility Namespace Quantum Assembly Quantum.Simulation.dll public static class KCCMathUtility Inheritance object KCCMathUtility Methods ClampLookRotationAngles(ref FP, ref FP) public static void ClampLookRotationAngles(ref FP pitch, ref FP yaw) Parameters pitch FP yaw FP ClampLookRotationAngles(ref FP, ref FP, FP, FP) public static void ClampLookRotationAngles(ref FP pitch, ref FP yaw, FP minPitch, FP maxPitch) Parameters pitch FP yaw FP minPitch FP maxPitch FP ClampLookRotationAngles(FPVector2) public static FPVector2 ClampLookRotationAngles(FPVector2 lookRotation) Parameters lookRotation FPVector2 Returns FPVector2 ClampLookRotationAngles(FPVector2, FP, FP) public static FPVector2 ClampLookRotationAngles(FPVector2 lookRotation, FP minPitch, FP maxPitch) Parameters lookRotation FPVector2 minPitch FP maxPitch FP Returns FPVector2 GetClampedEulerLookRotation(FPQuaternion) public static FPVector2 GetClampedEulerLookRotation(FPQuaternion lookRotation) Parameters lookRotation FPQuaternion Returns FPVector2 GetClampedEulerLookRotation(FPVector2, FPVector2, FP, FP) public static FPVector2 GetClampedEulerLookRotation(FPVector2 lookRotation, FPVector2 lookRotationDelta, FP minPitch, FP maxPitch) Parameters lookRotation FPVector2 lookRotationDelta FPVector2 minPitch FP maxPitch FP Returns FPVector2 GetClampedEulerLookRotation(FPVector3) public static FPVector2 GetClampedEulerLookRotation(FPVector3 direction) Parameters direction FPVector3 Returns FPVector2 GetClampedEulerLookRotationDelta(FPVector2, FPVector2, FP, FP) public static FPVector2 GetClampedEulerLookRotationDelta(FPVector2 lookRotation, FPVector2 lookRotationDelta, FP minPitch, FP maxPitch) Parameters lookRotation FPVector2 lookRotationDelta FPVector2 minPitch FP maxPitch FP Returns FPVector2 GetClampedLookRotationAngles(FPQuaternion, out FP, out FP) public static void GetClampedLookRotationAngles(FPQuaternion lookRotation, out FP pitch, out FP yaw) Parameters lookRotation FPQuaternion pitch FP yaw FP"
  },
  "api/Quantum.KCCModifier.html": {
    "href": "api/Quantum.KCCModifier.html",
    "title": "Struct KCCModifier | Rwby Vytal Versus Documentation",
    "keywords": "Struct KCCModifier Namespace Quantum Assembly Quantum.Simulation.dll Internal data structure for tracking modifiers. Do not use directly. public struct KCCModifier Constructors KCCModifier(AssetRef, EntityRef) public KCCModifier(AssetRef processor, EntityRef entity) Parameters processor AssetRef entity EntityRef Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Entity public EntityRef Entity Field Value EntityRef Processor public AssetRef Processor Field Value AssetRef SIZE public const int SIZE = 16 Field Value int Methods Equals(KCCModifier) public bool Equals(KCCModifier other) Parameters other KCCModifier Returns bool GetHashCode() public override int GetHashCode() Returns int GetProcessorInfo() public KCCProcessorInfo GetProcessorInfo() Returns KCCProcessorInfo Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.KCCOverlapHit.html": {
    "href": "api/Quantum.KCCOverlapHit.html",
    "title": "Class KCCOverlapHit | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCOverlapHit Namespace Quantum Assembly Quantum.Simulation.dll Container for storing physics hit and metadata. Used mainly for multi-pass depenetration algorithm. public sealed class KCCOverlapHit Inheritance object KCCOverlapHit Fields CollisionType public EKCCCollisionType CollisionType Field Value EKCCCollisionType HasPenetration public bool HasPenetration Field Value bool Penetration public FP Penetration Field Value FP PhysicsHit public Hit3D PhysicsHit Field Value Hit3D UpDirectionDot public FP UpDirectionDot Field Value FP Methods Reset() public void Reset() Set(Hit3D) public void Set(Hit3D physicsHit) Parameters physicsHit Hit3D"
  },
  "api/Quantum.KCCOverlapInfo.html": {
    "href": "api/Quantum.KCCOverlapInfo.html",
    "title": "Class KCCOverlapInfo | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCOverlapInfo Namespace Quantum Assembly Quantum.Simulation.dll Container for storing overlap hits and metadata. Used mainly for multi-pass depenetration algorithm. public sealed class KCCOverlapInfo Inheritance object KCCOverlapInfo Fields AllHits public List<KCCOverlapHit> AllHits Field Value List<KCCOverlapHit> ColliderHits public List<KCCOverlapHit> ColliderHits Field Value List<KCCOverlapHit> Extent public FP Extent Field Value FP Height public FP Height Field Value FP LayerMask public LayerMask LayerMask Field Value LayerMask Position public FPVector3 Position Field Value FPVector3 QueryOptions public QueryOptions QueryOptions Field Value QueryOptions Radius public FP Radius Field Value FP TriggerHits public List<KCCOverlapHit> TriggerHits Field Value List<KCCOverlapHit> Methods AddHit(Hit3D) public KCCOverlapHit AddHit(Hit3D physicsHit) Parameters physicsHit Hit3D Returns KCCOverlapHit FindHit(EKCCCollisionSource, EntityRef, out KCCOverlapHit) public bool FindHit(EKCCCollisionSource source, EntityRef reference, out KCCOverlapHit hit) Parameters source EKCCCollisionSource reference EntityRef hit KCCOverlapHit Returns bool Get() public static KCCOverlapInfo Get() Returns KCCOverlapInfo GetOrAddHit(Hit3D) public KCCOverlapHit GetOrAddHit(Hit3D physicsHit) Parameters physicsHit Hit3D Returns KCCOverlapHit Reset() public void Reset() Return(KCCOverlapInfo) public static void Return(KCCOverlapInfo instance) Parameters instance KCCOverlapInfo"
  },
  "api/Quantum.KCCPenetrationSolver.html": {
    "href": "api/Quantum.KCCPenetrationSolver.html",
    "title": "Class KCCPenetrationSolver | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCPenetrationSolver Namespace Quantum Assembly Quantum.Simulation.dll public sealed class KCCPenetrationSolver Inheritance object KCCPenetrationSolver Constructors KCCPenetrationSolver() public KCCPenetrationSolver() KCCPenetrationSolver(int) public KCCPenetrationSolver(int capacity) Parameters capacity int Properties Count Count of input corrections. public int Count { get; } Property Value int Iterations Number of iterations in last calculation. public int Iterations { get; } Property Value int TargetCorrection Correction calculated from input corrections. public FPVector3 TargetCorrection { get; } Property Value FPVector3 Methods AddCorrection(FPVector3, FP) Adds single correction vector. public bool AddCorrection(FPVector3 direction, FP distance) Parameters direction FPVector3 distance FP Returns bool CalculateBest(int, FP) Calculates target correction vector based on added corrections. public FPVector3 CalculateBest(int maxIterations, FP maxError) Parameters maxIterations int maxError FP Returns FPVector3 CalculateBinary() Calculates target correction vector based on added corrections. public FPVector3 CalculateBinary() Returns FPVector3 CalculateGradientDescent(int, FP) Calculates target correction vector based on added corrections. public FPVector3 CalculateGradientDescent(int maxIterations, FP maxError) Parameters maxIterations int maxError FP Returns FPVector3 CalculateMinMax() Calculates target correction vector based on added corrections. public FPVector3 CalculateMinMax() Returns FPVector3 CalculateSum() Calculates target correction vector based on added corrections. public FPVector3 CalculateSum() Returns FPVector3 GetCorrection(int) Returns correction at specific index. public FPVector3 GetCorrection(int index) Parameters index int Returns FPVector3 GetCorrection(int, out FPVector3) Returns correction amount and direction at specific index. public FPVector3 GetCorrection(int index, out FPVector3 direction) Parameters index int direction FPVector3 Returns FPVector3 GetCorrection(int, out FPVector3, out FP) Returns correction amount, direction and distance at specific index. public FPVector3 GetCorrection(int index, out FPVector3 direction, out FP distance) Parameters index int direction FPVector3 distance FP Returns FPVector3 Reset() Resets resolver. Call this before adding corrections. public void Reset()"
  },
  "api/Quantum.KCCPhysicsUtility.html": {
    "href": "api/Quantum.KCCPhysicsUtility.html",
    "title": "Class KCCPhysicsUtility | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCPhysicsUtility Namespace Quantum Assembly Quantum.Simulation.dll public static class KCCPhysicsUtility Inheritance object KCCPhysicsUtility Methods CombineAccelerationAndFriction(FPVector3, FPVector3, FPVector3) public static FPVector3 CombineAccelerationAndFriction(FPVector3 velocity, FPVector3 acceleration, FPVector3 friction) Parameters velocity FPVector3 acceleration FPVector3 friction FPVector3 Returns FPVector3 GetAcceleration(FPVector3, FPVector3, FPVector3, FP, bool, FP, FP, FP, FP, FP) public static FPVector3 GetAcceleration(FPVector3 velocity, FPVector3 direction, FPVector3 axis, FP maxSpeed, bool clampSpeed, FP inputAcceleration, FP constantAcceleration, FP relativeAcceleration, FP proportionalAcceleration, FP deltaTime) Parameters velocity FPVector3 direction FPVector3 axis FPVector3 maxSpeed FP clampSpeed bool inputAcceleration FP constantAcceleration FP relativeAcceleration FP proportionalAcceleration FP deltaTime FP Returns FPVector3 GetAcceleration(FPVector3, FPVector3, FPVector3, FPVector3, FP, bool, FP, FP, FP, FP, FP) public static FPVector3 GetAcceleration(FPVector3 velocity, FPVector3 direction, FPVector3 axis, FPVector3 normal, FP targetSpeed, bool clampSpeed, FP inputAcceleration, FP constantAcceleration, FP relativeAcceleration, FP proportionalAcceleration, FP deltaTime) Parameters velocity FPVector3 direction FPVector3 axis FPVector3 normal FPVector3 targetSpeed FP clampSpeed bool inputAcceleration FP constantAcceleration FP relativeAcceleration FP proportionalAcceleration FP deltaTime FP Returns FPVector3 GetFriction(FPVector3, FPVector3, FPVector3, FP, bool, FP, FP, FP, FP) public static FPVector3 GetFriction(FPVector3 velocity, FPVector3 direction, FPVector3 axis, FP maxSpeed, bool clampSpeed, FP constantFriction, FP relativeFriction, FP proportionalFriction, FP deltaTime) Parameters velocity FPVector3 direction FPVector3 axis FPVector3 maxSpeed FP clampSpeed bool constantFriction FP relativeFriction FP proportionalFriction FP deltaTime FP Returns FPVector3 GetFriction(FPVector3, FPVector3, FPVector3, FPVector3, FP, bool, FP, FP, FP, FP) public static FPVector3 GetFriction(FPVector3 velocity, FPVector3 direction, FPVector3 axis, FPVector3 normal, FP maxSpeed, bool clampSpeed, FP constantFriction, FP relativeFriction, FP proportionalFriction, FP deltaTime) Parameters velocity FPVector3 direction FPVector3 axis FPVector3 normal FPVector3 maxSpeed FP clampSpeed bool constantFriction FP relativeFriction FP proportionalFriction FP deltaTime FP Returns FPVector3 ProjectHorizontalPenetration(ref FPVector3, ref FP) public static void ProjectHorizontalPenetration(ref FPVector3 direction, ref FP distance) Parameters direction FPVector3 distance FP ProjectOnGround(FPVector3, FPVector3, out FPVector3) public static bool ProjectOnGround(FPVector3 groundNormal, FPVector3 vector, out FPVector3 projectedVector) Parameters groundNormal FPVector3 vector FPVector3 projectedVector FPVector3 Returns bool ProjectVerticalPenetration(ref FPVector3, ref FP) public static void ProjectVerticalPenetration(ref FPVector3 direction, ref FP distance) Parameters direction FPVector3 distance FP Raycast(FPVector3, FPVector3, FPVector3, FPVector3, out FP) public static bool Raycast(FPVector3 rayOrigin, FPVector3 rayDirection, FPVector3 planeNormal, FPVector3 planePoint, out FP distance) Parameters rayOrigin FPVector3 rayDirection FPVector3 planeNormal FPVector3 planePoint FPVector3 distance FP Returns bool"
  },
  "api/Quantum.KCCProcessor.html": {
    "href": "api/Quantum.KCCProcessor.html",
    "title": "Class KCCProcessor | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCProcessor Namespace Quantum Assembly Quantum.Simulation.dll public abstract class KCCProcessor : AssetObject Inheritance object Object ScriptableObject AssetObject KCCProcessor Derived EnvironmentProcessor FighterEnvironmentProcessor GroundSnapProcessor StepUpProcessor Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods OnEnter(KCCContext, KCCProcessorInfo, KCCOverlapHit) This callback is invoked: When the KCC starts colliding with a static collider/trigger with a KCCProcessor assigned to AssetObject. When the KCC starts colliding with an entity which has KCCProcessorSource component and valid KCCProcessor linked. When a custom processor is registered to the KCC using KCC.AddModifier(). Return value: True - the KCC starts \"tracking\" this processor and the processor starts getting callbacks - IBeforeMove, IAfterMoveStep, IAfterMove during KCC update and OnExit() when the collision ends. False - the KCC invokes OnEnter() next tick if the collision is still valid. This can be used to defer processor logic until some other condition is met. The return value is ignored if the processor is added via KCC.AddModifier() with 'forceAdd' parameter set to true. public virtual bool OnEnter(KCCContext context, KCCProcessorInfo processorInfo, KCCOverlapHit overlapHit) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing this processor. overlapHit KCCOverlapHit Reference to a collider/entity overlap hit which references this processor. The value is null for manually registered processors (modifiers) and processors linked in KCC settings. Returns bool OnExit(KCCContext, KCCProcessorInfo) This callback is invoked: When the KCC stops colliding with a static collider/trigger with a KCCProcessor assigned to AssetObject. When the KCC stops colliding with an entity which has KCCProcessorSource component and valid KCCProcessor linked. When a custom processor is unregistered from the KCC using KCC.RemoveModifier(). Return value: True - the KCC stops \"tracking\" this processor and the processor stops getting callbacks - IBeforeMove, IAfterMoveStep, IAfterMove. False - the KCC invokes OnExit() next tick if the collision is still invalid. This can be used to defer stopping processor logic until some other condition is met. The return value is ignored if the processor is removed via KCC.RemoveModifier() with 'forceRemove' parameter set to true. public virtual bool OnExit(KCCContext context, KCCProcessorInfo processorInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing this processor. Returns bool"
  },
  "api/Quantum.KCCProcessorInfo.html": {
    "href": "api/Quantum.KCCProcessorInfo.html",
    "title": "Class KCCProcessorInfo | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCProcessorInfo Namespace Quantum Assembly Quantum.Simulation.dll Data structure which is passed in processor callbacks. Contains information about the processor registration source and a collider/entity that is referencing currently executed processor. public record KCCProcessorInfo Inheritance object KCCProcessorInfo Constructors KCCProcessorInfo(EKCCProcessorSource, EntityRef, int) public KCCProcessorInfo(EKCCProcessorSource source, EntityRef entity, int colliderIndex) Parameters source EKCCProcessorSource entity EntityRef colliderIndex int Fields ColliderIndex Index of a static collider which references the currently executed processor. public readonly int ColliderIndex Field Value int Default public static readonly KCCProcessorInfo Default Field Value KCCProcessorInfo Entity Reference to an entity which references the currently executed processor. public readonly EntityRef Entity Field Value EntityRef Source Defines source of the processor (manually registered modifier processor, a processor linked to static collider, a processor linked to KCCProcessorSource component on an entity). public readonly EKCCProcessorSource Source Field Value EKCCProcessorSource Properties HasEntity public bool HasEntity { get; } Property Value bool IsCollider public bool IsCollider { get; } Property Value bool IsEntityCollider public bool IsEntityCollider { get; } Property Value bool IsModifier public bool IsModifier { get; } Property Value bool IsStaticCollider public bool IsStaticCollider { get; } Property Value bool Methods GetStaticCollider(Frame, out MapStaticCollider3D) Returns MapStaticCollider3D if the KCC processor source is a collision with a static collider. public bool GetStaticCollider(Frame frame, out MapStaticCollider3D collider) Parameters frame Frame collider MapStaticCollider3D Returns bool GetStaticColliderData(Frame, out StaticColliderData) Returns StaticColliderData if the KCC processor source is a collision with a static collider. public bool GetStaticColliderData(Frame frame, out StaticColliderData colliderData) Parameters frame Frame colliderData StaticColliderData Returns bool"
  },
  "api/Quantum.KCCProcessorLink.html": {
    "href": "api/Quantum.KCCProcessorLink.html",
    "title": "Struct KCCProcessorLink | Rwby Vytal Versus Documentation",
    "keywords": "Struct KCCProcessorLink Namespace Quantum Assembly Quantum.Simulation.dll public struct KCCProcessorLink : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int Processor public AssetRef<KCCProcessor> Processor Field Value AssetRef<KCCProcessor> SIZE public const int SIZE = 8 Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.KCCSettings.html": {
    "href": "api/Quantum.KCCSettings.html",
    "title": "Class KCCSettings | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCSettings Namespace Quantum Assembly Quantum.Simulation.dll Base settings for KCC. public class KCCSettings : AssetObject Inheritance object Object ScriptableObject AssetObject KCCSettings Inherited Members AssetObject.Identifier AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields CCDRadiusMultiplier [KCCTooltip(\"Controls maximum distance the KCC moves in a single CCD step. Recommended range is 25% - 75% of the radius. Use lower values if the character passes through geometry.\\nCCD Max Step Distance = Radius * CCD Radius Multiplier\")] public FP CCDRadiusMultiplier Field Value FP CollisionLayerMask [KCCTooltip(\"Layer mask the KCC collides with.\")] public LayerMask CollisionLayerMask Field Value LayerMask Extent [KCCTooltip(\"Defines additional radius extent for ground detection and processors tracking. Recommended range is 10-20% of radius.\\n• Low value decreases stability and has potential performance impact when executing additional checks.\\n• High value increases stability at the cost of increased sustained performance impact.\")] public FP Extent Field Value FP Height [KCCTooltip(\"Height of the KCC capsule used for movement.\")] public FP Height Field Value FP MaxPenetrationSteps [KCCTooltip(\"Single Move/CCD step is split into multiple smaller sub-steps which results in higher overall depenetration quality.\")] public int MaxPenetrationSteps Field Value int Processors [KCCTooltip(\"List of default processors which are always processed.\")] public List<AssetRef<KCCProcessor>> Processors Field Value List<AssetRef<KCCProcessor>> Radius [KCCTooltip(\"Radius of the KCC capsule used for movement.\")] public FP Radius Field Value FP Properties RuntimeProcessors public List<KCCProcessor> RuntimeProcessors { get; } Property Value List<KCCProcessor> Methods Loaded(IResourceManager, Allocator) Called when the asset object is loaded. public override void Loaded(IResourceManager resourceManager, Native.Allocator allocator) Parameters resourceManager IResourceManager The resource manager. allocator Native.Allocator The allocator."
  },
  "api/Quantum.KCCShapeCastHit.html": {
    "href": "api/Quantum.KCCShapeCastHit.html",
    "title": "Class KCCShapeCastHit | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCShapeCastHit Namespace Quantum Assembly Quantum.Simulation.dll Container for storing shape-cast physics hit and metadata. public sealed class KCCShapeCastHit Inheritance object KCCShapeCastHit Fields CollisionType public EKCCCollisionType CollisionType Field Value EKCCCollisionType PhysicsHit public Hit3D PhysicsHit Field Value Hit3D Methods Reset() public void Reset() Set(Hit3D) public void Set(Hit3D physicsHit) Parameters physicsHit Hit3D"
  },
  "api/Quantum.KCCShapeCastInfo.html": {
    "href": "api/Quantum.KCCShapeCastInfo.html",
    "title": "Class KCCShapeCastInfo | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCShapeCastInfo Namespace Quantum Assembly Quantum.Simulation.dll Container for storing shape-cast hits and metadata. public sealed class KCCShapeCastInfo Inheritance object KCCShapeCastInfo Fields AllHits public List<KCCShapeCastHit> AllHits Field Value List<KCCShapeCastHit> ColliderHits public List<KCCShapeCastHit> ColliderHits Field Value List<KCCShapeCastHit> Direction public FPVector3 Direction Field Value FPVector3 Extent public FP Extent Field Value FP Height public FP Height Field Value FP LayerMask public LayerMask LayerMask Field Value LayerMask MaxDistance public FP MaxDistance Field Value FP Position public FPVector3 Position Field Value FPVector3 QueryOptions public QueryOptions QueryOptions Field Value QueryOptions Radius public FP Radius Field Value FP TriggerHits public List<KCCShapeCastHit> TriggerHits Field Value List<KCCShapeCastHit> Methods AddHit(Hit3D) public void AddHit(Hit3D physicsHit) Parameters physicsHit Hit3D Get() public static KCCShapeCastInfo Get() Returns KCCShapeCastInfo Reset() public void Reset() Return(KCCShapeCastInfo) public static void Return(KCCShapeCastInfo instance) Parameters instance KCCShapeCastInfo Sort() public void Sort()"
  },
  "api/Quantum.KCCStageInfo.html": {
    "href": "api/Quantum.KCCStageInfo.html",
    "title": "Class KCCStageInfo | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCStageInfo Namespace Quantum Assembly Quantum.Simulation.dll Internal helper container for execution of processor callbacks. Do not use directly. public sealed class KCCStageInfo Inheritance object KCCStageInfo Fields ProcessorInfos public List<KCCProcessorInfo> ProcessorInfos Field Value List<KCCProcessorInfo> Processors public List<KCCProcessor> Processors Field Value List<KCCProcessor> Methods CacheProcessors(KCCContext) public void CacheProcessors(KCCContext context) Parameters context KCCContext Reset() public void Reset() SuppressProcessor(KCCProcessor) public void SuppressProcessor(KCCProcessor processor) Parameters processor KCCProcessor"
  },
  "api/Quantum.KCCSystem.Filter.html": {
    "href": "api/Quantum.KCCSystem.Filter.html",
    "title": "Struct KCCSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct KCCSystem.Filter Namespace Quantum Assembly Quantum.Simulation.dll public struct KCCSystem.Filter Fields Entity public EntityRef Entity Field Value EntityRef KCC public KCC* KCC Field Value KCC*"
  },
  "api/Quantum.KCCSystem.html": {
    "href": "api/Quantum.KCCSystem.html",
    "title": "Class KCCSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCSystem Namespace Quantum Assembly Quantum.Simulation.dll public class KCCSystem : SystemMainThreadFilter<KCCSystem.Filter>, ISignalOnComponentAdded<KCC>, ISignalOnComponentRemoved<KCC>, ISignal Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<KCCSystem.Filter> KCCSystem Implements ISignalOnComponentAdded<KCC> ISignalOnComponentRemoved<KCC> ISignal Inherited Members SystemMainThreadFilter<KCCSystem.Filter>.UseCulling SystemMainThreadFilter<KCCSystem.Filter>.Without SystemMainThreadFilter<KCCSystem.Filter>.Any SystemMainThreadFilter<KCCSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame, ref Filter) Override to add workload. public override void Update(Frame frame, ref KCCSystem.Filter filter) Parameters frame Frame filter KCCSystem.Filter The frame object."
  },
  "api/Quantum.KCCThreadStaticCache-1.html": {
    "href": "api/Quantum.KCCThreadStaticCache-1.html",
    "title": "Class KCCThreadStaticCache<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCThreadStaticCache<T> Namespace Quantum Assembly Quantum.Simulation.dll public static class KCCThreadStaticCache<T> where T : new() Type Parameters T Inheritance object KCCThreadStaticCache<T> Methods Get() public static T Get() Returns T Return(T) public static void Return(T item) Parameters item T"
  },
  "api/Quantum.KCCThreadStaticCache.html": {
    "href": "api/Quantum.KCCThreadStaticCache.html",
    "title": "Class KCCThreadStaticCache | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCThreadStaticCache Namespace Quantum Assembly Quantum.Simulation.dll public static class KCCThreadStaticCache Inheritance object KCCThreadStaticCache Methods Get<T>() public static T Get<T>() where T : new() Returns T Type Parameters T Return<T>(T) public static void Return<T>(T item) where T : new() Parameters item T Type Parameters T"
  },
  "api/Quantum.KCCTooltipAttribute.html": {
    "href": "api/Quantum.KCCTooltipAttribute.html",
    "title": "Class KCCTooltipAttribute | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCTooltipAttribute Namespace Quantum Assembly Quantum.Simulation.dll public sealed class KCCTooltipAttribute : Attribute Inheritance object Attribute KCCTooltipAttribute Constructors KCCTooltipAttribute(string) public KCCTooltipAttribute(string tooltip) Parameters tooltip string"
  },
  "api/Quantum.KCCUtility.html": {
    "href": "api/Quantum.KCCUtility.html",
    "title": "Class KCCUtility | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCUtility Namespace Quantum Assembly Quantum.Simulation.dll public static class KCCUtility Inheritance object KCCUtility Methods HasCollision(QList<KCCCollision>, EKCCCollisionSource, EntityRef) public static bool HasCollision(QList<KCCCollision> collisions, EKCCCollisionSource source, EntityRef reference) Parameters collisions QList<KCCCollision> source EKCCCollisionSource reference EntityRef Returns bool ResolveProcessorAsset(Frame, ref KCCCollision) public static bool ResolveProcessorAsset(Frame frame, ref KCCCollision collision) Parameters frame Frame collision KCCCollision Returns bool ResolveProcessor<T>(Frame, AssetRef, out T) public static bool ResolveProcessor<T>(Frame frame, AssetRef processorAsset, out T processor) where T : KCCProcessor Parameters frame Frame processorAsset AssetRef processor T Returns bool Type Parameters T ResolveProcessor<T>(Frame, AssetRef<T>, out T) public static bool ResolveProcessor<T>(Frame frame, AssetRef<T> processorAsset, out T processor) where T : KCCProcessor Parameters frame Frame processorAsset AssetRef<T> processor T Returns bool Type Parameters T"
  },
  "api/Quantum.LocalDeltaTime.html": {
    "href": "api/Quantum.LocalDeltaTime.html",
    "title": "Struct LocalDeltaTime | Rwby Vytal Versus Documentation",
    "keywords": "Struct LocalDeltaTime Namespace Quantum Assembly Quantum.Simulation.dll public struct LocalDeltaTime : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 24 Field Value int deltaTime public FP deltaTime Field Value FP multiplier public FP multiplier Field Value FP updatesThisTick public int updatesThisTick Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.LocalDeltaTimeSystem.Filter.html": {
    "href": "api/Quantum.LocalDeltaTimeSystem.Filter.html",
    "title": "Struct LocalDeltaTimeSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct LocalDeltaTimeSystem.Filter Namespace Quantum Assembly Quantum.Simulation.dll public struct LocalDeltaTimeSystem.Filter Fields Entity public EntityRef Entity Field Value EntityRef ldt public LocalDeltaTime* ldt Field Value LocalDeltaTime*"
  },
  "api/Quantum.LocalDeltaTimeSystem.html": {
    "href": "api/Quantum.LocalDeltaTimeSystem.html",
    "title": "Class LocalDeltaTimeSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class LocalDeltaTimeSystem Namespace Quantum Assembly Quantum.Simulation.dll [Preserve] public class LocalDeltaTimeSystem : SystemMainThreadFilter<LocalDeltaTimeSystem.Filter>, ISignalOnComponentAdded<LocalDeltaTime>, ISignalOnComponentRemoved<LocalDeltaTime>, ISignal Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<LocalDeltaTimeSystem.Filter> LocalDeltaTimeSystem Implements ISignalOnComponentAdded<LocalDeltaTime> ISignalOnComponentRemoved<LocalDeltaTime> ISignal Inherited Members SystemMainThreadFilter<LocalDeltaTimeSystem.Filter>.UseCulling SystemMainThreadFilter<LocalDeltaTimeSystem.Filter>.Without SystemMainThreadFilter<LocalDeltaTimeSystem.Filter>.Any SystemMainThreadFilter<LocalDeltaTimeSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, LocalDeltaTime*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, LocalDeltaTime* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component LocalDeltaTime* The component that was added. OnRemoved(Frame, EntityRef, LocalDeltaTime*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, LocalDeltaTime* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component LocalDeltaTime* The component that was removed. Update(Frame, ref Filter) Override to add workload. public override void Update(Frame f, ref LocalDeltaTimeSystem.Filter filter) Parameters f Frame The current frame. filter LocalDeltaTimeSystem.Filter The frame object."
  },
  "api/Quantum.MapCustomData.SpawnPointData.html": {
    "href": "api/Quantum.MapCustomData.SpawnPointData.html",
    "title": "Struct MapCustomData.SpawnPointData | Rwby Vytal Versus Documentation",
    "keywords": "Struct MapCustomData.SpawnPointData Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public struct MapCustomData.SpawnPointData Fields Position public FPVector3 Position Field Value FPVector3 Rotation public FPQuaternion Rotation Field Value FPQuaternion team public int team Field Value int"
  },
  "api/Quantum.MapCustomData.html": {
    "href": "api/Quantum.MapCustomData.html",
    "title": "Class MapCustomData | Rwby Vytal Versus Documentation",
    "keywords": "Class MapCustomData Namespace Quantum Assembly Quantum.Simulation.dll public class MapCustomData : AssetObject Inheritance object Object ScriptableObject AssetObject MapCustomData Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields DefaultSpawnPoint public MapCustomData.SpawnPointData DefaultSpawnPoint Field Value MapCustomData.SpawnPointData SpawnPoints public MapCustomData.SpawnPointData[] SpawnPoints Field Value SpawnPointData[] introCutsceneDuration public FP introCutsceneDuration Field Value FP victoryScreenPoints public MapCustomData.SpawnPointData[] victoryScreenPoints Field Value SpawnPointData[] Methods GetSpawnPointsForTeam(Frame, int) public MapCustomData.SpawnPointData[] GetSpawnPointsForTeam(Frame f, int team) Parameters f Frame team int Returns SpawnPointData[] SetEntityToSpawnPoint(Frame, EntityRef, int?) public void SetEntityToSpawnPoint(Frame f, EntityRef entity, int? index) Parameters f Frame entity EntityRef index int?"
  },
  "api/Quantum.MathExtensions.html": {
    "href": "api/Quantum.MathExtensions.html",
    "title": "Class MathExtensions | Rwby Vytal Versus Documentation",
    "keywords": "Class MathExtensions Namespace Quantum Assembly Quantum.Simulation.dll public static class MathExtensions Inheritance object MathExtensions Methods InverseTransformDirection(FPVector3, FPQuaternion) Transforms a direction from world space to local space. Quantum.Transform3D.Rotation is expected to be normalized. public static FPVector3 InverseTransformDirection(this FPVector3 direction, FPQuaternion originRotation) Parameters direction FPVector3 originRotation FPQuaternion Returns FPVector3 PositionWithOffset(Frame, EntityRef, Transform3D*) public static FPVector3 PositionWithOffset(Frame f, EntityRef entity, Transform3D* transform) Parameters f Frame entity EntityRef transform Transform3D* Returns FPVector3 TransformDirection(FPVector3, FPQuaternion) Transforms a direction from local space to world space. Quantum.Transform3D.Rotation is expected to be normalized. public static FPVector3 TransformDirection(this FPVector3 direction, FPQuaternion lookDir) Parameters direction FPVector3 lookDir FPQuaternion Returns FPVector3"
  },
  "api/Quantum.ModifyAnimationFrameAction.ModifyType.html": {
    "href": "api/Quantum.ModifyAnimationFrameAction.ModifyType.html",
    "title": "Enum ModifyAnimationFrameAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyAnimationFrameAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyAnimationFrameAction.ModifyType Fields ADD = 0 SET = 1"
  },
  "api/Quantum.ModifyAnimationFrameAction.html": {
    "href": "api/Quantum.ModifyAnimationFrameAction.html",
    "title": "Class ModifyAnimationFrameAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyAnimationFrameAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifyAnimationFrameAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyAnimationFrameAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields modify public ModifyAnimationFrameAction.ModifyType modify Field Value ModifyAnimationFrameAction.ModifyType value public int value Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyAuraAction.ModifyType.html": {
    "href": "api/Quantum.ModifyAuraAction.ModifyType.html",
    "title": "Enum ModifyAuraAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyAuraAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyAuraAction.ModifyType Fields ADD = 1 MULTIPLY = 2 SET = 0"
  },
  "api/Quantum.ModifyAuraAction.ValueType.html": {
    "href": "api/Quantum.ModifyAuraAction.ValueType.html",
    "title": "Enum ModifyAuraAction.ValueType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyAuraAction.ValueType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyAuraAction.ValueType Fields AsPercentageOfCurrentValue = 1 AsPercentageOfMax = 0 Raw = 2"
  },
  "api/Quantum.ModifyAuraAction.html": {
    "href": "api/Quantum.ModifyAuraAction.html",
    "title": "Class ModifyAuraAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyAuraAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifyAuraAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyAuraAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields ignoreIfInBurnout public bool ignoreIfInBurnout Field Value bool maxAura public HNSFParamInt maxAura Field Value HNSFParamInt modifyType public ModifyAuraAction.ModifyType modifyType Field Value ModifyAuraAction.ModifyType value public HNSFParamInt value Field Value HNSFParamInt valueType public ModifyAuraAction.ValueType valueType Field Value ModifyAuraAction.ValueType Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyBlackboardBoolAction.ModifyType.html": {
    "href": "api/Quantum.ModifyBlackboardBoolAction.ModifyType.html",
    "title": "Enum ModifyBlackboardBoolAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyBlackboardBoolAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyBlackboardBoolAction.ModifyType Fields Inverse = 1 Set = 0"
  },
  "api/Quantum.ModifyBlackboardBoolAction.html": {
    "href": "api/Quantum.ModifyBlackboardBoolAction.html",
    "title": "Class ModifyBlackboardBoolAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyBlackboardBoolAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifyBlackboardBoolAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyBlackboardBoolAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields key public string key Field Value string modifyType public ModifyBlackboardBoolAction.ModifyType modifyType Field Value ModifyBlackboardBoolAction.ModifyType value public HNSFParamBool value Field Value HNSFParamBool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyBlackboardFPAction.ModifyType.html": {
    "href": "api/Quantum.ModifyBlackboardFPAction.ModifyType.html",
    "title": "Enum ModifyBlackboardFPAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyBlackboardFPAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyBlackboardFPAction.ModifyType Fields ADD = 1 MULTIPLY = 2 SET = 0"
  },
  "api/Quantum.ModifyBlackboardFPAction.html": {
    "href": "api/Quantum.ModifyBlackboardFPAction.html",
    "title": "Class ModifyBlackboardFPAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyBlackboardFPAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifyBlackboardFPAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyBlackboardFPAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields key public string key Field Value string modifyType public ModifyBlackboardFPAction.ModifyType modifyType Field Value ModifyBlackboardFPAction.ModifyType value public HNSFParamFP value Field Value HNSFParamFP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyBlackboardIntAction.ModifyType.html": {
    "href": "api/Quantum.ModifyBlackboardIntAction.ModifyType.html",
    "title": "Enum ModifyBlackboardIntAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyBlackboardIntAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyBlackboardIntAction.ModifyType Fields ADD = 1 MULTIPLY = 2 SET = 0"
  },
  "api/Quantum.ModifyBlackboardIntAction.html": {
    "href": "api/Quantum.ModifyBlackboardIntAction.html",
    "title": "Class ModifyBlackboardIntAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyBlackboardIntAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifyBlackboardIntAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyBlackboardIntAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields key public string key Field Value string modifyType public ModifyBlackboardIntAction.ModifyType modifyType Field Value ModifyBlackboardIntAction.ModifyType value public HNSFParamInt value Field Value HNSFParamInt Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyForcesAction.InputSourceType.html": {
    "href": "api/Quantum.ModifyForcesAction.InputSourceType.html",
    "title": "Enum ModifyForcesAction.InputSourceType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyForcesAction.InputSourceType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyForcesAction.InputSourceType Fields custom = 5 none = 0 rotation = 2 slope = 3 stick = 1 targetLook = 4"
  },
  "api/Quantum.ModifyForcesAction.ModifyType.html": {
    "href": "api/Quantum.ModifyForcesAction.ModifyType.html",
    "title": "Enum ModifyForcesAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyForcesAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyForcesAction.ModifyType Fields ADD = 1 SET = 0"
  },
  "api/Quantum.ModifyForcesAction.html": {
    "href": "api/Quantum.ModifyForcesAction.html",
    "title": "Class ModifyForcesAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyForcesAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Modify Forces\", 0)] public class ModifyForcesAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyForcesAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields customInput public HNSFParamFPVector3 customInput Field Value HNSFParamFPVector3 inputSources public ModifyForcesAction.InputSourceType[] inputSources Field Value InputSourceType[] modifyType public ModifyForcesAction.ModifyType modifyType Field Value ModifyForcesAction.ModifyType normalizeInput public bool normalizeInput Field Value bool speed public FP speed Field Value FP throweeId public int throweeId Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyGravityAction.ModifyType.html": {
    "href": "api/Quantum.ModifyGravityAction.ModifyType.html",
    "title": "Enum ModifyGravityAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyGravityAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyGravityAction.ModifyType Fields ADD = 1 SET = 0"
  },
  "api/Quantum.ModifyGravityAction.html": {
    "href": "api/Quantum.ModifyGravityAction.html",
    "title": "Class ModifyGravityAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyGravityAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Modify Gravity\", 0)] public class ModifyGravityAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyGravityAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields asJumpForce public bool asJumpForce Field Value bool modifyType public ModifyGravityAction.ModifyType modifyType Field Value ModifyGravityAction.ModifyType value public HNSFParamFP value Field Value HNSFParamFP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyHitstopAction.ModifyType.html": {
    "href": "api/Quantum.ModifyHitstopAction.ModifyType.html",
    "title": "Enum ModifyHitstopAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyHitstopAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyHitstopAction.ModifyType Fields ADD = 1 MULTIPLY = 2 SET = 0"
  },
  "api/Quantum.ModifyHitstopAction.html": {
    "href": "api/Quantum.ModifyHitstopAction.html",
    "title": "Class ModifyHitstopAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyHitstopAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifyHitstopAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyHitstopAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields modifyType public ModifyHitstopAction.ModifyType modifyType Field Value ModifyHitstopAction.ModifyType value public int value Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyHitstunAction.ModifyType.html": {
    "href": "api/Quantum.ModifyHitstunAction.ModifyType.html",
    "title": "Enum ModifyHitstunAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyHitstunAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyHitstunAction.ModifyType Fields ADD = 1 MULTIPLY = 2 SET = 0"
  },
  "api/Quantum.ModifyHitstunAction.html": {
    "href": "api/Quantum.ModifyHitstunAction.html",
    "title": "Class ModifyHitstunAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyHitstunAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifyHitstunAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyHitstunAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields modifyType public ModifyHitstunAction.ModifyType modifyType Field Value ModifyHitstunAction.ModifyType value public int value Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyInertiaAction.ModifyType.html": {
    "href": "api/Quantum.ModifyInertiaAction.ModifyType.html",
    "title": "Enum ModifyInertiaAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyInertiaAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyInertiaAction.ModifyType Fields Clear = 2 Conserve = 0 Release = 1"
  },
  "api/Quantum.ModifyInertiaAction.html": {
    "href": "api/Quantum.ModifyInertiaAction.html",
    "title": "Class ModifyInertiaAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyInertiaAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Modify Intertia\", 0)] public class ModifyInertiaAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyInertiaAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields modifyType public ModifyInertiaAction.ModifyType modifyType Field Value ModifyInertiaAction.ModifyType useYInertia [DrawIf(\"modifyType\", 1, CompareOperator.Equal, DrawIfMode.ReadOnly)] public bool useYInertia Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyPassiveAuraGainDelayAction.ModifyType.html": {
    "href": "api/Quantum.ModifyPassiveAuraGainDelayAction.ModifyType.html",
    "title": "Enum ModifyPassiveAuraGainDelayAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyPassiveAuraGainDelayAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyPassiveAuraGainDelayAction.ModifyType Fields ADD = 1 MULTIPLY = 2 SET = 0"
  },
  "api/Quantum.ModifyPassiveAuraGainDelayAction.html": {
    "href": "api/Quantum.ModifyPassiveAuraGainDelayAction.html",
    "title": "Class ModifyPassiveAuraGainDelayAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyPassiveAuraGainDelayAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifyPassiveAuraGainDelayAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyPassiveAuraGainDelayAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields modifyType public ModifyPassiveAuraGainDelayAction.ModifyType modifyType Field Value ModifyPassiveAuraGainDelayAction.ModifyType value public HNSFParamInt value Field Value HNSFParamInt Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyPhysicsForcesAction.InputSourceType.html": {
    "href": "api/Quantum.ModifyPhysicsForcesAction.InputSourceType.html",
    "title": "Enum ModifyPhysicsForcesAction.InputSourceType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyPhysicsForcesAction.InputSourceType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyPhysicsForcesAction.InputSourceType Fields custom = 5 none = 0 rotation = 2 slope = 3 stick = 1 targetLook = 4"
  },
  "api/Quantum.ModifyPhysicsForcesAction.ModifyType.html": {
    "href": "api/Quantum.ModifyPhysicsForcesAction.ModifyType.html",
    "title": "Enum ModifyPhysicsForcesAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyPhysicsForcesAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyPhysicsForcesAction.ModifyType Fields ADD = 1 SET = 0"
  },
  "api/Quantum.ModifyPhysicsForcesAction.html": {
    "href": "api/Quantum.ModifyPhysicsForcesAction.html",
    "title": "Class ModifyPhysicsForcesAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyPhysicsForcesAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Generic/Movement/Modify Physics Forces\", 0)] public class ModifyPhysicsForcesAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyPhysicsForcesAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields customInput public HNSFParamFPVector3 customInput Field Value HNSFParamFPVector3 inputSources public ModifyPhysicsForcesAction.InputSourceType[] inputSources Field Value InputSourceType[] modifyType public ModifyPhysicsForcesAction.ModifyType modifyType Field Value ModifyPhysicsForcesAction.ModifyType normalizeInput public bool normalizeInput Field Value bool speed public FP speed Field Value FP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifySpecialPageAction.html": {
    "href": "api/Quantum.ModifySpecialPageAction.html",
    "title": "Class ModifySpecialPageAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifySpecialPageAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifySpecialPageAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifySpecialPageAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields specialPage public int specialPage Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifySpecialPageSetAction.html": {
    "href": "api/Quantum.ModifySpecialPageSetAction.html",
    "title": "Class ModifySpecialPageSetAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifySpecialPageSetAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifySpecialPageSetAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifySpecialPageSetAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields specialPageSet public int specialPageSet Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ModifyStateFrameAction.ModifyType.html": {
    "href": "api/Quantum.ModifyStateFrameAction.ModifyType.html",
    "title": "Enum ModifyStateFrameAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ModifyStateFrameAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum ModifyStateFrameAction.ModifyType Fields Add = 1 Set = 0"
  },
  "api/Quantum.ModifyStateFrameAction.html": {
    "href": "api/Quantum.ModifyStateFrameAction.html",
    "title": "Class ModifyStateFrameAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ModifyStateFrameAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ModifyStateFrameAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ModifyStateFrameAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields modifyType public ModifyStateFrameAction.ModifyType modifyType Field Value ModifyStateFrameAction.ModifyType value public int value Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.MoveInAttackStringDecision.html": {
    "href": "api/Quantum.MoveInAttackStringDecision.html",
    "title": "Class MoveInAttackStringDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class MoveInAttackStringDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class MoveInAttackStringDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision MoveInAttackStringDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields maximumTimesInString public int maximumTimesInString Field Value int Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.MoveIsLastInAttackStringDecision.html": {
    "href": "api/Quantum.MoveIsLastInAttackStringDecision.html",
    "title": "Class MoveIsLastInAttackStringDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class MoveIsLastInAttackStringDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class MoveIsLastInAttackStringDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision MoveIsLastInAttackStringDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkAmount public int checkAmount Field Value int Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.MoveTowardsPhysicsForceAction.InputSourceType.html": {
    "href": "api/Quantum.MoveTowardsPhysicsForceAction.InputSourceType.html",
    "title": "Enum MoveTowardsPhysicsForceAction.InputSourceType | Rwby Vytal Versus Documentation",
    "keywords": "Enum MoveTowardsPhysicsForceAction.InputSourceType Namespace Quantum Assembly Quantum.Simulation.dll public enum MoveTowardsPhysicsForceAction.InputSourceType Fields custom = 5 hardTarget = 3 rotation = 1 slope = 2 softTarget = 4 stick = 0"
  },
  "api/Quantum.MoveTowardsPhysicsForceAction.html": {
    "href": "api/Quantum.MoveTowardsPhysicsForceAction.html",
    "title": "Class MoveTowardsPhysicsForceAction | Rwby Vytal Versus Documentation",
    "keywords": "Class MoveTowardsPhysicsForceAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Generic/Movement/Move Towards Forces\", 0)] public class MoveTowardsPhysicsForceAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction MoveTowardsPhysicsForceAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields customInput public HNSFParamFPVector3 customInput Field Value HNSFParamFPVector3 inputSources public MoveTowardsPhysicsForceAction.InputSourceType[] inputSources Field Value InputSourceType[] moveTowardsSpeed public FP moveTowardsSpeed Field Value FP normalizeInput public bool normalizeInput Field Value bool speed public FP speed Field Value FP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.MultiplyForcesAction.ForceGroupType.html": {
    "href": "api/Quantum.MultiplyForcesAction.ForceGroupType.html",
    "title": "Enum MultiplyForcesAction.ForceGroupType | Rwby Vytal Versus Documentation",
    "keywords": "Enum MultiplyForcesAction.ForceGroupType Namespace Quantum Assembly Quantum.Simulation.dll public enum MultiplyForcesAction.ForceGroupType Fields Both = 2 Gravity = 1 Movement = 0"
  },
  "api/Quantum.MultiplyForcesAction.html": {
    "href": "api/Quantum.MultiplyForcesAction.html",
    "title": "Class MultiplyForcesAction | Rwby Vytal Versus Documentation",
    "keywords": "Class MultiplyForcesAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Multiply Forces\", 0)] public class MultiplyForcesAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction MultiplyForcesAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields forceToMultiply public MultiplyForcesAction.ForceGroupType forceToMultiply Field Value MultiplyForcesAction.ForceGroupType value public HNSFParamFP value Field Value HNSFParamFP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.NetworkButtons.html": {
    "href": "api/Quantum.NetworkButtons.html",
    "title": "Struct NetworkButtons | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkButtons Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public struct NetworkButtons Constructors NetworkButtons(int) public NetworkButtons(int buttons) Parameters buttons int Fields SIZE public const int SIZE = 4 Field Value int Properties Bits public int Bits { get; } Property Value int Methods GetPressed(NetworkButtons) public NetworkButtons GetPressed(NetworkButtons previous) Parameters previous NetworkButtons Returns NetworkButtons GetReleased(NetworkButtons) public NetworkButtons GetReleased(NetworkButtons previous) Parameters previous NetworkButtons Returns NetworkButtons IsSet(int) public bool IsSet(int buttons) Parameters buttons int Returns bool IsSet<T>(T) public bool IsSet<T>(T button) where T : unmanaged, Enum Parameters button T Returns bool Type Parameters T Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer Set(PlayerInputButtonType, bool) public void Set(PlayerInputButtonType button, bool state) Parameters button PlayerInputButtonType state bool Set(int, bool) public void Set(int button, bool state) Parameters button int state bool SetAllDown() public void SetAllDown() SetAllUp() public void SetAllUp() SetDown(PlayerInputButtonType) public void SetDown(PlayerInputButtonType button) Parameters button PlayerInputButtonType SetDown(int) public void SetDown(int buttons) Parameters buttons int SetUp(PlayerInputButtonType) public void SetUp(PlayerInputButtonType button) Parameters button PlayerInputButtonType SetUp(int) public void SetUp(int buttons) Parameters buttons int WasPressed(NetworkButtons, int) public bool WasPressed(NetworkButtons previous, int button) Parameters previous NetworkButtons button int Returns bool WasPressed<T>(NetworkButtons, T) public bool WasPressed<T>(NetworkButtons previous, T button) where T : unmanaged, Enum Parameters previous NetworkButtons button T Returns bool Type Parameters T WasReleased(NetworkButtons, int) public bool WasReleased(NetworkButtons previous, int button) Parameters previous NetworkButtons button int Returns bool WasReleased<T>(NetworkButtons, T) public bool WasReleased<T>(NetworkButtons previous, T button) where T : unmanaged, Enum Parameters previous NetworkButtons button T Returns bool Type Parameters T"
  },
  "api/Quantum.NextStateDecision.html": {
    "href": "api/Quantum.NextStateDecision.html",
    "title": "Class NextStateDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class NextStateDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class NextStateDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision NextStateDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields validStates public AssetRef<HNSFState>[] validStates Field Value AssetRef<HNSFState>[] Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.NextStatesetDecision.html": {
    "href": "api/Quantum.NextStatesetDecision.html",
    "title": "Class NextStatesetDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class NextStatesetDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class NextStatesetDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision NextStatesetDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields validStatesets public AssetRef<HNSFStateSet>[] validStatesets Field Value AssetRef<HNSFStateSet>[] Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.Parented.html": {
    "href": "api/Quantum.Parented.html",
    "title": "Struct Parented | Rwby Vytal Versus Documentation",
    "keywords": "Struct Parented Namespace Quantum Assembly Quantum.Simulation.dll public struct Parented : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 56 Field Value int localEuler public FPVector3 localEuler Field Value FPVector3 localOffset public FPVector3 localOffset Field Value FPVector3 parent public EntityRef parent Field Value EntityRef Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.PhysicsGroundedDecision.CheckType.html": {
    "href": "api/Quantum.PhysicsGroundedDecision.CheckType.html",
    "title": "Enum PhysicsGroundedDecision.CheckType | Rwby Vytal Versus Documentation",
    "keywords": "Enum PhysicsGroundedDecision.CheckType Namespace Quantum Assembly Quantum.Simulation.dll public enum PhysicsGroundedDecision.CheckType Fields IsAerial = 1 IsGrounded = 0"
  },
  "api/Quantum.PhysicsGroundedDecision.html": {
    "href": "api/Quantum.PhysicsGroundedDecision.html",
    "title": "Class PhysicsGroundedDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class PhysicsGroundedDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class PhysicsGroundedDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision PhysicsGroundedDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkType public PhysicsGroundedDecision.CheckType checkType Field Value PhysicsGroundedDecision.CheckType Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.PhysicsShapeOverlapDecision.html": {
    "href": "api/Quantum.PhysicsShapeOverlapDecision.html",
    "title": "Class PhysicsShapeOverlapDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class PhysicsShapeOverlapDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class PhysicsShapeOverlapDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision PhysicsShapeOverlapDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields boxExtents [DrawIf(\"shape\", 2, CompareOperator.Equal, DrawIfMode.ReadOnly)] public FPVector3 boxExtents Field Value FPVector3 layerMask public LayerMask layerMask Field Value LayerMask offset public FPVector3 offset Field Value FPVector3 radius [DrawIf(\"shape\", 1, CompareOperator.Equal, DrawIfMode.ReadOnly)] public FP radius Field Value FP shape public Shape3DType shape Field Value Shape3DType Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.PlayEffectOnChargeLevelAction.html": {
    "href": "api/Quantum.PlayEffectOnChargeLevelAction.html",
    "title": "Class PlayEffectOnChargeLevelAction | Rwby Vytal Versus Documentation",
    "keywords": "Class PlayEffectOnChargeLevelAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class PlayEffectOnChargeLevelAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction PlayEffectOnChargeLevelAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields parented public bool parented Field Value bool positionAsOffset public bool positionAsOffset Field Value bool positionOffset public FPVector3 positionOffset Field Value FPVector3 rotationAsOffset public bool rotationAsOffset Field Value bool rotationOffset public FPVector3 rotationOffset Field Value FPVector3 visualEffectToPlay public AssetRef<VisualEffectEntry> visualEffectToPlay Field Value AssetRef<VisualEffectEntry> Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.PlayRandomSoundAction.SoundReferences.html": {
    "href": "api/Quantum.PlayRandomSoundAction.SoundReferences.html",
    "title": "Class PlayRandomSoundAction.SoundReferences | Rwby Vytal Versus Documentation",
    "keywords": "Class PlayRandomSoundAction.SoundReferences Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class PlayRandomSoundAction.SoundReferences Inheritance object PlayRandomSoundAction.SoundReferences Fields chance public FP chance Field Value FP maxPitch public FP maxPitch Field Value FP minPitch public FP minPitch Field Value FP soundRef public AssetRef<SoundEntry> soundRef Field Value AssetRef<SoundEntry> volume public FP volume Field Value FP"
  },
  "api/Quantum.PlayRandomSoundAction.html": {
    "href": "api/Quantum.PlayRandomSoundAction.html",
    "title": "Class PlayRandomSoundAction | Rwby Vytal Versus Documentation",
    "keywords": "Class PlayRandomSoundAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class PlayRandomSoundAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction PlayRandomSoundAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields audioSourceConfig public AssetRef<AudioSourceConfig> audioSourceConfig Field Value AssetRef<AudioSourceConfig> cancelSameSound public bool cancelSameSound Field Value bool cancelSameTag public bool cancelSameTag Field Value bool globalChance public FP globalChance Field Value FP mustPlaySound public bool mustPlaySound Field Value bool parentedToSelf public bool parentedToSelf Field Value bool positionOffset public FPVector3 positionOffset Field Value FPVector3 sounds public List<PlayRandomSoundAction.SoundReferences> sounds Field Value List<PlayRandomSoundAction.SoundReferences> tag public AssetRef<Tag> tag Field Value AssetRef<Tag> Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.PlaySoundAction.html": {
    "href": "api/Quantum.PlaySoundAction.html",
    "title": "Class PlaySoundAction | Rwby Vytal Versus Documentation",
    "keywords": "Class PlaySoundAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class PlaySoundAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction PlaySoundAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields audioSourceConfig public AssetRef<AudioSourceConfig> audioSourceConfig Field Value AssetRef<AudioSourceConfig> cancelSameSound public bool cancelSameSound Field Value bool cancelSameTag public bool cancelSameTag Field Value bool maxPitch public FP maxPitch Field Value FP minPitch public FP minPitch Field Value FP parentedToSelf public bool parentedToSelf Field Value bool positionOffset public FPVector3 positionOffset Field Value FPVector3 soundRef public AssetRef<SoundEntry> soundRef Field Value AssetRef<SoundEntry> tag public AssetRef<Tag> tag Field Value AssetRef<Tag> volume public FP volume Field Value FP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.PlaySoundRequest.html": {
    "href": "api/Quantum.PlaySoundRequest.html",
    "title": "Class PlaySoundRequest | Rwby Vytal Versus Documentation",
    "keywords": "Class PlaySoundRequest Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class PlaySoundRequest Inheritance object PlaySoundRequest Fields audioSourceConfig public AssetRef<AudioSourceConfig> audioSourceConfig Field Value AssetRef<AudioSourceConfig> cancelSameSound public bool cancelSameSound Field Value bool cancelSameTag public bool cancelSameTag Field Value bool maxPitch public FP maxPitch Field Value FP minPitch public FP minPitch Field Value FP parentedToSelf public bool parentedToSelf Field Value bool positionOffset public FPVector3 positionOffset Field Value FPVector3 soundRef public AssetRef<SoundEntry> soundRef Field Value AssetRef<SoundEntry> tag public AssetRef<Tag> tag Field Value AssetRef<Tag> volume public FP volume Field Value FP"
  },
  "api/Quantum.PlayVisualEffectAction.html": {
    "href": "api/Quantum.PlayVisualEffectAction.html",
    "title": "Class PlayVisualEffectAction | Rwby Vytal Versus Documentation",
    "keywords": "Class PlayVisualEffectAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class PlayVisualEffectAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction PlayVisualEffectAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields parented public bool parented Field Value bool positionAsOffset public bool positionAsOffset Field Value bool positionOffset public FPVector3 positionOffset Field Value FPVector3 rotationAsOffset public bool rotationAsOffset Field Value bool rotationOffset public FPVector3 rotationOffset Field Value FPVector3 visualEffectToPlay public AssetRef<VisualEffectEntry> visualEffectToPlay Field Value AssetRef<VisualEffectEntry> Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.PlayerInputButtonType.html": {
    "href": "api/Quantum.PlayerInputButtonType.html",
    "title": "Enum PlayerInputButtonType | Rwby Vytal Versus Documentation",
    "keywords": "Enum PlayerInputButtonType Namespace Quantum Assembly Quantum.Simulation.dll [Flags] public enum PlayerInputButtonType Fields ABILITY1 = 4096 ABILITY2 = 8192 ABILITY3 = 16384 ABILITY4 = 32768 All = -1 BACKWARD = 4 BACKWARD_LEFT = BACKWARD | LEFT BACKWARD_RIGHT = BACKWARD | RIGHT BLOCK = 2048 DASH = 256 EXTRA1 = 65536 EXTRA2 = 131072 EXTRA3 = 262144 EXTRA4 = 524288 FORWARD = 2 FORWARD_LEFT = FORWARD | LEFT FORWARD_RIGHT = FORWARD | RIGHT HEAVY = 64 JUMP = 512 LEFT = 8 LIGHT = 32 LIGHT_HEAVY = LIGHT | HEAVY LOCK_ON = 1024 NEUTRAL = 1 NONE = 0 RIGHT = 16 TAUNT = 1048576 UNIQUE = 128"
  },
  "api/Quantum.PlayerLink.html": {
    "href": "api/Quantum.PlayerLink.html",
    "title": "Struct PlayerLink | Rwby Vytal Versus Documentation",
    "keywords": "Struct PlayerLink Namespace Quantum Assembly Quantum.Simulation.dll public struct PlayerLink : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int Player public PlayerRef Player Field Value PlayerRef SIZE public const int SIZE = 4 Field Value int Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.Projectile.html": {
    "href": "api/Quantum.Projectile.html",
    "title": "Struct Projectile | Rwby Vytal Versus Documentation",
    "keywords": "Struct Projectile Namespace Quantum Assembly Quantum.Simulation.dll public struct Projectile : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 200 Field Value int active public QBoolean active Field Value QBoolean coll public PhysicsCollider3D coll Field Value PhysicsCollider3D owner public EntityRef owner Field Value EntityRef transform public Transform3D transform Field Value Transform3D Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.Prototypes.AICharacterActorPrototype.html": {
    "href": "api/Quantum.Prototypes.AICharacterActorPrototype.html",
    "title": "Class AICharacterActorPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class AICharacterActorPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(AICharacterActor))] public class AICharacterActorPrototype : ComponentPrototype<AICharacterActor>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<AICharacterActor> AICharacterActorPrototype Implements IPrototype Inherited Members ComponentPrototype<AICharacterActor>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields behaviourTree public AssetRef<BTRoot> behaviourTree Field Value AssetRef<BTRoot> Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref AICharacterActor, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref AICharacterActor result, in PrototypeMaterializationContext context = default) Parameters frame Frame result AICharacterActor context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.AuraPrototype.html": {
    "href": "api/Quantum.Prototypes.AuraPrototype.html",
    "title": "Class AuraPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class AuraPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(Aura))] public class AuraPrototype : ComponentPrototype<Aura>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<Aura> AuraPrototype Implements IPrototype Inherited Members ComponentPrototype<Aura>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields value public int value Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref Aura, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref Aura result, in PrototypeMaterializationContext context = default) Parameters frame Frame result Aura context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.BoxCombatantPrototype.html": {
    "href": "api/Quantum.Prototypes.BoxCombatantPrototype.html",
    "title": "Class BoxCombatantPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class BoxCombatantPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(BoxCombatant))] public class BoxCombatantPrototype : ComponentPrototype<BoxCombatant>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<BoxCombatant> BoxCombatantPrototype Implements IPrototype Inherited Members ComponentPrototype<BoxCombatant>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields collisionboxList [DynamicCollection] public MapEntityId[] collisionboxList Field Value MapEntityId[] collisionboxesDisabled public QBoolean collisionboxesDisabled Field Value QBoolean entitiesHit [DynamicCollection] public EntityHitDefinitionPrototype[] entitiesHit Field Value EntityHitDefinitionPrototype[] hasClashed public QBoolean hasClashed Field Value QBoolean hitByEntity public MapEntityId hitByEntity Field Value MapEntityId hitByHurtboxWasHit public int hitByHurtboxWasHit Field Value int hitByInfo public AssetRef<HitInfo> hitByInfo Field Value AssetRef<HitInfo> hitByNewState public QBoolean hitByNewState Field Value QBoolean hitByPosition public FPVector3 hitByPosition Field Value FPVector3 hitByState public AssetRef<HNSFState> hitByState Field Value AssetRef<HNSFState> hitByStates [DynamicCollection] public AssetRef<HNSFState>[] hitByStates Field Value AssetRef<HNSFState>[] hitByTeam public int hitByTeam Field Value int hitWithInfo public AssetRef<HitInfo> hitWithInfo Field Value AssetRef<HitInfo> hitboxList [DynamicCollection] public MapEntityId[] hitboxList Field Value MapEntityId[] hitboxesDisabled public QBoolean hitboxesDisabled Field Value QBoolean hurtboxList [DynamicCollection] public MapEntityId[] hurtboxList Field Value MapEntityId[] hurtboxesDisabled public QBoolean hurtboxesDisabled Field Value QBoolean lastHitEntity public MapEntityId lastHitEntity Field Value MapEntityId lastHitOnFrame public int lastHitOnFrame Field Value int lastReceivedClashLevel public int lastReceivedClashLevel Field Value int lastReceivedHitReaction public int lastReceivedHitReaction Field Value int onClashAction public AssetRef<HNSFStateAction> onClashAction Field Value AssetRef<HNSFStateAction> onHitAction public AssetRef<StateFunctionInt> onHitAction Field Value AssetRef<StateFunctionInt> stateHitCounters [Dictionary] [DynamicCollection] public DictionaryEntry_Int32_Int32[] stateHitCounters Field Value DictionaryEntry_Int32_Int32[] whenHitAction public AssetRef<HNSFStateAction> whenHitAction Field Value AssetRef<HNSFStateAction> Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref BoxCombatant, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref BoxCombatant result, in PrototypeMaterializationContext context = default) Parameters frame Frame result BoxCombatant context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CharaAnimatorPrototype.html": {
    "href": "api/Quantum.Prototypes.CharaAnimatorPrototype.html",
    "title": "Class CharaAnimatorPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CharaAnimatorPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CharaAnimator))] public class CharaAnimatorPrototype : ComponentPrototype<CharaAnimator>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<CharaAnimator> CharaAnimatorPrototype Implements IPrototype Inherited Members ComponentPrototype<CharaAnimator>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields state public CharaAnimatorStatePrototype state Field Value CharaAnimatorStatePrototype Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref CharaAnimator, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CharaAnimator result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CharaAnimator context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CharaAnimatorStatePrototype.html": {
    "href": "api/Quantum.Prototypes.CharaAnimatorStatePrototype.html",
    "title": "Class CharaAnimatorStatePrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CharaAnimatorStatePrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CharaAnimatorState))] public class CharaAnimatorStatePrototype : StructPrototype, IPrototype Inheritance object StructPrototype CharaAnimatorStatePrototype Implements IPrototype Fields autoPlay public QBoolean autoPlay Field Value QBoolean layer0Frame public int layer0Frame Field Value int layer0MixerParam public FPVector2 layer0MixerParam Field Value FPVector2 layer0Set public AssetRef<AnimationEntry> layer0Set Field Value AssetRef<AnimationEntry> layer0Weight public FP layer0Weight Field Value FP layer1Frame public int layer1Frame Field Value int layer1MixerParam public FPVector2 layer1MixerParam Field Value FPVector2 layer1Set public AssetRef<AnimationEntry> layer1Set Field Value AssetRef<AnimationEntry> layer1Weight public FP layer1Weight Field Value FP Methods Materialize(Frame, ref CharaAnimatorState, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CharaAnimatorState result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CharaAnimatorState context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CharaInputsPrototype.html": {
    "href": "api/Quantum.Prototypes.CharaInputsPrototype.html",
    "title": "Class CharaInputsPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CharaInputsPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CharaInputs))] public class CharaInputsPrototype : ComponentPrototype<CharaInputs>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<CharaInputs> CharaInputsPrototype Implements IPrototype Inherited Members ComponentPrototype<CharaInputs>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields backwardHoldTime public ushort backwardHoldTime Field Value ushort blockHoldTime public ushort blockHoldTime Field Value ushort camEuler public FPVector3 camEuler Field Value FPVector3 dashHoldTime public ushort dashHoldTime Field Value ushort extraBuffer public int extraBuffer Field Value int forwardHoldTime public ushort forwardHoldTime Field Value ushort heavyHoldTime public ushort heavyHoldTime Field Value ushort ignoreButtons public PlayerInputButtonType ignoreButtons Field Value PlayerInputButtonType ignoreMovement public QBoolean ignoreMovement Field Value QBoolean inputBuffer [DynamicCollection] public NetworkButtons[] inputBuffer Field Value NetworkButtons[] inputDisabled [DynamicCollection] public NetworkButtons[] inputDisabled Field Value NetworkButtons[] jumpHoldTime public ushort jumpHoldTime Field Value ushort lastMoveInput public FPVector2 lastMoveInput Field Value FPVector2 lastSpecialInput public PlayerInputButtonType lastSpecialInput Field Value PlayerInputButtonType leftHoldTime public ushort leftHoldTime Field Value ushort lightHoldTime public ushort lightHoldTime Field Value ushort lockOnHoldTime public ushort lockOnHoldTime Field Value ushort moveInput public FPVector2 moveInput Field Value FPVector2 rightHoldTime public ushort rightHoldTime Field Value ushort uniqueHoldTime public ushort uniqueHoldTime Field Value ushort Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref CharaInputs, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CharaInputs result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CharaInputs context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CharaLinkPrototype.html": {
    "href": "api/Quantum.Prototypes.CharaLinkPrototype.html",
    "title": "Class CharaLinkPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CharaLinkPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CharaLink))] public class CharaLinkPrototype : ComponentPrototype<CharaLink>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<CharaLink> CharaLinkPrototype Implements IPrototype Inherited Members ComponentPrototype<CharaLink>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields charaDefinition public AssetRef<CharaDefinitionAsset> charaDefinition Field Value AssetRef<CharaDefinitionAsset> Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref CharaLink, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CharaLink result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CharaLink context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CharaPhysicsPrototype.html": {
    "href": "api/Quantum.Prototypes.CharaPhysicsPrototype.html",
    "title": "Class CharaPhysicsPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CharaPhysicsPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CharaPhysics))] public class CharaPhysicsPrototype : ComponentPrototype<CharaPhysics>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<CharaPhysics> CharaPhysicsPrototype Implements IPrototype Inherited Members ComponentPrototype<CharaPhysics>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields conservedIntertia public FPVector3 conservedIntertia Field Value FPVector3 currentGroundedState public QEnum32<StateGroundedType> currentGroundedState Field Value QEnum32<StateGroundedType> externalCollisionMultiplier public FP externalCollisionMultiplier Field Value FP rotationDir public FPVector3 rotationDir Field Value FPVector3 Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref CharaPhysics, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CharaPhysics result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CharaPhysics context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CharaStateMachinesPrototype.html": {
    "href": "api/Quantum.Prototypes.CharaStateMachinesPrototype.html",
    "title": "Class CharaStateMachinesPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CharaStateMachinesPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CharaStateMachines))] public class CharaStateMachinesPrototype : ComponentPrototype<CharaStateMachines>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<CharaStateMachines> CharaStateMachinesPrototype Implements IPrototype Inherited Members ComponentPrototype<CharaStateMachines>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields blackboard public AIBlackboardComponentPrototype blackboard Field Value AIBlackboardComponentPrototype blackboardInitializer public AssetRef<AIBlackboardInitializer> blackboardInitializer Field Value AssetRef<AIBlackboardInitializer> config public AssetRef<AIConfigBase> config Field Value AssetRef<AIConfigBase> disableAutoUpdates public QBoolean disableAutoUpdates Field Value QBoolean specials [DynamicCollection] public AssetRef<HNSFSpecialSet>[] specials Field Value AssetRef<HNSFSpecialSet>[] specialsPage public int specialsPage Field Value int stateAgent public HNSFStateAgentPrototype stateAgent Field Value HNSFStateAgentPrototype taggedStates public AssetRef<HNSFTaggedStatesAsset> taggedStates Field Value AssetRef<HNSFTaggedStatesAsset> Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref CharaStateMachines, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CharaStateMachines result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CharaStateMachines context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.ClashCombatPairPrototype.html": {
    "href": "api/Quantum.Prototypes.ClashCombatPairPrototype.html",
    "title": "Class ClashCombatPairPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class ClashCombatPairPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(ClashCombatPair))] public class ClashCombatPairPrototype : StructPrototype, IPrototype Inheritance object StructPrototype ClashCombatPairPrototype Implements IPrototype Fields entityA public MapEntityId entityA Field Value MapEntityId entityAClashLevel public int entityAClashLevel Field Value int entityAHitbox public MapEntityId entityAHitbox Field Value MapEntityId entityB public MapEntityId entityB Field Value MapEntityId entityBClashLevel public int entityBClashLevel Field Value int entityBHitbox public MapEntityId entityBHitbox Field Value MapEntityId Methods Materialize(Frame, ref ClashCombatPair, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref ClashCombatPair result, in PrototypeMaterializationContext context = default) Parameters frame Frame result ClashCombatPair context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CollisionCombatPairPrototype.html": {
    "href": "api/Quantum.Prototypes.CollisionCombatPairPrototype.html",
    "title": "Class CollisionCombatPairPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CollisionCombatPairPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CollisionCombatPair))] public class CollisionCombatPairPrototype : StructPrototype, IPrototype Inheritance object StructPrototype CollisionCombatPairPrototype Implements IPrototype Fields distance public FP distance Field Value FP entityA public MapEntityId entityA Field Value MapEntityId entityACollbox public MapEntityId entityACollbox Field Value MapEntityId entityB public MapEntityId entityB Field Value MapEntityId entityBCollbox public MapEntityId entityBCollbox Field Value MapEntityId Methods Materialize(Frame, ref CollisionCombatPair, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CollisionCombatPair result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CollisionCombatPair context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CollisionboxPrototype.html": {
    "href": "api/Quantum.Prototypes.CollisionboxPrototype.html",
    "title": "Class CollisionboxPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CollisionboxPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(Collisionbox))] public class CollisionboxPrototype : ComponentPrototype<Collisionbox>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<Collisionbox> CollisionboxPrototype Implements IPrototype Inherited Members ComponentPrototype<Collisionbox>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields active public QBoolean active Field Value QBoolean id public int id Field Value int owner public MapEntityId owner Field Value MapEntityId Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref Collisionbox, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref Collisionbox result, in PrototypeMaterializationContext context = default) Parameters frame Frame result Collisionbox context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CombatBoxPrototype.html": {
    "href": "api/Quantum.Prototypes.CombatBoxPrototype.html",
    "title": "Class CombatBoxPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatBoxPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CombatBox))] public class CombatBoxPrototype : ComponentPrototype<CombatBox>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<CombatBox> CombatBoxPrototype Implements IPrototype Inherited Members ComponentPrototype<CombatBox>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields _empty_prototype_dummy_field_ public int _empty_prototype_dummy_field_ Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref CombatBox, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CombatBox result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CombatBox context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CombatHitDetectionInfoPrototype.html": {
    "href": "api/Quantum.Prototypes.CombatHitDetectionInfoPrototype.html",
    "title": "Class CombatHitDetectionInfoPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatHitDetectionInfoPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CombatHitDetectionInfo))] public class CombatHitDetectionInfoPrototype : ComponentPrototype<CombatHitDetectionInfo>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<CombatHitDetectionInfo> CombatHitDetectionInfoPrototype Implements IPrototype Inherited Members ComponentPrototype<CombatHitDetectionInfo>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields clashCombatPairs [Dictionary] [DynamicCollection] public DictionaryEntry_EntityRef_ClashCombatPair[] clashCombatPairs Field Value DictionaryEntry_EntityRef_ClashCombatPair[] collisionPairs [Dictionary] [DynamicCollection] public DictionaryEntry_EntityRef_CollisionCombatPair[] collisionPairs Field Value DictionaryEntry_EntityRef_CollisionCombatPair[] hitboxCombatPairAttackee [Dictionary] [DynamicCollection] public DictionaryEntry_EntityRef_HitboxCombatPair[] hitboxCombatPairAttackee Field Value DictionaryEntry_EntityRef_HitboxCombatPair[] hitboxCombatPairAttacker [Dictionary] [DynamicCollection] public DictionaryEntry_EntityRef_HitboxCombatPair[] hitboxCombatPairAttacker Field Value DictionaryEntry_EntityRef_HitboxCombatPair[] Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref CombatHitDetectionInfo, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CombatHitDetectionInfo result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CombatHitDetectionInfo context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CombatTargeterPrototype.html": {
    "href": "api/Quantum.Prototypes.CombatTargeterPrototype.html",
    "title": "Class CombatTargeterPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatTargeterPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CombatTargeter))] public class CombatTargeterPrototype : ComponentPrototype<CombatTargeter>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<CombatTargeter> CombatTargeterPrototype Implements IPrototype Inherited Members ComponentPrototype<CombatTargeter>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields hardLocked public QBoolean hardLocked Field Value QBoolean lookForward public FPVector3 lookForward Field Value FPVector3 lookRight public FPVector3 lookRight Field Value FPVector3 softTarget public MapEntityId softTarget Field Value MapEntityId targetDistance public FP targetDistance Field Value FP targetEntity public MapEntityId targetEntity Field Value MapEntityId Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref CombatTargeter, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CombatTargeter result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CombatTargeter context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.CombatTeamPrototype.html": {
    "href": "api/Quantum.Prototypes.CombatTeamPrototype.html",
    "title": "Class CombatTeamPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class CombatTeamPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(CombatTeam))] public class CombatTeamPrototype : ComponentPrototype<CombatTeam>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<CombatTeam> CombatTeamPrototype Implements IPrototype Inherited Members ComponentPrototype<CombatTeam>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields value public int value Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref CombatTeam, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref CombatTeam result, in PrototypeMaterializationContext context = default) Parameters frame Frame result CombatTeam context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.DictionaryEntry_EntityRef_ClashCombatPair.html": {
    "href": "api/Quantum.Prototypes.DictionaryEntry_EntityRef_ClashCombatPair.html",
    "title": "Class DictionaryEntry_EntityRef_ClashCombatPair | Rwby Vytal Versus Documentation",
    "keywords": "Class DictionaryEntry_EntityRef_ClashCombatPair Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KeyValuePair<EntityRef, ClashCombatPair>))] public class DictionaryEntry_EntityRef_ClashCombatPair : DictionaryEntry, IPrototype Inheritance object DictionaryEntry DictionaryEntry_EntityRef_ClashCombatPair Implements IPrototype Fields Key public MapEntityId Key Field Value MapEntityId Value public ClashCombatPairPrototype Value Field Value ClashCombatPairPrototype"
  },
  "api/Quantum.Prototypes.DictionaryEntry_EntityRef_CollisionCombatPair.html": {
    "href": "api/Quantum.Prototypes.DictionaryEntry_EntityRef_CollisionCombatPair.html",
    "title": "Class DictionaryEntry_EntityRef_CollisionCombatPair | Rwby Vytal Versus Documentation",
    "keywords": "Class DictionaryEntry_EntityRef_CollisionCombatPair Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KeyValuePair<EntityRef, CollisionCombatPair>))] public class DictionaryEntry_EntityRef_CollisionCombatPair : DictionaryEntry, IPrototype Inheritance object DictionaryEntry DictionaryEntry_EntityRef_CollisionCombatPair Implements IPrototype Fields Key public MapEntityId Key Field Value MapEntityId Value public CollisionCombatPairPrototype Value Field Value CollisionCombatPairPrototype"
  },
  "api/Quantum.Prototypes.DictionaryEntry_EntityRef_HitboxCombatPair.html": {
    "href": "api/Quantum.Prototypes.DictionaryEntry_EntityRef_HitboxCombatPair.html",
    "title": "Class DictionaryEntry_EntityRef_HitboxCombatPair | Rwby Vytal Versus Documentation",
    "keywords": "Class DictionaryEntry_EntityRef_HitboxCombatPair Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KeyValuePair<EntityRef, HitboxCombatPair>))] public class DictionaryEntry_EntityRef_HitboxCombatPair : DictionaryEntry, IPrototype Inheritance object DictionaryEntry DictionaryEntry_EntityRef_HitboxCombatPair Implements IPrototype Fields Key public MapEntityId Key Field Value MapEntityId Value public HitboxCombatPairPrototype Value Field Value HitboxCombatPairPrototype"
  },
  "api/Quantum.Prototypes.DictionaryEntry_Int32_EntityRef.html": {
    "href": "api/Quantum.Prototypes.DictionaryEntry_Int32_EntityRef.html",
    "title": "Class DictionaryEntry_Int32_EntityRef | Rwby Vytal Versus Documentation",
    "keywords": "Class DictionaryEntry_Int32_EntityRef Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KeyValuePair<int, EntityRef>))] public class DictionaryEntry_Int32_EntityRef : DictionaryEntry, IPrototype Inheritance object DictionaryEntry DictionaryEntry_Int32_EntityRef Implements IPrototype Fields Key public int Key Field Value int Value public MapEntityId Value Field Value MapEntityId"
  },
  "api/Quantum.Prototypes.DictionaryEntry_Int32_Int32.html": {
    "href": "api/Quantum.Prototypes.DictionaryEntry_Int32_Int32.html",
    "title": "Class DictionaryEntry_Int32_Int32 | Rwby Vytal Versus Documentation",
    "keywords": "Class DictionaryEntry_Int32_Int32 Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KeyValuePair<int, int>))] public class DictionaryEntry_Int32_Int32 : DictionaryEntry, IPrototype Inheritance object DictionaryEntry DictionaryEntry_Int32_Int32 Implements IPrototype Fields Key public int Key Field Value int Value public int Value Field Value int"
  },
  "api/Quantum.Prototypes.DictionaryEntry_Int32_TeamVersusPlayerData.html": {
    "href": "api/Quantum.Prototypes.DictionaryEntry_Int32_TeamVersusPlayerData.html",
    "title": "Class DictionaryEntry_Int32_TeamVersusPlayerData | Rwby Vytal Versus Documentation",
    "keywords": "Class DictionaryEntry_Int32_TeamVersusPlayerData Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KeyValuePair<int, TeamVersusPlayerData>))] public class DictionaryEntry_Int32_TeamVersusPlayerData : DictionaryEntry, IPrototype Inheritance object DictionaryEntry DictionaryEntry_Int32_TeamVersusPlayerData Implements IPrototype Fields Key public int Key Field Value int Value public TeamVersusPlayerDataPrototype Value Field Value TeamVersusPlayerDataPrototype"
  },
  "api/Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData.html": {
    "href": "api/Quantum.Prototypes.DictionaryEntry_Int32_TrainingPlayerData.html",
    "title": "Class DictionaryEntry_Int32_TrainingPlayerData | Rwby Vytal Versus Documentation",
    "keywords": "Class DictionaryEntry_Int32_TrainingPlayerData Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KeyValuePair<int, TrainingPlayerData>))] public class DictionaryEntry_Int32_TrainingPlayerData : DictionaryEntry, IPrototype Inheritance object DictionaryEntry DictionaryEntry_Int32_TrainingPlayerData Implements IPrototype Fields Key public int Key Field Value int Value public TrainingPlayerDataPrototype Value Field Value TrainingPlayerDataPrototype"
  },
  "api/Quantum.Prototypes.DictionaryEntry_PlayerRef_Int32.html": {
    "href": "api/Quantum.Prototypes.DictionaryEntry_PlayerRef_Int32.html",
    "title": "Class DictionaryEntry_PlayerRef_Int32 | Rwby Vytal Versus Documentation",
    "keywords": "Class DictionaryEntry_PlayerRef_Int32 Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KeyValuePair<PlayerRef, int>))] public class DictionaryEntry_PlayerRef_Int32 : DictionaryEntry, IPrototype Inheritance object DictionaryEntry DictionaryEntry_PlayerRef_Int32 Implements IPrototype Fields Key public PlayerRef Key Field Value PlayerRef Value public int Value Field Value int"
  },
  "api/Quantum.Prototypes.DummyConfigurationPrototype.html": {
    "href": "api/Quantum.Prototypes.DummyConfigurationPrototype.html",
    "title": "Class DummyConfigurationPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class DummyConfigurationPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(DummyConfiguration))] public class DummyConfigurationPrototype : ComponentPrototype<DummyConfiguration>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<DummyConfiguration> DummyConfigurationPrototype Implements IPrototype Inherited Members ComponentPrototype<DummyConfiguration>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields aerialRecovery public QEnum32<DummyThrowEscape> aerialRecovery Field Value QEnum32<DummyThrowEscape> aerialRecoveryDirection public QEnum32<DummyAerialRecoveryDirection> aerialRecoveryDirection Field Value QEnum32<DummyAerialRecoveryDirection> behaviour public QEnum32<DummyConfigBehaviour> behaviour Field Value QEnum32<DummyConfigBehaviour> blockBehaviour public QEnum32<DummyBlockBehaviour> blockBehaviour Field Value QEnum32<DummyBlockBehaviour> blockDirection public QEnum32<DummyBlockDirection> blockDirection Field Value QEnum32<DummyBlockDirection> controlType public QEnum32<DummyControlType> controlType Field Value QEnum32<DummyControlType> counterhit public QEnum32<DummyConfigCounterhit> counterhit Field Value QEnum32<DummyConfigCounterhit> frameInput public InputPrototype frameInput Field Value InputPrototype framesBeforeGroundRecovery public byte framesBeforeGroundRecovery Field Value byte framesToHoldBlockAfterBlockstunEnded public byte framesToHoldBlockAfterBlockstunEnded Field Value byte groundRecovery public QEnum32<DummyGroundRecovery> groundRecovery Field Value QEnum32<DummyGroundRecovery> hitsBeforeShouldBlock public byte hitsBeforeShouldBlock Field Value byte loopPlayRecordings public QBoolean loopPlayRecordings Field Value QBoolean recordingSlots [ArrayLength(8)] public DummyRecordingSlotPrototype[] recordingSlots Field Value DummyRecordingSlotPrototype[] reversalsOnBlock [ArrayLength(5)] public DummyRecordingSlotPrototype[] reversalsOnBlock Field Value DummyRecordingSlotPrototype[] reversalsOnDamaged [ArrayLength(5)] public DummyRecordingSlotPrototype[] reversalsOnDamaged Field Value DummyRecordingSlotPrototype[] reversalsOnWakeup [ArrayLength(5)] public DummyRecordingSlotPrototype[] reversalsOnWakeup Field Value DummyRecordingSlotPrototype[] techRollDirection public QEnum32<DummyTechRollDirection> techRollDirection Field Value QEnum32<DummyTechRollDirection> throwEscape public QEnum32<DummyThrowEscape> throwEscape Field Value QEnum32<DummyThrowEscape> Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref DummyConfiguration, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref DummyConfiguration result, in PrototypeMaterializationContext context = default) Parameters frame Frame result DummyConfiguration context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.DummyRecordingSlotPrototype.html": {
    "href": "api/Quantum.Prototypes.DummyRecordingSlotPrototype.html",
    "title": "Class DummyRecordingSlotPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class DummyRecordingSlotPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(DummyRecordingSlot))] public class DummyRecordingSlotPrototype : StructPrototype, IPrototype Inheritance object StructPrototype DummyRecordingSlotPrototype Implements IPrototype Fields active public QBoolean active Field Value QBoolean delay public byte delay Field Value byte inputs [DynamicCollection] public InputPrototype[] inputs Field Value InputPrototype[] slotChance public byte slotChance Field Value byte Methods Materialize(Frame, ref DummyRecordingSlot, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref DummyRecordingSlot result, in PrototypeMaterializationContext context = default) Parameters frame Frame result DummyRecordingSlot context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.EntityCenterPrototype.html": {
    "href": "api/Quantum.Prototypes.EntityCenterPrototype.html",
    "title": "Class EntityCenterPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityCenterPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(EntityCenter))] public class EntityCenterPrototype : ComponentPrototype<EntityCenter>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<EntityCenter> EntityCenterPrototype Implements IPrototype Inherited Members ComponentPrototype<EntityCenter>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields value public FPVector3 value Field Value FPVector3 Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref EntityCenter, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref EntityCenter result, in PrototypeMaterializationContext context = default) Parameters frame Frame result EntityCenter context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.EntityForcePrototype.html": {
    "href": "api/Quantum.Prototypes.EntityForcePrototype.html",
    "title": "Class EntityForcePrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityForcePrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(EntityForce))] public class EntityForcePrototype : ComponentPrototype<EntityForce>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<EntityForce> EntityForcePrototype Implements IPrototype Inherited Members ComponentPrototype<EntityForce>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields force public FPVector3 force Field Value FPVector3 Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref EntityForce, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref EntityForce result, in PrototypeMaterializationContext context = default) Parameters frame Frame result EntityForce context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.EntityHitDefinitionPrototype.html": {
    "href": "api/Quantum.Prototypes.EntityHitDefinitionPrototype.html",
    "title": "Class EntityHitDefinitionPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityHitDefinitionPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(EntityHitDefinition))] public class EntityHitDefinitionPrototype : StructPrototype, IPrototype Inheritance object StructPrototype EntityHitDefinitionPrototype Implements IPrototype Fields ent public MapEntityId ent Field Value MapEntityId hitByHitboxIdentifier public int hitByHitboxIdentifier Field Value int Methods Materialize(Frame, ref EntityHitDefinition, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref EntityHitDefinition result, in PrototypeMaterializationContext context = default) Parameters frame Frame result EntityHitDefinition context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.EnvQueryCachedPrototype.html": {
    "href": "api/Quantum.Prototypes.EnvQueryCachedPrototype.html",
    "title": "Class EnvQueryCachedPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryCachedPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(EnvQueryCached))] public class EnvQueryCachedPrototype : ComponentPrototype<EnvQueryCached>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<EnvQueryCached> EnvQueryCachedPrototype Implements IPrototype Inherited Members ComponentPrototype<EnvQueryCached>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields CenterOfItems public Transform3D CenterOfItems Field Value Transform3D broadphaseQueries [DynamicCollection] public PhysicsQueryRef[] broadphaseQueries Field Value PhysicsQueryRef[] envQueryItems [DynamicCollection] public EnvQueryItemCachedPrototype[] envQueryItems Field Value EnvQueryItemCachedPrototype[] querier public MapEntityId querier Field Value MapEntityId queryAsset public AssetRef<EnvironmentQueryAsset> queryAsset Field Value AssetRef<EnvironmentQueryAsset> stage public int stage Field Value int target public Transform3D target Field Value Transform3D targetEntity public MapEntityId targetEntity Field Value MapEntityId Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref EnvQueryCached, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref EnvQueryCached result, in PrototypeMaterializationContext context = default) Parameters frame Frame result EnvQueryCached context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.EnvQueryItemCachedPrototype.html": {
    "href": "api/Quantum.Prototypes.EnvQueryItemCachedPrototype.html",
    "title": "Class EnvQueryItemCachedPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryItemCachedPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(EnvQueryItemCached))] public class EnvQueryItemCachedPrototype : StructPrototype, IPrototype Inheritance object StructPrototype EnvQueryItemCachedPrototype Implements IPrototype Fields IsValid public QBoolean IsValid Field Value QBoolean Score public FP Score Field Value FP TestResults [DynamicCollection] public FP[] TestResults Field Value FP[] location public FPVector3 location Field Value FPVector3 Methods Materialize(Frame, ref EnvQueryItemCached, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref EnvQueryItemCached result, in PrototypeMaterializationContext context = default) Parameters frame Frame result EnvQueryItemCached context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.EnvQueryPrototype.html": {
    "href": "api/Quantum.Prototypes.EnvQueryPrototype.html",
    "title": "Class EnvQueryPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class EnvQueryPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(EnvQuery))] public class EnvQueryPrototype : StructPrototype, IPrototype Inheritance object StructPrototype EnvQueryPrototype Implements IPrototype Fields CenterOfItems public Transform3D CenterOfItems Field Value Transform3D querier public MapEntityId querier Field Value MapEntityId queryAsset public AssetRef<EnvironmentQueryAsset> queryAsset Field Value AssetRef<EnvironmentQueryAsset> target public Transform3D target Field Value Transform3D targetEntity public MapEntityId targetEntity Field Value MapEntityId Methods Materialize(Frame, ref EnvQuery, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref EnvQuery result, in PrototypeMaterializationContext context = default) Parameters frame Frame result EnvQuery context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.FighterArticlePrototype.html": {
    "href": "api/Quantum.Prototypes.FighterArticlePrototype.html",
    "title": "Class FighterArticlePrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterArticlePrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(FighterArticle))] public class FighterArticlePrototype : ComponentPrototype<FighterArticle>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<FighterArticle> FighterArticlePrototype Implements IPrototype Inherited Members ComponentPrototype<FighterArticle>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields owner public MapEntityId owner Field Value MapEntityId Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref FighterArticle, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref FighterArticle result, in PrototypeMaterializationContext context = default) Parameters frame Frame result FighterArticle context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.FighterArticlesPrototype.html": {
    "href": "api/Quantum.Prototypes.FighterArticlesPrototype.html",
    "title": "Class FighterArticlesPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterArticlesPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(FighterArticles))] public class FighterArticlesPrototype : ComponentPrototype<FighterArticles>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<FighterArticles> FighterArticlesPrototype Implements IPrototype Inherited Members ComponentPrototype<FighterArticles>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields articleRefs [DynamicCollection] public MapEntityId[] articleRefs Field Value MapEntityId[] Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref FighterArticles, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref FighterArticles result, in PrototypeMaterializationContext context = default) Parameters frame Frame result FighterArticles context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.FighterPrototype.html": {
    "href": "api/Quantum.Prototypes.FighterPrototype.html",
    "title": "Class FighterPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class FighterPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(Fighter))] public class FighterPrototype : ComponentPrototype<Fighter>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<Fighter> FighterPrototype Implements IPrototype Inherited Members ComponentPrototype<Fighter>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields blockstun public int blockstun Field Value int bonusProration public FP bonusProration Field Value FP comboCounter public int comboCounter Field Value int comboDecay public int comboDecay Field Value int comboDuration public int comboDuration Field Value int comboStartFrame public int comboStartFrame Field Value int currentAttackString [DynamicCollection] public AssetRef<HNSFState>[] currentAttackString Field Value AssetRef<HNSFState>[] currentProration public FP currentProration Field Value FP hitstop public int hitstop Field Value int hitstun public int hitstun Field Value int onDeathAction public AssetRef<HNSFStateAction> onDeathAction Field Value AssetRef<HNSFStateAction> onDespawnAction public AssetRef<HNSFStateAction> onDespawnAction Field Value AssetRef<HNSFStateAction> realComboCounter public int realComboCounter Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref Fighter, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref Fighter result, in PrototypeMaterializationContext context = default) Parameters frame Frame result Fighter context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.GainAuraPassivelyPrototype.html": {
    "href": "api/Quantum.Prototypes.GainAuraPassivelyPrototype.html",
    "title": "Class GainAuraPassivelyPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class GainAuraPassivelyPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(GainAuraPassively))] public class GainAuraPassivelyPrototype : ComponentPrototype<GainAuraPassively>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<GainAuraPassively> GainAuraPassivelyPrototype Implements IPrototype Inherited Members ComponentPrototype<GainAuraPassively>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields auraGainDelay public int auraGainDelay Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref GainAuraPassively, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref GainAuraPassively result, in PrototypeMaterializationContext context = default) Parameters frame Frame result GainAuraPassively context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.GenericGamemodeGlobalsPrototype.html": {
    "href": "api/Quantum.Prototypes.GenericGamemodeGlobalsPrototype.html",
    "title": "Class GenericGamemodeGlobalsPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class GenericGamemodeGlobalsPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(GenericGamemodeGlobals))] public class GenericGamemodeGlobalsPrototype : ComponentPrototype<GenericGamemodeGlobals>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<GenericGamemodeGlobals> GenericGamemodeGlobalsPrototype Implements IPrototype Inherited Members ComponentPrototype<GenericGamemodeGlobals>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields CurrentState public QEnum32<GenericGamemodeStates> CurrentState Field Value QEnum32<GenericGamemodeStates> DelayedState public QEnum32<GenericGamemodeStates> DelayedState Field Value QEnum32<GenericGamemodeStates> DelayedStateTimer public FP DelayedStateTimer Field Value FP PreviousState public QEnum32<GenericGamemodeStates> PreviousState Field Value QEnum32<GenericGamemodeStates> playersFinishedIntro [DynamicCollection] public int[] playersFinishedIntro Field Value int[] Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref GenericGamemodeGlobals, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref GenericGamemodeGlobals result, in PrototypeMaterializationContext context = default) Parameters frame Frame result GenericGamemodeGlobals context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.GenericStateAgentPrototype.html": {
    "href": "api/Quantum.Prototypes.GenericStateAgentPrototype.html",
    "title": "Class GenericStateAgentPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class GenericStateAgentPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(GenericStateAgent))] public class GenericStateAgentPrototype : ComponentPrototype<GenericStateAgent>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<GenericStateAgent> GenericStateAgentPrototype Implements IPrototype Inherited Members ComponentPrototype<GenericStateAgent>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields blackboard public AIBlackboardComponentPrototype blackboard Field Value AIBlackboardComponentPrototype blackboardInitializer public AssetRef<AIBlackboardInitializer> blackboardInitializer Field Value AssetRef<AIBlackboardInitializer> config public AssetRef<AIConfigBase> config Field Value AssetRef<AIConfigBase> disableAutoUpdates public QBoolean disableAutoUpdates Field Value QBoolean stateData public HNSFStateAgentDataPrototype stateData Field Value HNSFStateAgentDataPrototype stateSet public AssetRef<HNSFStateSet> stateSet Field Value AssetRef<HNSFStateSet> Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref GenericStateAgent, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref GenericStateAgent result, in PrototypeMaterializationContext context = default) Parameters frame Frame result GenericStateAgent context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.GotWallInfoPrototype.html": {
    "href": "api/Quantum.Prototypes.GotWallInfoPrototype.html",
    "title": "Class GotWallInfoPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class GotWallInfoPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(GotWallInfo))] public class GotWallInfoPrototype : ComponentPrototype<GotWallInfo>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<GotWallInfo> GotWallInfoPrototype Implements IPrototype Inherited Members ComponentPrototype<GotWallInfo>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields info public Hit3D info Field Value Hit3D Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref GotWallInfo, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref GotWallInfo result, in PrototypeMaterializationContext context = default) Parameters frame Frame result GotWallInfo context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.HNSFStateAgentDataPrototype.html": {
    "href": "api/Quantum.Prototypes.HNSFStateAgentDataPrototype.html",
    "title": "Class HNSFStateAgentDataPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFStateAgentDataPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(HNSFStateAgentData))] public class HNSFStateAgentDataPrototype : StructPrototype, IPrototype Inheritance object StructPrototype HNSFStateAgentDataPrototype Implements IPrototype Fields dontAutoIncrementFrame public QBoolean dontAutoIncrementFrame Field Value QBoolean frame public int frame Field Value int state public AssetRef<HNSFState> state Field Value AssetRef<HNSFState> toFrame public int toFrame Field Value int toState public AssetRef<HNSFState> toState Field Value AssetRef<HNSFState> toStateRequested public QBoolean toStateRequested Field Value QBoolean Methods Materialize(Frame, ref HNSFStateAgentData, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref HNSFStateAgentData result, in PrototypeMaterializationContext context = default) Parameters frame Frame result HNSFStateAgentData context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.HNSFStateAgentPrototype.html": {
    "href": "api/Quantum.Prototypes.HNSFStateAgentPrototype.html",
    "title": "Class HNSFStateAgentPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class HNSFStateAgentPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(HNSFStateAgent))] public class HNSFStateAgentPrototype : ComponentPrototype<HNSFStateAgent>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<HNSFStateAgent> HNSFStateAgentPrototype Implements IPrototype Inherited Members ComponentPrototype<HNSFStateAgent>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields globalStateData public HNSFStateAgentDataPrototype globalStateData Field Value HNSFStateAgentDataPrototype groupStateData public HNSFStateAgentDataPrototype groupStateData Field Value HNSFStateAgentDataPrototype movesetStateData public HNSFStateAgentDataPrototype movesetStateData Field Value HNSFStateAgentDataPrototype stateData public HNSFStateAgentDataPrototype stateData Field Value HNSFStateAgentDataPrototype stateSet public AssetRef<HNSFStateSet> stateSet Field Value AssetRef<HNSFStateSet> Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref HNSFStateAgent, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref HNSFStateAgent result, in PrototypeMaterializationContext context = default) Parameters frame Frame result HNSFStateAgent context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.HardTargetEntityDisabledPrototype.html": {
    "href": "api/Quantum.Prototypes.HardTargetEntityDisabledPrototype.html",
    "title": "Class HardTargetEntityDisabledPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class HardTargetEntityDisabledPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(HardTargetEntityDisabled))] public class HardTargetEntityDisabledPrototype : ComponentPrototype<HardTargetEntityDisabled>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<HardTargetEntityDisabled> HardTargetEntityDisabledPrototype Implements IPrototype Inherited Members ComponentPrototype<HardTargetEntityDisabled>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields removeTimer public int removeTimer Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref HardTargetEntityDisabled, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref HardTargetEntityDisabled result, in PrototypeMaterializationContext context = default) Parameters frame Frame result HardTargetEntityDisabled context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.HealthPrototype.html": {
    "href": "api/Quantum.Prototypes.HealthPrototype.html",
    "title": "Class HealthPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class HealthPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(Health))] public class HealthPrototype : ComponentPrototype<Health>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<Health> HealthPrototype Implements IPrototype Inherited Members ComponentPrototype<Health>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields value public int value Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref Health, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref Health result, in PrototypeMaterializationContext context = default) Parameters frame Frame result Health context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.HitboxCombatPairPrototype.html": {
    "href": "api/Quantum.Prototypes.HitboxCombatPairPrototype.html",
    "title": "Class HitboxCombatPairPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class HitboxCombatPairPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(HitboxCombatPair))] public class HitboxCombatPairPrototype : StructPrototype, IPrototype Inheritance object StructPrototype HitboxCombatPairPrototype Implements IPrototype Fields attackeeHitboxOrHurtbox public MapEntityId attackeeHitboxOrHurtbox Field Value MapEntityId attackeeHurtboxPriority public int attackeeHurtboxPriority Field Value int attacker public MapEntityId attacker Field Value MapEntityId attackerHitbox public MapEntityId attackerHitbox Field Value MapEntityId attackerHitboxPriority public int attackerHitboxPriority Field Value int isThrow public QBoolean isThrow Field Value QBoolean result public HitboxResolveResult result Field Value HitboxResolveResult Methods Materialize(Frame, ref HitboxCombatPair, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref HitboxCombatPair result, in PrototypeMaterializationContext context = default) Parameters frame Frame result HitboxCombatPair context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.HitboxPrototype.html": {
    "href": "api/Quantum.Prototypes.HitboxPrototype.html",
    "title": "Class HitboxPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class HitboxPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(Hitbox))] public class HitboxPrototype : ComponentPrototype<Hitbox>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<Hitbox> HitboxPrototype Implements IPrototype Inherited Members ComponentPrototype<Hitbox>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields active public QBoolean active Field Value QBoolean hitInfoRef public AssetRef hitInfoRef Field Value AssetRef id public int id Field Value int isThrow public QBoolean isThrow Field Value QBoolean owner public MapEntityId owner Field Value MapEntityId priority public int priority Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref Hitbox, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref Hitbox result, in PrototypeMaterializationContext context = default) Parameters frame Frame result Hitbox context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.HurtboxPrototype.html": {
    "href": "api/Quantum.Prototypes.HurtboxPrototype.html",
    "title": "Class HurtboxPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class HurtboxPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(Hurtbox))] public class HurtboxPrototype : ComponentPrototype<Hurtbox>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<Hurtbox> HurtboxPrototype Implements IPrototype Inherited Members ComponentPrototype<Hurtbox>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields active public QBoolean active Field Value QBoolean id public int id Field Value int owner public MapEntityId owner Field Value MapEntityId priority public int priority Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref Hurtbox, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref Hurtbox result, in PrototypeMaterializationContext context = default) Parameters frame Frame result Hurtbox context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.InAuraBurnoutPrototype.html": {
    "href": "api/Quantum.Prototypes.InAuraBurnoutPrototype.html",
    "title": "Class InAuraBurnoutPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class InAuraBurnoutPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(InAuraBurnout))] public class InAuraBurnoutPrototype : ComponentPrototype<InAuraBurnout>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<InAuraBurnout> InAuraBurnoutPrototype Implements IPrototype Inherited Members ComponentPrototype<InAuraBurnout>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields _empty_prototype_dummy_field_ public int _empty_prototype_dummy_field_ Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref InAuraBurnout, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref InAuraBurnout result, in PrototypeMaterializationContext context = default) Parameters frame Frame result InAuraBurnout context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.InCounterhitStatePrototype.html": {
    "href": "api/Quantum.Prototypes.InCounterhitStatePrototype.html",
    "title": "Class InCounterhitStatePrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class InCounterhitStatePrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(InCounterhitState))] public class InCounterhitStatePrototype : ComponentPrototype<InCounterhitState>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<InCounterhitState> InCounterhitStatePrototype Implements IPrototype Inherited Members ComponentPrototype<InCounterhitState>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields _empty_prototype_dummy_field_ public int _empty_prototype_dummy_field_ Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref InCounterhitState, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref InCounterhitState result, in PrototypeMaterializationContext context = default) Parameters frame Frame result InCounterhitState context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.InPunishCounterStatePrototype.html": {
    "href": "api/Quantum.Prototypes.InPunishCounterStatePrototype.html",
    "title": "Class InPunishCounterStatePrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class InPunishCounterStatePrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(InPunishCounterState))] public class InPunishCounterStatePrototype : ComponentPrototype<InPunishCounterState>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<InPunishCounterState> InPunishCounterStatePrototype Implements IPrototype Inherited Members ComponentPrototype<InPunishCounterState>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields _empty_prototype_dummy_field_ public int _empty_prototype_dummy_field_ Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref InPunishCounterState, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref InPunishCounterState result, in PrototypeMaterializationContext context = default) Parameters frame Frame result InPunishCounterState context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.InputPrototype.html": {
    "href": "api/Quantum.Prototypes.InputPrototype.html",
    "title": "Class InputPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class InputPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(Input))] public class InputPrototype : StructPrototype, IPrototype Inheritance object StructPrototype InputPrototype Implements IPrototype Fields Ability1 public Button Ability1 Field Value Button Ability2 public Button Ability2 Field Value Button Ability3 public Button Ability3 Field Value Button Ability4 public Button Ability4 Field Value Button Block public Button Block Field Value Button Dash public Button Dash Field Value Button Extra1 public Button Extra1 Field Value Button Extra2 public Button Extra2 Field Value Button Extra3 public Button Extra3 Field Value Button Extra4 public Button Extra4 Field Value Button Heavy public Button Heavy Field Value Button Jump public Button Jump Field Value Button Light public Button Light Field Value Button LockOn public Button LockOn Field Value Button Taunt public Button Taunt Field Value Button Unique public Button Unique Field Value Button backward public Button backward Field Value Button camEuler public FPVector3 camEuler Field Value FPVector3 forward public Button forward Field Value Button left public Button left Field Value Button moveInput public FPVector2 moveInput Field Value FPVector2 right public Button right Field Value Button Methods Materialize(Frame, ref Input, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref Input result, in PrototypeMaterializationContext context = default) Parameters frame Frame result Input context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.IsChargingAttackPrototype.html": {
    "href": "api/Quantum.Prototypes.IsChargingAttackPrototype.html",
    "title": "Class IsChargingAttackPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class IsChargingAttackPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(IsChargingAttack))] public class IsChargingAttackPrototype : ComponentPrototype<IsChargingAttack>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<IsChargingAttack> IsChargingAttackPrototype Implements IPrototype Inherited Members ComponentPrototype<IsChargingAttack>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields chargeLevel public int chargeLevel Field Value int currentCharge public int currentCharge Field Value int maxCharge public int maxCharge Field Value int newChargeLevel public QBoolean newChargeLevel Field Value QBoolean Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref IsChargingAttack, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref IsChargingAttack result, in PrototypeMaterializationContext context = default) Parameters frame Frame result IsChargingAttack context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.IsDeadPrototype.html": {
    "href": "api/Quantum.Prototypes.IsDeadPrototype.html",
    "title": "Class IsDeadPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class IsDeadPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(IsDead))] public class IsDeadPrototype : ComponentPrototype<IsDead>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<IsDead> IsDeadPrototype Implements IPrototype Inherited Members ComponentPrototype<IsDead>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields diedFrame public int diedFrame Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref IsDead, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref IsDead result, in PrototypeMaterializationContext context = default) Parameters frame Frame result IsDead context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.IsInThrowPrototype.html": {
    "href": "api/Quantum.Prototypes.IsInThrowPrototype.html",
    "title": "Class IsInThrowPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class IsInThrowPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(IsInThrow))] public class IsInThrowPrototype : ComponentPrototype<IsInThrow>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<IsInThrow> IsInThrowPrototype Implements IPrototype Inherited Members ComponentPrototype<IsInThrow>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields id public int id Field Value int thrower public MapEntityId thrower Field Value MapEntityId Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref IsInThrow, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref IsInThrow result, in PrototypeMaterializationContext context = default) Parameters frame Frame result IsInThrow context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.IsInvisiblePrototype.html": {
    "href": "api/Quantum.Prototypes.IsInvisiblePrototype.html",
    "title": "Class IsInvisiblePrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class IsInvisiblePrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(IsInvisible))] public class IsInvisiblePrototype : ComponentPrototype<IsInvisible>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<IsInvisible> IsInvisiblePrototype Implements IPrototype Inherited Members ComponentPrototype<IsInvisible>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields _empty_prototype_dummy_field_ public int _empty_prototype_dummy_field_ Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref IsInvisible, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref IsInvisible result, in PrototypeMaterializationContext context = default) Parameters frame Frame result IsInvisible context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.IsThrowingPrototype.html": {
    "href": "api/Quantum.Prototypes.IsThrowingPrototype.html",
    "title": "Class IsThrowingPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class IsThrowingPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(IsThrowing))] public class IsThrowingPrototype : ComponentPrototype<IsThrowing>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<IsThrowing> IsThrowingPrototype Implements IPrototype Inherited Members ComponentPrototype<IsThrowing>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields throwees [Dictionary] [DynamicCollection] public DictionaryEntry_Int32_EntityRef[] throwees Field Value DictionaryEntry_Int32_EntityRef[] Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref IsThrowing, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref IsThrowing result, in PrototypeMaterializationContext context = default) Parameters frame Frame result IsThrowing context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.IsUntargetablePrototype.html": {
    "href": "api/Quantum.Prototypes.IsUntargetablePrototype.html",
    "title": "Class IsUntargetablePrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class IsUntargetablePrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(IsUntargetable))] public class IsUntargetablePrototype : ComponentPrototype<IsUntargetable>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<IsUntargetable> IsUntargetablePrototype Implements IPrototype Inherited Members ComponentPrototype<IsUntargetable>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields _empty_prototype_dummy_field_ public int _empty_prototype_dummy_field_ Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref IsUntargetable, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref IsUntargetable result, in PrototypeMaterializationContext context = default) Parameters frame Frame result IsUntargetable context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.KCCCollisionPrototype.html": {
    "href": "api/Quantum.Prototypes.KCCCollisionPrototype.html",
    "title": "Class KCCCollisionPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCCollisionPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KCCCollision))] public class KCCCollisionPrototype : StructPrototype, IPrototype Inheritance object StructPrototype KCCCollisionPrototype Implements IPrototype Fields Processor public AssetRef Processor Field Value AssetRef Reference public MapEntityId Reference Field Value MapEntityId Source public QEnum8<EKCCCollisionSource> Source Field Value QEnum8<EKCCCollisionSource> Methods Materialize(Frame, ref KCCCollision, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref KCCCollision result, in PrototypeMaterializationContext context = default) Parameters frame Frame result KCCCollision context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.KCCDataPrototype.html": {
    "href": "api/Quantum.Prototypes.KCCDataPrototype.html",
    "title": "Class KCCDataPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCDataPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KCCData))] public class KCCDataPrototype : StructPrototype, IPrototype Inheritance object StructPrototype KCCDataPrototype Implements IPrototype Fields BasePosition public FPVector3 BasePosition Field Value FPVector3 DeltaTime public FP DeltaTime Field Value FP DesiredPosition public FPVector3 DesiredPosition Field Value FPVector3 DynamicVelocity public FPVector3 DynamicVelocity Field Value FPVector3 ExternalCollisionImpulse public FPVector3 ExternalCollisionImpulse Field Value FPVector3 ExternalDelta public FPVector3 ExternalDelta Field Value FPVector3 ExternalForce public FPVector3 ExternalForce Field Value FPVector3 ExternalImpulse public FPVector3 ExternalImpulse Field Value FPVector3 Gravity public FPVector3 Gravity Field Value FPVector3 GroundAngle public FP GroundAngle Field Value FP GroundDistance public FP GroundDistance Field Value FP GroundNormal public FPVector3 GroundNormal Field Value FPVector3 GroundPosition public FPVector3 GroundPosition Field Value FPVector3 GroundTangent public FPVector3 GroundTangent Field Value FPVector3 HasJumped public QBoolean HasJumped Field Value QBoolean HasTeleported public QBoolean HasTeleported Field Value QBoolean Height public FP Height Field Value FP InputDirection public FPVector3 InputDirection Field Value FPVector3 IsActive public QBoolean IsActive Field Value QBoolean IsGrounded public QBoolean IsGrounded Field Value QBoolean IsSnappingToGround public QBoolean IsSnappingToGround Field Value QBoolean IsSteppingUp public QBoolean IsSteppingUp Field Value QBoolean JumpImpulse public FPVector3 JumpImpulse Field Value FPVector3 KinematicDirection public FPVector3 KinematicDirection Field Value FPVector3 KinematicSpeed public FP KinematicSpeed Field Value FP KinematicTangent public FPVector3 KinematicTangent Field Value FPVector3 KinematicVelocity public FPVector3 KinematicVelocity Field Value FPVector3 LookPitch public FP LookPitch Field Value FP LookYaw public FP LookYaw Field Value FP MaxGroundAngle public FP MaxGroundAngle Field Value FP MaxHangAngle public FP MaxHangAngle Field Value FP MaxWallAngle public FP MaxWallAngle Field Value FP PositionOffset public FPVector3 PositionOffset Field Value FPVector3 RealSpeed public FP RealSpeed Field Value FP RealVelocity public FPVector3 RealVelocity Field Value FPVector3 TargetPosition public FPVector3 TargetPosition Field Value FPVector3 WasGrounded public QBoolean WasGrounded Field Value QBoolean WasSnappingToGround public QBoolean WasSnappingToGround Field Value QBoolean WasSteppingUp public QBoolean WasSteppingUp Field Value QBoolean Methods Materialize(Frame, ref KCCData, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref KCCData result, in PrototypeMaterializationContext context = default) Parameters frame Frame result KCCData context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.KCCIgnorePrototype.html": {
    "href": "api/Quantum.Prototypes.KCCIgnorePrototype.html",
    "title": "Class KCCIgnorePrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCIgnorePrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KCCIgnore))] public class KCCIgnorePrototype : StructPrototype, IPrototype Inheritance object StructPrototype KCCIgnorePrototype Implements IPrototype Fields Reference public MapEntityId Reference Field Value MapEntityId Source public QEnum8<EKCCIgnoreSource> Source Field Value QEnum8<EKCCIgnoreSource> Methods Materialize(Frame, ref KCCIgnore, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref KCCIgnore result, in PrototypeMaterializationContext context = default) Parameters frame Frame result KCCIgnore context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.KCCModifierPrototype.html": {
    "href": "api/Quantum.Prototypes.KCCModifierPrototype.html",
    "title": "Class KCCModifierPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCModifierPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KCCModifier))] public class KCCModifierPrototype : StructPrototype, IPrototype Inheritance object StructPrototype KCCModifierPrototype Implements IPrototype Fields Entity public MapEntityId Entity Field Value MapEntityId Processor public AssetRef Processor Field Value AssetRef Methods Materialize(Frame, ref KCCModifier, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref KCCModifier result, in PrototypeMaterializationContext context = default) Parameters frame Frame result KCCModifier context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.KCCProcessorLinkPrototype.html": {
    "href": "api/Quantum.Prototypes.KCCProcessorLinkPrototype.html",
    "title": "Class KCCProcessorLinkPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCProcessorLinkPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KCCProcessorLink))] public class KCCProcessorLinkPrototype : ComponentPrototype<KCCProcessorLink>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<KCCProcessorLink> KCCProcessorLinkPrototype Implements IPrototype Inherited Members ComponentPrototype<KCCProcessorLink>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields Processor public AssetRef<KCCProcessor> Processor Field Value AssetRef<KCCProcessor> Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref KCCProcessorLink, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref KCCProcessorLink result, in PrototypeMaterializationContext context = default) Parameters frame Frame result KCCProcessorLink context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.KCCPrototype.html": {
    "href": "api/Quantum.Prototypes.KCCPrototype.html",
    "title": "Class KCCPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class KCCPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(KCC))] public class KCCPrototype : ComponentPrototype<KCC>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<KCC> KCCPrototype Implements IPrototype Inherited Members ComponentPrototype<KCC>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields Settings public AssetRef<KCCSettings> Settings Field Value AssetRef<KCCSettings> Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref KCC, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref KCC result, in PrototypeMaterializationContext context = default) Parameters frame Frame result KCC context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.LocalDeltaTimePrototype.html": {
    "href": "api/Quantum.Prototypes.LocalDeltaTimePrototype.html",
    "title": "Class LocalDeltaTimePrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class LocalDeltaTimePrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(LocalDeltaTime))] public class LocalDeltaTimePrototype : ComponentPrototype<LocalDeltaTime>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<LocalDeltaTime> LocalDeltaTimePrototype Implements IPrototype Inherited Members ComponentPrototype<LocalDeltaTime>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields deltaTime public FP deltaTime Field Value FP multiplier public FP multiplier Field Value FP updatesThisTick public int updatesThisTick Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref LocalDeltaTime, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref LocalDeltaTime result, in PrototypeMaterializationContext context = default) Parameters frame Frame result LocalDeltaTime context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.ParentedPrototype.html": {
    "href": "api/Quantum.Prototypes.ParentedPrototype.html",
    "title": "Class ParentedPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class ParentedPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(Parented))] public class ParentedPrototype : ComponentPrototype<Parented>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<Parented> ParentedPrototype Implements IPrototype Inherited Members ComponentPrototype<Parented>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields localEuler public FPVector3 localEuler Field Value FPVector3 localOffset public FPVector3 localOffset Field Value FPVector3 parent public MapEntityId parent Field Value MapEntityId Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref Parented, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref Parented result, in PrototypeMaterializationContext context = default) Parameters frame Frame result Parented context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.PlayerLinkPrototype.html": {
    "href": "api/Quantum.Prototypes.PlayerLinkPrototype.html",
    "title": "Class PlayerLinkPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class PlayerLinkPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(PlayerLink))] public class PlayerLinkPrototype : ComponentPrototype<PlayerLink>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<PlayerLink> PlayerLinkPrototype Implements IPrototype Inherited Members ComponentPrototype<PlayerLink>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields Player public PlayerRef Player Field Value PlayerRef Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref PlayerLink, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref PlayerLink result, in PrototypeMaterializationContext context = default) Parameters frame Frame result PlayerLink context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.ProjectilePrototype.html": {
    "href": "api/Quantum.Prototypes.ProjectilePrototype.html",
    "title": "Class ProjectilePrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class ProjectilePrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(Projectile))] public class ProjectilePrototype : ComponentPrototype<Projectile>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<Projectile> ProjectilePrototype Implements IPrototype Inherited Members ComponentPrototype<Projectile>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields active public QBoolean active Field Value QBoolean coll public PhysicsCollider3D coll Field Value PhysicsCollider3D owner public MapEntityId owner Field Value MapEntityId transform public Transform3D transform Field Value Transform3D Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref Projectile, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref Projectile result, in PrototypeMaterializationContext context = default) Parameters frame Frame result Projectile context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.SyncedCutsceneTimerPrototype.html": {
    "href": "api/Quantum.Prototypes.SyncedCutsceneTimerPrototype.html",
    "title": "Class SyncedCutsceneTimerPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class SyncedCutsceneTimerPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(SyncedCutsceneTimer))] public class SyncedCutsceneTimerPrototype : ComponentPrototype<SyncedCutsceneTimer>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<SyncedCutsceneTimer> SyncedCutsceneTimerPrototype Implements IPrototype Inherited Members ComponentPrototype<SyncedCutsceneTimer>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields cutsceneFrame public int cutsceneFrame Field Value int playRate public int playRate Field Value int playingCutscene public AssetRef<Tag> playingCutscene Field Value AssetRef<Tag> playingEntity public MapEntityId playingEntity Field Value MapEntityId Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref SyncedCutsceneTimer, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref SyncedCutsceneTimer result, in PrototypeMaterializationContext context = default) Parameters frame Frame result SyncedCutsceneTimer context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.TeamVersusGlobalsPrototype.html": {
    "href": "api/Quantum.Prototypes.TeamVersusGlobalsPrototype.html",
    "title": "Class TeamVersusGlobalsPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusGlobalsPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(TeamVersusGlobals))] public class TeamVersusGlobalsPrototype : ComponentPrototype<TeamVersusGlobals>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<TeamVersusGlobals> TeamVersusGlobalsPrototype Implements IPrototype Inherited Members ComponentPrototype<TeamVersusGlobals>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields characterIntroType public QEnum32<CharacterIntroType> characterIntroType Field Value QEnum32<CharacterIntroType> gameTimeLimitEndFrame public int gameTimeLimitEndFrame Field Value int gameTimeLimitStartFrame public int gameTimeLimitStartFrame Field Value int playerData [Dictionary] [DynamicCollection] public DictionaryEntry_Int32_TeamVersusPlayerData[] playerData Field Value DictionaryEntry_Int32_TeamVersusPlayerData[] playersRequestingRespawn [Dictionary] [DynamicCollection] public DictionaryEntry_PlayerRef_Int32[] playersRequestingRespawn Field Value DictionaryEntry_PlayerRef_Int32[] teamScores [Dictionary] [DynamicCollection] public DictionaryEntry_Int32_Int32[] teamScores Field Value DictionaryEntry_Int32_Int32[] winningTeam public int winningTeam Field Value int Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref TeamVersusGlobals, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref TeamVersusGlobals result, in PrototypeMaterializationContext context = default) Parameters frame Frame result TeamVersusGlobals context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.TeamVersusPlayerDataPrototype.html": {
    "href": "api/Quantum.Prototypes.TeamVersusPlayerDataPrototype.html",
    "title": "Class TeamVersusPlayerDataPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusPlayerDataPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(TeamVersusPlayerData))] public class TeamVersusPlayerDataPrototype : StructPrototype, IPrototype Inheritance object StructPrototype TeamVersusPlayerDataPrototype Implements IPrototype Fields ready public QBoolean ready Field Value QBoolean Methods Materialize(Frame, ref TeamVersusPlayerData, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref TeamVersusPlayerData result, in PrototypeMaterializationContext context = default) Parameters frame Frame result TeamVersusPlayerData context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.TrackedStatesPrototype.html": {
    "href": "api/Quantum.Prototypes.TrackedStatesPrototype.html",
    "title": "Class TrackedStatesPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class TrackedStatesPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(TrackedStates))] public class TrackedStatesPrototype : ComponentPrototype<TrackedStates>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<TrackedStates> TrackedStatesPrototype Implements IPrototype Inherited Members ComponentPrototype<TrackedStates>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields states [DynamicCollection] public AssetRef<HNSFState>[] states Field Value AssetRef<HNSFState>[] Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref TrackedStates, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref TrackedStates result, in PrototypeMaterializationContext context = default) Parameters frame Frame result TrackedStates context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.TrainingGlobalsPrototype.html": {
    "href": "api/Quantum.Prototypes.TrainingGlobalsPrototype.html",
    "title": "Class TrainingGlobalsPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingGlobalsPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(TrainingGlobals))] public class TrainingGlobalsPrototype : ComponentPrototype<TrainingGlobals>, IPrototype Inheritance object ComponentPrototype ComponentPrototype<TrainingGlobals> TrainingGlobalsPrototype Implements IPrototype Inherited Members ComponentPrototype<TrainingGlobals>.ComponentType ComponentPrototype.AddToEntity(FrameBase, EntityRef) ComponentPrototype.PrototypeTypeToComponentType(Type) ComponentPrototype.ComponentTypeId Fields dummies [ArrayLength(5)] public MapEntityId[] dummies Field Value MapEntityId[] playerData [Dictionary] [DynamicCollection] public DictionaryEntry_Int32_TrainingPlayerData[] playerData Field Value DictionaryEntry_Int32_TrainingPlayerData[] playersRequestingRespawn [Dictionary] [DynamicCollection] public DictionaryEntry_PlayerRef_Int32[] playersRequestingRespawn Field Value DictionaryEntry_PlayerRef_Int32[] Methods AddToEntity(FrameBase, EntityRef, in PrototypeMaterializationContext) public override bool AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) Parameters f FrameBase entity EntityRef context PrototypeMaterializationContext Returns bool Materialize(Frame, ref TrainingGlobals, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref TrainingGlobals result, in PrototypeMaterializationContext context = default) Parameters frame Frame result TrainingGlobals context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.TrainingPlayerDataPrototype.html": {
    "href": "api/Quantum.Prototypes.TrainingPlayerDataPrototype.html",
    "title": "Class TrainingPlayerDataPrototype | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingPlayerDataPrototype Namespace Quantum.Prototypes Assembly Quantum.Simulation.dll [Serializable] [Prototype(typeof(TrainingPlayerData))] public class TrainingPlayerDataPrototype : StructPrototype, IPrototype Inheritance object StructPrototype TrainingPlayerDataPrototype Implements IPrototype Fields ready public QBoolean ready Field Value QBoolean Methods Materialize(Frame, ref TrainingPlayerData, in PrototypeMaterializationContext) public void Materialize(Frame frame, ref TrainingPlayerData result, in PrototypeMaterializationContext context = default) Parameters frame Frame result TrainingPlayerData context PrototypeMaterializationContext"
  },
  "api/Quantum.Prototypes.html": {
    "href": "api/Quantum.Prototypes.html",
    "title": "Namespace Quantum.Prototypes | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Quantum.Prototypes Classes AICharacterActorPrototype AuraPrototype BoxCombatantPrototype CharaAnimatorPrototype CharaAnimatorStatePrototype CharaInputsPrototype CharaLinkPrototype CharaPhysicsPrototype CharaStateMachinesPrototype ClashCombatPairPrototype CollisionCombatPairPrototype CollisionboxPrototype CombatBoxPrototype CombatHitDetectionInfoPrototype CombatTargeterPrototype CombatTeamPrototype DictionaryEntry_EntityRef_ClashCombatPair DictionaryEntry_EntityRef_CollisionCombatPair DictionaryEntry_EntityRef_HitboxCombatPair DictionaryEntry_Int32_EntityRef DictionaryEntry_Int32_Int32 DictionaryEntry_Int32_TeamVersusPlayerData DictionaryEntry_Int32_TrainingPlayerData DictionaryEntry_PlayerRef_Int32 DummyConfigurationPrototype DummyRecordingSlotPrototype EntityCenterPrototype EntityForcePrototype EntityHitDefinitionPrototype EnvQueryCachedPrototype EnvQueryItemCachedPrototype EnvQueryPrototype FighterArticlePrototype FighterArticlesPrototype FighterPrototype GainAuraPassivelyPrototype GenericGamemodeGlobalsPrototype GenericStateAgentPrototype GotWallInfoPrototype HNSFStateAgentDataPrototype HNSFStateAgentPrototype HardTargetEntityDisabledPrototype HealthPrototype HitboxCombatPairPrototype HitboxPrototype HurtboxPrototype InAuraBurnoutPrototype InCounterhitStatePrototype InPunishCounterStatePrototype InputPrototype IsChargingAttackPrototype IsDeadPrototype IsInThrowPrototype IsInvisiblePrototype IsThrowingPrototype IsUntargetablePrototype KCCCollisionPrototype KCCDataPrototype KCCIgnorePrototype KCCModifierPrototype KCCProcessorLinkPrototype KCCPrototype LocalDeltaTimePrototype ParentedPrototype PlayerLinkPrototype ProjectilePrototype SyncedCutsceneTimerPrototype TeamVersusGlobalsPrototype TeamVersusPlayerDataPrototype TrackedStatesPrototype TrainingGlobalsPrototype TrainingPlayerDataPrototype"
  },
  "api/Quantum.QuantumGame.CallbackBase.html": {
    "href": "api/Quantum.QuantumGame.CallbackBase.html",
    "title": "Class QuantumGame.CallbackBase | Rwby Vytal Versus Documentation",
    "keywords": "Class QuantumGame.CallbackBase Namespace Quantum Assembly Quantum.Simulation.dll The base class of Quantum callbacks. public class QuantumGame.CallbackBase : CallbackBase, IDispatchable Inheritance object CallbackBase QuantumGame.CallbackBase Implements IDispatchable Derived CallbackChecksumComputed CallbackChecksumError CallbackChecksumErrorFrameDump CallbackEventCanceled CallbackEventConfirmed CallbackGameDestroyed CallbackGameInit CallbackGameResynced CallbackGameStarted CallbackInputConfirmed CallbackLocalPlayerAddConfirmed CallbackLocalPlayerAddFailed CallbackLocalPlayerRemoveConfirmed CallbackLocalPlayerRemoveFailed CallbackPluginDisconnect CallbackPollInput CallbackSimulateFinished CallbackUpdateView Inherited Members CallbackBase.ID Constructors CallbackBase(int, QuantumGame) Constructor. public CallbackBase(int id, QuantumGame game) Parameters id int The const callback id. game QuantumGame The game that the callback is invoked for Properties Game The assigned game. public QuantumGame Game { get; set; } Property Value QuantumGame Methods GetCallbackType(CallbackId) Maps the const callback id CallbackId to a callback system type. public static Type GetCallbackType(CallbackId id) Parameters id CallbackId Callback id Returns Type System type of the associated callback Exceptions ArgumentOutOfRangeException Is raised when the id is not known"
  },
  "api/Quantum.QuantumGame.ConfigurationsContainer.html": {
    "href": "api/Quantum.QuantumGame.ConfigurationsContainer.html",
    "title": "Class QuantumGame.ConfigurationsContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class QuantumGame.ConfigurationsContainer Namespace Quantum Assembly Quantum.Simulation.dll Stores runtime config and simulation config for this session. public class QuantumGame.ConfigurationsContainer Inheritance object QuantumGame.ConfigurationsContainer Fields Runtime Runtime config finally used by the (online) simulation. public RuntimeConfig Runtime Field Value RuntimeConfig Simulation Access to the simulation config used by the (online) simulation. public SimulationConfig Simulation Field Value SimulationConfig"
  },
  "api/Quantum.QuantumGame.FramesContainer.html": {
    "href": "api/Quantum.QuantumGame.FramesContainer.html",
    "title": "Class QuantumGame.FramesContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class QuantumGame.FramesContainer Namespace Quantum Assembly Quantum.Simulation.dll Stores the different frames the simulation uses during one tick. public class QuantumGame.FramesContainer Inheritance object QuantumGame.FramesContainer Fields Predicted Quick accessor to the latest locally predicted copy of the game state. public Frame Predicted Field Value Frame PredictedPrevious Quick accessor to the second latest locally predicted copy of the game state. Used for accurate visual interpolation of transforms (or any other data) between this and the Predicted frame. public Frame PredictedPrevious Field Value Frame PreviousUpdatePredicted Quick accessor to the latest simulated copy of the Frame that was last-Predicted during the previous main session update. Used to calculate transform view error for smoothed correction. public Frame PreviousUpdatePredicted Field Value Frame Verified Quick accessor to the forward-only verified data (simulated with confirmed inputs from server in online games). Can be used as source of truth, as this does not include predicted data. public Frame Verified Field Value Frame"
  },
  "api/Quantum.QuantumGame.StartParameters.html": {
    "href": "api/Quantum.QuantumGame.StartParameters.html",
    "title": "Struct QuantumGame.StartParameters | Rwby Vytal Versus Documentation",
    "keywords": "Struct QuantumGame.StartParameters Namespace Quantum Assembly Quantum.Simulation.dll [Obsolete(\"Use QuantumGameStartParameters\")] public struct QuantumGame.StartParameters Fields Parameters public QuantumGameStartParameters Parameters Field Value QuantumGameStartParameters Properties AssetSerializer public IAssetSerializer AssetSerializer { get; set; } Property Value IAssetSerializer CallbackDispatcher public ICallbackDispatcher CallbackDispatcher { get; set; } Property Value ICallbackDispatcher EventDispatcher public IEventDispatcher EventDispatcher { get; set; } Property Value IEventDispatcher GameFlags public int GameFlags { get; set; } Property Value int HeapExtraCount public int HeapExtraCount { get; set; } Property Value int InitialDynamicAssets public DynamicAssetDB InitialDynamicAssets { get; set; } Property Value DynamicAssetDB InstantReplaySettings public InstantReplaySettings InstantReplaySettings { get; set; } Property Value InstantReplaySettings ResourceManager public IResourceManager ResourceManager { get; set; } Property Value IResourceManager Operators implicit operator QuantumGameStartParameters(StartParameters) public static implicit operator QuantumGameStartParameters(QuantumGame.StartParameters v) Parameters v QuantumGame.StartParameters Returns QuantumGameStartParameters"
  },
  "api/Quantum.QuantumGame.html": {
    "href": "api/Quantum.QuantumGame.html",
    "title": "Class QuantumGame | Rwby Vytal Versus Documentation",
    "keywords": "Class QuantumGame Namespace Quantum Assembly Quantum.Simulation.dll QuantumGame acts as an interface to the simulation from the client code's perspective. Access and method to this class is always safe from the clients point of view. public class QuantumGame Inheritance object QuantumGame Constructors QuantumGame(IResourceManager, IAssetSerializer, ICallbackDispatcher, IEventDispatcher) [Obsolete(\"Has been replaced by QuantumGame(in QuantumGameStartParameters startParams)\")] public QuantumGame(IResourceManager manager, IAssetSerializer assetSerializer, ICallbackDispatcher callbackDispatcher, IEventDispatcher eventDispatcher) Parameters manager IResourceManager assetSerializer IAssetSerializer callbackDispatcher ICallbackDispatcher eventDispatcher IEventDispatcher QuantumGame(in StartParameters) [Obsolete(\"Use QuantumGame(in QuantumGameStartParameters startParams)\")] public QuantumGame(in QuantumGame.StartParameters startParams) Parameters startParams QuantumGame.StartParameters QuantumGame(in QuantumGameStartParameters) Create a Quantum game instance. public QuantumGame(in QuantumGameStartParameters startParams) Parameters startParams QuantumGameStartParameters Start parameters. Properties AssetSerializer Asset serializer passed by Quantum.QuantumGameStartParameters.AssetSerializer. public IAssetSerializer AssetSerializer { get; } Property Value IAssetSerializer Configurations Access the configurations that the simulation is running with. Only set after the first CreateFrame() call. public QuantumGame.ConfigurationsContainer Configurations { get; } Property Value QuantumGame.ConfigurationsContainer EventWaitingForConfirmationCount The number of events in the queue waiting for confirmation. public int EventWaitingForConfirmationCount { get; } Property Value int Frames Access the frames of various times available during one tick. public QuantumGame.FramesContainer Frames { get; } Property Value QuantumGame.FramesContainer GameFlags Game flags passer by Quantum.QuantumGameStartParameters.GameFlags. See QuantumGameFlags. public int GameFlags { get; } Property Value int HeapExtraCount Extra heaps to allocate for a session in case you need to create 'auxiliary' frames than actually required for the simulation itself. public int HeapExtraCount { get; } Property Value int InstantReplayConfig Instant replay configuration, initialized by Quantum.QuantumGameStartParameters.InstantReplaySettings.\" public InstantReplaySettings InstantReplayConfig { get; } Property Value InstantReplaySettings InterpolationFactor Used for position interpolation on the client for smoother interpolation results. public float InterpolationFactor { get; } Property Value float RecordInputStream The recorded delta compressed input stream. The raw input recording automatically start when RecordingFlags contains Quantum.RecordingFlags.Input and Photon.Deterministic.DeterministicSessionConfig.InputDeltaCompression is enabled. The recording can also be started by calling StartRecordingInput(int?) manually. /// public Stream RecordInputStream { get; set; } Property Value Stream RecordedChecksums The recorded checksums. The checksum recording automatically start when RecordingFlags contains Quantum.RecordingFlags.Checksums and Photon.Deterministic.DeterministicSessionConfig.ChecksumInterval > 0. The recording can also be started by calling StartRecordingChecksums() manually. public ChecksumFile RecordedChecksums { get; } Property Value ChecksumFile RecordedInputs The recorded raw inputs. The raw input recording automatically start when RecordingFlags contains Quantum.RecordingFlags.Input and Photon.Deterministic.DeterministicSessionConfig.InputDeltaCompression is disabled. The recording can also be started by calling StartRecordingInput(int?) manually. public InputProvider RecordedInputs { get; } Property Value InputProvider ResourceManager Resource manager passed by Quantum.QuantumGameStartParameters.ResourceManager. public IResourceManager ResourceManager { get; } Property Value IResourceManager Session Access the Deterministic session object to query more internals. public DeterministicSession Session { get; } Property Value DeterministicSession Methods AddPlayer(RuntimePlayer) Send data for the local player to join the online match. If the client has multiple local players, the data will be sent for the first player set. public void AddPlayer(RuntimePlayer data) Parameters data RuntimePlayer Player data AddPlayer(int, RuntimePlayer) Send data for one local player to join the online match. public void AddPlayer(int playerSlot, RuntimePlayer data) Parameters playerSlot int Local player index data RuntimePlayer Player data AssignSession(DeterministicSession) The Photon.Deterministic.DeterministicSession creates this reference during its initialization. public void AssignSession(DeterministicSession session) Parameters session DeterministicSession Deterministic session that this game uses CheckTrackedHeapAllocations() Trigger the heap allocation tracker during OnDestroy(). public void CheckTrackedHeapAllocations() Exceptions ArgumentOutOfRangeException Is raised when HeapTrackingMode is unknown CreateFrame() Create a new frame object using the internal frame context. public Frame CreateFrame() Returns Frame Frame CreateFrameContext() Create the frame context. public IDisposable CreateFrameContext() Returns IDisposable Frame context Exceptions ArgumentException Is raised when no SimulationConfig is set inside the RuntimeConfig. CreateSavegame(bool) Create a QuantumReplayFile file that represents a save game. public QuantumReplayFile CreateSavegame(bool includeDb = false) Parameters includeDb bool Include the AssetDb Returns QuantumReplayFile Replay file to be stored DeserializeInputInto(int, byte[], byte*, bool) Asks the game to de-serialize input into the buffers, because it's game specific it cannot be done from here. public void DeserializeInputInto(int player, byte[] data, byte* buffer, bool verified) Parameters player int The player the input is for data byte[] The input data buffer byte* The destination buffer verified bool Is the input verified GetExtraErrorFrameDumpData(DeterministicFrame) Creates information send to the server when detecting a checksum error. public byte[] GetExtraErrorFrameDumpData(DeterministicFrame frame) Parameters frame DeterministicFrame Frame Returns byte[] Serialized frame dump context GetInputInMemorySize() Return the in memory input size. public int GetInputInMemorySize() Returns int Input object size GetInputSerializedFixedSize() Returns the serialized input size. public int GetInputSerializedFixedSize() Returns int Serialized input size GetInstantReplaySnapshot(int) Get a recorded frame for a given frame number from the checksum or instant replay snapshot buffers. public Frame GetInstantReplaySnapshot(int frame) Parameters frame int Frame number Returns Frame Frame GetInstantReplaySnapshots(int, int, List<Frame>) Get recorded frames for a given frame number window from the checksum or instant replay snapshot buffers. public void GetInstantReplaySnapshots(int startFrame, int endFrame, List<Frame> frames) Parameters startFrame int Start frame endFrame int End frame frames List<Frame> Resulting frames GetLocalPlayerSlots() Returns an array that is unique on every client and represents the player slots that the local client controls in the Quantum simulation. public List<int> GetLocalPlayerSlots() Returns List<int> Array of local player slots this client controls. GetLocalPlayers() Returns an array that is unique on every client and represents the global player indices that the local client controls in the Quantum simulation. public List<PlayerRef> GetLocalPlayers() Returns List<PlayerRef> Array of global players this client controls. GetRecordedReplay(bool, bool, Encoder, Encoder, Encoder) Creates a replay file that represents a recorded replay of the complete simulation. Requires the Quantum.RecordingFlags to be set accordingly. public QuantumReplayFile GetRecordedReplay(bool includeChecksums = false, bool includeDb = false, QuantumJsonFriendlyDataBlob.Encoder customAssetDbSerializer = null, QuantumJsonFriendlyDataBlob.Encoder customRuntimeConfigSerializer = null, QuantumJsonFriendlyDataBlob.Encoder customInputSerializer = null) Parameters includeChecksums bool Include checksums includeDb bool Include the asset db customAssetDbSerializer QuantumJsonFriendlyDataBlob.Encoder A custom asset serializer customRuntimeConfigSerializer QuantumJsonFriendlyDataBlob.Encoder A custom runtime config serializer customInputSerializer QuantumJsonFriendlyDataBlob.Encoder A custom input serialized Returns QuantumReplayFile Replay file to store GetVerifiedFrame(int) Tries to get the verified frame for a given tick from the snapshot buffer. public DeterministicFrame GetVerifiedFrame(int tick) Parameters tick int Tick Returns DeterministicFrame Verified frame based on the requested tick or null. InitCallbacks() Initializes all callbacks. public void InitCallbacks() OnChecksumComputed(int, ulong) The callback is called when the local checksum was computed. public void OnChecksumComputed(int frame, ulong checksum) Parameters frame int The frame the checksum belongs to checksum ulong The checksum that will be send to the server OnChecksumError(DeterministicTickChecksumError, DeterministicFrame[]) The callback is called when a checksum error was detected. public void OnChecksumError(DeterministicTickChecksumError error, DeterministicFrame[] frames) Parameters error DeterministicTickChecksumError Checksum error information frames DeterministicFrame[] Contains the verified frame that was failed to validate OnChecksumErrorFrameDump(int, int, DeterministicSessionConfig, byte[], byte[], byte[]) The callback is called when the clients receives a frame dump of another client from the server. public void OnChecksumErrorFrameDump(int actorId, int frameNumber, DeterministicSessionConfig sessionConfig, byte[] runtimeConfig, byte[] frameData, byte[] extraData) Parameters actorId int The Photon actor id that the dump belongs to frameNumber int The frame number of the dump sessionConfig DeterministicSessionConfig The session config runtimeConfig byte[] The runtime config frameData byte[] The frame data extraData byte[] Extra dump meta information OnDestroy() The game is destroyed. This is called from inside the Photon.Deterministic.DeterministicSession. public void OnDestroy() OnGameEnded() Not implemented. public void OnGameEnded() OnGameResync() The callback is called when the game is starting from a snapshot after the snapshot has been received. public void OnGameResync() OnGameStart(DeterministicFrame) The callback is called when the actual simulation starts after the online protocol start sequence was successful. public void OnGameStart(DeterministicFrame f) Parameters f DeterministicFrame First frame OnInputConfirmed(DeterministicFrameInputTemp) The callback is called when an input object was confirmed by the server. public void OnInputConfirmed(DeterministicFrameInputTemp input) Parameters input DeterministicFrameInputTemp Input object OnInputSetConfirmed(int, int, byte[]) The callback is called when an input set (all clients) was confirmed by the server. public void OnInputSetConfirmed(int tick, int length, byte[] data) Parameters tick int Tick length int Length of input object array data byte[] Input objects OnLocalInput(int, int) The callback is called to poll local input. public DeterministicFrameInputTemp OnLocalInput(int frame, int playerSlot) Parameters frame int Frame playerSlot int Player slot Returns DeterministicFrameInputTemp Polled input for this frame OnLocalPlayerAddConfirmed(DeterministicFrame, int, PlayerRef) The callback is called when the server confirmed the addition of a (local) player. public void OnLocalPlayerAddConfirmed(DeterministicFrame frame, int playerSlot, PlayerRef player) Parameters frame DeterministicFrame The frame the player has been added playerSlot int The player slot that was used to assign the player player PlayerRef The player OnLocalPlayerAddFailed(int, string) The callback is called when the server failed to process the add player request. public void OnLocalPlayerAddFailed(int playerSlot, string message) Parameters playerSlot int The player slot that was requested message string Debug message OnLocalPlayerRemoveConfirmed(DeterministicFrame, int, PlayerRef) The callback is called when the server confirmed the removal of a (local) player. public void OnLocalPlayerRemoveConfirmed(DeterministicFrame frame, int playerSlot, PlayerRef player) Parameters frame DeterministicFrame The frame when the request was confirmed playerSlot int The player slot of the removed player player PlayerRef The player that was removed OnLocalPlayerRemoveFailed(int, string) The callback is called when the server failed to process the remove player request. public void OnLocalPlayerRemoveFailed(int playerSlot, string message) Parameters playerSlot int The player slot that was tried to remove message string Debug message OnPluginDisconnect(string) The callback is called when the server plugin disconnected the client. public void OnPluginDisconnect(string reason) Parameters reason string Debug string OnSerializedInput(byte*, Array) The callback is called to serialize the game-specific input. public void OnSerializedInput(byte* encoded, Array result) Parameters encoded byte* The source input result Array The destination input OnSimulate(DeterministicFrame) The callback is called when any simulation step was executed. public void OnSimulate(DeterministicFrame state) Parameters state DeterministicFrame Frame that was simulated OnSimulateFinished(DeterministicFrame) The callback is called after any simulation step was executed and after the OnSimulate(DeterministicFrame) callback. public void OnSimulateFinished(DeterministicFrame state) Parameters state DeterministicFrame Frame that was simulated OnSimulationBegin() The callback is called before the session computes multiple simulation steps (frames). public void OnSimulationBegin() OnSimulationEnd() The callback is called when multiple simulation steps (frames) were executed. public void OnSimulationEnd() OnUpdateDone() The callback is called when when the session completed its Update(double?) loop. public void OnUpdateDone() PlayerIsLocal(PlayerRef) Helps to decide if a PlayerRef is associated with the local player. public bool PlayerIsLocal(PlayerRef playerRef) Parameters playerRef PlayerRef Player reference Returns bool True if the player is the local player RemoveAllPlayers() Removes all players from the game and acts as a spectator. public void RemoveAllPlayers() RemovePlayer() Remove the player. Assuming there is only one local player that this client controls. public void RemovePlayer() RemovePlayer(int) Remove a player slot from the game. public void RemovePlayer(int playerSlot) Parameters playerSlot int Local player SendCommand(DeterministicCommand) Sends a command to the server. public DeterministicCommandSendResult SendCommand(DeterministicCommand command) Parameters command DeterministicCommand Command to send Returns DeterministicCommandSendResult Examples RemoveUnitCommand command = new RemoveUnitCommand(); command.CellIndex = 42; QuantumRunner.Default.Game.SendCommand(command); SendCommand(int, DeterministicCommand) Sends a command to the server. public DeterministicCommandSendResult SendCommand(int playerSlot, DeterministicCommand command) Parameters playerSlot int Specify the local player index when you have multiple players controlled from the same machine. command DeterministicCommand Command to send Returns DeterministicCommandSendResult SendPlayerData(RuntimePlayer) [Obsolete(\"Use AddPlayer()\")] public void SendPlayerData(RuntimePlayer data) Parameters data RuntimePlayer SendPlayerData(int, RuntimePlayer) [Obsolete(\"Use AddPlayer()\")] public void SendPlayerData(int playerSlot, RuntimePlayer data) Parameters playerSlot int data RuntimePlayer SetPredictionArea(FPVector2, FP) See SetPredictionArea(FPVector3, FP). public void SetPredictionArea(FPVector2 position, FP radius) Parameters position FPVector2 radius FP SetPredictionArea(FPVector3, FP) Set the prediction area. public void SetPredictionArea(FPVector3 position, FP radius) Parameters position FPVector3 Center of the prediction area radius FP Radius of the prediction area StartRecordingChecksums() Manually start the recording of checksums. public void StartRecordingChecksums() StartRecordingInput(int?) Manually start the input recording. Either accessible by RecordedInputs (if Photon.Deterministic.DeterministicSessionConfig.InputDeltaCompression is disabled) or RecordInputStream (if Photon.Deterministic.DeterministicSessionConfig.InputDeltaCompression is enabled). public void StartRecordingInput(int? startFrame = null) Parameters startFrame int? StartRecordingInstantReplaySnapshots() Manually start recording instant replay snapshots. Requires InstantReplayConfig to be set accordingly. public void StartRecordingInstantReplaySnapshots() StartVerifyingChecksums(ChecksumFile) Start verifying new checksums against a recorded checksum file. public void StartVerifyingChecksums(ChecksumFile checksums) Parameters checksums ChecksumFile Recorded checksum file Events ProfilerSampleGenerated A callback that is invoked after the Photon.Deterministic.IDeterministicGame.OnSimulate(Photon.Deterministic.DeterministicFrame) callback. It uses the Quantum.Core.FrameContext.ProfilerContext to create a report. public event Action<ProfilerContextData> ProfilerSampleGenerated Event Type Action<ProfilerContextData>"
  },
  "api/Quantum.QuantumGameFlags.html": {
    "href": "api/Quantum.QuantumGameFlags.html",
    "title": "Class QuantumGameFlags | Rwby Vytal Versus Documentation",
    "keywords": "Class QuantumGameFlags Namespace Quantum Assembly Quantum.Simulation.dll This class contains values for flags that will be accessible with GameFlags. Built-in flags control some aspects of QuantumGame inner workings, without affecting the simulation outcome. public class QuantumGameFlags Inheritance object QuantumGameFlags Fields CustomFlagsStart Custom user flags start from this value. Flags are accessible with GameFlags. public const int CustomFlagsStart = 65536 Field Value int DisableInterpolatableStates By default, a Quantum session creates additional frame instances to cache previous states that can be used for interpolation, notably for transform interpolations on the View. Set this flag if you want to disable this behaviour (e.g. a server-side or console-only simulation), reducing memory allocations and the time spent copying states over. public const int DisableInterpolatableStates = 4 Field Value int DisableSharedChecksumSerializer By default, QuantumGame uses a single shared checksum serializer to reduce allocations. The serializer is not static - it is only shared between frames coming from the same QuantumGame. Set this flag if you want to disable this behaviour, for example if you calculate checksums for multiple frames using multiple threads. public const int DisableSharedChecksumSerializer = 2 Field Value int EnableTaskProfiler Set this flag to enables the Quantum task profiler in debug or release configurations. public const int EnableTaskProfiler = 8 Field Value int Server Starts the game in the server mode. When this flag is not set, all the events marked with \"server\" get culled immediately. If this flag is set, all the events marked with \"client\" get culled immediately. public const int Server = 1 Field Value int"
  },
  "api/Quantum.QuantumInputHistoryData.html": {
    "href": "api/Quantum.QuantumInputHistoryData.html",
    "title": "Class QuantumInputHistoryData | Rwby Vytal Versus Documentation",
    "keywords": "Class QuantumInputHistoryData Namespace Quantum Assembly Quantum.Simulation.dll Input history wrapper to used to store on replay files. Default way to save is DeltaCompressed in Json with compression to reduce the (Json) file size the most. [Serializable] public class QuantumInputHistoryData : QuantumJsonFriendlyDataBlob Inheritance object QuantumJsonFriendlyDataBlob QuantumInputHistoryData Inherited Members QuantumJsonFriendlyDataBlob.Binary QuantumJsonFriendlyDataBlob.Base64 QuantumJsonFriendlyDataBlob.IsCompressed QuantumJsonFriendlyDataBlob.Decode() QuantumJsonFriendlyDataBlob.Encode(byte[], bool, bool) Fields DeltaCompressed The delta compressed input history stream. [length as int][data as int array][len][data][len][data].. public QuantumJsonFriendlyDataBlob DeltaCompressed Field Value QuantumJsonFriendlyDataBlob DeltaCompressedLastTick The last tick that the delta compressed input is available for, required when DeltaCompressed is used. public int DeltaCompressedLastTick Field Value int FullLegacy The full verbose input history. This is replaced by DeltaCompressed in Quantum 3.0 but it's still functional. public DeterministicTickInputSet[] FullLegacy Field Value DeterministicTickInputSet[]"
  },
  "api/Quantum.QuantumJsonFriendlyDataBlob.Encoder.html": {
    "href": "api/Quantum.QuantumJsonFriendlyDataBlob.Encoder.html",
    "title": "Delegate QuantumJsonFriendlyDataBlob.Encoder | Rwby Vytal Versus Documentation",
    "keywords": "Delegate QuantumJsonFriendlyDataBlob.Encoder Namespace Quantum Assembly Quantum.Simulation.dll Used to customize encoding of this class in internal API. public delegate QuantumJsonFriendlyDataBlob QuantumJsonFriendlyDataBlob.Encoder(byte[] data) Parameters data byte[] Data to encode Returns QuantumJsonFriendlyDataBlob New instance with encoded data"
  },
  "api/Quantum.QuantumJsonFriendlyDataBlob.html": {
    "href": "api/Quantum.QuantumJsonFriendlyDataBlob.html",
    "title": "Class QuantumJsonFriendlyDataBlob | Rwby Vytal Versus Documentation",
    "keywords": "Class QuantumJsonFriendlyDataBlob Namespace Quantum Assembly Quantum.Simulation.dll Wrapper around storing binary data in JSON to work around the problem that Unity JSON tools only serialize byte arrays verbosely. [Serializable] public class QuantumJsonFriendlyDataBlob Inheritance object QuantumJsonFriendlyDataBlob Derived QuantumInputHistoryData Fields Base64 The byte array is saved as Base64 text. public string Base64 Field Value string Binary The byte array is saved as is. public byte[] Binary Field Value byte[] IsCompressed Both Binary and Base64 can be GZip compressed. public bool IsCompressed Field Value bool Methods Decode() Decode the byte[] array. Based on the configuration will return the Binary (unzipped) or the Base64 (decoded and unzipped). public byte[] Decode() Returns byte[] Decoded data Encode(byte[], bool, bool) Encode a byte[]. public static QuantumJsonFriendlyDataBlob Encode(byte[] data, bool isCompressed, bool asBase64String) Parameters data byte[] The data to encode isCompressed bool Is the data GZip compressed asBase64String bool Is the data converted to base64 Returns QuantumJsonFriendlyDataBlob Encoded data object"
  },
  "api/Quantum.QuantumReplayFile.html": {
    "href": "api/Quantum.QuantumReplayFile.html",
    "title": "Class QuantumReplayFile | Rwby Vytal Versus Documentation",
    "keywords": "Class QuantumReplayFile Namespace Quantum Assembly Quantum.Simulation.dll A class that holds all relevant data to run a Quantum replay and can serialized in JSON. A replay may contain an asset db for convenience, that should be omitted in production environments where files sizes are a concern. A replay may contain recorded checksums, that can be verified during runtime as a development feature. [Serializable] public class QuantumReplayFile Inheritance object QuantumReplayFile Derived ReplayFile Fields AssetDatabaseData Optional serialized asset database. Omit this for replays in production environments. Use AssetSerializer.SerializeAssets(stream, ResourceManager.LoadAllAssets().ToArray() public QuantumJsonFriendlyDataBlob AssetDatabaseData Field Value QuantumJsonFriendlyDataBlob Checksums Optional checksums. Omit this for replays in production environments. public ChecksumFile Checksums Field Value ChecksumFile DeterministicConfig The session config. public DeterministicSessionConfig DeterministicConfig Field Value DeterministicSessionConfig InitialFrameData Optional frame data to start the replay with. This is used for save games for example. public byte[] InitialFrameData Field Value byte[] InitialTick The initial tick to start from, requires InitialFrameData to be set. public int InitialTick Field Value int InputHistoryDeltaCompressed Delta compressed binary input history, this is the same that is send over replay webhooks for example. public QuantumJsonFriendlyDataBlob InputHistoryDeltaCompressed Field Value QuantumJsonFriendlyDataBlob InputHistoryLegacy Full verbose input used in Quantum 2.1, which is still functional, but has only fringe use cases. public DeterministicTickInputSet[] InputHistoryLegacy Field Value DeterministicTickInputSet[] LastTick The last tick of the input. public int LastTick Field Value int RuntimeConfigData Binary serialized RuntimeConfig. Use AssetSerializer.ConfigToByteArray(runtimeConfig, compress: true) public QuantumJsonFriendlyDataBlob RuntimeConfigData Field Value QuantumJsonFriendlyDataBlob Methods CreateInputProvider() Helper method to create an input provider based on the combination of the saved input history configurations. public IDeterministicReplayProvider CreateInputProvider() Returns IDeterministicReplayProvider Replay input provider to play back the input. Use this in ReplayProvider"
  },
  "api/Quantum.RandomFPFunction.html": {
    "href": "api/Quantum.RandomFPFunction.html",
    "title": "Class RandomFPFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class RandomFPFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RandomFPFunction : StateFunctionFP Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FP> StateFunctionFP RandomFPFunction Inherited Members HNSFStateFunction<FP>.Label HNSFStateFunction<FP>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FP Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FP"
  },
  "api/Quantum.RegisterAttackToStringAction.html": {
    "href": "api/Quantum.RegisterAttackToStringAction.html",
    "title": "Class RegisterAttackToStringAction | Rwby Vytal Versus Documentation",
    "keywords": "Class RegisterAttackToStringAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RegisterAttackToStringAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction RegisterAttackToStringAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ReleaseThroweeAction.html": {
    "href": "api/Quantum.ReleaseThroweeAction.html",
    "title": "Class ReleaseThroweeAction | Rwby Vytal Versus Documentation",
    "keywords": "Class ReleaseThroweeAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class ReleaseThroweeAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction ReleaseThroweeAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields id public int id Field Value int releaseAll public bool releaseAll Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.RemapFPFunction.html": {
    "href": "api/Quantum.RemapFPFunction.html",
    "title": "Class RemapFPFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class RemapFPFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RemapFPFunction : StateFunctionFP Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FP> StateFunctionFP RemapFPFunction Inherited Members HNSFStateFunction<FP>.Label HNSFStateFunction<FP>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields fromMax public HNSFParamFP fromMax Field Value HNSFParamFP fromMin public HNSFParamFP fromMin Field Value HNSFParamFP param public HNSFParamFP param Field Value HNSFParamFP toMax public HNSFParamFP toMax Field Value HNSFParamFP toMin public HNSFParamFP toMin Field Value HNSFParamFP Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FP Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FP"
  },
  "api/Quantum.ReplayFile.html": {
    "href": "api/Quantum.ReplayFile.html",
    "title": "Class ReplayFile | Rwby Vytal Versus Documentation",
    "keywords": "Class ReplayFile Namespace Quantum Assembly Quantum.Simulation.dll Obsolete class, use QuantumReplayFile instead. [Obsolete(\"Use QuantumReplayFile\")] public class ReplayFile : QuantumReplayFile Inheritance object QuantumReplayFile ReplayFile Inherited Members QuantumReplayFile.InputHistoryDeltaCompressed QuantumReplayFile.InputHistoryLegacy QuantumReplayFile.RuntimeConfigData QuantumReplayFile.DeterministicConfig QuantumReplayFile.LastTick QuantumReplayFile.InitialTick QuantumReplayFile.InitialFrameData QuantumReplayFile.Checksums QuantumReplayFile.AssetDatabaseData QuantumReplayFile.CreateInputProvider() Properties AssetDatabase Obsolete, use AssetDatabaseData instead [Obsolete(\"Use AssetDatabaseData instead\")] public byte[] AssetDatabase { get; set; } Property Value byte[] Frame Obsolete, use InitialFrameData instead [Obsolete(\"Use InitialFrameData\")] public byte[] Frame { get; set; } Property Value byte[] InitialFrame Obsolete, use InitialTick instead [Obsolete(\"Use InitialTick\")] public int InitialFrame { get; set; } Property Value int InputHistory Obsolete [Obsolete(\"use InputHistoryLegacy instead\")] public DeterministicTickInputSet[] InputHistory { get; set; } Property Value DeterministicTickInputSet[] InputHistoryRaw Obsolete, use InputHistoryDeltaCompressed instead [Obsolete(\"Use InputHistoryDeltaCompressed instead\")] public byte[] InputHistoryRaw { get; set; } Property Value byte[] RuntimeConfig Obsolete, use RuntimeConfigData.Binary instead [Obsolete(\"Use RuntimeConfigData.Binary instead\")] public RuntimeConfig RuntimeConfig { get; } Property Value RuntimeConfig RuntimeConfigBinary Obsolete, use RuntimeConfigData.Binary instead [Obsolete(\"Use RuntimeConfigData.Binary instead\")] public byte[] RuntimeConfigBinary { get; set; } Property Value byte[]"
  },
  "api/Quantum.RequestStateChangeAction.html": {
    "href": "api/Quantum.RequestStateChangeAction.html",
    "title": "Class RequestStateChangeAction | Rwby Vytal Versus Documentation",
    "keywords": "Class RequestStateChangeAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RequestStateChangeAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction RequestStateChangeAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkToStateCondition public bool checkToStateCondition Field Value bool overrideTransitionRequests public bool overrideTransitionRequests Field Value bool toFrame public int toFrame Field Value int toState public AssetRef<HNSFState> toState Field Value AssetRef<HNSFState> Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.RequestStateChangeByTagAction.StateChangeEntry.html": {
    "href": "api/Quantum.RequestStateChangeByTagAction.StateChangeEntry.html",
    "title": "Class RequestStateChangeByTagAction.StateChangeEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class RequestStateChangeByTagAction.StateChangeEntry Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RequestStateChangeByTagAction.StateChangeEntry Inheritance object RequestStateChangeByTagAction.StateChangeEntry Fields checkToStateCondition public bool checkToStateCondition Field Value bool condition public AssetRef<HNSFStateDecision>[] condition Field Value AssetRef<HNSFStateDecision>[] name public string name Field Value string overrideTransitionRequests public bool overrideTransitionRequests Field Value bool toFrame public int toFrame Field Value int toStateTag public AssetRef<Tag> toStateTag Field Value AssetRef<Tag>"
  },
  "api/Quantum.RequestStateChangeByTagAction.html": {
    "href": "api/Quantum.RequestStateChangeByTagAction.html",
    "title": "Class RequestStateChangeByTagAction | Rwby Vytal Versus Documentation",
    "keywords": "Class RequestStateChangeByTagAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RequestStateChangeByTagAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction RequestStateChangeByTagAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields immediateTransition public bool immediateTransition Field Value bool stateChangeList public RequestStateChangeByTagAction.StateChangeEntry[] stateChangeList Field Value StateChangeEntry[] throweeId public int throweeId Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.RequestStateChangeListAction.StateChangeEntry.html": {
    "href": "api/Quantum.RequestStateChangeListAction.StateChangeEntry.html",
    "title": "Class RequestStateChangeListAction.StateChangeEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class RequestStateChangeListAction.StateChangeEntry Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RequestStateChangeListAction.StateChangeEntry Inheritance object RequestStateChangeListAction.StateChangeEntry Fields checkToStateCondition public bool checkToStateCondition Field Value bool condition public AssetRef<HNSFStateDecision>[] condition Field Value AssetRef<HNSFStateDecision>[] name public string name Field Value string overrideTransitionRequests public bool overrideTransitionRequests Field Value bool toFrame public int toFrame Field Value int toState public AssetRef<HNSFState> toState Field Value AssetRef<HNSFState>"
  },
  "api/Quantum.RequestStateChangeListAction.html": {
    "href": "api/Quantum.RequestStateChangeListAction.html",
    "title": "Class RequestStateChangeListAction | Rwby Vytal Versus Documentation",
    "keywords": "Class RequestStateChangeListAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RequestStateChangeListAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction RequestStateChangeListAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields immediateTransition public bool immediateTransition Field Value bool stateChangeList public RequestStateChangeListAction.StateChangeEntry[] stateChangeList Field Value StateChangeEntry[] throweeId public int throweeId Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.RingBufferInputProvider.html": {
    "href": "api/Quantum.RingBufferInputProvider.html",
    "title": "Class RingBufferInputProvider | Rwby Vytal Versus Documentation",
    "keywords": "Class RingBufferInputProvider Namespace Quantum Assembly Quantum.Simulation.dll This input provider can store a certain amount of input sets in a ring buffer. public class RingBufferInputProvider Inheritance object RingBufferInputProvider Constructors RingBufferInputProvider(DeterministicSessionConfig, int) Create a ring buffer input provider. public RingBufferInputProvider(DeterministicSessionConfig sessionConfig, int capacity = 256) Parameters sessionConfig DeterministicSessionConfig Session config capacity int Total capacity RingBufferInputProvider(DeterministicTickInputSet[]) Create a ring buffer input provider from a list of input sets. public RingBufferInputProvider(DeterministicTickInputSet[] inputList) Parameters inputList DeterministicTickInputSet[] Input sets RingBufferInputProvider(int, int, int) Create a ring buffer input provider. public RingBufferInputProvider(int playerCount, int startFrame, int capacity) Parameters playerCount int Max player count startFrame int Start frame capacity int Ring buffer capacity Methods AddRpc(int, byte[], bool) Unused public void AddRpc(int player, byte[] data, bool command) Parameters player int data byte[] command bool CanSimulate(int) Returns true if for the given frame input is available. public bool CanSimulate(int frame) Parameters frame int Requested frame Returns bool True when there is input for the requested frame Clear(int) Clear all input sets. public void Clear(int startFrame) Parameters startFrame int New start frame GetInput(int, int) Read the input object. public DeterministicFrameInputTemp GetInput(int frame, int player) Parameters frame int Frame player int Player Returns DeterministicFrameInputTemp Input object GetRpc(int, int) Read the rpc from the input. public QTuple<byte[], bool> GetRpc(int frame, int player) Parameters frame int Frame player int Player Returns QTuple<byte[], bool> Rpc data InjectInput(DeterministicTickInput, bool) Inject input into the buffer. public void InjectInput(DeterministicTickInput input, bool localReplay) Parameters input DeterministicTickInput Input to inject localReplay bool If set to true the sent flag will be set OnInputConfirmed(QuantumGame, DeterministicFrameInputTemp) The callback is used to record inputs. public void OnInputConfirmed(QuantumGame game, DeterministicFrameInputTemp input) Parameters game QuantumGame Quantum game input DeterministicFrameInputTemp The confirmed input"
  },
  "api/Quantum.RotateTowardsAction.RotateTowardsType.html": {
    "href": "api/Quantum.RotateTowardsAction.RotateTowardsType.html",
    "title": "Enum RotateTowardsAction.RotateTowardsType | Rwby Vytal Versus Documentation",
    "keywords": "Enum RotateTowardsAction.RotateTowardsType Namespace Quantum Assembly Quantum.Simulation.dll public enum RotateTowardsAction.RotateTowardsType Fields lock_on_target = 1 movement = 2 soft_target = 3 stick = 0"
  },
  "api/Quantum.RotateTowardsAction.html": {
    "href": "api/Quantum.RotateTowardsAction.html",
    "title": "Class RotateTowardsAction | Rwby Vytal Versus Documentation",
    "keywords": "Class RotateTowardsAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RotateTowardsAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction RotateTowardsAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields rotateTowards public RotateTowardsAction.RotateTowardsType[] rotateTowards Field Value RotateTowardsType[] rotationSpeedParam public HNSFParamFP rotationSpeedParam Field Value HNSFParamFP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.RunEQSQueryBroadphaseLeaf.html": {
    "href": "api/Quantum.RunEQSQueryBroadphaseLeaf.html",
    "title": "Class RunEQSQueryBroadphaseLeaf | Rwby Vytal Versus Documentation",
    "keywords": "Class RunEQSQueryBroadphaseLeaf Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RunEQSQueryBroadphaseLeaf : BTLeaf Inheritance object Object ScriptableObject AssetObject BTNode BTLeaf RunEQSQueryBroadphaseLeaf Inherited Members BTLeaf.Services BTLeaf._serviceInstances BTLeaf.OnStartedRunning(BTParams, ref AIContext) BTLeaf.Loaded(IResourceManager, Native.Allocator) BTLeaf.ServiceInstances BTLeaf.NodeType BTNode.Label BTNode.Id BTNode.OnAbort(BTParams, ref AIContext, BTAbort) BTNode.OnReset(BTParams, ref AIContext) BTNode.CheckConditions(BTParams, ref AIContext) BTNode.OnDynamicRun(BTParams, ref AIContext) BTNode.ChildCompletedRunning(BTParams, BTStatus) BTNode.GetStatus(FrameBase, BTAgent*) BTNode.SetStatus(FrameBase, BTStatus, BTAgent*) BTNode.GetStatus(FrameThreadSafe, BTAgent*) BTNode.SetStatus(FrameThreadSafe, BTStatus, BTAgent*) BTNode.EvaluateAbortNode(BTParams) BTNode.Execute(BTParams, ref AIContext, bool) AssetObject.Identifier AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields eqAsset public AssetRef<EnvironmentQueryAsset> eqAsset Field Value AssetRef<EnvironmentQueryAsset> eqsEntityBlackboardKey public AIBlackboardValueKey eqsEntityBlackboardKey Field Value AIBlackboardValueKey positionBlackboardKey public AIBlackboardValueKey positionBlackboardKey Field Value AIBlackboardValueKey targetBlackboardKey public AIBlackboardValueKey targetBlackboardKey Field Value AIBlackboardValueKey Methods Init(BTParams, ref AIContext) public override void Init(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext OnEnter(BTParams, ref AIContext) public override void OnEnter(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext OnExit(BTParams, ref AIContext) public override void OnExit(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext OnUpdate(BTParams, ref AIContext) protected override BTStatus OnUpdate(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext Returns BTStatus"
  },
  "api/Quantum.RunEQSQueryLeaf.html": {
    "href": "api/Quantum.RunEQSQueryLeaf.html",
    "title": "Class RunEQSQueryLeaf | Rwby Vytal Versus Documentation",
    "keywords": "Class RunEQSQueryLeaf Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RunEQSQueryLeaf : BTLeaf Inheritance object Object ScriptableObject AssetObject BTNode BTLeaf RunEQSQueryLeaf Inherited Members BTLeaf.Services BTLeaf._serviceInstances BTLeaf.OnStartedRunning(BTParams, ref AIContext) BTLeaf.OnEnter(BTParams, ref AIContext) BTLeaf.OnExit(BTParams, ref AIContext) BTLeaf.Loaded(IResourceManager, Native.Allocator) BTLeaf.ServiceInstances BTLeaf.NodeType BTNode.Label BTNode.Id BTNode.OnAbort(BTParams, ref AIContext, BTAbort) BTNode.OnReset(BTParams, ref AIContext) BTNode.CheckConditions(BTParams, ref AIContext) BTNode.OnDynamicRun(BTParams, ref AIContext) BTNode.ChildCompletedRunning(BTParams, BTStatus) BTNode.GetStatus(FrameBase, BTAgent*) BTNode.SetStatus(FrameBase, BTStatus, BTAgent*) BTNode.GetStatus(FrameThreadSafe, BTAgent*) BTNode.SetStatus(FrameThreadSafe, BTStatus, BTAgent*) BTNode.EvaluateAbortNode(BTParams) BTNode.Execute(BTParams, ref AIContext, bool) AssetObject.Identifier AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields behaviourTree public AssetRef<EnvironmentQueryAsset> behaviourTree Field Value AssetRef<EnvironmentQueryAsset> positionBlackboardKey public AIBlackboardValueKey positionBlackboardKey Field Value AIBlackboardValueKey targetBlackboardKey public AIBlackboardValueKey targetBlackboardKey Field Value AIBlackboardValueKey Methods Init(BTParams, ref AIContext) public override void Init(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext OnUpdate(BTParams, ref AIContext) protected override BTStatus OnUpdate(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext Returns BTStatus"
  },
  "api/Quantum.RuntimeConfig.html": {
    "href": "api/Quantum.RuntimeConfig.html",
    "title": "Class RuntimeConfig | Rwby Vytal Versus Documentation",
    "keywords": "Class RuntimeConfig Namespace Quantum Assembly Quantum.Simulation.dll In contrast to the SimulationConfig, which has only static configuration data, the RuntimeConfig holds information that can be different from game to game. [Serializable] public class RuntimeConfig : IRuntimeConfig Inheritance object RuntimeConfig Implements IRuntimeConfig Fields Map Asset reference of the Quantum map used with the upcoming game session. public AssetRef<Map> Map Field Value AssetRef<Map> Seed Seed to initialize the randomization session under RNG. public int Seed Field Value int SimulationConfig Asset reference to the SimulationConfig used with the upcoming game session. public AssetRef<SimulationConfig> SimulationConfig Field Value AssetRef<SimulationConfig> SystemsConfig Asset reference to the Quantum systems configuration. If no config is assigned then a default selection of build-in systems is used (CreateSystems(RuntimeConfig, SimulationConfig, SystemsConfig). The systems to be used can always be changed by code inside AddSystemsUser(ICollection<SystemBase>, RuntimeConfig, SimulationConfig, SystemsConfig). public AssetRef<SystemsConfig> SystemsConfig Field Value AssetRef<SystemsConfig> gamemodeConfigAsset public AssetRef gamemodeConfigAsset Field Value AssetRef Methods Dump() Dump the content into a human readable form. [Obsolete(\"No longer used. Convert to string using JsonUtility or IAssetSerializer.\")] public string Dump() Returns string String representation FromByteArray(byte[]) [Obsolete(\"Use IAssetSerializer instead\")] public static RuntimeConfig FromByteArray(byte[] data) Parameters data byte[] Returns RuntimeConfig Serialize(BitStream) [Obsolete(\"Use IAssetSerializer instead\")] public void Serialize(BitStream stream) Parameters stream BitStream ToByteArray(RuntimeConfig) [Obsolete(\"Use IAssetSerializer instead\")] public static byte[] ToByteArray(RuntimeConfig config) Parameters config RuntimeConfig Returns byte[]"
  },
  "api/Quantum.RuntimePlayer.html": {
    "href": "api/Quantum.RuntimePlayer.html",
    "title": "Class RuntimePlayer | Rwby Vytal Versus Documentation",
    "keywords": "Class RuntimePlayer Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class RuntimePlayer : IRuntimePlayer Inheritance object RuntimePlayer Implements IRuntimePlayer Fields CharacterDefinition public AssetRef<CharaDefinitionAsset> CharacterDefinition Field Value AssetRef<CharaDefinitionAsset> PlayerAvatar Optionally let players select an avatar prototype using RuntimePlayer. This field can be removed from RuntimePlayer if not needed. public AssetRef<EntityPrototype> PlayerAvatar Field Value AssetRef<EntityPrototype> PlayerNickname Optionally assign a nickname to players using RuntimePlayer. This field can be removed from RuntimePlayer if not needed. public string PlayerNickname Field Value string specials public List<AssetRef<HNSFSpecialSet>> specials Field Value List<AssetRef<HNSFSpecialSet>> team public int team Field Value int Methods FromByteArray(byte[]) [Obsolete(\"Use IAssetSerializer instead\")] public static RuntimePlayer FromByteArray(byte[] data) Parameters data byte[] Returns RuntimePlayer Serialize(BitStream) [Obsolete(\"Use IAssetSerializer instead\")] public void Serialize(BitStream stream) Parameters stream BitStream ToByteArray(RuntimePlayer) [Obsolete(\"Use IAssetSerializer instead\")] public static byte[] ToByteArray(RuntimePlayer config) Parameters config RuntimePlayer Returns byte[]"
  },
  "api/Quantum.SelectSoftTargetAction.html": {
    "href": "api/Quantum.SelectSoftTargetAction.html",
    "title": "Class SelectSoftTargetAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SelectSoftTargetAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SelectSoftTargetAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SelectSoftTargetAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields canSeeLayermask public LayerMask canSeeLayermask Field Value LayerMask clearSoftTarget public bool clearSoftTarget Field Value bool maxDistance public FP maxDistance Field Value FP targetingLayerMask public LayerMask targetingLayerMask Field Value LayerMask Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SessionContainer.html": {
    "href": "api/Quantum.SessionContainer.html",
    "title": "Class SessionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class SessionContainer Namespace Quantum Assembly Quantum.Simulation.dll [Obsolete(\"Has been replaced by SessionRunner class.\")] public class SessionContainer Inheritance object SessionContainer Constructors SessionContainer() Use other constructors that provide the session and runtime config. public SessionContainer() SessionContainer(DeterministicSessionConfig, RuntimeConfig) public SessionContainer(DeterministicSessionConfig sessionConfig, RuntimeConfig runtimeConfig) Parameters sessionConfig DeterministicSessionConfig runtimeConfig RuntimeConfig SessionContainer(ReplayFile) public SessionContainer(ReplayFile replayFile) Parameters replayFile ReplayFile Fields _loadedAllStatics public static bool _loadedAllStatics Field Value bool _lock public static readonly object _lock Field Value object Properties DeterministicConfig public DeterministicSessionConfig DeterministicConfig { get; } Property Value DeterministicSessionConfig Game public IDeterministicGame Game { get; } Property Value IDeterministicGame GameStartTimeoutInMiliseconds Default is infinity (-1). Set this when the you expect to connect to a running game and wait for a snapshot. public long GameStartTimeoutInMiliseconds { get; set; } Property Value long HasGameStartTimedOut Check this when the container reconnects into a running game and handle accordingly. public bool HasGameStartTimedOut { get; } Property Value bool QuantumGame public QuantumGame QuantumGame { get; } Property Value QuantumGame RuntimeConfig public RuntimeConfig RuntimeConfig { get; } Property Value RuntimeConfig Session public DeterministicSession Session { get; } Property Value DeterministicSession Methods CreateNativeAllocator() public static Native.Allocator CreateNativeAllocator() Returns Native.Allocator CreateNativeUtils() public static Native.Utility CreateNativeUtils() Returns Native.Utility Destroy() Destroy the session. public void Destroy() Service(double?) Update the session. public void Service(double? dt = null) Parameters dt double? Optionally provide a custom delta time Start(StartParameters, DeterministicSessionArgs, int, string, bool, IDeterministicPlatformTaskRunner) [Obsolete(\"Use Start signature without playerSlots arguments\")] public void Start(QuantumGame.StartParameters startParams, DeterministicSessionArgs sessionArgs, int playerSlots, string clientId = \"server\", bool logInitForConsole = true, IDeterministicPlatformTaskRunner taskRunner = null) Parameters startParams QuantumGame.StartParameters sessionArgs DeterministicSessionArgs playerSlots int clientId string logInitForConsole bool taskRunner IDeterministicPlatformTaskRunner Start(StartParameters, DeterministicSessionArgs, string, bool, IDeterministicPlatformTaskRunner) Start the simulation in a custom way. [Obsolete(\"Use SessionRunner class\")] public void Start(QuantumGame.StartParameters startParams, DeterministicSessionArgs sessionArgs, string clientId = \"server\", bool logInitForConsole = true, IDeterministicPlatformTaskRunner taskRunner = null) Parameters startParams QuantumGame.StartParameters Game start parameters sessionArgs DeterministicSessionArgs Game session args clientId string Optional client id logInitForConsole bool Optionally disable setting up the console as log output (required on the Quantum plugin) taskRunner IDeterministicPlatformTaskRunner Task runner StartReplay(StartParameters, IDeterministicReplayProvider, string, bool, IDeterministicPlatformTaskRunner) Start the simulation as a replay by providing an input provider. [Obsolete(\"Use SessionRunner class\")] public void StartReplay(QuantumGame.StartParameters startParams, IDeterministicReplayProvider provider, string clientId = \"server\", bool logInitForConsole = true, IDeterministicPlatformTaskRunner taskRunner = null) Parameters startParams QuantumGame.StartParameters Game start parameters provider IDeterministicReplayProvider Input provider clientId string Optional client id logInitForConsole bool Optionally disable setting up the console as log output (required on the Quantum plugin) taskRunner IDeterministicPlatformTaskRunner Task runner StartSpectator(StartParameters, ICommunicator, byte[], int, string, bool, IDeterministicPlatformTaskRunner) Start the simulation as a spectator. [Obsolete(\"Use SessionRunner class\")] public void StartSpectator(QuantumGame.StartParameters startParams, ICommunicator networkCommunicator, byte[] frameData = null, int initialTick = 0, string clientId = \"observer\", bool logInitForConsole = true, IDeterministicPlatformTaskRunner taskRunner = null) Parameters startParams QuantumGame.StartParameters Game start parameters networkCommunicator ICommunicator Quantum network communicator (has to have a peer that is connected to a room frameData byte[] Optionally the frame to start from initialTick int The tick that the frame data is based on clientId string Optional client id logInitForConsole bool Optionally disable setting up the console as log output (required on the Quantum plugin) taskRunner IDeterministicPlatformTaskRunner Task runner"
  },
  "api/Quantum.SessionRunner.Arguments.html": {
    "href": "api/Quantum.SessionRunner.Arguments.html",
    "title": "Struct SessionRunner.Arguments | Rwby Vytal Versus Documentation",
    "keywords": "Struct SessionRunner.Arguments Namespace Quantum Assembly Quantum.Simulation.dll Arguments to start an online or offline Quantum simulation. public struct SessionRunner.Arguments Fields CancellationToken A cancellation token to stop all async tasks (only used during StartAsync()). public CancellationToken CancellationToken Field Value CancellationToken ClientId The Quantum ClientId is a secret between the client and the server and is used when reconnecting into a running simulation to preserve the player index. public string ClientId Field Value string Communicator Quantum communicator which encapsulates the connection object (from Photon Realtime). public ICommunicator Communicator Field Value ICommunicator DefaultStartGameTimeoutInSeconds The default start game timeout. Overwrite by setting explicit StartGameTimeoutInSeconds. public const float DefaultStartGameTimeoutInSeconds = 10 Field Value float DeltaTimeType Will be used by the Unity runner to update the Quantum simulation with different delta time settings. public SimulationUpdateTime DeltaTimeType Field Value SimulationUpdateTime FrameData Serialized frame to start the simulation from. Requires InitialFrame to be set as well. This can be a reconnect or an instant replay where we already have a frame snapshot locally (QuantumInstantReplay). public byte[] FrameData Field Value byte[] GameMode The game mode (default is Multiplayer). Local mode is for testing only, the simulation is not connected online. It does not go into prediction nor does it perform rollbacks. Replay mode will also run offline and requires the ReplayProvider to be set to process the input. Spectating mode will run the simulation without a player and without the ability to input. public DeterministicGameMode GameMode Field Value DeterministicGameMode GameParameters Encapsulated QuantumGameStartParameters. public QuantumGameStartParameters GameParameters Field Value QuantumGameStartParameters InitialTick The initial tick to start the simulation from as set in FrameData (only set this when FrameData is set as well). The initial frame is also encoded in the data, but required deserialization first. public int InitialTick Field Value int OnShutdown The LoadBalancingClient object needs to be connected to game sever (joined a room) when handed to Quantum. Is not required for Replay or Local game modes. public Action<ShutdownCause, SessionRunner> OnShutdown Field Value Action<ShutdownCause, SessionRunner> PlayerCount Setting a player count here will overwrite the SessionConfig.PlayerCount during runner creation. Either SessionConfig.Player or this PlayerCount needs to be > 0. public int PlayerCount Field Value int RecordingFlags The recording flags will enable the recording of input and checksums (requires memory and allocations). When enabled QuantumGame.GetRecordedReplay can be used access the replay data. public RecordingFlags RecordingFlags Field Value RecordingFlags ReplayProvider The replay provider injects recorded inputs and rpcs into the game which is required to run the game as a replay. InputProvider is an implementation of the replay provider. See usages of QuantumGame.RecordedInputs and QuantumRunnerLocalReplay.InputProvider. public IDeterministicReplayProvider ReplayProvider Field Value IDeterministicReplayProvider RunnerFactory Runner factory to create platform dependent objects. public IRunnerFactory RunnerFactory Field Value IRunnerFactory RunnerId Optionally name the runner to access it from by id. This is useful when multiple runners are active on the client (for example an instant replay). public string RunnerId Field Value string RuntimeConfig The runtime config the Quantum game should use. Every client needs to set it, the server selects the first one send to it. public IRuntimeConfig RuntimeConfig Field Value IRuntimeConfig SessionConfig The deterministic config the Quantum game should use. Every client needs to set it, the server selects the first one send to it. public DeterministicSessionConfig SessionConfig Field Value DeterministicSessionConfig StartGameTimeoutInSeconds If set it defines the timeout in seconds to wait for StartGame() to commence the online game. This includes for example sending configurations and waiting for a snapshot. If not set the default timeout is used defined by DefaultStartGameTimeoutInSeconds. This value is not related to Photon.Deterministic.DeterministicSessionConfig.SessionStartTimeout, but it's affected by it. The SessionStartTimeout should not be larger than this value. Use WaitForGameStart() to manually wait for the start. Be sure to Shutdown() the runner in case of exceptions. public float? StartGameTimeoutInSeconds Field Value float? TaskRunner The Quantum internal task runner. public InactiveTaskRunner TaskRunner Field Value InactiveTaskRunner Properties AssetSerializer Will set Quantum.QuantumGameStartParameters.AssetSerializer public IAssetSerializer AssetSerializer { get; set; } Property Value IAssetSerializer CallbackDispatcher Will set Quantum.QuantumGameStartParameters.CallbackDispatcher public ICallbackDispatcher CallbackDispatcher { get; set; } Property Value ICallbackDispatcher EventDispatcher Will set Quantum.QuantumGameStartParameters.EventDispatcher public IEventDispatcher EventDispatcher { get; set; } Property Value IEventDispatcher GameFlags GameFlags from QuantumGameFlags. Will set Quantum.QuantumGameStartParameters.GameFlags. public int GameFlags { get; set; } Property Value int HeapExtraCount Extra heaps to allocate for a session in case you need to create 'auxiliary' frames than actually required for the simulation itself. Will set Quantum.QuantumGameStartParameters.HeapExtraCount public int HeapExtraCount { get; set; } Property Value int InitialDynamicAssets Optionally provide assets to be added to the dynamic asset db. This can be used to introduce procedurally generated assets into the simulation from the start. Will set Quantum.QuantumGameStartParameters.InitialDynamicAssets public DynamicAssetDB InitialDynamicAssets { get; set; } Property Value DynamicAssetDB InitialFrame Obsolete: use InitialTick [Obsolete(\"Use InitialTick\")] public int InitialFrame { get; set; } Property Value int InstantReplaySettings The instant replay feature requires this setup data for snapshot recording. public InstantReplaySettings InstantReplaySettings { get; set; } Property Value InstantReplaySettings ResourceManager Optionally override the resource manager for example from deserialized Quantum assets (as showcased in QuantumRunnerLocalReplay). Will set Quantum.QuantumGameStartParameters.ResourceManager public IResourceManager ResourceManager { get; set; } Property Value IResourceManager Methods CreateDefault() Initializes struct with default values. public static SessionRunner.Arguments CreateDefault() Returns SessionRunner.Arguments Validate() Validate, log warnings and throw exceptions on errors. public void Validate() Exceptions SessionRunnerException Communicator object invalid."
  },
  "api/Quantum.SessionRunner.SessionState.html": {
    "href": "api/Quantum.SessionRunner.SessionState.html",
    "title": "Enum SessionRunner.SessionState | Rwby Vytal Versus Documentation",
    "keywords": "Enum SessionRunner.SessionState Namespace Quantum Assembly Quantum.Simulation.dll The session runner has a state machine. public enum SessionRunner.SessionState Fields NotStarted = 0 Freshly created state. Running = 2 The simulation is running. Shutdown = 4 The runner is shutdown. ShuttingDown = 3 The runner is shutting down and waiting to complete shutdown sequence. Starting = 1 The runner is starting and waiting for the start protocol to complete."
  },
  "api/Quantum.SessionRunner.html": {
    "href": "api/Quantum.SessionRunner.html",
    "title": "Class SessionRunner | Rwby Vytal Versus Documentation",
    "keywords": "Class SessionRunner Namespace Quantum Assembly Quantum.Simulation.dll The SessionRunner helps to start, run and shutdown a Quantum simulation. It should never be reused for multiple simulations of multiple runs of the same game session. Always recrate the runner. It has an extensive list of starting SessionRunner.Arguments that make it start-able for a variety of use cases: Local, Multiplayer, Replay, Server etc It extracts platform dependent code into the IRunnerFactory parameter. It offers asynchronous methods to start and stop the runner but although it uses the TPL syntax for convenience it is not considered to be run in a multi-threaded environment. Use the non-async versions of the methods or use a ExclusiveScheduler for unit tests and console applications. Also never use the async methods from the Quantum server plugin, parallelization is done by the Photon-Server. This class is delivered in source code to enable developers to create custom runner code. public class SessionRunner Inheritance object SessionRunner Properties Communicator Access the communicator object. public ICommunicator Communicator { get; } Property Value ICommunicator DeltaTimeType Will be used by the Unity runner to update the Quantum simulation with different delta time settings. public SimulationUpdateTime DeltaTimeType { get; set; } Property Value SimulationUpdateTime DeterministicGame Access the Quantum game. Will be created during the start sequence. public IDeterministicGame DeterministicGame { get; } Property Value IDeterministicGame Id Runner id, is set by RunnerId. public string Id { get; } Property Value string IsRunning Returns if the SessionRunner is running a simulation. public bool IsRunning { get; } Property Value bool RecordingFlags Access the recording flags that the runner was started with. public RecordingFlags RecordingFlags { get; } Property Value RecordingFlags Session Access the Quantum session. Will be created during the start sequence. public DeterministicSession Session { get; } Property Value DeterministicSession State Get the current state of the runner. public SessionRunner.SessionState State { get; } Property Value SessionRunner.SessionState Methods CreateRunnerInternal(Arguments) Create runner object and initiates the start procedure. protected static SessionRunner CreateRunnerInternal(SessionRunner.Arguments arguments) Parameters arguments SessionRunner.Arguments Start arguments. Returns SessionRunner Initialized runner object. Destroy() Calls shutdown. Backwards compatibility. public void Destroy() Dispose() Implements disposable interface. Calls Shutdown internally. This is also called from inside Session.Destroy() to signal shutdown by the simulation. public void Dispose() OnShutdown(ShutdownCause) Can be overridden in a subclass not be notified on shutdowns. Is called right after tje OnShutdown callback. protected virtual void OnShutdown(ShutdownCause cause) Parameters cause ShutdownCause The shutdown cause Service(double?) To update the Quantum simulation this needs to be run from the outside. From Unity is would be a MonoBehaviour, on the plugin it would be from OnDeterministicUpdate() and the spectator has an extra service task to tick this. public void Service(double? deltaTime = null) Parameters deltaTime double? If null the internal stopwatch is used to update, otherwise pass in the desired delta time to progress the simulation. Shutdown(ShutdownCause) Shutdown the runner. Can be called from inside the simulation (during a simulation callback), the shutdown will commence during the next Service(double?) call. public void Shutdown(ShutdownCause cause = ShutdownCause.Ok) Parameters cause ShutdownCause Shutdown cause ShutdownAsync(ShutdownCause) Shutdown the runner asynchronously. Can be called from a simulation callback. Will also wait for the connection to be properly disconnected. public Task ShutdownAsync(ShutdownCause cause = ShutdownCause.Ok) Parameters cause ShutdownCause Shutdown cause Returns Task Once the complete shutdown is completed. Exceptions SessionRunnerException TaskFactory was never set. ShutdownInternal(SessionRunner, ShutdownCause) Internal shutdown method. protected static void ShutdownInternal(SessionRunner runner, ShutdownCause cause) Parameters runner SessionRunner Session runner object. cause ShutdownCause Shutdown code. Start(Arguments) Create a runner object and initiates the start procedure. This method returns right away and will not wait until the actual simulation is started after the start protocol and potentially waiting for a snapshot. Use WaitForStartAsync(CancellationToken) to get notified about the actual local game start. public static SessionRunner Start(SessionRunner.Arguments arguments) Parameters arguments SessionRunner.Arguments Start runner arguments. Returns SessionRunner Session runner object Exceptions ArgumentException Arguments were invalid, check exception message. StartAsync(Arguments) Async version of the start sequence. Will return the runner object once the connection is complete. StartGameTimeoutInSeconds must be greater than 0. Set explicit TaskRunner or the default Task.Factory is used. Use CancellationToken to cancel this task. Make sure to run this from a Unity \"async void\" method to not lose the unhandled exceptions. public static Task<SessionRunner> StartAsync(SessionRunner.Arguments arguments) Parameters arguments SessionRunner.Arguments Start runner arguments. Returns Task<SessionRunner> Session runner object Exceptions ArgumentException Arguments were invalid, check exception message. SessionRunnerException Session failed to start. WaitForShutdownAsync() Wait for the simulation shutdown is signaled. This is an alternative way to listen for the OnShutdown callback. public Task WaitForShutdownAsync() Returns Task After the runner shut down. WaitForShutdownAsync(CancellationToken) Wait for the simulation shutdown is signaled. This is an alternative way to listen for the OnShutdown callback. public Task WaitForShutdownAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Token to cancel this task Returns Task After the runner shut down. WaitForStartAsync(float) When starting the runner synchronously this Task can be used to wait for success, error or timeout. public Task WaitForStartAsync(float timeoutInSeconds) Parameters timeoutInSeconds float Wait for game start timeout. Returns Task Returns when the start has completed or failed. WaitForStartAsync(CancellationToken) When starting the runner synchronously this Task can be used to wait for success, error or timeout. public Task WaitForStartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Cancellation token. Returns Task Returns when the start has completed or failed. Operators implicit operator bool(SessionRunner) Support Unity null checks. public static implicit operator bool(SessionRunner v) Parameters v SessionRunner Returns bool"
  },
  "api/Quantum.SessionRunnerException.html": {
    "href": "api/Quantum.SessionRunnerException.html",
    "title": "Class SessionRunnerException | Rwby Vytal Versus Documentation",
    "keywords": "Class SessionRunnerException Namespace Quantum Assembly Quantum.Simulation.dll Runner specific exceptions. public class SessionRunnerException : Exception Inheritance object Exception SessionRunnerException Constructors SessionRunnerException(string) Constructs a new exception with a message. public SessionRunnerException(string message) Parameters message string Exception message"
  },
  "api/Quantum.SetAIConfigAction.html": {
    "href": "api/Quantum.SetAIConfigAction.html",
    "title": "Class SetAIConfigAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetAIConfigAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetAIConfigAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetAIConfigAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields aiConfig public AssetRef<AIConfigBase> aiConfig Field Value AssetRef<AIConfigBase> Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetAnimFrameBasedOnHitstunAction.html": {
    "href": "api/Quantum.SetAnimFrameBasedOnHitstunAction.html",
    "title": "Class SetAnimFrameBasedOnHitstunAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetAnimFrameBasedOnHitstunAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetAnimFrameBasedOnHitstunAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetAnimFrameBasedOnHitstunAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields animEndFrame public int animEndFrame Field Value int flinchEndFrame public int flinchEndFrame Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetAnimMixerFPParamAction.html": {
    "href": "api/Quantum.SetAnimMixerFPParamAction.html",
    "title": "Class SetAnimMixerFPParamAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetAnimMixerFPParamAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetAnimMixerFPParamAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetAnimMixerFPParamAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields param public HNSFParamFP param Field Value HNSFParamFP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetAnimationAction.html": {
    "href": "api/Quantum.SetAnimationAction.html",
    "title": "Class SetAnimationAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetAnimationAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetAnimationAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetAnimationAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields animToPlay public AssetRef<AnimationEntry> animToPlay Field Value AssetRef<AnimationEntry> autoplay public bool autoplay Field Value bool ignoreIfAlreadyPlaying public bool ignoreIfAlreadyPlaying Field Value bool resetAnimationFrame public bool resetAnimationFrame Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetAnimationMixerForMovementtion.html": {
    "href": "api/Quantum.SetAnimationMixerForMovementtion.html",
    "title": "Class SetAnimationMixerForMovementtion | Rwby Vytal Versus Documentation",
    "keywords": "Class SetAnimationMixerForMovementtion Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetAnimationMixerForMovementtion : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetAnimationMixerForMovementtion Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetAnimationMixerParamAction.html": {
    "href": "api/Quantum.SetAnimationMixerParamAction.html",
    "title": "Class SetAnimationMixerParamAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetAnimationMixerParamAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetAnimationMixerParamAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetAnimationMixerParamAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields param public HNSFParamFPVector2 param Field Value HNSFParamFPVector2 Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetArticleLookRotationAction.RotateTowardsType.html": {
    "href": "api/Quantum.SetArticleLookRotationAction.RotateTowardsType.html",
    "title": "Enum SetArticleLookRotationAction.RotateTowardsType | Rwby Vytal Versus Documentation",
    "keywords": "Enum SetArticleLookRotationAction.RotateTowardsType Namespace Quantum Assembly Quantum.Simulation.dll public enum SetArticleLookRotationAction.RotateTowardsType Fields Custom = 5 LockOnTarget = 1 Movement = 2 SelfRotation = 4 SoftTarget = 3 Stick = 0"
  },
  "api/Quantum.SetArticleLookRotationAction.html": {
    "href": "api/Quantum.SetArticleLookRotationAction.html",
    "title": "Class SetArticleLookRotationAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetArticleLookRotationAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetArticleLookRotationAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetArticleLookRotationAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields lookRotParam public HNSFParamFPVector3 lookRotParam Field Value HNSFParamFPVector3 offset public int offset Field Value int rotateTowards public SetArticleLookRotationAction.RotateTowardsType[] rotateTowards Field Value RotateTowardsType[] useYRot public bool useYRot Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetCollisionHardnessAction.html": {
    "href": "api/Quantum.SetCollisionHardnessAction.html",
    "title": "Class SetCollisionHardnessAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetCollisionHardnessAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Physics/Collision Hardness\", 0)] public class SetCollisionHardnessAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetCollisionHardnessAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields hardness public HNSFParamFP hardness Field Value HNSFParamFP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetCounterhitableAction.CounterStateType.html": {
    "href": "api/Quantum.SetCounterhitableAction.CounterStateType.html",
    "title": "Enum SetCounterhitableAction.CounterStateType | Rwby Vytal Versus Documentation",
    "keywords": "Enum SetCounterhitableAction.CounterStateType Namespace Quantum Assembly Quantum.Simulation.dll public enum SetCounterhitableAction.CounterStateType Fields counterhit = 0 punishCounter = 1"
  },
  "api/Quantum.SetCounterhitableAction.html": {
    "href": "api/Quantum.SetCounterhitableAction.html",
    "title": "Class SetCounterhitableAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetCounterhitableAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetCounterhitableAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetCounterhitableAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields activeState public bool activeState Field Value bool counterStateType public SetCounterhitableAction.CounterStateType counterStateType Field Value SetCounterhitableAction.CounterStateType Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetECBAction.html": {
    "href": "api/Quantum.SetECBAction.html",
    "title": "Class SetECBAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetECBAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/ECB/Set ECB\", 0)] public class SetECBAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetECBAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields height public FP height Field Value FP offset public FPVector3 offset Field Value FPVector3 Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetECBPositionFromAnimationCurveAction.html": {
    "href": "api/Quantum.SetECBPositionFromAnimationCurveAction.html",
    "title": "Class SetECBPositionFromAnimationCurveAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetECBPositionFromAnimationCurveAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/ECB/Set ECB Position From Animation Curve\", 0)] public class SetECBPositionFromAnimationCurveAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetECBPositionFromAnimationCurveAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields offset public FPVector2 offset Field Value FPVector2 startFrame public int startFrame Field Value int tag public AssetRef<Tag> tag Field Value AssetRef<Tag> timeDiv public int timeDiv Field Value int xCurve public FPAnimationCurve xCurve Field Value FPAnimationCurve xMulti public FP xMulti Field Value FP yCurve public FPAnimationCurve yCurve Field Value FPAnimationCurve yMulti public FP yMulti Field Value FP zCurve public FPAnimationCurve zCurve Field Value FPAnimationCurve zMulti public FP zMulti Field Value FP Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetFighterVariableAction.ChangeType.html": {
    "href": "api/Quantum.SetFighterVariableAction.ChangeType.html",
    "title": "Enum SetFighterVariableAction.ChangeType | Rwby Vytal Versus Documentation",
    "keywords": "Enum SetFighterVariableAction.ChangeType Namespace Quantum Assembly Quantum.Simulation.dll public enum SetFighterVariableAction.ChangeType Fields Add = 1 Set = 0"
  },
  "api/Quantum.SetFighterVariableAction.FighterVariableType.html": {
    "href": "api/Quantum.SetFighterVariableAction.FighterVariableType.html",
    "title": "Enum SetFighterVariableAction.FighterVariableType | Rwby Vytal Versus Documentation",
    "keywords": "Enum SetFighterVariableAction.FighterVariableType Namespace Quantum Assembly Quantum.Simulation.dll public enum SetFighterVariableAction.FighterVariableType Fields blockstun = 2 hitstop = 0 hitstun = 1"
  },
  "api/Quantum.SetFighterVariableAction.html": {
    "href": "api/Quantum.SetFighterVariableAction.html",
    "title": "Class SetFighterVariableAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetFighterVariableAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetFighterVariableAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetFighterVariableAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields changeType public SetFighterVariableAction.ChangeType changeType Field Value SetFighterVariableAction.ChangeType param public HNSFParamInt param Field Value HNSFParamInt variableType public SetFighterVariableAction.FighterVariableType variableType Field Value SetFighterVariableAction.FighterVariableType Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetHitReactionAction.html": {
    "href": "api/Quantum.SetHitReactionAction.html",
    "title": "Class SetHitReactionAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetHitReactionAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetHitReactionAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetHitReactionAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields hitReactionFunction public AssetRef<StateFunctionInt> hitReactionFunction Field Value AssetRef<StateFunctionInt> Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetLastHitAsThroweeAction.html": {
    "href": "api/Quantum.SetLastHitAsThroweeAction.html",
    "title": "Class SetLastHitAsThroweeAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetLastHitAsThroweeAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetLastHitAsThroweeAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetLastHitAsThroweeAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetMovementAction.InputSourceType.html": {
    "href": "api/Quantum.SetMovementAction.InputSourceType.html",
    "title": "Enum SetMovementAction.InputSourceType | Rwby Vytal Versus Documentation",
    "keywords": "Enum SetMovementAction.InputSourceType Namespace Quantum Assembly Quantum.Simulation.dll public enum SetMovementAction.InputSourceType Fields custom = 5 none = 0 rotation = 2 slope = 3 stick = 1 targetLook = 4"
  },
  "api/Quantum.SetMovementAction.ModifyType.html": {
    "href": "api/Quantum.SetMovementAction.ModifyType.html",
    "title": "Enum SetMovementAction.ModifyType | Rwby Vytal Versus Documentation",
    "keywords": "Enum SetMovementAction.ModifyType Namespace Quantum Assembly Quantum.Simulation.dll public enum SetMovementAction.ModifyType Fields ADD = 1 SET = 0"
  },
  "api/Quantum.SetMovementAction.html": {
    "href": "api/Quantum.SetMovementAction.html",
    "title": "Class SetMovementAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetMovementAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Set Movement\", 0)] public class SetMovementAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetMovementAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields customInput public HNSFParamFPVector3 customInput Field Value HNSFParamFPVector3 inputSources public SetMovementAction.InputSourceType[] inputSources Field Value InputSourceType[] modifyType public SetMovementAction.ModifyType modifyType Field Value SetMovementAction.ModifyType normalizeInput public bool normalizeInput Field Value bool speed public FP speed Field Value FP throweeId public int throweeId Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetPositionAction.html": {
    "href": "api/Quantum.SetPositionAction.html",
    "title": "Class SetPositionAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetPositionAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetPositionAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetPositionAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields offset public FPVector3 offset Field Value FPVector3 throweeId public int throweeId Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetRotationAction.RotateTowardsType.html": {
    "href": "api/Quantum.SetRotationAction.RotateTowardsType.html",
    "title": "Enum SetRotationAction.RotateTowardsType | Rwby Vytal Versus Documentation",
    "keywords": "Enum SetRotationAction.RotateTowardsType Namespace Quantum Assembly Quantum.Simulation.dll public enum SetRotationAction.RotateTowardsType Fields lock_on_target = 1 soft_target = 2 stick = 0"
  },
  "api/Quantum.SetRotationAction.html": {
    "href": "api/Quantum.SetRotationAction.html",
    "title": "Class SetRotationAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetRotationAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetRotationAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetRotationAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields rotateTo public SetRotationAction.RotateTowardsType[] rotateTo Field Value RotateTowardsType[] Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetTargetableAction.html": {
    "href": "api/Quantum.SetTargetableAction.html",
    "title": "Class SetTargetableAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetTargetableAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetTargetableAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetTargetableAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields targetableState public bool targetableState Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SetVisibilityAction.html": {
    "href": "api/Quantum.SetVisibilityAction.html",
    "title": "Class SetVisibilityAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SetVisibilityAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SetVisibilityAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SetVisibilityAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields throweeId public int throweeId Field Value int visibilityState public bool visibilityState Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.ShutdownCause.html": {
    "href": "api/Quantum.ShutdownCause.html",
    "title": "Enum ShutdownCause | Rwby Vytal Versus Documentation",
    "keywords": "Enum ShutdownCause Namespace Quantum Assembly Quantum.Simulation.dll public enum ShutdownCause Fields NetworkError = 3 Not used. Ok = 0 Expected shutdown SessionError = 2 The session threw an exception. SimulationStopped = 4 Simulation stopped. Could also be a network error. StartFailed = 1 Start timed out or cancelled"
  },
  "api/Quantum.ShutdownConnectionOptions.html": {
    "href": "api/Quantum.ShutdownConnectionOptions.html",
    "title": "Enum ShutdownConnectionOptions | Rwby Vytal Versus Documentation",
    "keywords": "Enum ShutdownConnectionOptions Namespace Quantum Assembly Quantum.Simulation.dll The shutdown connection options define what to do with the client Photon connection during runner shutdown. public enum ShutdownConnectionOptions Fields Disconnect = 0 Disconnect LeaveRoom = 1 Leave the room and connect to master server. LeaveRoomAndBecomeInactive = 2 Leave the room and connect to master server, but keep inactive in the room. None = 3 Do do anything to the connection during runner shutdown."
  },
  "api/Quantum.SimulationConfig.AutoLoadSceneFromMapMode.html": {
    "href": "api/Quantum.SimulationConfig.AutoLoadSceneFromMapMode.html",
    "title": "Enum SimulationConfig.AutoLoadSceneFromMapMode | Rwby Vytal Versus Documentation",
    "keywords": "Enum SimulationConfig.AutoLoadSceneFromMapMode Namespace Quantum Assembly Quantum.Simulation.dll The scene load mode to use when changing Quantum maps. Will trigger for example for the initial map that is set in Quantum by Map and on subsequent map changes. The Unity scene referenced by Quantum.Map.Scene will be loaded. public enum SimulationConfig.AutoLoadSceneFromMapMode Fields Disabled = 0 Automatic scene loading disabled. [Obsolete] Legacy = 1 Obsolete: unused. LoadThenUnloadPreviousScene = 3 Load the new scene then unload the current scene. UnloadPreviousSceneThenLoad = 2 Unload the current scene then load the new scene."
  },
  "api/Quantum.SimulationConfig.html": {
    "href": "api/Quantum.SimulationConfig.html",
    "title": "Class SimulationConfig | Rwby Vytal Versus Documentation",
    "keywords": "Class SimulationConfig Namespace Quantum Assembly Quantum.Simulation.dll The SimulationConfig holds parameters used in the ECS layer and inside core systems like physics and navigation. public class SimulationConfig : AssetObject Inheritance object Object ScriptableObject AssetObject SimulationConfig Inherited Members AssetObject.Identifier AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields AutoLoadSceneFromMap This option will trigger a Unity scene load during the Quantum start sequence.\\n This might be convenient to start with but once the starting sequence is customized disable it and implement the scene loading by yourself. \"Previous Scene\" refers to a scene name in Quantum Map. [InlineHelp] public SimulationConfig.AutoLoadSceneFromMapMode AutoLoadSceneFromMap Field Value SimulationConfig.AutoLoadSceneFromMapMode ChecksumErrorDumpOptions Additional options for checksum dumps, if the default settings don't provide a clear picture. [InlineHelp] public SimulationConfigChecksumErrorDumpOptions ChecksumErrorDumpOptions Field Value SimulationConfigChecksumErrorDumpOptions ChecksumSnapshotHistoryLengthSeconds How long to store checksumed verified frames. The are used to generate a frame dump in case of a checksum error happening. Not used in Replay and Local mode. Default is 3. [InlineHelp] public FP ChecksumSnapshotHistoryLengthSeconds Field Value FP DEFAULT_ID Obsolete: Don't use the hard coded guids instead reference the simulation config used in the RuntimeConfig. [Obsolete(\"Don't use the hard coded guids instead reference the simulation config used in the RuntimeConfig\")] public const long DEFAULT_ID = 5 Field Value long DeltaTimeType Configure how the client tracks the time to progress the Quantum simulation from the QuantumRunner class. [Obsolete(\"Set on SessionRunner.Arguments.DeltaTimeType instead\")] public SimulationUpdateTime DeltaTimeType Field Value SimulationUpdateTime Entities Global entities configuration [InlineHelp] public FrameBase.EntitiesConfig Entities Field Value FrameBase.EntitiesConfig HeapExtraCount Sets extra heaps to allocate for a session in case you need to create 'auxiliary' frames than actually required for the simulation itself. Default is 0. [InlineHelp] public int HeapExtraCount Field Value int HeapPageCount Define the max heap page count for memory the frame class uses for custom allocations like QList for example. Default is 256. [InlineHelp] public int HeapPageCount Field Value int Remarks TotalHeapSizeInBytes = (1 << HeapPageShift) * HeapPageCount HeapPageShift Define the max heap size for one page of memory the frame class uses for custom allocations like QList for example. The default is 15. [InlineHelp] public int HeapPageShift Field Value int Remarks 2^15 = 32.768 bytes HeapTrackingMode If and to which extent allocations in the Frame Heap should be tracked when in Debug mode. Recommended modes for development is DetectLeaks. While actively debugging a memory leak,TraceAllocations mode can be enabled (warning: tracing is very slow). [InlineHelp] public HeapTrackingMode HeapTrackingMode Field Value HeapTrackingMode Navigation Global navmesh configurations. [InlineHelp] public Navigation.Config Navigation Field Value Navigation.Config Physics Global physics configurations. [InlineHelp] public PhysicsCommon.Config Physics Field Value PhysicsCommon.Config ThreadCount Override the number of threads used internally. Default is 2. [InlineHelp] public int ThreadCount Field Value int tag_CharacterEntry public AssetRef<Tag> tag_CharacterEntry Field Value AssetRef<Tag> tag_CharacterEntryWait public AssetRef<Tag> tag_CharacterEntryWait Field Value AssetRef<Tag> tag_CharacterState_Idle public AssetRef<Tag> tag_CharacterState_Idle Field Value AssetRef<Tag> Methods Loaded(IResourceManager, Allocator) The asset loaded callback, caches fixed calculation results. public override void Loaded(IResourceManager resourceManager, Native.Allocator allocator) Parameters resourceManager IResourceManager Resource manager. allocator Native.Allocator The allocator."
  },
  "api/Quantum.SimulationConfigChecksumErrorDumpOptions.html": {
    "href": "api/Quantum.SimulationConfigChecksumErrorDumpOptions.html",
    "title": "Enum SimulationConfigChecksumErrorDumpOptions | Rwby Vytal Versus Documentation",
    "keywords": "Enum SimulationConfigChecksumErrorDumpOptions Namespace Quantum Assembly Quantum.Simulation.dll Configuration options for checksum error dumps. [Flags] public enum SimulationConfigChecksumErrorDumpOptions Fields ComponentChecksums = 8 Dumps component checksums. RawFPValues = 4 Prints raw FP values. ReadableDynamicDB = 2 Dumps readable information from the dynamic db. SendAssetDBChecksums = 1 Sends asset db checksums."
  },
  "api/Quantum.SnapToECBAction.html": {
    "href": "api/Quantum.SnapToECBAction.html",
    "title": "Class SnapToECBAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SnapToECBAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/ECB/Snap to ECB\", 0)] public class SnapToECBAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SnapToECBAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.SoundEntry.html": {
    "href": "api/Quantum.SoundEntry.html",
    "title": "Class SoundEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class SoundEntry Namespace Quantum Assembly Quantum.Simulation.dll public class SoundEntry : AssetObject Inheritance object Object ScriptableObject AssetObject SoundEntry Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.Soundbank.html": {
    "href": "api/Quantum.Soundbank.html",
    "title": "Class Soundbank | Rwby Vytal Versus Documentation",
    "keywords": "Class Soundbank Namespace Quantum Assembly Quantum.Simulation.dll public class Soundbank : AssetObject Inheritance object Object ScriptableObject AssetObject Soundbank Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.SpawnArticleAction.html": {
    "href": "api/Quantum.SpawnArticleAction.html",
    "title": "Class SpawnArticleAction | Rwby Vytal Versus Documentation",
    "keywords": "Class SpawnArticleAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class SpawnArticleAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction SpawnArticleAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields articleOnSameTeam public bool articleOnSameTeam Field Value bool offset public FPVector3 offset Field Value FPVector3 projectilePrototypeRef public AssetRef<EntityPrototype> projectilePrototypeRef Field Value AssetRef<EntityPrototype> setSameTargetAsOwner public bool setSameTargetAsOwner Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.StandardDeathAction.html": {
    "href": "api/Quantum.StandardDeathAction.html",
    "title": "Class StandardDeathAction | Rwby Vytal Versus Documentation",
    "keywords": "Class StandardDeathAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StandardDeathAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction StandardDeathAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields instantDespawn public bool instantDespawn Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.StandardHitClashAction.html": {
    "href": "api/Quantum.StandardHitClashAction.html",
    "title": "Class StandardHitClashAction | Rwby Vytal Versus Documentation",
    "keywords": "Class StandardHitClashAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StandardHitClashAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction StandardHitClashAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.StandardHitReactionFunction.html": {
    "href": "api/Quantum.StandardHitReactionFunction.html",
    "title": "Class StandardHitReactionFunction | Rwby Vytal Versus Documentation",
    "keywords": "Class StandardHitReactionFunction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StandardHitReactionFunction : StateFunctionInt Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<int> StateFunctionInt StandardHitReactionFunction Inherited Members HNSFStateFunction<int>.Label HNSFStateFunction<int>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields heavySoundAction public AssetRef<HNSFStateAction> heavySoundAction Field Value AssetRef<HNSFStateAction> lightSoundAction public AssetRef<HNSFStateAction> lightSoundAction Field Value AssetRef<HNSFStateAction> mediumSoundAction public AssetRef<HNSFStateAction> mediumSoundAction Field Value AssetRef<HNSFStateAction> Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override int Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int"
  },
  "api/Quantum.StandardHitReactions.html": {
    "href": "api/Quantum.StandardHitReactions.html",
    "title": "Enum StandardHitReactions | Rwby Vytal Versus Documentation",
    "keywords": "Enum StandardHitReactions Namespace Quantum Assembly Quantum.Simulation.dll public enum StandardHitReactions Fields Blocked = 2 Hit = 1 Missed = 0 Parried = 3"
  },
  "api/Quantum.StandardHitResponseAction.html": {
    "href": "api/Quantum.StandardHitResponseAction.html",
    "title": "Class StandardHitResponseAction | Rwby Vytal Versus Documentation",
    "keywords": "Class StandardHitResponseAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StandardHitResponseAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction StandardHitResponseAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.StartCutsceneAction.html": {
    "href": "api/Quantum.StartCutsceneAction.html",
    "title": "Class StartCutsceneAction | Rwby Vytal Versus Documentation",
    "keywords": "Class StartCutsceneAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Cutscene/Start Cutscene\", 0)] public class StartCutsceneAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction StartCutsceneAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields cutsceneTag public AssetRef<Tag> cutsceneTag Field Value AssetRef<Tag> onlyPlayOnLocalMachine public bool onlyPlayOnLocalMachine Field Value bool Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.StateFunctionAssetRef.html": {
    "href": "api/Quantum.StateFunctionAssetRef.html",
    "title": "Class StateFunctionAssetRef | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionAssetRef Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StateFunctionAssetRef : HNSFStateFunction<AssetRef> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<AssetRef> StateFunctionAssetRef Derived GetStateByTagFunction Inherited Members HNSFStateFunction<AssetRef>.Label HNSFStateFunction<AssetRef>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override AssetRef Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns AssetRef"
  },
  "api/Quantum.StateFunctionAssetRefList.html": {
    "href": "api/Quantum.StateFunctionAssetRefList.html",
    "title": "Class StateFunctionAssetRefList | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionAssetRefList Namespace Quantum Assembly Quantum.Simulation.dll public abstract class StateFunctionAssetRefList : HNSFStateFunction<QList<AssetRef>> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<QList<AssetRef>> StateFunctionAssetRefList Inherited Members HNSFStateFunction<QList<AssetRef>>.Label HNSFStateFunction<QList<AssetRef>>.Execute(Frame, EntityRef, ref HNSFStateContext) HNSFStateFunction<QList<AssetRef>>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.StateFunctionBool.html": {
    "href": "api/Quantum.StateFunctionBool.html",
    "title": "Class StateFunctionBool | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionBool Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StateFunctionBool : HNSFStateFunction<bool> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<bool> StateFunctionBool Inherited Members HNSFStateFunction<bool>.Label HNSFStateFunction<bool>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override bool Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.StateFunctionBoolList.html": {
    "href": "api/Quantum.StateFunctionBoolList.html",
    "title": "Class StateFunctionBoolList | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionBoolList Namespace Quantum Assembly Quantum.Simulation.dll public abstract class StateFunctionBoolList : HNSFStateFunction<QList<bool>> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<QList<bool>> StateFunctionBoolList Inherited Members HNSFStateFunction<QList<bool>>.Label HNSFStateFunction<QList<bool>>.Execute(Frame, EntityRef, ref HNSFStateContext) HNSFStateFunction<QList<bool>>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.StateFunctionByteList.html": {
    "href": "api/Quantum.StateFunctionByteList.html",
    "title": "Class StateFunctionByteList | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionByteList Namespace Quantum Assembly Quantum.Simulation.dll public abstract class StateFunctionByteList : HNSFStateFunction<QList<byte>> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<QList<byte>> StateFunctionByteList Inherited Members HNSFStateFunction<QList<byte>>.Label HNSFStateFunction<QList<byte>>.Execute(Frame, EntityRef, ref HNSFStateContext) HNSFStateFunction<QList<byte>>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.StateFunctionEntityRef.html": {
    "href": "api/Quantum.StateFunctionEntityRef.html",
    "title": "Class StateFunctionEntityRef | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionEntityRef Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StateFunctionEntityRef : HNSFStateFunction<EntityRef> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<EntityRef> StateFunctionEntityRef Inherited Members HNSFStateFunction<EntityRef>.Label HNSFStateFunction<EntityRef>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override EntityRef Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns EntityRef"
  },
  "api/Quantum.StateFunctionEntityRefList.html": {
    "href": "api/Quantum.StateFunctionEntityRefList.html",
    "title": "Class StateFunctionEntityRefList | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionEntityRefList Namespace Quantum Assembly Quantum.Simulation.dll public abstract class StateFunctionEntityRefList : HNSFStateFunction<QList<EntityRef>> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<QList<EntityRef>> StateFunctionEntityRefList Inherited Members HNSFStateFunction<QList<EntityRef>>.Label HNSFStateFunction<QList<EntityRef>>.Execute(Frame, EntityRef, ref HNSFStateContext) HNSFStateFunction<QList<EntityRef>>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.StateFunctionFP.html": {
    "href": "api/Quantum.StateFunctionFP.html",
    "title": "Class StateFunctionFP | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionFP Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StateFunctionFP : HNSFStateFunction<FP> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FP> StateFunctionFP Derived ClampFPFunction FPOperationFunction FPVector3MagnitudeFunction FPVector3ToFPFunction GetHitboxHitCountFunction RandomFPFunction RemapFPFunction Inherited Members HNSFStateFunction<FP>.Label HNSFStateFunction<FP>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FP Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FP"
  },
  "api/Quantum.StateFunctionFPList.html": {
    "href": "api/Quantum.StateFunctionFPList.html",
    "title": "Class StateFunctionFPList | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionFPList Namespace Quantum Assembly Quantum.Simulation.dll public abstract class StateFunctionFPList : HNSFStateFunction<QList<FP>> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<QList<FP>> StateFunctionFPList Inherited Members HNSFStateFunction<QList<FP>>.Label HNSFStateFunction<QList<FP>>.Execute(Frame, EntityRef, ref HNSFStateContext) HNSFStateFunction<QList<FP>>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.StateFunctionFPVector2.html": {
    "href": "api/Quantum.StateFunctionFPVector2.html",
    "title": "Class StateFunctionFPVector2 | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionFPVector2 Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StateFunctionFPVector2 : HNSFStateFunction<FPVector2> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FPVector2> StateFunctionFPVector2 Inherited Members HNSFStateFunction<FPVector2>.Label HNSFStateFunction<FPVector2>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FPVector2 Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FPVector2"
  },
  "api/Quantum.StateFunctionFPVector2List.html": {
    "href": "api/Quantum.StateFunctionFPVector2List.html",
    "title": "Class StateFunctionFPVector2List | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionFPVector2List Namespace Quantum Assembly Quantum.Simulation.dll public abstract class StateFunctionFPVector2List : HNSFStateFunction<QList<FPVector2>> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<QList<FPVector2>> StateFunctionFPVector2List Inherited Members HNSFStateFunction<QList<FPVector2>>.Label HNSFStateFunction<QList<FPVector2>>.Execute(Frame, EntityRef, ref HNSFStateContext) HNSFStateFunction<QList<FPVector2>>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.StateFunctionFPVector3.html": {
    "href": "api/Quantum.StateFunctionFPVector3.html",
    "title": "Class StateFunctionFPVector3 | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionFPVector3 Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StateFunctionFPVector3 : HNSFStateFunction<FPVector3> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<FPVector3> StateFunctionFPVector3 Derived FPVector3OperationFunction FPVector3TransformDirectionFunction GetCharacterForceFunction GetHitInfoFpVector3Function GetPositionFunction GetWallNormalFunction Inherited Members HNSFStateFunction<FPVector3>.Label HNSFStateFunction<FPVector3>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override FPVector3 Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns FPVector3"
  },
  "api/Quantum.StateFunctionFPVector3List.html": {
    "href": "api/Quantum.StateFunctionFPVector3List.html",
    "title": "Class StateFunctionFPVector3List | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionFPVector3List Namespace Quantum Assembly Quantum.Simulation.dll public abstract class StateFunctionFPVector3List : HNSFStateFunction<QList<FPVector3>> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<QList<FPVector3>> StateFunctionFPVector3List Inherited Members HNSFStateFunction<QList<FPVector3>>.Label HNSFStateFunction<QList<FPVector3>>.Execute(Frame, EntityRef, ref HNSFStateContext) HNSFStateFunction<QList<FPVector3>>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.StateFunctionInt.html": {
    "href": "api/Quantum.StateFunctionInt.html",
    "title": "Class StateFunctionInt | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionInt Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StateFunctionInt : HNSFStateFunction<int> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<int> StateFunctionInt Derived ClampIntFunction GetAuraFunction GetFighterVariableFunction GetHitstunFunction GetTotalHitCountFunction GetTotalHitstunFunction HitReactionGuardFunction IntOperationFunction StandardHitReactionFunction Inherited Members HNSFStateFunction<int>.Label HNSFStateFunction<int>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods Execute(Frame, EntityRef, ref HNSFStateContext) public override int Execute(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns int"
  },
  "api/Quantum.StateFunctionIntegerList.html": {
    "href": "api/Quantum.StateFunctionIntegerList.html",
    "title": "Class StateFunctionIntegerList | Rwby Vytal Versus Documentation",
    "keywords": "Class StateFunctionIntegerList Namespace Quantum Assembly Quantum.Simulation.dll public abstract class StateFunctionIntegerList : HNSFStateFunction<QList<int>> Inheritance object Object ScriptableObject AssetObject HNSFStateFunction HNSFStateFunction<QList<int>> StateFunctionIntegerList Inherited Members HNSFStateFunction<QList<int>>.Label HNSFStateFunction<QList<int>>.Execute(Frame, EntityRef, ref HNSFStateContext) HNSFStateFunction<QList<int>>.Execute(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.StateGroundedDecision.CheckType.html": {
    "href": "api/Quantum.StateGroundedDecision.CheckType.html",
    "title": "Enum StateGroundedDecision.CheckType | Rwby Vytal Versus Documentation",
    "keywords": "Enum StateGroundedDecision.CheckType Namespace Quantum Assembly Quantum.Simulation.dll public enum StateGroundedDecision.CheckType Fields IsAerial = 1 IsGrounded = 0"
  },
  "api/Quantum.StateGroundedDecision.html": {
    "href": "api/Quantum.StateGroundedDecision.html",
    "title": "Class StateGroundedDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class StateGroundedDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StateGroundedDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision StateGroundedDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields checkType public StateGroundedDecision.CheckType checkType Field Value StateGroundedDecision.CheckType Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.StateGroundedType.html": {
    "href": "api/Quantum.StateGroundedType.html",
    "title": "Enum StateGroundedType | Rwby Vytal Versus Documentation",
    "keywords": "Enum StateGroundedType Namespace Quantum Assembly Quantum.Simulation.dll public enum StateGroundedType Fields AERIAL = 1 GROUNDED = 0"
  },
  "api/Quantum.StateTrackedDecision.html": {
    "href": "api/Quantum.StateTrackedDecision.html",
    "title": "Class StateTrackedDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class StateTrackedDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StateTrackedDecision : HNSFStateDecision Inheritance object Object ScriptableObject AssetObject HNSFStateDecision StateTrackedDecision Inherited Members HNSFStateDecision.Label HNSFStateDecision.DecideThreadSafe(FrameThreadSafe, EntityRef, ref HNSFStateContext) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields invalidWhenTrackedXTimes public int invalidWhenTrackedXTimes Field Value int Methods Decide(Frame, EntityRef, ref HNSFStateContext) public override bool Decide(Frame frame, EntityRef entity, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.Statics.html": {
    "href": "api/Quantum.Statics.html",
    "title": "Class Statics | Rwby Vytal Versus Documentation",
    "keywords": "Class Statics Namespace Quantum Assembly Quantum.Simulation.dll Static type registry is completed by code generation. public class Statics Inheritance object Statics Fields SerializeAssetRef public static FrameSerializer.Delegate SerializeAssetRef Field Value FrameSerializer.Delegate SerializeClashCombatPair public static FrameSerializer.Delegate SerializeClashCombatPair Field Value FrameSerializer.Delegate SerializeCollisionCombatPair public static FrameSerializer.Delegate SerializeCollisionCombatPair Field Value FrameSerializer.Delegate SerializeDummyRecordingSlot public static FrameSerializer.Delegate SerializeDummyRecordingSlot Field Value FrameSerializer.Delegate SerializeEntityHitDefinition public static FrameSerializer.Delegate SerializeEntityHitDefinition Field Value FrameSerializer.Delegate SerializeEntityRef public static FrameSerializer.Delegate SerializeEntityRef Field Value FrameSerializer.Delegate SerializeEnvQueryItemCached public static FrameSerializer.Delegate SerializeEnvQueryItemCached Field Value FrameSerializer.Delegate SerializeFP public static FrameSerializer.Delegate SerializeFP Field Value FrameSerializer.Delegate SerializeHitboxCombatPair public static FrameSerializer.Delegate SerializeHitboxCombatPair Field Value FrameSerializer.Delegate SerializeInput public static FrameSerializer.Delegate SerializeInput Field Value FrameSerializer.Delegate SerializeInt32 public static FrameSerializer.Delegate SerializeInt32 Field Value FrameSerializer.Delegate SerializeKCCCollision public static FrameSerializer.Delegate SerializeKCCCollision Field Value FrameSerializer.Delegate SerializeKCCIgnore public static FrameSerializer.Delegate SerializeKCCIgnore Field Value FrameSerializer.Delegate SerializeKCCModifier public static FrameSerializer.Delegate SerializeKCCModifier Field Value FrameSerializer.Delegate SerializeNetworkButtons public static FrameSerializer.Delegate SerializeNetworkButtons Field Value FrameSerializer.Delegate SerializePhysicsQueryRef public static FrameSerializer.Delegate SerializePhysicsQueryRef Field Value FrameSerializer.Delegate SerializePlayerRef public static FrameSerializer.Delegate SerializePlayerRef Field Value FrameSerializer.Delegate SerializeTeamVersusPlayerData public static FrameSerializer.Delegate SerializeTeamVersusPlayerData Field Value FrameSerializer.Delegate SerializeTrainingPlayerData public static FrameSerializer.Delegate SerializeTrainingPlayerData Field Value FrameSerializer.Delegate Methods EnsureNotStrippedGen() public static void EnsureNotStrippedGen() Init() public static void Init() ReInit() public static void ReInit() RegisterSimulationTypes(TypeRegistry) Register Quantum types. Use RegisterSimulationTypesUser(TypeRegistry) partial method to extend. public static void RegisterSimulationTypes(TypeRegistry typeRegistry) Parameters typeRegistry TypeRegistry Type registry."
  },
  "api/Quantum.StepUpProcessor.html": {
    "href": "api/Quantum.StepUpProcessor.html",
    "title": "Class StepUpProcessor | Rwby Vytal Versus Documentation",
    "keywords": "Class StepUpProcessor Namespace Quantum Assembly Quantum.Simulation.dll This processor detect steps (obstacles which block the character moving forward) and reflects blocked movement upwards. public class StepUpProcessor : KCCProcessor, IAfterMoveStep Inheritance object Object ScriptableObject AssetObject KCCProcessor StepUpProcessor Implements IAfterMoveStep Inherited Members KCCProcessor.OnEnter(KCCContext, KCCProcessorInfo, KCCOverlapHit) KCCProcessor.OnExit(KCCContext, KCCProcessorInfo) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields ClearDynamicVelocityOnEnd [KCCTooltip(\"Clears dynamic velocity when the step up is over. This eliminates bumps when dynamic up velocity is positive (for example after triggering jump).\")] public bool ClearDynamicVelocityOnEnd Field Value bool GroundCheckRadiusScale [KCCTooltip(\"Radius multiplier used for last sphere-cast (ground surface detection). Lower value work better with shorter step depth.\")] public FP GroundCheckRadiusScale Field Value FP MinPushBack [KCCTooltip(\"Minimum proportional penetration push-back distance to activate step-up. A value of 0.5 means the KCC must be pushed back from colliding geometry by at least 50% of desired movement.\\nRecommended range is 0.25 - 0.75.\")] public FP MinPushBack Field Value FP RequireGroundTarget [KCCTooltip(\"Step-up starts only if the target surface is walkable (angle <= KCCData.MaxGroundAngle).\")] public bool RequireGroundTarget Field Value bool StepDepth [KCCTooltip(\"Maximum depth of the step check.\")] public FP StepDepth Field Value FP StepHeight [KCCTooltip(\"Maximum obstacle height to step on it.\")] public FP StepHeight Field Value FP StepSpeed [KCCTooltip(\"Multiplier of unapplied movement projected to step up. This helps traversing obstacles faster.\")] public FP StepSpeed Field Value FP Methods AfterMoveStep(KCCContext, KCCProcessorInfo, KCCOverlapInfo) This callback is invoked after each KCC move step - this happens if the KCC moves too fast and the continuous collision detection (CCD) algorithm splits translation vector into multiple smaller steps. During CCD movement the KCCData.DeltaTime is scaled proportionally to size of the step. Not called if KCC.IsActive is set to false. public void AfterMoveStep(KCCContext context, KCCProcessorInfo processorInfo, KCCOverlapInfo overlapInfo) Parameters context KCCContext Reference to KCC context. processorInfo KCCProcessorInfo Contains information about the processor registration source and a collider/entity that is referencing this processor. overlapInfo KCCOverlapInfo Reference to all physics overlap hits in current move step and other metadata."
  },
  "api/Quantum.StopCutsceneAction.html": {
    "href": "api/Quantum.StopCutsceneAction.html",
    "title": "Class StopCutsceneAction | Rwby Vytal Versus Documentation",
    "keywords": "Class StopCutsceneAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Cutscene/Stop Cutscene\", 0)] public class StopCutsceneAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction StopCutsceneAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields cutsceneTag public AssetRef<Tag> cutsceneTag Field Value AssetRef<Tag> Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.StopVisualEffectAction.html": {
    "href": "api/Quantum.StopVisualEffectAction.html",
    "title": "Class StopVisualEffectAction | Rwby Vytal Versus Documentation",
    "keywords": "Class StopVisualEffectAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class StopVisualEffectAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction StopVisualEffectAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields destroyAllParticles public bool destroyAllParticles Field Value bool offset public int offset Field Value int Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.StreamReplayInputProvider.html": {
    "href": "api/Quantum.StreamReplayInputProvider.html",
    "title": "Class StreamReplayInputProvider | Rwby Vytal Versus Documentation",
    "keywords": "Class StreamReplayInputProvider Namespace Quantum Assembly Quantum.Simulation.dll The stream replay input provider is used to play back input from a stream. public class StreamReplayInputProvider Inheritance object StreamReplayInputProvider Constructors StreamReplayInputProvider(Stream, int) Create a stream replay input provider. public StreamReplayInputProvider(Stream inputStream, int maxFrame) Parameters inputStream Stream Stream to read from maxFrame int Max frame that input is available for Properties MaxFrame The max frame that the stream has input for. public int MaxFrame { get; } Property Value int Methods AddRpc(int, byte[], bool) Unused. public void AddRpc(int player, byte[] data, bool command) Parameters player int data byte[] command bool BeginReadFrame(int) Request input for a certain frame. public int BeginReadFrame(int frame) Parameters frame int The frame for the requested input Returns int The size of the input to be read CanSimulate(int) Is all input for this frame available. public bool CanSimulate(int frame) Parameters frame int Frame number Returns bool True if all input is available and the simulation can progress CompleteReadFrame(int, int, ref byte[]) Read the input data for the frame. public void CompleteReadFrame(int frame, int length, ref byte[] data) Parameters frame int The frame to read the input for length int The input length requested in BeginReadFrame(int) data byte[] The array to copy input data to ForwardToFrame(Stream, int) Skip to a selected frame in the stream. public static void ForwardToFrame(Stream stream, int frame) Parameters stream Stream Stream frame int Frame to fast forward to GetInput(int, int) Unused. public DeterministicFrameInputTemp GetInput(int frame, int player) Parameters frame int player int Returns DeterministicFrameInputTemp GetRpc(int, int) Unused. public QTuple<byte[], bool> GetRpc(int frame, int player) Parameters frame int player int Returns QTuple<byte[], bool> Reset() Resets the input provider when restarting a replay for example. The stream should be reset to the beginning. public void Reset()"
  },
  "api/Quantum.SyncedCutsceneTimer.html": {
    "href": "api/Quantum.SyncedCutsceneTimer.html",
    "title": "Struct SyncedCutsceneTimer | Rwby Vytal Versus Documentation",
    "keywords": "Struct SyncedCutsceneTimer Namespace Quantum Assembly Quantum.Simulation.dll public struct SyncedCutsceneTimer : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 24 Field Value int cutsceneFrame public int cutsceneFrame Field Value int playRate public int playRate Field Value int playingCutscene public AssetRef<Tag> playingCutscene Field Value AssetRef<Tag> playingEntity public EntityRef playingEntity Field Value EntityRef Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.SystemBase.html": {
    "href": "api/Quantum.SystemBase.html",
    "title": "Class SystemBase | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemBase Namespace Quantum Assembly Quantum.Simulation.dll The Quantum system base class. Only advised for advanced uses only. public abstract class SystemBase Inheritance object SystemBase Derived CullingSystem2D CullingSystem3D NavigationSystem PhysicsSystem2D PhysicsSystem3D SystemGroup SystemMainThread SystemSignalsOnly SystemArrayComponent<T> SystemArrayFilter<T> SystemThreadedComponent<T> SystemThreadedFilter<T> Constructors SystemBase() Constructor. public SystemBase() SystemBase(string) Create a new instance and setting the sample name. public SystemBase(string scheduleSample) Parameters scheduleSample string The name of the system to identify in the profiler. Properties ChildSystems The enumerable child systems. public virtual IEnumerable<SystemBase> ChildSystems { get; } Property Value IEnumerable<SystemBase> Hierarchy Creates the complete sub graph of child systems. public IEnumerable<SystemBase> Hierarchy { get; } Property Value IEnumerable<SystemBase> ParentSystem The parent system in the system hierarchy. public SystemBase ParentSystem { get; } Property Value SystemBase RuntimeIndex A unique index assigned to identify systems at runtime. public int RuntimeIndex { get; set; } Property Value int StartEnabled Set to true when the simulation should start with this system enabled. public virtual bool StartEnabled { get; set; } Property Value bool Methods OnDisabled(Frame) Is called when the system was disabled for example after SystemDisable(Type). public virtual void OnDisabled(Frame f) Parameters f Frame The referenced frame. OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public virtual void OnEnabled(Frame f) Parameters f Frame The referenced frame. OnInit(Frame) Is called when the system is initialized. public virtual void OnInit(Frame f) Parameters f Frame The referenced frame. OnSchedule(Frame, TaskHandle) Creates the task graph for the system. public TaskHandle OnSchedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The system task graph. Schedule(Frame, TaskHandle) Override to add tasks to this system. protected abstract TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The system task graph."
  },
  "api/Quantum.SystemGroup.html": {
    "href": "api/Quantum.SystemGroup.html",
    "title": "Class SystemGroup | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemGroup Namespace Quantum Assembly Quantum.Simulation.dll The base class for a hierarchy of systems. public class SystemGroup : SystemBase Inheritance object SystemBase SystemGroup Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Constructors SystemGroup(string, params SystemBase[]) Create a new system group. public SystemGroup(string name, params SystemBase[] children) Parameters name string The name of the system. children SystemBase[] The child systems. Properties ChildSystems The enumerable child systems. public override sealed IEnumerable<SystemBase> ChildSystems { get; } Property Value IEnumerable<SystemBase> Methods OnDisabled(Frame) Is called when the system was disabled for example after SystemDisable(Type). public override void OnDisabled(Frame f) Parameters f Frame The referenced frame. OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame. Schedule(Frame, TaskHandle) Add the child systems the the task hierarchy. protected override sealed TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The final task graph."
  },
  "api/Quantum.SystemMainThread.html": {
    "href": "api/Quantum.SystemMainThread.html",
    "title": "Class SystemMainThread | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemMainThread Namespace Quantum Assembly Quantum.Simulation.dll Most common Quantum system type. Implements a regular Update() with all the usual features. Always register new system types on the SystemsConfig. public abstract class SystemMainThread : SystemBase Inheritance object SystemBase SystemMainThread Derived BotSDKDebuggerSystem BotSDKTimerSystem CombatHitDetectionSystem CombatHitResolverSystem CombatboxBroadphaseSystem CombatboxNarrowphaseSystem CombatboxResolverSystem PlayerConnectedSystem SystemMainThreadFilter<T> SystemMainThreadGroup StructSizeCheckSystem UpdateCombatTargetSystem GenericGamemodeStateSystem MapIntroSystem TeamVersusEndGameSystem TeamVersusOutroSetupSystem TeamVersusPlayerRespawnSystem TeamVersusVictoryScreenSystem TrainingPlayerRespawnSystem TeamVersusCharacterIntroSystem TrainingAISystem TrainingDummyEarlyUpdateSystem TrainingDummyGeneralSystem Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Constructors SystemMainThread() Create a new system. public SystemMainThread() SystemMainThread(string) Create a new system with a custom name. public SystemMainThread(string name) Parameters name string The system name shows up in the task profiler for example. Methods Schedule(Frame, TaskHandle) Override to add additional tasks. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The final task graph. ScheduleUpdate(Frame, TaskHandle) Adds the basic update callback. protected TaskHandle ScheduleUpdate(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The final task graph. Update(Frame) Override to add workload. public abstract void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/Quantum.SystemMainThreadFilter-1.html": {
    "href": "api/Quantum.SystemMainThreadFilter-1.html",
    "title": "Class SystemMainThreadFilter<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemMainThreadFilter<T> Namespace Quantum Assembly Quantum.Simulation.dll This type of system uses a FilterStruct of type T to filter a set of entities based on it, loop through them and calls a method. The Any and Without virtual functions can be overwritten for more advanced filtering. If more complex options are required, inherit from SystemMainThread and iterate through the filters manually. Always register new system types on the SystemsConfig. public abstract class SystemMainThreadFilter<T> : SystemMainThread where T : unmanaged Type Parameters T Filter type Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<T> Derived FighterPassiveAuraGainSystem ModifyHitstopSystem AnimationAutoplaySystem CharaStateMachineSystem CustomKCCSystem EnvQueryInjectionSystem EnvQuerySystem KCCSystem LocalDeltaTimeSystem UpdateGenericStateMachineSystem UpdateParentedTransformSystem MovementCharacterSystem MovementGenericSystem UpdateCharacterInputSystem AuraBurnoutSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Examples public unsafe class FooSystem : SystemMainThreadFilter{Foo.Filter} { public struct Filter { public EntityRef Entity; public Foo* FooComponent; } public override void Update(Frame f, ref Filter filter) { filter.FooComponent->Update(f, filter.Entity); } } Properties Any A filter to include components from the iteration. public virtual ComponentSet Any { get; } Property Value ComponentSet UseCulling Override to change the if the filter should exclude culled entities. public virtual bool UseCulling { get; } Property Value bool Without A filter to exclude components from the iteration. public virtual ComponentSet Without { get; } Property Value ComponentSet Methods Update(Frame) Internal update method, use Update(Frame, ref T) instead. public override sealed void Update(Frame f) Parameters f Frame The current frame. Update(Frame, ref T) Override to add workload. public abstract void Update(Frame f, ref T filter) Parameters f Frame The current frame. filter T The frame object."
  },
  "api/Quantum.SystemMainThreadGroup.html": {
    "href": "api/Quantum.SystemMainThreadGroup.html",
    "title": "Class SystemMainThreadGroup | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemMainThreadGroup Namespace Quantum Assembly Quantum.Simulation.dll A Quantum main thread system that has a system hierarchy. public class SystemMainThreadGroup : SystemMainThread Inheritance object SystemBase SystemMainThread SystemMainThreadGroup Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Constructors SystemMainThreadGroup(string, params SystemMainThread[]) Create a new system group. public SystemMainThreadGroup(string name, params SystemMainThread[] children) Parameters name string The system name. children SystemMainThread[] The system children. Properties ChildSystems Returns all child systems of this instance. public override sealed IEnumerable<SystemBase> ChildSystems { get; } Property Value IEnumerable<SystemBase> Methods OnDisabled(Frame) Is called when the system was disabled for example after SystemDisable(Type). public override void OnDisabled(Frame f) Parameters f Frame The referenced frame. OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame. Schedule(Frame, TaskHandle) Override to add additional tasks. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The final task graph. Update(Frame) Override to add the workload. public override sealed void Update(Frame f) Parameters f Frame The current frame."
  },
  "api/Quantum.SystemSignalsOnly.html": {
    "href": "api/Quantum.SystemSignalsOnly.html",
    "title": "Class SystemSignalsOnly | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemSignalsOnly Namespace Quantum Assembly Quantum.Simulation.dll This type of system does not have an Update() function. It is meant for systems that focus solely on implementing and receiving signals from other systems. By avoiding the Update loop, it helps you save some overhead. public class SystemSignalsOnly : SystemBase Inheritance object SystemBase SystemSignalsOnly Derived BotSDKSystem CharaLinkSystem EntityPrototypeSystem TeamVersusGameSetupSystem TeamVersusGeneralSystem TeamVersusPlayerDeathSystem TeamVersusPlayerDespawnSystem TeamVersusPlayerSpawnSystem TeamVersusPregameSystem TrainingPlayerDespawnSystem TrainingGameSetupSystem TrainingGeneralSystem TrainingPlayerDeathSystem TrainingPregameSystem Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Schedule(Frame, TaskHandle) Override to add tasks to this system. protected override sealed TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The system task graph."
  },
  "api/Quantum.SystemsConfig.SubSubSystemEntry.html": {
    "href": "api/Quantum.SystemsConfig.SubSubSystemEntry.html",
    "title": "Class SystemsConfig.SubSubSystemEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemsConfig.SubSubSystemEntry Namespace Quantum Assembly Quantum.Simulation.dll 2nd sub level system type. [Serializable] public class SystemsConfig.SubSubSystemEntry : SystemsConfig.SystemEntryBase Inheritance object SystemsConfig.SystemEntryBase SystemsConfig.SubSubSystemEntry Inherited Members SystemsConfig.SystemEntryBase.SystemType SystemsConfig.SystemEntryBase.SystemName SystemsConfig.SystemEntryBase.StartDisabled Methods GetChildren() This system cannot have children. public override IReadOnlyList<SystemsConfig.SystemEntryBase> GetChildren() Returns IReadOnlyList<SystemsConfig.SystemEntryBase> Empty array"
  },
  "api/Quantum.SystemsConfig.SubSystemEntry.html": {
    "href": "api/Quantum.SystemsConfig.SubSystemEntry.html",
    "title": "Class SystemsConfig.SubSystemEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemsConfig.SubSystemEntry Namespace Quantum Assembly Quantum.Simulation.dll 1st sub level system type. [Serializable] public class SystemsConfig.SubSystemEntry : SystemsConfig.SystemEntryBase<SystemsConfig.SubSubSystemEntry> Inheritance object SystemsConfig.SystemEntryBase SystemsConfig.SystemEntryBase<SystemsConfig.SubSubSystemEntry> SystemsConfig.SubSystemEntry Inherited Members SystemsConfig.SystemEntryBase<SystemsConfig.SubSubSystemEntry>.Children SystemsConfig.SystemEntryBase<SystemsConfig.SubSubSystemEntry>.GetChildren() SystemsConfig.SystemEntryBase<SystemsConfig.SubSubSystemEntry>.AddSystem<TSystem>(string, bool) SystemsConfig.SystemEntryBase.SystemType SystemsConfig.SystemEntryBase.SystemName SystemsConfig.SystemEntryBase.StartDisabled"
  },
  "api/Quantum.SystemsConfig.SystemEntry.html": {
    "href": "api/Quantum.SystemsConfig.SystemEntry.html",
    "title": "Class SystemsConfig.SystemEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemsConfig.SystemEntry Namespace Quantum Assembly Quantum.Simulation.dll Base system type. [Serializable] public class SystemsConfig.SystemEntry : SystemsConfig.SystemEntryBase<SystemsConfig.SubSystemEntry> Inheritance object SystemsConfig.SystemEntryBase SystemsConfig.SystemEntryBase<SystemsConfig.SubSystemEntry> SystemsConfig.SystemEntry Inherited Members SystemsConfig.SystemEntryBase<SystemsConfig.SubSystemEntry>.Children SystemsConfig.SystemEntryBase<SystemsConfig.SubSystemEntry>.GetChildren() SystemsConfig.SystemEntryBase<SystemsConfig.SubSystemEntry>.AddSystem<TSystem>(string, bool) SystemsConfig.SystemEntryBase.SystemType SystemsConfig.SystemEntryBase.SystemName SystemsConfig.SystemEntryBase.StartDisabled"
  },
  "api/Quantum.SystemsConfig.SystemEntryBase-1.html": {
    "href": "api/Quantum.SystemsConfig.SystemEntryBase-1.html",
    "title": "Class SystemsConfig.SystemEntryBase<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemsConfig.SystemEntryBase<T> Namespace Quantum Assembly Quantum.Simulation.dll To prevent indefinite recursion in Unity serialization system hierarchies are limited to 3 levels. public abstract class SystemsConfig.SystemEntryBase<T> : SystemsConfig.SystemEntryBase where T : SystemsConfig.SystemEntryBase, new() Type Parameters T Type of the children Inheritance object SystemsConfig.SystemEntryBase SystemsConfig.SystemEntryBase<T> Derived SystemsConfig.SubSystemEntry SystemsConfig.SystemEntry Inherited Members SystemsConfig.SystemEntryBase.SystemType SystemsConfig.SystemEntryBase.SystemName SystemsConfig.SystemEntryBase.StartDisabled Fields Children Child systems. public List<T> Children Field Value List<T> Methods AddSystem<TSystem>(string, bool) Add a child system. public T AddSystem<TSystem>(string name = null, bool enabled = true) where TSystem : SystemBase Parameters name string System name enabled bool Start enabled Returns T The created child system entry Type Parameters TSystem System type GetChildren() Return child systems. public override IReadOnlyList<SystemsConfig.SystemEntryBase> GetChildren() Returns IReadOnlyList<SystemsConfig.SystemEntryBase> List of child systems"
  },
  "api/Quantum.SystemsConfig.SystemEntryBase.html": {
    "href": "api/Quantum.SystemsConfig.SystemEntryBase.html",
    "title": "Class SystemsConfig.SystemEntryBase | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemsConfig.SystemEntryBase Namespace Quantum Assembly Quantum.Simulation.dll System that will be instantiated on simulation start. [Serializable] public abstract class SystemsConfig.SystemEntryBase Inheritance object SystemsConfig.SystemEntryBase Derived SystemsConfig.SubSubSystemEntry SystemsConfig.SystemEntryBase<T> Fields StartDisabled Start system disabled. Set StartEnabled accordingly. The value is inversed to have a better default value in Unity inspectors. public bool StartDisabled Field Value bool SystemName Optional System name. If set, then the SystemType class needs to have a matching constructor. public string SystemName Field Value string SystemType System type name. Use typeof(SystemBase).FullName to get a valid name programmatically. E.g. Quantum.Core.SystemSignalsOnly. [SerializableType(WarnIfNoPreserveAttribute = true)] public SerializableType<SystemBase> SystemType Field Value SerializableType<SystemBase> Methods GetChildren() Returns child system list if any. public abstract IReadOnlyList<SystemsConfig.SystemEntryBase> GetChildren() Returns IReadOnlyList<SystemsConfig.SystemEntryBase> List of child systems"
  },
  "api/Quantum.SystemsConfig.html": {
    "href": "api/Quantum.SystemsConfig.html",
    "title": "Class SystemsConfig | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemsConfig Namespace Quantum Assembly Quantum.Simulation.dll A Quantum configuration asset that will create and start Quantum systems in a data-driven way when starting the simulation. Can be assigned to RuntimeConfig. If no config is assigned then a default selection of build-in systems is used (CreateSystems(RuntimeConfig, SimulationConfig, SystemsConfig). The systems to be used can always be changed by code inside AddSystemsUser(ICollection<SystemBase>, RuntimeConfig, SimulationConfig, SystemsConfig). [Serializable] public class SystemsConfig : AssetObject Inheritance object Object ScriptableObject AssetObject SystemsConfig Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields Entries System entries to be instantiated on simulation start. public List<SystemsConfig.SystemEntry> Entries Field Value List<SystemsConfig.SystemEntry> Methods AddSystem(Type, string, bool) Add a system entry that describes a system to be instantiated on simulation start. public SystemsConfig.SystemEntry AddSystem(Type systemType, string name = null, bool enabled = true) Parameters systemType Type System type name string System name enabled bool System starts enabled Returns SystemsConfig.SystemEntry System entry that was added to the config Exceptions ArgumentNullException Is raised of the systemType is null AddSystem<T>(string, bool) Add a system entry that describes a system to be instantiated on simulation start. public SystemsConfig.SystemEntry AddSystem<T>(string name = null, bool enabled = true) where T : SystemBase Parameters name string System name enabled bool System starts enabled Returns SystemsConfig.SystemEntry System entry that was added to the config Type Parameters T System type CreateSystems(SystemsConfig) Converts the systems configuration into a list of system objects while calling the matching (Name, Children) constructors. This method throws AssertionExceptions on any invalid system configuration. SystemBase __________________________________|___________________________________________________________ | | | | | | SystemGroup SystemMainThread SystemArrayComponent SystemArrayFilter SystemSignalsOnly SystemThreadedFilter children (SystemBase) | | | | SystemMainThreadGroup SystemMainThreadFilter children (SystemMainThread) public static List<SystemBase> CreateSystems(SystemsConfig config) Parameters config SystemsConfig Returns List<SystemBase>"
  },
  "api/Quantum.Tag.html": {
    "href": "api/Quantum.Tag.html",
    "title": "Class Tag | Rwby Vytal Versus Documentation",
    "keywords": "Class Tag Namespace Quantum Assembly Quantum.Simulation.dll public class Tag : AssetObject Inheritance object Object ScriptableObject AssetObject Tag Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.Task.SystemArrayComponent-1.html": {
    "href": "api/Quantum.Task.SystemArrayComponent-1.html",
    "title": "Class SystemArrayComponent<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemArrayComponent<T> Namespace Quantum.Task Assembly Quantum.Simulation.dll A multi-threaded system to parallelize updating components. Only access to the component itself and Quantum.FrameThreadSafe is safe. Array task: similar to SystemThreadedComponent<T>, but, instead of slicing the component buffer in N slices of a fixed size each, the buffer is sliced in a fixed number of slices and the size of the slice depends on the size of the buffer, which must be known in Schedule time. For more information request access to the online multi-threading documentation. public abstract class SystemArrayComponent<T> : SystemBase where T : unmanaged, IComponent Type Parameters T Component type to update. Inheritance object SystemBase SystemArrayComponent<T> Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties SlicesCount Override to specify the number of slices to use. public virtual int SlicesCount { get; } Property Value int Methods OnInit(Frame) Initializes the system and call the virtual OnInitUser(Frame) method. public override sealed void OnInit(Frame f) Parameters f Frame The referenced frame. OnInitUser(Frame) Override to initialize a custom system. protected virtual void OnInitUser(Frame f) Parameters f Frame The referenced frame. Schedule(Frame, TaskHandle) Override to schedule extra tasks. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The updated task graph. Update(FrameThreadSafe, EntityRef, T*) Override to add workload. Only access to the component itself and Quantum.FrameThreadSafe is safe. public abstract void Update(FrameThreadSafe f, EntityRef entity, T* component) Parameters f FrameThreadSafe The thread-safe referenced frame. entity EntityRef The entity that the component belongs to, only read access is safe. component T* The component to update."
  },
  "api/Quantum.Task.SystemArrayFilter-1.html": {
    "href": "api/Quantum.Task.SystemArrayFilter-1.html",
    "title": "Class SystemArrayFilter<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemArrayFilter<T> Namespace Quantum.Task Assembly Quantum.Simulation.dll A multi-threaded system to parallelize updating components. Only access to the component itself and Quantum.FrameThreadSafe is safe. Array task: similar to SystemArrayComponent<T>, but the threads will iterate over a filtered component set defined by the filter struct T. For more information request access to the online multi-threading documentation. public abstract class SystemArrayFilter<T> : SystemBase where T : unmanaged Type Parameters T Component type to update. Inheritance object SystemBase SystemArrayFilter<T> Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties Any A filter to include components from the iteration. public virtual ComponentSet Any { get; } Property Value ComponentSet SlicesCount Override to specify the number of slices to use. public virtual int SlicesCount { get; } Property Value int UseCulling Override to specify if the filter should use culling. public virtual bool UseCulling { get; } Property Value bool Without A filter to exclude components from the iteration. public virtual ComponentSet Without { get; } Property Value ComponentSet Methods OnInit(Frame) Initializes the system and call the virtual OnInitUser(Frame) method. public override sealed void OnInit(Frame f) Parameters f Frame The referenced frame. OnInitUser(Frame) Override to initialize a custom system. protected virtual void OnInitUser(Frame f) Parameters f Frame The referenced frame. Schedule(Frame, TaskHandle) Override to schedule extra tasks. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The updated task graph. Update(FrameThreadSafe, ref T) Override to add workload. Only access to the component itself and Quantum.FrameThreadSafe is safe. public abstract void Update(FrameThreadSafe f, ref T filter) Parameters f FrameThreadSafe The thread-safe referenced frame. filter T The entity filter."
  },
  "api/Quantum.Task.SystemThreadedComponent-1.html": {
    "href": "api/Quantum.Task.SystemThreadedComponent-1.html",
    "title": "Class SystemThreadedComponent<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemThreadedComponent<T> Namespace Quantum.Task Assembly Quantum.Simulation.dll A multi-threaded system to parallelize updating components. Threaded task: the threads will iterate over a component buffer with a size that is not known at Schedule time. Each thread will acquire a slice of a given (configurable) size until the end of the buffer is reached. While iterating over a slice, the thread will call the Update() method that can be implemented by the inheritor system, passing a FrameThreadSafe, the EntityRef and a T*. Only access to the component itself and Quantum.FrameThreadSafe is safe. For more information request access to the online multi-threading documentation. public abstract class SystemThreadedComponent<T> : SystemBase where T : unmanaged, IComponent Type Parameters T Inheritance object SystemBase SystemThreadedComponent<T> Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Fields DEFAULT_SLICE_SIZE The default slide size. public const int DEFAULT_SLICE_SIZE = 16 Field Value int Properties SliceSize Override to specify the number of slices to use. public virtual int SliceSize { get; } Property Value int Methods OnInit(Frame) Initializes the system and call the virtual OnInitUser(Frame) method. public override sealed void OnInit(Frame f) Parameters f Frame The referenced frame. OnInitUser(Frame) Override to initialize a custom system. protected virtual void OnInitUser(Frame f) Parameters f Frame The referenced frame. Schedule(Frame, TaskHandle) Override to schedule extra tasks. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The updated task graph. Update(FrameThreadSafe, EntityRef, T*) Override to add workload. Only access to the component itself and Quantum.FrameThreadSafe is safe. public abstract void Update(FrameThreadSafe f, EntityRef entity, T* component) Parameters f FrameThreadSafe The thread-safe referenced frame. entity EntityRef The entity that the component belongs to, only read access is safe. component T* The component to update."
  },
  "api/Quantum.Task.SystemThreadedFilter-1.html": {
    "href": "api/Quantum.Task.SystemThreadedFilter-1.html",
    "title": "Class SystemThreadedFilter<T> | Rwby Vytal Versus Documentation",
    "keywords": "Class SystemThreadedFilter<T> Namespace Quantum.Task Assembly Quantum.Simulation.dll Threaded task: similar to SystemThreadedComponent<T>, but, instead of iterating over a single component buffer, the threads will iterate over a filtered component set defined by the filter struct T, similarly to the SystemMainThreadFilter<T>. Only access to the component itself and Quantum.FrameThreadSafe is safe. For more information request access to the online multi-threading documentation. public abstract class SystemThreadedFilter<T> : SystemBase where T : unmanaged Type Parameters T Filter type. Inheritance object SystemBase SystemThreadedFilter<T> Inherited Members SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Fields DEFAULT_SLICE_SIZE The default slide size. public const int DEFAULT_SLICE_SIZE = 16 Field Value int Properties Any A filter to include components from the iteration. public virtual ComponentSet Any { get; } Property Value ComponentSet SliceSize Override to specify the number of slices to use. public virtual int SliceSize { get; } Property Value int UseCulling Override to change the if the filter should exclude culled entities. public virtual bool UseCulling { get; } Property Value bool Without A filter to exclude components from the iteration. public virtual ComponentSet Without { get; } Property Value ComponentSet Methods OnInit(Frame) Initializes the system and call the virtual OnInitUser(Frame) method. public override sealed void OnInit(Frame f) Parameters f Frame The referenced frame. OnInitUser(Frame) Override to initialize a custom system. protected virtual void OnInitUser(Frame f) Parameters f Frame The referenced frame. Schedule(Frame, TaskHandle) Override to schedule extra tasks. protected override TaskHandle Schedule(Frame f, TaskHandle taskHandle) Parameters f Frame The referenced frame. taskHandle TaskHandle The initial task handle. Returns TaskHandle The updated task graph. Update(FrameThreadSafe, ref T) Override to add workload. Only access to the component itself and Quantum.FrameThreadSafe is safe. public abstract void Update(FrameThreadSafe f, ref T filter) Parameters f FrameThreadSafe The thread-safe referenced frame. filter T The entity filter."
  },
  "api/Quantum.Task.html": {
    "href": "api/Quantum.Task.html",
    "title": "Namespace Quantum.Task | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Quantum.Task Classes SystemArrayComponent<T> A multi-threaded system to parallelize updating components. Only access to the component itself and Quantum.FrameThreadSafe is safe. Array task: similar to SystemThreadedComponent<T>, but, instead of slicing the component buffer in N slices of a fixed size each, the buffer is sliced in a fixed number of slices and the size of the slice depends on the size of the buffer, which must be known in Schedule time. For more information request access to the online multi-threading documentation. SystemArrayFilter<T> A multi-threaded system to parallelize updating components. Only access to the component itself and Quantum.FrameThreadSafe is safe. Array task: similar to SystemArrayComponent<T>, but the threads will iterate over a filtered component set defined by the filter struct T. For more information request access to the online multi-threading documentation. SystemThreadedComponent<T> A multi-threaded system to parallelize updating components. Threaded task: the threads will iterate over a component buffer with a size that is not known at Schedule time. Each thread will acquire a slice of a given (configurable) size until the end of the buffer is reached. While iterating over a slice, the thread will call the Update() method that can be implemented by the inheritor system, passing a FrameThreadSafe, the EntityRef and a T*. Only access to the component itself and Quantum.FrameThreadSafe is safe. For more information request access to the online multi-threading documentation. SystemThreadedFilter<T> Threaded task: similar to SystemThreadedComponent<T>, but, instead of iterating over a single component buffer, the threads will iterate over a filtered component set defined by the filter struct T, similarly to the SystemMainThreadFilter<T>. Only access to the component itself and Quantum.FrameThreadSafe is safe. For more information request access to the online multi-threading documentation."
  },
  "api/Quantum.TeamVersusGlobals.html": {
    "href": "api/Quantum.TeamVersusGlobals.html",
    "title": "Struct TeamVersusGlobals | Rwby Vytal Versus Documentation",
    "keywords": "Struct TeamVersusGlobals Namespace Quantum Assembly Quantum.Simulation.dll public struct TeamVersusGlobals : IComponentSingleton, IComponent Implements IComponentSingleton IComponent Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 28 Field Value int characterIntroType public CharacterIntroType characterIntroType Field Value CharacterIntroType gameTimeLimitEndFrame public int gameTimeLimitEndFrame Field Value int gameTimeLimitStartFrame public int gameTimeLimitStartFrame Field Value int playerData public QDictionaryPtr<int, TeamVersusPlayerData> playerData Field Value QDictionaryPtr<int, TeamVersusPlayerData> playersRequestingRespawn public QDictionaryPtr<PlayerRef, int> playersRequestingRespawn Field Value QDictionaryPtr<PlayerRef, int> teamScores public QDictionaryPtr<int, int> teamScores Field Value QDictionaryPtr<int, int> winningTeam public int winningTeam Field Value int Methods AddToTeamScore(Frame, int, int) public void AddToTeamScore(Frame frame, int team, int value) Parameters frame Frame team int value int ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int HasAnyTeamReachedScore(Frame, int) public int HasAnyTeamReachedScore(Frame frame, int scoreToReach) Parameters frame Frame scoreToReach int Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.TeamVersusPlayerData.html": {
    "href": "api/Quantum.TeamVersusPlayerData.html",
    "title": "Struct TeamVersusPlayerData | Rwby Vytal Versus Documentation",
    "keywords": "Struct TeamVersusPlayerData Namespace Quantum Assembly Quantum.Simulation.dll public struct TeamVersusPlayerData Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int ready public QBoolean ready Field Value QBoolean Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.TeamVersusSettings.html": {
    "href": "api/Quantum.TeamVersusSettings.html",
    "title": "Class TeamVersusSettings | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusSettings Namespace Quantum Assembly Quantum.Simulation.dll public class TeamVersusSettings : GamemodeSettingsBase Inheritance object Object ScriptableObject AssetObject GamemodeSettingsBase TeamVersusSettings Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields matchLength public FP matchLength Field Value FP pointsToWin public int pointsToWin Field Value int"
  },
  "api/Quantum.TeleportRelatedToTargetAction.TeleportTargetType.html": {
    "href": "api/Quantum.TeleportRelatedToTargetAction.TeleportTargetType.html",
    "title": "Enum TeleportRelatedToTargetAction.TeleportTargetType | Rwby Vytal Versus Documentation",
    "keywords": "Enum TeleportRelatedToTargetAction.TeleportTargetType Namespace Quantum Assembly Quantum.Simulation.dll public enum TeleportRelatedToTargetAction.TeleportTargetType Fields HardTarget = 2 LastAttackee = 1 Self = 0 SoftTarget = 3"
  },
  "api/Quantum.TeleportRelatedToTargetAction.TeleportVectorType.html": {
    "href": "api/Quantum.TeleportRelatedToTargetAction.TeleportVectorType.html",
    "title": "Enum TeleportRelatedToTargetAction.TeleportVectorType | Rwby Vytal Versus Documentation",
    "keywords": "Enum TeleportRelatedToTargetAction.TeleportVectorType Namespace Quantum Assembly Quantum.Simulation.dll public enum TeleportRelatedToTargetAction.TeleportVectorType Fields SelfToTarget = 0 TargetToSelf = 1"
  },
  "api/Quantum.TeleportRelatedToTargetAction.html": {
    "href": "api/Quantum.TeleportRelatedToTargetAction.html",
    "title": "Class TeleportRelatedToTargetAction | Rwby Vytal Versus Documentation",
    "keywords": "Class TeleportRelatedToTargetAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] [AddTypeMenu(\"Fighter/Movement/Teleport Related To Target\", 0)] public class TeleportRelatedToTargetAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction TeleportRelatedToTargetAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields endPositionOffset public FPVector3 endPositionOffset Field Value FPVector3 makeYLevelsSame public bool makeYLevelsSame Field Value bool startPositionOffset public FPVector3 startPositionOffset Field Value FPVector3 teleportBaseVector public TeleportRelatedToTargetAction.TeleportVectorType teleportBaseVector Field Value TeleportRelatedToTargetAction.TeleportVectorType teleportCamera public bool teleportCamera Field Value bool teleportLayerMask public LayerMask teleportLayerMask Field Value LayerMask teleportOrigin public TeleportRelatedToTargetAction.TeleportTargetType teleportOrigin Field Value TeleportRelatedToTargetAction.TeleportTargetType teleportTarget public TeleportRelatedToTargetAction.TeleportTargetType teleportTarget Field Value TeleportRelatedToTargetAction.TeleportTargetType teleportVectorParam public HNSFParamFPVector3 teleportVectorParam Field Value HNSFParamFPVector3 Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool TryGetPositionOfTarget(Frame, EntityRef, TeleportTargetType, out FPVector3) public bool TryGetPositionOfTarget(Frame frame, EntityRef entity, TeleportRelatedToTargetAction.TeleportTargetType targetType, out FPVector3 position) Parameters frame Frame entity EntityRef targetType TeleportRelatedToTargetAction.TeleportTargetType position FPVector3 Returns bool"
  },
  "api/Quantum.ThrowInfo.html": {
    "href": "api/Quantum.ThrowInfo.html",
    "title": "Class ThrowInfo | Rwby Vytal Versus Documentation",
    "keywords": "Class ThrowInfo Namespace Quantum Assembly Quantum.Simulation.dll public class ThrowInfo : AssetObject Inheritance object Object ScriptableObject AssetObject ThrowInfo Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields cameraShakeLength public FP cameraShakeLength Field Value FP cameraShakeStrength public int cameraShakeStrength Field Value int conditions public AssetRef<HNSFStateDecision>[] conditions Field Value AssetRef<HNSFStateDecision>[] hitstop public int hitstop Field Value int"
  },
  "api/Quantum.TrackStateAction.html": {
    "href": "api/Quantum.TrackStateAction.html",
    "title": "Class TrackStateAction | Rwby Vytal Versus Documentation",
    "keywords": "Class TrackStateAction Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class TrackStateAction : HNSFStateAction Inheritance object Object ScriptableObject AssetObject HNSFStateAction TrackStateAction Inherited Members HNSFStateAction.Label HNSFStateAction.parent HNSFStateAction.children HNSFStateAction.frameRanges HNSFStateAction.actionDisabled HNSFStateAction.decision HNSFStateAction.targetType HNSFStateAction.Copy(HNSFStateAction) HNSFStateAction.Execute(ref FrameThreadSafe, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, ref HNSFStateContext, List<Type>, List<Type>) HNSFStateAction.Execute(Frame, EntityRef, HNSFStateAgentData*, FP, ref HNSFStateContext, List<Type>, List<Type>) AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Methods ExecuteAction(Frame, EntityRef, FP, ref HNSFStateContext) public override bool ExecuteAction(Frame frame, EntityRef entity, FP rangePercent, ref HNSFStateContext stateContext) Parameters frame Frame entity EntityRef rangePercent FP stateContext HNSFStateContext Returns bool"
  },
  "api/Quantum.TrackedStates.html": {
    "href": "api/Quantum.TrackedStates.html",
    "title": "Struct TrackedStates | Rwby Vytal Versus Documentation",
    "keywords": "Struct TrackedStates Namespace Quantum Assembly Quantum.Simulation.dll public struct TrackedStates : IComponent Implements IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 4 Field Value int states public QListPtr<AssetRef<HNSFState>> states Field Value QListPtr<AssetRef<HNSFState>> Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.TrainingAIDummyBehaviourDecision.CompareType.html": {
    "href": "api/Quantum.TrainingAIDummyBehaviourDecision.CompareType.html",
    "title": "Enum TrainingAIDummyBehaviourDecision.CompareType | Rwby Vytal Versus Documentation",
    "keywords": "Enum TrainingAIDummyBehaviourDecision.CompareType Namespace Quantum Assembly Quantum.Simulation.dll public enum TrainingAIDummyBehaviourDecision.CompareType Fields Equal = 0 NotEqual = 1"
  },
  "api/Quantum.TrainingAIDummyBehaviourDecision.html": {
    "href": "api/Quantum.TrainingAIDummyBehaviourDecision.html",
    "title": "Class TrainingAIDummyBehaviourDecision | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingAIDummyBehaviourDecision Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class TrainingAIDummyBehaviourDecision : HFSMDecision Inheritance object Object ScriptableObject AssetObject HFSMDecisionBase HFSMDecision TrainingAIDummyBehaviourDecision Inherited Members HFSMDecision.Decide(FrameThreadSafe, EntityRef, ref AIContext) HFSMDecisionBase.Label AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields compareTo public DummyConfigBehaviour compareTo Field Value DummyConfigBehaviour comparison public TrainingAIDummyBehaviourDecision.CompareType comparison Field Value TrainingAIDummyBehaviourDecision.CompareType Methods Decide(Frame, EntityRef, ref AIContext) public override bool Decide(Frame frame, EntityRef entity, ref AIContext aiContext) Parameters frame Frame entity EntityRef aiContext AIContext Returns bool"
  },
  "api/Quantum.TrainingGlobals.html": {
    "href": "api/Quantum.TrainingGlobals.html",
    "title": "Struct TrainingGlobals | Rwby Vytal Versus Documentation",
    "keywords": "Struct TrainingGlobals Namespace Quantum Assembly Quantum.Simulation.dll public struct TrainingGlobals : IComponentSingleton, IComponent Implements IComponentSingleton IComponent Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int SIZE public const int SIZE = 48 Field Value int playerData public QDictionaryPtr<int, TrainingPlayerData> playerData Field Value QDictionaryPtr<int, TrainingPlayerData> playersRequestingRespawn public QDictionaryPtr<PlayerRef, int> playersRequestingRespawn Field Value QDictionaryPtr<PlayerRef, int> Properties dummies public FixedArray<EntityRef> dummies { get; } Property Value FixedArray<EntityRef> Methods ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int OnRemoved(FrameBase, EntityRef, void*) public static void OnRemoved(FrameBase frame, EntityRef entity, void* ptr) Parameters frame FrameBase entity EntityRef ptr void* Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.TrainingPlayerData.html": {
    "href": "api/Quantum.TrainingPlayerData.html",
    "title": "Struct TrainingPlayerData | Rwby Vytal Versus Documentation",
    "keywords": "Struct TrainingPlayerData Namespace Quantum Assembly Quantum.Simulation.dll public struct TrainingPlayerData Fields ALIGNMENT public const int ALIGNMENT = 4 Field Value int SIZE public const int SIZE = 4 Field Value int ready public QBoolean ready Field Value QBoolean Methods GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.TrainingSettings.html": {
    "href": "api/Quantum.TrainingSettings.html",
    "title": "Class TrainingSettings | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingSettings Namespace Quantum Assembly Quantum.Simulation.dll public class TrainingSettings : GamemodeSettingsBase Inheritance object Object ScriptableObject AssetObject GamemodeSettingsBase TrainingSettings Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields dummyBlackboard public AssetRef<AIBlackboardInitializer> dummyBlackboard Field Value AssetRef<AIBlackboardInitializer> dummyCharaDef public AssetRef<CharaDefinitionAsset> dummyCharaDef Field Value AssetRef<CharaDefinitionAsset> dummyHFSM public AssetRef<HFSMRoot> dummyHFSM Field Value AssetRef<HFSMRoot>"
  },
  "api/Quantum.UpdateGenericStateMachineSystem.Filter.html": {
    "href": "api/Quantum.UpdateGenericStateMachineSystem.Filter.html",
    "title": "Struct UpdateGenericStateMachineSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct UpdateGenericStateMachineSystem.Filter Namespace Quantum Assembly Quantum.Simulation.dll public struct UpdateGenericStateMachineSystem.Filter Fields Entity public EntityRef Entity Field Value EntityRef stateAgent public GenericStateAgent* stateAgent Field Value GenericStateAgent*"
  },
  "api/Quantum.UpdateGenericStateMachineSystem.html": {
    "href": "api/Quantum.UpdateGenericStateMachineSystem.html",
    "title": "Class UpdateGenericStateMachineSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class UpdateGenericStateMachineSystem Namespace Quantum Assembly Quantum.Simulation.dll public class UpdateGenericStateMachineSystem : SystemMainThreadFilter<UpdateGenericStateMachineSystem.Filter>, ISignalOnComponentAdded<GenericStateAgent>, ISignalOnComponentRemoved<GenericStateAgent>, ISignalOnComponentAdded<TrackedStates>, ISignalOnComponentRemoved<TrackedStates>, ISignal Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<UpdateGenericStateMachineSystem.Filter> UpdateGenericStateMachineSystem Implements ISignalOnComponentAdded<GenericStateAgent> ISignalOnComponentRemoved<GenericStateAgent> ISignalOnComponentAdded<TrackedStates> ISignalOnComponentRemoved<TrackedStates> ISignal Inherited Members SystemMainThreadFilter<UpdateGenericStateMachineSystem.Filter>.UseCulling SystemMainThreadFilter<UpdateGenericStateMachineSystem.Filter>.Without SystemMainThreadFilter<UpdateGenericStateMachineSystem.Filter>.Any SystemMainThreadFilter<UpdateGenericStateMachineSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods ChangeState(Frame, HNSFStateAgentData*, EntityRef, AIBlackboardComponent*, AIConfigBase, bool) public virtual void ChangeState(Frame frame, HNSFStateAgentData* stateData, EntityRef entity, AIBlackboardComponent* blackboard, AIConfigBase config, bool cleanup = false) Parameters frame Frame stateData HNSFStateAgentData* entity EntityRef blackboard AIBlackboardComponent* config AIConfigBase cleanup bool OnAdded(Frame, EntityRef, GenericStateAgent*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame frame, EntityRef entity, GenericStateAgent* component) Parameters frame Frame entity EntityRef The entity that the component was added to. component GenericStateAgent* The component that was added. OnAdded(Frame, EntityRef, TrackedStates*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, TrackedStates* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component TrackedStates* The component that was added. OnRemoved(Frame, EntityRef, GenericStateAgent*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame frame, EntityRef entity, GenericStateAgent* component) Parameters frame Frame entity EntityRef The entity that the component was removed from. component GenericStateAgent* The component that was removed. OnRemoved(Frame, EntityRef, TrackedStates*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, TrackedStates* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component TrackedStates* The component that was removed. Update(Frame, ref Filter) Override to add workload. public override void Update(Frame frame, ref UpdateGenericStateMachineSystem.Filter filter) Parameters frame Frame filter UpdateGenericStateMachineSystem.Filter The frame object. UpdateState(Frame, HNSFStateAgentData*, EntityRef, AIBlackboardComponent*, AIConfigBase) public virtual void UpdateState(Frame frame, HNSFStateAgentData* agentData, EntityRef entity, AIBlackboardComponent* blackboard, AIConfigBase aiConfig) Parameters frame Frame agentData HNSFStateAgentData* entity EntityRef blackboard AIBlackboardComponent* aiConfig AIConfigBase"
  },
  "api/Quantum.UpdateParentedTransformSystem.Filter.html": {
    "href": "api/Quantum.UpdateParentedTransformSystem.Filter.html",
    "title": "Struct UpdateParentedTransformSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct UpdateParentedTransformSystem.Filter Namespace Quantum Assembly Quantum.Simulation.dll public struct UpdateParentedTransformSystem.Filter Fields Entity public EntityRef Entity Field Value EntityRef Parented public Parented* Parented Field Value Parented* Transform public Transform3D* Transform Field Value Transform3D*"
  },
  "api/Quantum.UpdateParentedTransformSystem.html": {
    "href": "api/Quantum.UpdateParentedTransformSystem.html",
    "title": "Class UpdateParentedTransformSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class UpdateParentedTransformSystem Namespace Quantum Assembly Quantum.Simulation.dll public class UpdateParentedTransformSystem : SystemMainThreadFilter<UpdateParentedTransformSystem.Filter> Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<UpdateParentedTransformSystem.Filter> UpdateParentedTransformSystem Inherited Members SystemMainThreadFilter<UpdateParentedTransformSystem.Filter>.UseCulling SystemMainThreadFilter<UpdateParentedTransformSystem.Filter>.Without SystemMainThreadFilter<UpdateParentedTransformSystem.Filter>.Any SystemMainThreadFilter<UpdateParentedTransformSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame, ref Filter) Override to add workload. public override void Update(Frame f, ref UpdateParentedTransformSystem.Filter filter) Parameters f Frame The current frame. filter UpdateParentedTransformSystem.Filter The frame object."
  },
  "api/Quantum.VisualEffectEntry.html": {
    "href": "api/Quantum.VisualEffectEntry.html",
    "title": "Class VisualEffectEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class VisualEffectEntry Namespace Quantum Assembly Quantum.Simulation.dll public class VisualEffectEntry : AssetObject Inheritance object Object ScriptableObject AssetObject VisualEffectEntry Inherited Members AssetObject.Identifier AssetObject.Loaded(IResourceManager, Native.Allocator) AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings"
  },
  "api/Quantum.WillBeHitThisFrameDecorator.html": {
    "href": "api/Quantum.WillBeHitThisFrameDecorator.html",
    "title": "Class WillBeHitThisFrameDecorator | Rwby Vytal Versus Documentation",
    "keywords": "Class WillBeHitThisFrameDecorator Namespace Quantum Assembly Quantum.Simulation.dll [Serializable] public class WillBeHitThisFrameDecorator : BTDecorator Inheritance object Object ScriptableObject AssetObject BTNode BTDecorator WillBeHitThisFrameDecorator Inherited Members BTDecorator.Child BTDecorator.AbortType BTDecorator._childInstance BTDecorator.OnReset(BTParams, ref AIContext) BTDecorator.OnUpdate(BTParams, ref AIContext) BTDecorator.OnDynamicRun(BTParams, ref AIContext) BTDecorator.Loaded(IResourceManager, Native.Allocator) BTDecorator.ChildInstance BTDecorator.NodeType BTNode.Label BTNode.Id BTNode.Init(BTParams, ref AIContext) BTNode.OnEnter(BTParams, ref AIContext) BTNode.OnStartedRunning(BTParams, ref AIContext) BTNode.OnExit(BTParams, ref AIContext) BTNode.OnAbort(BTParams, ref AIContext, BTAbort) BTNode.ChildCompletedRunning(BTParams, BTStatus) BTNode.GetStatus(FrameBase, BTAgent*) BTNode.SetStatus(FrameBase, BTStatus, BTAgent*) BTNode.GetStatus(FrameThreadSafe, BTAgent*) BTNode.SetStatus(FrameThreadSafe, BTStatus, BTAgent*) BTNode.EvaluateAbortNode(BTParams) BTNode.Execute(BTParams, ref AIContext, bool) AssetObject.Identifier AssetObject.Disposed(IResourceManager, Native.Allocator) AssetObject.Create<T>() AssetObject.Create(Type) AssetObject.Create<T>(Action<T>) AssetObject.Reset() AssetObject.Guid AssetObject.Path AssetObject.Settings Fields layerMask public LayerMask layerMask Field Value LayerMask Methods CheckConditions(BTParams, ref AIContext) public override bool CheckConditions(BTParams btParams, ref AIContext aiContext) Parameters btParams BTParams aiContext AIContext Returns bool"
  },
  "api/Quantum._globals_.html": {
    "href": "api/Quantum._globals_.html",
    "title": "Struct _globals_ | Rwby Vytal Versus Documentation",
    "keywords": "Struct _globals_ Namespace Quantum Assembly Quantum.Simulation.dll public struct _globals_ Fields ALIGNMENT public const int ALIGNMENT = 8 Field Value int DeltaTime public FP DeltaTime Field Value FP FrameMetaData public FrameMetaData FrameMetaData Field Value FrameMetaData Map public AssetRef<Map> Map Field Value AssetRef<Map> NavMeshRegions public NavMeshRegionMask NavMeshRegions Field Value NavMeshRegionMask PhysicsSettings public PhysicsSceneSettings PhysicsSettings Field Value PhysicsSceneSettings PhysicsState2D public PhysicsEngineState PhysicsState2D Field Value PhysicsEngineState PhysicsState3D public PhysicsEngineState PhysicsState3D Field Value PhysicsEngineState PlayerConnectedCount public int PlayerConnectedCount Field Value int PlayerLastConnectionState public BitSet6 PlayerLastConnectionState Field Value BitSet6 RngSession public RNGSession RngSession Field Value RNGSession SIZE public const int SIZE = 2240 Field Value int Systems public BitSet1024 Systems Field Value BitSet1024 Properties input public FixedArray<Input> input { get; } Property Value FixedArray<Input> Methods AllocatePointers(FrameBase, EntityRef) public void AllocatePointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef ClearPointers(FrameBase, EntityRef) public void ClearPointers(FrameBase f, EntityRef entity) Parameters f FrameBase entity EntityRef GetHashCode() public override int GetHashCode() Returns int Serialize(void*, FrameSerializer) public static void Serialize(void* ptr, FrameSerializer serializer) Parameters ptr void* serializer FrameSerializer"
  },
  "api/Quantum.html": {
    "href": "api/Quantum.html",
    "title": "Namespace Quantum | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Quantum Classes AIAction AIConfig AIConfigExtensions AIConfigUser AIContextExtensions AIFunction AIFunction<T> AIParam<T> AnimationAutoplaySystem AnimationCurveAsset AnimationEntry AnimationEntry.AnimEntry AnimationGroupDefinitions AnimationGroupDefinitions.TagToEntryGrouping ApplyGravityAction ApplyMovementAction ApplySlopeMovementAction ApplyTractionAction ArticleDestroySelfAction AttemptHardKnockdownAction AttemptSpecialsAction AudioSourceConfig BTSelectorRandom BakedAnimationAsset BakedEntityPrototype BitStreamReplayInputProvider This implementation of Photon.Deterministic.IDeterministicStreamReplayInputProvider is used to provide delta compressed input for a Quantum simulation replay from a Photon.Deterministic.BitStream. BoolParamDecision BotSDKDebugger BotSDKUtils ButtonHeldDecision CallbackChecksumComputed Callback called when a checksum has been computed. CallbackChecksumError Callback called on a checksum error. CallbackChecksumErrorFrameDump Callback called a frame dump is received due to a checksum error. CallbackDispatcher A subscribe and publish pattern for Quantum callbacks. A Quantum callback is a invocation from inside the simulation during certain situations. CallbackEventCanceled Callback called when an event raised in a predicted frame was canceled in a verified frame due to a roll-back / missed prediction. Synchronised events are only raised on verified frames and thus will never be canceled; this is useful to graciously discard non-sync'ed events in the view. CallbackEventConfirmed Callback called when an event was confirmed by a verified frame. CallbackGameDestroyed Callback called when the game was destroyed. CallbackGameInit Callback called when the game is about to start. CallbackGameResynced Callback called when the game has been re-synchronized from a snapshot and is about to start. Will be followed by the CallbackGameStarted callback.\"/> CallbackGameStarted Is called during OnGameStart(DeterministicFrame) or OnGameResync() when the game is started after systems are initialized and the snapshot has arrived for late-joining clients. CallbackInputConfirmed Callback when input was confirmed. CallbackLocalPlayerAddConfirmed Callback when a local player was successfully added to the game. CallbackLocalPlayerAddFailed Callback when a adding a local player failed. CallbackLocalPlayerRemoveConfirmed Callback when a local player was successfully removed from the game. CallbackLocalPlayerRemoveFailed Callback when removing a local player failed. CallbackPluginDisconnect Callback called when the local client is disconnected by the plugin. CallbackPollInput Callback called when the simulation queries local input. CallbackSimulateFinished Callback called when frame simulation has completed. CallbackUpdateView Callback guaranteed to be called every rendered frame. ChangeGroundedStateAction ChangeMovesetAction CharaDefinitionAsset CharaLinkSystem CharaStateMachineSystem CharaStateUpdateAction CharacterStateUpdateLeaf ChargeLevelDecision CheckCharaCurrentStateByTagFunction CheckCharaNextStateByTagFunction ChecksumErrorFrameDumpContext Gathers additional meta data during the Quantum game callback Photon.Deterministic.IDeterministicGame.GetExtraErrorFrameDumpData(Photon.Deterministic.DeterministicFrame) in response to a checksum error. ChecksumFile A serializable object that contains recorded checksums for a Quantum session. ChecksumFileHelper Helper methods to convert between ulong and long. ClampFPFunction ClampForcesAction ClampIntFunction ClearAttackStringAction ClearChargeAction ClearComboAction ClearHitEntitiesAction ClearTrackedStatesAction CombatBoxesAsset CombatConstants CombatHelper CombatHitDetectionSystem CombatHitResolverSystem CombatantHasHitDecision CombatantHitCountDecision CombatboxBroadphaseSystem CombatboxNarrowphaseSystem CombatboxResolverSystem CommonInputConditions Constants CreateOrUpdateCollisionbox CreateOrUpdateHitbox CreateOrUpdateHurtbox CreateOrUpdateThrowbox CurrentMovesetDecision CurrentStatesetDecision CustomKCCSystem DebugMessageAction DeterministicCommandSetup A partial static class to extend by implementing the partial method AddCommandFactoriesUser(ICollection<IDeterministicCommandFactory>, RuntimeConfig, SimulationConfig). It's used to create the Quantum command factories when initializing the simulation, either Photon.Deterministic.DeterministicCommand or Photon.Deterministic.DeterministicCommandPool<T> object. Only commands added here can be invoked by the simulation. DeterministicSystemSetup Responsible for instantiating Quantum systems on simulation start. User systems can be added by adding a SystemsConfig to the RuntimeConfig. Or adding them in the user callback AddSystemsUser(ICollection<SystemBase>, RuntimeConfig, SimulationConfig, SystemsConfig). DirectDamageAction DisableHardTargetingEntityAction DisableLastInputAction DoChargeAction DotNetRunnerFactory Platform dependent information and factory methods for the SessionRunner. This implementation of the IRunnerFactory is not unused in Unity but in standalone Quantum applications and on the Quantum server plugin. DotNetSessionRunner This class implements the Photon.Deterministic.IDeterministicSessionRunner interface and contains code to glue together the Quantum server and Quantum session runner. This was formerly part of the Quantum Server SDK. DotNetTaskRunner The implementation of Photon.Deterministic.IDeterministicPlatformTaskRunner for .Net frameworks. Not used when running the simulation in Unity. EffectsHelper EmptyStateAction EnvQueryHelper EnvQueryHelperBroadphase EnvQueryInjectionSystem EnvQueryItem EnvQuerySystem EnvironmentProcessor Movement implementation for default environment. EnvironmentQueryAsset EventCauseHitstopShakeEvent EventCharaLinkAddedEvent EventCharaLinkRemovedEvent EventDispatcher Publish, subscribe pattern for Quantum events: Quantum.EventBase. Quantum events are used to communicate view relevant game updates from the simulation to the view. EventEntityHit EventFighterDied EventGameResult Does not have to implement checksum, because it's a hard-coded synced event. EventGamemodeStateChanged EventGamemodeTeamScoreChanged EventHealthDecreased EventHealthIncreased EventPlayCutsceneEvent EventPlayEffectEvent EventPlaySoundEvent EventResetEntityAfterCutsceneEvent EventStopCutsceneEvent EventStopEffectEvent EventTeleportCameraEvent ExecuteIfConditionAction ExternalBTLeaf ExternalStateAction FPConstant FPOperationFunction FPParamDecision FPVector3MagnitudeFunction FPVector3OperationFunction FPVector3ToFPFunction FPVector3TransformDirectionFunction FacingTargetDecision FallSpeedDecision FighterEnvironmentProcessor Movement implementation for default environment. FighterSpecialIntroDefinition FindEnemyAction FindEnemyLeaf FindWallAroundAction FlagsExtensions ForceUngroundAction Frame The user implementation of Quantum.Core.FrameBase that resides in the project quantum_state and has access to all user relevant classes. FrameContextUser Use this class to extend the Quantum.Core.FrameContext class. FrameThreadSafeExtensions Extension methods for the Quantum.FrameThreadSafe class. GameResult The game result class can be extended by a partial class. It is used with the EventGameResult to report the game result to the server. See the online documentation for more information. GamemodeQuantumData GamemodeSettingsBase GetAuraFunction GetCharacterForceFunction GetDummyConfigAIFunction GetFighterVariableFunction GetHitInfoFpVector3Function GetHitboxHitCountFunction GetHitstunFunction GetPositionFunction GetStateByTagFunction GetTotalHitCountFunction GetTotalHitstunFunction GetWallNormalFunction GlobalScriptToMakeSureThereAreNoCompileErrors GroundSnapProcessor This processor snaps character down after losing grounded state. HFSMCharaCurrentStateByTagDecision HFSMCharaInDangerDecision HFSMCharaNextStateByTagDecision HFSMCharaStunOverDecision HFSMDecision HFSMFaceEntityAction HFSMFindDangerSourceAction HFSMModifyInputAction HNSFANDDecision HNSFConfig HNSFConfig.KeyValuePair HNSFExternalActions HNSFNOTDecision HNSFORDecision HNSFParamAssetRef HNSFParamBool HNSFParamByte HNSFParamFP HNSFParamFPVector2 HNSFParamFPVector3 HNSFParamInt HNSFParam<T> HNSFSpecialSet HNSFSpecialSet.StateWithCondition HNSFState HNSFStateAction HNSFStateDecision HNSFStateFunction HNSFStateFunction<T> HNSFStateHelper HNSFStateHelper.Chara HNSFStateHelper.ThreadSafe HNSFStateSet HNSFTaggedStatesAsset HNSFTaggedStatesAsset.TagHNSFStateDefinition HasClashedDecision HasValidHardTargetDecision HasValidSoftTargetDecision HasValidThroweesDecision HasWallDecision HitInfo HitReactionGuardFunction IAssetSerializerLegacyExtensions InAuraBurnoutDecision InHitstunDecorator InactiveTaskRunner An implementation of Photon.Deterministic.IDeterministicPlatformTaskRunner that forces the Quantum task system to run synchronously (single-threaded). InputButtonDecision InputConditionDecision InputConditionListAsset InputDirectionDecision InputMovementMagnitudeDecision InputProvider The input provider is used to push recorded inputs into the simulation. This class uses the full input history instead of delta compressed input stream which uses a large memory footprint. InputProviderExtensions Input provider extension methods. IntComparisonAIFunction IntComparisonDecision IntOperationFunction IntParamDecision IntParamPercentageDecision IntValueDecision IsBeingThrownDecision IsDeadDecision IsMaxChargeDecision KCCContext Container that provides access to Frame, KCC component, settings, reference to its entity and custom user data. An instance is passed as argument in KCC methods and callbacks and provides an easy way to extend with custom functionality. KCCHeaderAttribute KCCMathUtility KCCOverlapHit Container for storing physics hit and metadata. Used mainly for multi-pass depenetration algorithm. KCCOverlapInfo Container for storing overlap hits and metadata. Used mainly for multi-pass depenetration algorithm. KCCPenetrationSolver KCCPhysicsUtility KCCProcessor KCCProcessorInfo Data structure which is passed in processor callbacks. Contains information about the processor registration source and a collider/entity that is referencing currently executed processor. KCCSettings Base settings for KCC. KCCShapeCastHit Container for storing shape-cast physics hit and metadata. KCCShapeCastInfo Container for storing shape-cast hits and metadata. KCCStageInfo Internal helper container for execution of processor callbacks. Do not use directly. KCCSystem KCCThreadStaticCache KCCThreadStaticCache<T> KCCTooltipAttribute KCCUtility LocalDeltaTimeSystem MapCustomData MathExtensions ModifyAnimationFrameAction ModifyAuraAction ModifyBlackboardBoolAction ModifyBlackboardFPAction ModifyBlackboardIntAction ModifyForcesAction ModifyGravityAction ModifyHitstopAction ModifyHitstunAction ModifyInertiaAction ModifyPassiveAuraGainDelayAction ModifyPhysicsForcesAction ModifySpecialPageAction ModifySpecialPageSetAction ModifyStateFrameAction MoveInAttackStringDecision MoveIsLastInAttackStringDecision MoveTowardsPhysicsForceAction MultiplyForcesAction NextStateDecision NextStatesetDecision PhysicsGroundedDecision PhysicsShapeOverlapDecision PlayEffectOnChargeLevelAction PlayRandomSoundAction PlayRandomSoundAction.SoundReferences PlaySoundAction PlaySoundRequest PlayVisualEffectAction QuantumGame QuantumGame acts as an interface to the simulation from the client code's perspective. Access and method to this class is always safe from the clients point of view. QuantumGame.CallbackBase The base class of Quantum callbacks. QuantumGame.ConfigurationsContainer Stores runtime config and simulation config for this session. QuantumGame.FramesContainer Stores the different frames the simulation uses during one tick. QuantumGameFlags This class contains values for flags that will be accessible with GameFlags. Built-in flags control some aspects of QuantumGame inner workings, without affecting the simulation outcome. QuantumInputHistoryData Input history wrapper to used to store on replay files. Default way to save is DeltaCompressed in Json with compression to reduce the (Json) file size the most. QuantumJsonFriendlyDataBlob Wrapper around storing binary data in JSON to work around the problem that Unity JSON tools only serialize byte arrays verbosely. QuantumReplayFile A class that holds all relevant data to run a Quantum replay and can serialized in JSON. A replay may contain an asset db for convenience, that should be omitted in production environments where files sizes are a concern. A replay may contain recorded checksums, that can be verified during runtime as a development feature. RandomFPFunction RegisterAttackToStringAction ReleaseThroweeAction RemapFPFunction ReplayFile Obsolete class, use QuantumReplayFile instead. RequestStateChangeAction RequestStateChangeByTagAction RequestStateChangeByTagAction.StateChangeEntry RequestStateChangeListAction RequestStateChangeListAction.StateChangeEntry RingBufferInputProvider This input provider can store a certain amount of input sets in a ring buffer. RotateTowardsAction RunEQSQueryBroadphaseLeaf RunEQSQueryLeaf RuntimeConfig In contrast to the SimulationConfig, which has only static configuration data, the RuntimeConfig holds information that can be different from game to game. RuntimePlayer SelectSoftTargetAction SessionContainer SessionRunner The SessionRunner helps to start, run and shutdown a Quantum simulation. It should never be reused for multiple simulations of multiple runs of the same game session. Always recrate the runner. It has an extensive list of starting SessionRunner.Arguments that make it start-able for a variety of use cases: Local, Multiplayer, Replay, Server etc It extracts platform dependent code into the IRunnerFactory parameter. It offers asynchronous methods to start and stop the runner but although it uses the TPL syntax for convenience it is not considered to be run in a multi-threaded environment. Use the non-async versions of the methods or use a ExclusiveScheduler for unit tests and console applications. Also never use the async methods from the Quantum server plugin, parallelization is done by the Photon-Server. This class is delivered in source code to enable developers to create custom runner code. SessionRunnerException Runner specific exceptions. SetAIConfigAction SetAnimFrameBasedOnHitstunAction SetAnimMixerFPParamAction SetAnimationAction SetAnimationMixerForMovementtion SetAnimationMixerParamAction SetArticleLookRotationAction SetCollisionHardnessAction SetCounterhitableAction SetECBAction SetECBPositionFromAnimationCurveAction SetFighterVariableAction SetHitReactionAction SetLastHitAsThroweeAction SetMovementAction SetPositionAction SetRotationAction SetTargetableAction SetVisibilityAction SimulationConfig The SimulationConfig holds parameters used in the ECS layer and inside core systems like physics and navigation. SnapToECBAction SoundEntry Soundbank SpawnArticleAction StandardDeathAction StandardHitClashAction StandardHitReactionFunction StandardHitResponseAction StartCutsceneAction StateFunctionAssetRef StateFunctionAssetRefList StateFunctionBool StateFunctionBoolList StateFunctionByteList StateFunctionEntityRef StateFunctionEntityRefList StateFunctionFP StateFunctionFPList StateFunctionFPVector2 StateFunctionFPVector2List StateFunctionFPVector3 StateFunctionFPVector3List StateFunctionInt StateFunctionIntegerList StateGroundedDecision StateTrackedDecision Statics Static type registry is completed by code generation. StepUpProcessor This processor detect steps (obstacles which block the character moving forward) and reflects blocked movement upwards. StopCutsceneAction StopVisualEffectAction StreamReplayInputProvider The stream replay input provider is used to play back input from a stream. SystemBase The Quantum system base class. Only advised for advanced uses only. SystemGroup The base class for a hierarchy of systems. SystemMainThread Most common Quantum system type. Implements a regular Update() with all the usual features. Always register new system types on the SystemsConfig. SystemMainThreadFilter<T> This type of system uses a FilterStruct of type T to filter a set of entities based on it, loop through them and calls a method. The Any and Without virtual functions can be overwritten for more advanced filtering. If more complex options are required, inherit from SystemMainThread and iterate through the filters manually. Always register new system types on the SystemsConfig. SystemMainThreadGroup A Quantum main thread system that has a system hierarchy. SystemSignalsOnly This type of system does not have an Update() function. It is meant for systems that focus solely on implementing and receiving signals from other systems. By avoiding the Update loop, it helps you save some overhead. SystemsConfig A Quantum configuration asset that will create and start Quantum systems in a data-driven way when starting the simulation. Can be assigned to RuntimeConfig. If no config is assigned then a default selection of build-in systems is used (CreateSystems(RuntimeConfig, SimulationConfig, SystemsConfig). The systems to be used can always be changed by code inside AddSystemsUser(ICollection<SystemBase>, RuntimeConfig, SimulationConfig, SystemsConfig). SystemsConfig.SubSubSystemEntry 2nd sub level system type. SystemsConfig.SubSystemEntry 1st sub level system type. SystemsConfig.SystemEntry Base system type. SystemsConfig.SystemEntryBase System that will be instantiated on simulation start. SystemsConfig.SystemEntryBase<T> To prevent indefinite recursion in Unity serialization system hierarchies are limited to 3 levels. Tag TeamVersusSettings TeleportRelatedToTargetAction ThrowInfo TrackStateAction TrainingAIDummyBehaviourDecision TrainingSettings UpdateGenericStateMachineSystem UpdateParentedTransformSystem VisualEffectEntry WillBeHitThisFrameDecorator Structs AICharacterActor AIContextUser ActionRange AnimationAutoplaySystem.Filter Aura BitSet128 BitSet2048 BitSet256 BitSet4096 BitSet512 BitSet6 BoxCombatant BoxDefinition BoxSet ButtonData CharaAnimator CharaAnimatorState CharaInputs CharaLink CharaPhysics CharaStateMachineSystem.Filter CharaStateMachines ChecksumFile.ChecksumEntry Represents one recorded checksum. ClashCombatPair CollisionCombatPair Collisionbox CombatBox CombatHitDetectionInfo CombatTargeter CombatTeam CombatboxBroadphaseSystem.Partition CombatboxNarrowphaseSystem.PairEntry CustomKCCSystem.Filter DummyConfiguration DummyRecordingSlot EntityCenter EntityForce EntityHitDefinition EnvQuery EnvQueryCached EnvQueryInjectionSystem.Filter EnvQueryItemCached EnvQuerySystem.Filter Fighter FighterArticle FighterArticles Frame.FrameEvents Frame.FrameSignals The Quantum signal API consist of core and user-defined code-generated signals. GainAuraPassively GenericGamemodeGlobals GenericStateAgent GotWallInfo HNSFConfig.Value HNSFStateAgent HNSFStateAgentData HNSFStateContext HardTargetEntityDisabled Health Hitbox HitboxCombatPair Hurtbox InAuraBurnout InCounterhitState InPunishCounterState Input InputBitmask InputCondition IsChargingAttack IsDead IsInThrow IsInvisible IsThrowing IsUntargetable KCC KCCCollision Internal data structure for tracking collisions. Do not use directly. KCCData KCCIgnore Internal data structure for tracking ignored colliders. Do not use directly. KCCModifier Internal data structure for tracking modifiers. Do not use directly. KCCProcessorLink KCCSystem.Filter LocalDeltaTime LocalDeltaTimeSystem.Filter MapCustomData.SpawnPointData NetworkButtons Parented PlayerLink Projectile QuantumGame.StartParameters SessionRunner.Arguments Arguments to start an online or offline Quantum simulation. SyncedCutsceneTimer TeamVersusGlobals TeamVersusPlayerData TrackedStates TrainingGlobals TrainingPlayerData UpdateGenericStateMachineSystem.Filter UpdateParentedTransformSystem.Filter _globals_ Interfaces IAfterMove IAfterMoveStep IBeforeMove IGameStateGroup IGameStateGroupCharacterIntro IGameStateGroupCountdown IGameStateGroupGame IGameStateGroupLobby IGameStateGroupMapIntro IGameStateGroupOutro IGameStateGroupPostgame IGameStateGroupPregame IGameStateGroupVictory IRunnerFactory The interface for the runner factory. It creates platform specific objects to run the Quantum simulation. ISignalAuraDecreased ISignalAuraIncreased ISignalDespawnFighter ISignalGamemodeStateChanged ISignalGamemodeTeamScoreChanged ISignalHealthDecreased ISignalHealthIncreased ISignalOnCollision2D Interface for receiving callbacks once per frame while two non-trigger 2D colliders are touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnCollision3D Interface for receiving callbacks once per frame while two non-trigger 3D colliders are touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnCollisionEnter2D Interface for receiving callbacks once two non-trigger 2D colliders start touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnCollisionEnter3D Interface for receiving callbacks once two non-trigger 3D colliders start touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnCollisionExit2D Interface for receiving callbacks once two non-trigger 2D colliders stop touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnCollisionExit3D Interface for receiving callbacks once two non-trigger 3D colliders stop touching. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnComponentAdded<T> The signal is called after a component of the desired type has been added to an entity. ISignalOnComponentRemoved<T> The signal is called after a component of the desired type has been removed from an entity. ISignalOnEntityPrototypeMaterialized This signal is called after an entity prototype has been materialized. During Load Map: the signal is invoked for all Entity and Entity Prototype pairs after all scene prototypes have been materialized. Created with Frame.Create(): the signal is invoked immediately after the prototype has been materialized. /// The frame reference. ISignalOnMapChanged This signal is called after the map has been changed by assigning a new map to Map. ISignalOnNavMeshMoveAgent Signal is called when the agent should move. The desired direction is influence by avoidance. The agent velocity should be set in the callback. Requires enabled Quantum.NavMeshAgentConfig.MovementType to be set to Callback. Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. ISignalOnNavMeshSearchFailed Signal is called when the agent could not find a path in the agent update after using Quantum.NavMeshPathfinder.SetTarget(Quantum.Core.FrameBase, Photon.Deterministic.FPVector3, Quantum.NavMesh) Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. ISignalOnNavMeshWaypointReached Signal is called when an agent reaches a waypoint. Requires enabled Quantum.Navigation.Config.EnableNavigationCallbacks in Navigation. ISignalOnPlayerAdded This signal is called when a player was successfully added to the simulation and the server accepted the RuntimePlayer data. ISignalOnPlayerConnected The signal is called when a player has successfully joined the simulation. It's originating from the PlayerConnectedSystem. The connected status is based on the Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef). The signal is always called from a verified frame. ISignalOnPlayerDataSet Obsolete: use ISignalOnPlayerAdded. ISignalOnPlayerDisconnected The signal is called when a player has been removed and disconnected from the simulation. It's originating from the PlayerConnectedSystem. The connected status is based on the Photon.Deterministic.DeterministicFrame.GetPlayerInputFlags(Quantum.PlayerRef). The signal is always called from a verified frame. ISignalOnPlayerRemoved This signal is called when a player was removed from the simulation after the InputFlags are set to Photon.Deterministic.DeterministicInputFlags.PlayerNotPresent. ISignalOnTrigger2D Interface for receiving callbacks once per frame while a non-trigger and a trigger 2D colliders are touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnTrigger3D Interface for receiving callbacks once per frame while a non-trigger and a trigger 3D colliders are touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnTriggerEnter2D Interface for receiving callbacks once a non-trigger and a trigger 2D colliders start touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnTriggerEnter3D Interface for receiving callbacks once a non-trigger and a trigger 3D colliders start touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnTriggerExit2D Interface for receiving callbacks once a non-trigger and a trigger 2D colliders stop touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics2D.PhysicsEngine2D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. ISignalOnTriggerExit3D Interface for receiving callbacks once a non-trigger and a trigger 3D colliders stop touching. No collision is checked between two kinematic colliders that are both trigger or both non-trigger. At least one of the entities involved in a collision must have the respective Quantum.CallbackFlags set for the callback to be called. See Quantum.Physics3D.PhysicsEngine3D.Api.SetCallbacks(Quantum.EntityRef, Quantum.CallbackFlags) for setting the callbacks flags to an entity. Enums AnimationEntry.MixerType ApplyMovementAction.InputSourceType ApplyTractionAction.ModifierType ApplyTractionAction.TractionType BoolParamDecision.CheckType ButtonDataCheckType CallbackId Quantum game callback ids. CharacterIntroType CheckCharaCurrentStateByTagFunction.StateGroupType ClampForcesAction.ForceGroupType DisableHardTargetingEntityAction.ModifyType DummyAerialRecoveryDirection DummyBlockBehaviour DummyBlockDirection DummyConfigBehaviour DummyConfigCounterhit DummyControlType DummyGroundRecovery DummyTechRollDirection DummyThrowEscape EKCCCollisionSource EKCCCollisionType Defines collision type between KCC and overlapping collider surface calculated from depenetration or a trigger. None - Default. Ground - Angle between Up and normalized depenetration vector is between 0 and KCCData.MaxGroundAngle. Slope - Angle between Up and normalized depenetration vector is between KCCData.MaxGroundAngle and (90 - KCCData.MaxWallAngle). Wall - Angle between Back and normalized depenetration vector is between -KCCData.MaxWallAngle and KCCData.MaxWallAngle. Hang - Angle between Back and normalized depenetration vector is between -30 and -KCCData.MaxWallAngle. Top - Angle between Back and normalized depenetration vector is lower than -30. Trigger - Overlapping collider - trigger. Penetration is unknown. EKCCIgnoreSource EKCCProcessorSource EnterInputMethod EnvQueryContext EnvTestPurpose FPOperationFunction.OperationType FPParamDecision.CheckType FPVector3OperationFunction.OperationType FPVector3ToFPFunction.FPVector3ValueType FallSpeedDecision.CheckType GenericGamemodeStates GetCharacterForceFunction.ForceType GetDummyConfigAIFunction.DummyEnumType GetFighterVariableFunction.FighterVariableType GetHitInfoFpVector3Function.HitInfoValueType GetPositionFunction.PositionType HFSMCharaCurrentStateByTagDecision.StateGroupType HFSMCharaStunOverDecision.StunType HFSMModifyInputAction.ModifyType HNSFConfig.EValueType HNSFParamSource HNSFStateAction.TargetType HitStrengthType InputButtonDecision.ButtonStateType InputButtons InputDirectionDecision.InputSourceType InputMovementMagnitudeDecision.CheckType IntOperationFunction.OperationType IntParamDecision.CheckType IntParamPercentageDecision.CheckType IntValueDecision.CheckType ModifyAnimationFrameAction.ModifyType ModifyAuraAction.ModifyType ModifyAuraAction.ValueType ModifyBlackboardBoolAction.ModifyType ModifyBlackboardFPAction.ModifyType ModifyBlackboardIntAction.ModifyType ModifyForcesAction.InputSourceType ModifyForcesAction.ModifyType ModifyGravityAction.ModifyType ModifyHitstopAction.ModifyType ModifyHitstunAction.ModifyType ModifyInertiaAction.ModifyType ModifyPassiveAuraGainDelayAction.ModifyType ModifyPhysicsForcesAction.InputSourceType ModifyPhysicsForcesAction.ModifyType ModifyStateFrameAction.ModifyType MoveTowardsPhysicsForceAction.InputSourceType MultiplyForcesAction.ForceGroupType PhysicsGroundedDecision.CheckType PlayerInputButtonType RotateTowardsAction.RotateTowardsType SessionRunner.SessionState The session runner has a state machine. SetArticleLookRotationAction.RotateTowardsType SetCounterhitableAction.CounterStateType SetFighterVariableAction.ChangeType SetFighterVariableAction.FighterVariableType SetMovementAction.InputSourceType SetMovementAction.ModifyType SetRotationAction.RotateTowardsType ShutdownCause ShutdownConnectionOptions The shutdown connection options define what to do with the client Photon connection during runner shutdown. SimulationConfig.AutoLoadSceneFromMapMode The scene load mode to use when changing Quantum maps. Will trigger for example for the initial map that is set in Quantum by Map and on subsequent map changes. The Unity scene referenced by Quantum.Map.Scene will be loaded. SimulationConfigChecksumErrorDumpOptions Configuration options for checksum error dumps. StandardHitReactions StateGroundedDecision.CheckType StateGroundedType TeleportRelatedToTargetAction.TeleportTargetType TeleportRelatedToTargetAction.TeleportVectorType TrainingAIDummyBehaviourDecision.CompareType Delegates DeterministicCommandSetup.EventCommandFactories QuantumJsonFriendlyDataBlob.Encoder Used to customize encoding of this class in internal API."
  },
  "api/Quantum.mfo.MovementCharacterSystem.Filter.html": {
    "href": "api/Quantum.mfo.MovementCharacterSystem.Filter.html",
    "title": "Struct MovementCharacterSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct MovementCharacterSystem.Filter Namespace Quantum.mfo Assembly Quantum.Simulation.dll public struct MovementCharacterSystem.Filter Fields CharacterPhysics public CharaPhysics* CharacterPhysics Field Value CharaPhysics* Entity public EntityRef Entity Field Value EntityRef Transform public Transform3D* Transform Field Value Transform3D* fighter public Fighter* fighter Field Value Fighter* kcc public KCC* kcc Field Value KCC* physicsColl public PhysicsCollider3D* physicsColl Field Value PhysicsCollider3D*"
  },
  "api/Quantum.mfo.MovementCharacterSystem.html": {
    "href": "api/Quantum.mfo.MovementCharacterSystem.html",
    "title": "Class MovementCharacterSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class MovementCharacterSystem Namespace Quantum.mfo Assembly Quantum.Simulation.dll public class MovementCharacterSystem : SystemMainThreadFilter<MovementCharacterSystem.Filter> Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<MovementCharacterSystem.Filter> MovementCharacterSystem Inherited Members SystemMainThreadFilter<MovementCharacterSystem.Filter>.UseCulling SystemMainThreadFilter<MovementCharacterSystem.Filter>.Without SystemMainThreadFilter<MovementCharacterSystem.Filter>.Any SystemMainThreadFilter<MovementCharacterSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame, ref Filter) Override to add workload. public override void Update(Frame f, ref MovementCharacterSystem.Filter filter) Parameters f Frame The current frame. filter MovementCharacterSystem.Filter The frame object."
  },
  "api/Quantum.mfo.MovementGenericSystem.Filter.html": {
    "href": "api/Quantum.mfo.MovementGenericSystem.Filter.html",
    "title": "Struct MovementGenericSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct MovementGenericSystem.Filter Namespace Quantum.mfo Assembly Quantum.Simulation.dll public struct MovementGenericSystem.Filter Fields Entity public EntityRef Entity Field Value EntityRef charaPhysics public CharaPhysics* charaPhysics Field Value CharaPhysics* physicsBody public PhysicsBody3D* physicsBody Field Value PhysicsBody3D*"
  },
  "api/Quantum.mfo.MovementGenericSystem.html": {
    "href": "api/Quantum.mfo.MovementGenericSystem.html",
    "title": "Class MovementGenericSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class MovementGenericSystem Namespace Quantum.mfo Assembly Quantum.Simulation.dll public class MovementGenericSystem : SystemMainThreadFilter<MovementGenericSystem.Filter> Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<MovementGenericSystem.Filter> MovementGenericSystem Inherited Members SystemMainThreadFilter<MovementGenericSystem.Filter>.UseCulling SystemMainThreadFilter<MovementGenericSystem.Filter>.Without SystemMainThreadFilter<MovementGenericSystem.Filter>.Any SystemMainThreadFilter<MovementGenericSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame, ref Filter) Override to add workload. public override void Update(Frame f, ref MovementGenericSystem.Filter filter) Parameters f Frame The current frame. filter MovementGenericSystem.Filter The frame object."
  },
  "api/Quantum.mfo.Systems.StructSizeCheckSystem.html": {
    "href": "api/Quantum.mfo.Systems.StructSizeCheckSystem.html",
    "title": "Class StructSizeCheckSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class StructSizeCheckSystem Namespace Quantum.mfo.Systems Assembly Quantum.Simulation.dll public class StructSizeCheckSystem : SystemMainThread Inheritance object SystemBase SystemMainThread StructSizeCheckSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnInit(Frame) Is called when the system is initialized. public override void OnInit(Frame f) Parameters f Frame The referenced frame. Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/Quantum.mfo.Systems.UpdateCharacterInputSystem.Filter.html": {
    "href": "api/Quantum.mfo.Systems.UpdateCharacterInputSystem.Filter.html",
    "title": "Struct UpdateCharacterInputSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct UpdateCharacterInputSystem.Filter Namespace Quantum.mfo.Systems Assembly Quantum.Simulation.dll public struct UpdateCharacterInputSystem.Filter Fields Entity public EntityRef Entity Field Value EntityRef PlayerLink public PlayerLink* PlayerLink Field Value PlayerLink* charaInputs public CharaInputs* charaInputs Field Value CharaInputs*"
  },
  "api/Quantum.mfo.Systems.UpdateCharacterInputSystem.html": {
    "href": "api/Quantum.mfo.Systems.UpdateCharacterInputSystem.html",
    "title": "Class UpdateCharacterInputSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class UpdateCharacterInputSystem Namespace Quantum.mfo.Systems Assembly Quantum.Simulation.dll [Preserve] public class UpdateCharacterInputSystem : SystemMainThreadFilter<UpdateCharacterInputSystem.Filter>, ISignalOnComponentAdded<CharaInputs>, ISignalOnComponentRemoved<CharaInputs>, ISignal Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<UpdateCharacterInputSystem.Filter> UpdateCharacterInputSystem Implements ISignalOnComponentAdded<CharaInputs> ISignalOnComponentRemoved<CharaInputs> ISignal Inherited Members SystemMainThreadFilter<UpdateCharacterInputSystem.Filter>.UseCulling SystemMainThreadFilter<UpdateCharacterInputSystem.Filter>.Without SystemMainThreadFilter<UpdateCharacterInputSystem.Filter>.Any SystemMainThreadFilter<UpdateCharacterInputSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, CharaInputs*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, CharaInputs* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component CharaInputs* The component that was added. OnRemoved(Frame, EntityRef, CharaInputs*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, CharaInputs* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component CharaInputs* The component that was removed. Update(Frame, ref Filter) Override to add workload. public override void Update(Frame frame, ref UpdateCharacterInputSystem.Filter filter) Parameters frame Frame filter UpdateCharacterInputSystem.Filter The frame object. UpdatePlayerInput(Frame, ref EntityRef, ref CharaInputs*, ref Input) public static void UpdatePlayerInput(Frame frame, ref EntityRef entity, ref CharaInputs* charaInputs, ref Input input) Parameters frame Frame entity EntityRef charaInputs CharaInputs* input Input"
  },
  "api/Quantum.mfo.Systems.UpdateCombatTargetSystem.Filter.html": {
    "href": "api/Quantum.mfo.Systems.UpdateCombatTargetSystem.Filter.html",
    "title": "Struct UpdateCombatTargetSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct UpdateCombatTargetSystem.Filter Namespace Quantum.mfo.Systems Assembly Quantum.Simulation.dll public struct UpdateCombatTargetSystem.Filter Fields CombatTargeter public CombatTargeter* CombatTargeter Field Value CombatTargeter* CombatTeam public CombatTeam* CombatTeam Field Value CombatTeam* Entity public EntityRef Entity Field Value EntityRef Transform public Transform3D* Transform Field Value Transform3D* charaInputs public CharaInputs* charaInputs Field Value CharaInputs*"
  },
  "api/Quantum.mfo.Systems.UpdateCombatTargetSystem.html": {
    "href": "api/Quantum.mfo.Systems.UpdateCombatTargetSystem.html",
    "title": "Class UpdateCombatTargetSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class UpdateCombatTargetSystem Namespace Quantum.mfo.Systems Assembly Quantum.Simulation.dll public class UpdateCombatTargetSystem : SystemMainThread Inheritance object SystemBase SystemMainThread UpdateCombatTargetSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/Quantum.mfo.Systems.html": {
    "href": "api/Quantum.mfo.Systems.html",
    "title": "Namespace Quantum.mfo.Systems | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Quantum.mfo.Systems Classes StructSizeCheckSystem UpdateCharacterInputSystem UpdateCombatTargetSystem Structs UpdateCharacterInputSystem.Filter UpdateCombatTargetSystem.Filter"
  },
  "api/Quantum.mfo.html": {
    "href": "api/Quantum.mfo.html",
    "title": "Namespace Quantum.mfo | Rwby Vytal Versus Documentation",
    "keywords": "Namespace Quantum.mfo Classes MovementCharacterSystem MovementGenericSystem Structs MovementCharacterSystem.Filter MovementGenericSystem.Filter"
  },
  "api/rwby.ActorCutscenePlayer.CutsceneEvent.html": {
    "href": "api/rwby.ActorCutscenePlayer.CutsceneEvent.html",
    "title": "Delegate ActorCutscenePlayer.CutsceneEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate ActorCutscenePlayer.CutsceneEvent Namespace rwby Assembly rwby.dll public delegate void ActorCutscenePlayer.CutsceneEvent()"
  },
  "api/rwby.ActorCutscenePlayer.html": {
    "href": "api/rwby.ActorCutscenePlayer.html",
    "title": "Class ActorCutscenePlayer | Rwby Vytal Versus Documentation",
    "keywords": "Class ActorCutscenePlayer Namespace rwby Assembly rwby.dll public class ActorCutscenePlayer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ActorCutscenePlayer Fields OnCutsceneReachedEnding public ActorCutscenePlayer.CutsceneEvent OnCutsceneReachedEnding Field Value ActorCutscenePlayer.CutsceneEvent cutsceneBinder public CutsceneBinder cutsceneBinder Field Value CutsceneBinder cutsceneBindingsGetters public List<GameObject> cutsceneBindingsGetters Field Value List<GameObject> director public PlayableDirector director Field Value PlayableDirector objectsDisabledOnCutsceneEnd public GameObject[] objectsDisabledOnCutsceneEnd Field Value GameObject[] tag public AssetRef<Tag> tag Field Value AssetRef<Tag> virtualCameras public CinemachineVirtualCameraBase[] virtualCameras Field Value CinemachineVirtualCameraBase[] Methods AssignVirtualCameraLayer(OutputChannels) public void AssignVirtualCameraLayer(OutputChannels cameraOutputChannels) Parameters cameraOutputChannels OutputChannels GetCutsceneLength() public double GetCutsceneLength() Returns double PlayCutscene(QuantumGame, CutsceneBindingSource) public void PlayCutscene(QuantumGame qGame, CutsceneBindingSource bindingSource) Parameters qGame QuantumGame bindingSource CutsceneBindingSource StopCutscene() public void StopCutscene()"
  },
  "api/rwby.AddressablesCommandListDefinition.html": {
    "href": "api/rwby.AddressablesCommandListDefinition.html",
    "title": "Class AddressablesCommandListDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesCommandListDefinition Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Command List Definition\")] public class AddressablesCommandListDefinition : BaseCommandListDefinition Inheritance object Object ScriptableObject IContentDefinition BaseCommandListDefinition AddressablesCommandListDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() Methods GetMovesets() public override BaseCommandListMovesetDefinition[] GetMovesets() Returns BaseCommandListMovesetDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> Unload() public override void Unload() UnloadAssets() public override void UnloadAssets()"
  },
  "api/rwby.AddressablesCommandListEntry.html": {
    "href": "api/rwby.AddressablesCommandListEntry.html",
    "title": "Class AddressablesCommandListEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesCommandListEntry Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Command List Entry\")] public class AddressablesCommandListEntry : BaseCommandListEntry Inheritance object Object ScriptableObject IContentDefinition BaseCommandListEntry AddressablesCommandListEntry Inherited Members BaseCommandListEntry.commandName BaseCommandListEntry.command BaseCommandListEntry.requiresLockon BaseCommandListEntry.description BaseCommandListEntry.subtext BaseCommandListEntry.meterRequirement BaseCommandListEntry.BuildCommandVisualText() IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.Unload() Fields children public BaseCommandListEntry[] children Field Value BaseCommandListEntry[] Properties ChildCommands public override BaseCommandListEntry[] ChildCommands { get; } Property Value BaseCommandListEntry[] Methods GetImage() public override Sprite GetImage() Returns Sprite GetVideo() public override VideoClip GetVideo() Returns VideoClip LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> UnloadAssets() public override void UnloadAssets()"
  },
  "api/rwby.AddressablesHudElementDefinition.html": {
    "href": "api/rwby.AddressablesHudElementDefinition.html",
    "title": "Class AddressablesHudElementDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesHudElementDefinition Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Hud Element Definition\")] public class AddressablesHudElementDefinition : BaseHudElementDefinition Inheritance object Object ScriptableObject IContentDefinition BaseHudElementDefinition AddressablesHudElementDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetElementContainer() public override HudElementContainer GetElementContainer() Returns HudElementContainer LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> Unload() public override void Unload() UnloadAssets() public override void UnloadAssets()"
  },
  "api/rwby.AddressablesHudElementDefinitionContainer.html": {
    "href": "api/rwby.AddressablesHudElementDefinitionContainer.html",
    "title": "Class AddressablesHudElementDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesHudElementDefinitionContainer Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Hud Element Definitions Container\", fileName = \"hudelementdefinitioncontainer\")] public class AddressablesHudElementDefinitionContainer : BaseHudElementDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<BaseHudElementDefinition> BaseHudElementDefinitionContainer AddressablesHudElementDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetDefinitions() public override BaseHudElementDefinition[] GetDefinitions() Returns BaseHudElementDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadDefinitions() public override UniTask<bool> LoadDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadDefinitions() public override void UnloadDefinitions()"
  },
  "api/rwby.AddressablesSongDefinition.html": {
    "href": "api/rwby.AddressablesSongDefinition.html",
    "title": "Class AddressablesSongDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesSongDefinition Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Song Definition\")] public class AddressablesSongDefinition : BaseSongDefinition Inheritance object Object ScriptableObject IContentDefinition BaseSongDefinition AddressablesSongDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetSong() public override SongAudio GetSong() Returns SongAudio LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> Unload() public override void Unload() UnloadAssets() public override void UnloadAssets()"
  },
  "api/rwby.AddressablesSongDefinitionContainer.html": {
    "href": "api/rwby.AddressablesSongDefinitionContainer.html",
    "title": "Class AddressablesSongDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class AddressablesSongDefinitionContainer Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Addressables/Content/Song Definitions Container\", fileName = \"songdefinitioncontainer\")] public class AddressablesSongDefinitionContainer : BaseSongDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<BaseSongDefinition> BaseSongDefinitionContainer AddressablesSongDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetDefinitions() public override BaseSongDefinition[] GetDefinitions() Returns BaseSongDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadDefinitions() public override UniTask<bool> LoadDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadDefinitions() public override void UnloadDefinitions()"
  },
  "api/rwby.AudioListenerManager.html": {
    "href": "api/rwby.AudioListenerManager.html",
    "title": "Class AudioListenerManager | Rwby Vytal Versus Documentation",
    "keywords": "Class AudioListenerManager Namespace rwby Assembly rwby.dll public class AudioListenerManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AudioListenerManager Fields lastSetPriority public int lastSetPriority Field Value int Properties AudioListener public Transform AudioListener { get; } Property Value Transform Methods AttemptSetPosition(Vector3, int) public void AttemptSetPosition(Vector3 position, int priority = 0) Parameters position Vector3 priority int AttemptSetRotation(Quaternion, int) public void AttemptSetRotation(Quaternion rotation, int priority = 0) Parameters rotation Quaternion priority int AttemptSetRotation(Vector3, int) public void AttemptSetRotation(Vector3 rotation, int priority = 0) Parameters rotation Vector3 priority int"
  },
  "api/rwby.AuraBurnoutSystem.Filter.html": {
    "href": "api/rwby.AuraBurnoutSystem.Filter.html",
    "title": "Struct AuraBurnoutSystem.Filter | Rwby Vytal Versus Documentation",
    "keywords": "Struct AuraBurnoutSystem.Filter Namespace rwby Assembly Quantum.Simulation.dll public struct AuraBurnoutSystem.Filter Fields CharaStateMachines public CharaStateMachines* CharaStateMachines Field Value CharaStateMachines* Entity public EntityRef Entity Field Value EntityRef InAuraBurnout public InAuraBurnout* InAuraBurnout Field Value InAuraBurnout* aura public Aura* aura Field Value Aura*"
  },
  "api/rwby.AuraBurnoutSystem.html": {
    "href": "api/rwby.AuraBurnoutSystem.html",
    "title": "Class AuraBurnoutSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class AuraBurnoutSystem Namespace rwby Assembly Quantum.Simulation.dll [Preserve] public class AuraBurnoutSystem : SystemMainThreadFilter<AuraBurnoutSystem.Filter>, ISignalAuraIncreased, ISignalAuraDecreased, ISignal Inheritance object SystemBase SystemMainThread SystemMainThreadFilter<AuraBurnoutSystem.Filter> AuraBurnoutSystem Implements ISignalAuraIncreased ISignalAuraDecreased ISignal Inherited Members SystemMainThreadFilter<AuraBurnoutSystem.Filter>.UseCulling SystemMainThreadFilter<AuraBurnoutSystem.Filter>.Without SystemMainThreadFilter<AuraBurnoutSystem.Filter>.Any SystemMainThreadFilter<AuraBurnoutSystem.Filter>.Update(Frame) SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods AuraDecreased(Frame, EntityRef, int, int) public void AuraDecreased(Frame f, EntityRef entity, int oldAura, int newAura) Parameters f Frame entity EntityRef oldAura int newAura int AuraIncreased(Frame, EntityRef, int, int) public void AuraIncreased(Frame f, EntityRef entity, int oldAura, int newAura) Parameters f Frame entity EntityRef oldAura int newAura int Update(Frame, ref Filter) Override to add workload. public override void Update(Frame f, ref AuraBurnoutSystem.Filter filter) Parameters f Frame The current frame. filter AuraBurnoutSystem.Filter The frame object."
  },
  "api/rwby.BaseCommandListDefinition.html": {
    "href": "api/rwby.BaseCommandListDefinition.html",
    "title": "Class BaseCommandListDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseCommandListDefinition Namespace rwby Assembly rwby.dll public abstract class BaseCommandListDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseCommandListDefinition Derived AddressablesCommandListDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetMovesets() public abstract BaseCommandListMovesetDefinition[] GetMovesets() Returns BaseCommandListMovesetDefinition[]"
  },
  "api/rwby.BaseCommandListEntry.html": {
    "href": "api/rwby.BaseCommandListEntry.html",
    "title": "Class BaseCommandListEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseCommandListEntry Namespace rwby Assembly rwby.dll public abstract class BaseCommandListEntry : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseCommandListEntry Derived AddressablesCommandListEntry Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Fields command public string command Field Value string commandName public string commandName Field Value string description [TextArea] public string description Field Value string meterRequirement public string meterRequirement Field Value string requiresLockon public bool requiresLockon Field Value bool subtext public string subtext Field Value string Properties ChildCommands public virtual BaseCommandListEntry[] ChildCommands { get; } Property Value BaseCommandListEntry[] Methods BuildCommandVisualText() public virtual string BuildCommandVisualText() Returns string GetImage() public abstract Sprite GetImage() Returns Sprite GetVideo() public abstract VideoClip GetVideo() Returns VideoClip"
  },
  "api/rwby.BaseCommandListEntryGrouping.html": {
    "href": "api/rwby.BaseCommandListEntryGrouping.html",
    "title": "Class BaseCommandListEntryGrouping | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseCommandListEntryGrouping Namespace rwby Assembly rwby.dll [Serializable] public class BaseCommandListEntryGrouping Inheritance object BaseCommandListEntryGrouping Fields entries public BaseCommandListEntry[] entries Field Value BaseCommandListEntry[] label public string label Field Value string"
  },
  "api/rwby.BaseCommandListMovesetDefinition.html": {
    "href": "api/rwby.BaseCommandListMovesetDefinition.html",
    "title": "Class BaseCommandListMovesetDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseCommandListMovesetDefinition Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Content/Command List Moveset\")] public class BaseCommandListMovesetDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseCommandListMovesetDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Fields EntryGroups public BaseCommandListEntryGrouping[] EntryGroups Field Value BaseCommandListEntryGrouping[] label public string label Field Value string"
  },
  "api/rwby.BaseSongDefinition.html": {
    "href": "api/rwby.BaseSongDefinition.html",
    "title": "Class BaseSongDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseSongDefinition Namespace rwby Assembly rwby.dll public abstract class BaseSongDefinition : IContentDefinition Inheritance object Object ScriptableObject IContentDefinition BaseSongDefinition Derived AddressablesSongDefinition UModSongDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload() Methods GetSong() public abstract SongAudio GetSong() Returns SongAudio"
  },
  "api/rwby.BaseSongDefinitionContainer.html": {
    "href": "api/rwby.BaseSongDefinitionContainer.html",
    "title": "Class BaseSongDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class BaseSongDefinitionContainer Namespace rwby Assembly rwby.dll public abstract class BaseSongDefinitionContainer : BaseContentDefinitionContainer<BaseSongDefinition> Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<BaseSongDefinition> BaseSongDefinitionContainer Derived AddressablesSongDefinitionContainer UModSongDefinitionContainer Inherited Members BaseContentDefinitionContainer<BaseSongDefinition>.LoadDefinitions() BaseContentDefinitionContainer<BaseSongDefinition>.GetDefinitions() BaseContentDefinitionContainer<BaseSongDefinition>.UnloadDefinitions() IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() IContentDefinition.Unload()"
  },
  "api/rwby.Bootloader.html": {
    "href": "api/rwby.Bootloader.html",
    "title": "Class Bootloader | Rwby Vytal Versus Documentation",
    "keywords": "Class Bootloader Namespace rwby Assembly rwby.dll public class Bootloader : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Bootloader"
  },
  "api/rwby.ClientManager.ClientManagerEvent.html": {
    "href": "api/rwby.ClientManager.ClientManagerEvent.html",
    "title": "Delegate ClientManager.ClientManagerEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate ClientManager.ClientManagerEvent Namespace rwby Assembly rwby.dll public delegate void ClientManager.ClientManagerEvent(ClientManager clientManager) Parameters clientManager ClientManager"
  },
  "api/rwby.ClientManager.ClientManagerPlayerCountEvent.html": {
    "href": "api/rwby.ClientManager.ClientManagerPlayerCountEvent.html",
    "title": "Delegate ClientManager.ClientManagerPlayerCountEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate ClientManager.ClientManagerPlayerCountEvent Namespace rwby Assembly rwby.dll public delegate void ClientManager.ClientManagerPlayerCountEvent(ClientManager clientManager, int oldValue, int currentValue) Parameters clientManager ClientManager oldValue int currentValue int"
  },
  "api/rwby.ClientManager.html": {
    "href": "api/rwby.ClientManager.html",
    "title": "Class ClientManager | Rwby Vytal Versus Documentation",
    "keywords": "Class ClientManager Namespace rwby Assembly rwby.dll public class ClientManager : NetworkBehaviour Inheritance object Object Component Behaviour MonoBehaviour NetworkBehaviour ClientManager Fields OnPlayerCountChangedEvent public ClientManager.ClientManagerPlayerCountEvent OnPlayerCountChangedEvent Field Value ClientManager.ClientManagerPlayerCountEvent Username public string Username Field Value string clientManagers public static List<ClientManager> clientManagers Field Value List<ClientManager> clientModGUID public Guid clientModGUID Field Value Guid clientState public LobbyClientState clientState Field Value LobbyClientState currentMatchCode public string currentMatchCode Field Value string local public static ClientManager local Field Value ClientManager ping public int ping Field Value int playerCount public int playerCount Field Value int Methods CmdSetModGUID(Guid) public void CmdSetModGUID(Guid guid) Parameters guid Guid CmdSetPing(int) public void CmdSetPing(int newPing) Parameters newPing int CmdSetPlayerCount(int) public void CmdSetPlayerCount(int count) Parameters count int CmnRequestModListFromClient(NetworkIdentity) public void CmnRequestModListFromClient(NetworkIdentity requestedClient) Parameters requestedClient NetworkIdentity CmnSendModListToTarget(NetworkIdentity, Guid[]) public void CmnSendModListToTarget(NetworkIdentity requesterClient, Guid[] modList) Parameters requesterClient NetworkIdentity modList Guid[] OnStartAuthority() Like Start(), but only called for objects the client has authority over. public override void OnStartAuthority() OnStartClient() Like Start(), but only called on client and host. public override void OnStartClient() OnStartServer() Like Start(), but only called on server and host. public override void OnStartServer() OnStopClient() Stop event, only called on client and host. public override void OnStopClient() TargetReceiveModListFromTarget(Guid[]) public void TargetReceiveModListFromTarget(Guid[] modList) Parameters modList Guid[] TargetRequestModList(NetworkConnectionToClient, NetworkIdentity) public void TargetRequestModList(NetworkConnectionToClient target, NetworkIdentity requesterClient) Parameters target NetworkConnectionToClient requesterClient NetworkIdentity"
  },
  "api/rwby.CreateLobbyScreen.html": {
    "href": "api/rwby.CreateLobbyScreen.html",
    "title": "Class CreateLobbyScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class CreateLobbyScreen Namespace rwby Assembly rwby.dll public class CreateLobbyScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase CreateLobbyScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields lobbyMaxPlayerField public TMP_InputField lobbyMaxPlayerField Field Value TMP_InputField lobbyNameField public TMP_InputField lobbyNameField Field Value TMP_InputField lobbyPasswordField public TMP_InputField lobbyPasswordField Field Value TMP_InputField modStrictnessDropdown public TMP_Dropdown modStrictnessDropdown Field Value TMP_Dropdown Methods BUTTON_CreateLobby() public void BUTTON_CreateLobby() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool TryCreateLobby() public UniTask<bool> TryCreateLobby() Returns UniTask<bool>"
  },
  "api/rwby.CustomEntityView.EntityAction.html": {
    "href": "api/rwby.CustomEntityView.EntityAction.html",
    "title": "Delegate CustomEntityView.EntityAction | Rwby Vytal Versus Documentation",
    "keywords": "Delegate CustomEntityView.EntityAction Namespace rwby Assembly rwby.dll public delegate void CustomEntityView.EntityAction(CustomEntityView ev) Parameters ev CustomEntityView"
  },
  "api/rwby.CustomEntityView.html": {
    "href": "api/rwby.CustomEntityView.html",
    "title": "Class CustomEntityView | Rwby Vytal Versus Documentation",
    "keywords": "Class CustomEntityView Namespace rwby Assembly rwby.dll public class CustomEntityView : QuantumEntityView Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumEntityView CustomEntityView Inherited Members QuantumEntityView.AssetGuid QuantumEntityView.EntityRef QuantumEntityView.BindBehaviour QuantumEntityView.ManualDisposal QuantumEntityView.ManualDiposal QuantumEntityView.ViewFlags QuantumEntityView.InterpolationMode QuantumEntityView.GameObjectNameIsEntityRef QuantumEntityView.ErrorCorrectionRateMin QuantumEntityView.ErrorCorrectionRateMax QuantumEntityView.ErrorPositionBlendStart QuantumEntityView.ErrorPositionBlendEnd QuantumEntityView.ErrorRotationBlendStart QuantumEntityView.ErrorRotationBlendEnd QuantumEntityView.ErrorPositionMinCorrection QuantumEntityView.ErrorPositionTeleportDistance QuantumEntityView.ErrorRotationTeleportDistance QuantumEntityView.OnEntityInstantiated QuantumEntityView.OnEntityDestroyed QuantumEntityView.ViewComponents QuantumEntityView.EntityViewUpdater QuantumEntityView.Game QuantumEntityView.ViewContexts QuantumEntityView.SetViewFlag(QuantumEntityViewFlags, bool) QuantumEntityView.HasViewFlag(QuantumEntityViewFlags) QuantumEntityView.Transform QuantumEntityView.OnInitialize() QuantumEntityView.OnDeactivate() QuantumEntityView.OnUpdateView() QuantumEntityView.OnLateUpdateView() QuantumEntityView.OnGameChanged() QuantumEntityView.TryGetTransform3DData(QuantumEntityViewTimeReference, ref QuantumEntityView.UpdatePositionParameter, out int, out Transform3D, bool) QuantumEntityView.UpdateFromTransform3D(QuantumGame, bool, bool, bool) QuantumEntityView.TryGetTransform2DData(QuantumEntityViewTimeReference, ref QuantumEntityView.UpdatePositionParameter, out int, out Transform2D, out Transform2DVertical, out bool, bool) QuantumEntityView.UpdateFromTransform2D(QuantumGame, bool, bool, bool) QuantumEntityView.ApplyTransform(ref QuantumEntityView.UpdatePositionParameter) Fields OnInstantiateEvent public static CustomEntityView.EntityAction OnInstantiateEvent Field Value CustomEntityView.EntityAction Methods OnActivate(Frame) A callback to override to add custom logic the activation of this entity view. public override void OnActivate(Frame frame) Parameters frame Frame Frame"
  },
  "api/rwby.CustomEntityViewUpdater.html": {
    "href": "api/rwby.CustomEntityViewUpdater.html",
    "title": "Class CustomEntityViewUpdater | Rwby Vytal Versus Documentation",
    "keywords": "Class CustomEntityViewUpdater Namespace rwby Assembly rwby.dll public class CustomEntityViewUpdater : QuantumEntityViewUpdater Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumEntityViewUpdater CustomEntityViewUpdater Inherited Members QuantumEntityViewUpdater.ViewParentTransform QuantumEntityViewUpdater.AutoFindMapData QuantumEntityViewUpdater.SnapshotInterpolation QuantumEntityViewUpdater.MapData QuantumEntityViewUpdater.ActiveEntities QuantumEntityViewUpdater.RemoveEntities QuantumEntityViewUpdater.ActiveViews QuantumEntityViewUpdater.Teleport QuantumEntityViewUpdater.ObservedGame QuantumEntityViewUpdater.Pool QuantumEntityViewUpdater.Context QuantumEntityViewUpdater.GetPrefab(EntityRef) QuantumEntityViewUpdater.GetView(EntityRef) QuantumEntityViewUpdater.SetTeleportOnce() QuantumEntityViewUpdater.TeleportAllEntities() QuantumEntityViewUpdater.SetCurrentGame(QuantumGame) QuantumEntityViewUpdater.AddViewComponent(IQuantumViewComponent) QuantumEntityViewUpdater.RemoveViewComponent(IQuantumViewComponent) QuantumEntityViewUpdater.DestroyEntityView(QuantumGame, QuantumEntityView) QuantumEntityViewUpdater.CreateEntityViewInstance(EntityView, Vector3?, Quaternion?) QuantumEntityViewUpdater.DestroyEntityViewInstance(QuantumEntityView) QuantumEntityViewUpdater.ActivateMapEntityInstance(QuantumEntityView, Vector3?, Quaternion?) QuantumEntityViewUpdater.DisableMapEntityInstance(QuantumEntityView) QuantumEntityViewUpdater.LoadMissingPrefab(EntityView) Fields instance public static CustomEntityViewUpdater instance Field Value CustomEntityViewUpdater Methods Awake() Unity Awake() callback, register callbacks and load view contexts. public override void Awake()"
  },
  "api/rwby.CutsceneBinder.CinemachineTrackBindingDefinition.html": {
    "href": "api/rwby.CutsceneBinder.CinemachineTrackBindingDefinition.html",
    "title": "Class CutsceneBinder.CinemachineTrackBindingDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class CutsceneBinder.CinemachineTrackBindingDefinition Namespace rwby Assembly rwby.dll [Serializable] public class CutsceneBinder.CinemachineTrackBindingDefinition Inheritance object CutsceneBinder.CinemachineTrackBindingDefinition Fields trackBindings public List<AssetRef<Tag>> trackBindings Field Value List<AssetRef<Tag>>"
  },
  "api/rwby.CutsceneBinder.html": {
    "href": "api/rwby.CutsceneBinder.html",
    "title": "Class CutsceneBinder | Rwby Vytal Versus Documentation",
    "keywords": "Class CutsceneBinder Namespace rwby Assembly rwby.dll public class CutsceneBinder : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CutsceneBinder Fields bindingList public List<AssetRef<Tag>> bindingList Field Value List<AssetRef<Tag>> cinemachineTrackBindings public List<CutsceneBinder.CinemachineTrackBindingDefinition> cinemachineTrackBindings Field Value List<CutsceneBinder.CinemachineTrackBindingDefinition> director public PlayableDirector director Field Value PlayableDirector Methods Bind(QuantumGame, CutsceneBindingSource) public void Bind(QuantumGame qGame, CutsceneBindingSource bindingSource) Parameters qGame QuantumGame bindingSource CutsceneBindingSource"
  },
  "api/rwby.CutsceneBindingSource.html": {
    "href": "api/rwby.CutsceneBindingSource.html",
    "title": "Class CutsceneBindingSource | Rwby Vytal Versus Documentation",
    "keywords": "Class CutsceneBindingSource Namespace rwby Assembly rwby.dll [Serializable] public class CutsceneBindingSource Inheritance object CutsceneBindingSource Derived TVSCutsceneBindingSource Fields mappings public Dictionary<AssetRef<Tag>, Object> mappings Field Value Dictionary<AssetRef<Tag>, Object> parent public CutsceneBindingSource parent Field Value CutsceneBindingSource Methods GetMapping(AssetRef<Tag>) public virtual Object GetMapping(AssetRef<Tag> tag) Parameters tag AssetRef<Tag> Returns Object TryGetMapping(AssetRef<Tag>, List<CutsceneBindingSourceCondition>, out Object) public virtual bool TryGetMapping(AssetRef<Tag> tag, List<CutsceneBindingSourceCondition> conditions, out Object output) Parameters tag AssetRef<Tag> conditions List<CutsceneBindingSourceCondition> output Object Returns bool TryGetMapping(AssetRef<Tag>, out Object) public virtual bool TryGetMapping(AssetRef<Tag> tag, out Object output) Parameters tag AssetRef<Tag> output Object Returns bool"
  },
  "api/rwby.CutsceneBindingSourceCondition.html": {
    "href": "api/rwby.CutsceneBindingSourceCondition.html",
    "title": "Class CutsceneBindingSourceCondition | Rwby Vytal Versus Documentation",
    "keywords": "Class CutsceneBindingSourceCondition Namespace rwby Assembly rwby.dll public class CutsceneBindingSourceCondition Inheritance object CutsceneBindingSourceCondition Methods Decide(Object) public virtual bool Decide(Object wantedBinding) Parameters wantedBinding Object Returns bool"
  },
  "api/rwby.CutsceneGrouping.html": {
    "href": "api/rwby.CutsceneGrouping.html",
    "title": "Class CutsceneGrouping | Rwby Vytal Versus Documentation",
    "keywords": "Class CutsceneGrouping Namespace rwby Assembly rwby.dll public class CutsceneGrouping : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CutsceneGrouping Fields bindingSource public CutsceneBindingSource bindingSource Field Value CutsceneBindingSource cutscenePlayers public Dictionary<AssetRef<Tag>, ActorCutscenePlayer> cutscenePlayers Field Value Dictionary<AssetRef<Tag>, ActorCutscenePlayer> Methods StopAll() public void StopAll()"
  },
  "api/rwby.Debugging.CommandAttribute.html": {
    "href": "api/rwby.Debugging.CommandAttribute.html",
    "title": "Class CommandAttribute | Rwby Vytal Versus Documentation",
    "keywords": "Class CommandAttribute Namespace rwby.Debugging Assembly rwby.dll [AttributeUsage(AttributeTargets.Method)] public class CommandAttribute : Attribute Inheritance object Attribute CommandAttribute Constructors CommandAttribute(string, string) public CommandAttribute(string id, string description) Parameters id string description string Fields commandDescrition public string commandDescrition Field Value string commandId public string commandId Field Value string"
  },
  "api/rwby.Debugging.ConsoleInput.html": {
    "href": "api/rwby.Debugging.ConsoleInput.html",
    "title": "Class ConsoleInput | Rwby Vytal Versus Documentation",
    "keywords": "Class ConsoleInput Namespace rwby.Debugging Assembly rwby.dll [Serializable] public class ConsoleInput Inheritance object ConsoleInput Constructors ConsoleInput(string[]) public ConsoleInput(string[] input) Parameters input string[] Fields input public string[] input Field Value string[] Methods ToString() public override string ToString() Returns string"
  },
  "api/rwby.Debugging.ConsoleInputProcessor.html": {
    "href": "api/rwby.Debugging.ConsoleInputProcessor.html",
    "title": "Class ConsoleInputProcessor | Rwby Vytal Versus Documentation",
    "keywords": "Class ConsoleInputProcessor Namespace rwby.Debugging Assembly rwby.dll public class ConsoleInputProcessor : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ConsoleInputProcessor Fields consoleWindow public ConsoleWindow consoleWindow Field Value ConsoleWindow Methods Process(List<ConsoleInput>) public virtual Task Process(List<ConsoleInput> inputs) Parameters inputs List<ConsoleInput> Returns Task Process(ConsoleInput) public virtual Task Process(ConsoleInput input) Parameters input ConsoleInput Returns Task"
  },
  "api/rwby.Debugging.ConsoleMessageType.html": {
    "href": "api/rwby.Debugging.ConsoleMessageType.html",
    "title": "Enum ConsoleMessageType | Rwby Vytal Versus Documentation",
    "keywords": "Enum ConsoleMessageType Namespace rwby.Debugging Assembly rwby.dll public enum ConsoleMessageType Fields Debug = 0 Error = 1 Print = 3 Warning = 2"
  },
  "api/rwby.Debugging.ConsoleReader.html": {
    "href": "api/rwby.Debugging.ConsoleReader.html",
    "title": "Class ConsoleReader | Rwby Vytal Versus Documentation",
    "keywords": "Class ConsoleReader Namespace rwby.Debugging Assembly rwby.dll public class ConsoleReader : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ConsoleReader Methods Convert(string) public Task Convert(string input) Parameters input string Returns Task ReadCommandLine() public Task ReadCommandLine() Returns Task SplitInputLine(string) public static ConsoleInput SplitInputLine(string inputLine) Parameters inputLine string Returns ConsoleInput"
  },
  "api/rwby.Debugging.ConsoleWindow.html": {
    "href": "api/rwby.Debugging.ConsoleWindow.html",
    "title": "Class ConsoleWindow | Rwby Vytal Versus Documentation",
    "keywords": "Class ConsoleWindow Namespace rwby.Debugging Assembly rwby.dll public class ConsoleWindow : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ConsoleWindow Fields canvasGO public GameObject canvasGO Field Value GameObject current public static ConsoleWindow current Field Value ConsoleWindow Methods Awake() public void Awake() Write(string) public void Write(string text) Parameters text string WriteLine(string, ConsoleMessageType) public void WriteLine(string text, ConsoleMessageType msgType = ConsoleMessageType.Debug) Parameters text string msgType ConsoleMessageType"
  },
  "api/rwby.Debugging.ExtConsoleCommands.html": {
    "href": "api/rwby.Debugging.ExtConsoleCommands.html",
    "title": "Class ExtConsoleCommands | Rwby Vytal Versus Documentation",
    "keywords": "Class ExtConsoleCommands Namespace rwby.Debugging Assembly rwby.dll public class ExtConsoleCommands Inheritance object ExtConsoleCommands Methods EnableVSync(int) [ConsoleMethod(\"vsync\", \"Turn vsync on or off\", new string[] { })] public static void EnableVSync(int vSyncCount) Parameters vSyncCount int PrintGameVersion() [ConsoleMethod(\"version\", \"Prints the game version\", new string[] { })] public static void PrintGameVersion() PrintUnityVersion() [ConsoleMethod(\"unity-version\", \"Prints the unity version\", new string[] { })] public static void PrintUnityVersion() QuitApplication() [ConsoleMethod(\"quit\", \"Closes the application\", new string[] { })] public static void QuitApplication() Say(string) [ConsoleMethod(\"say\", \"Say the text given\", new string[] { })] public static void Say(string msg) Parameters msg string SetTargetFramerate(int) [ConsoleMethod(\"targetframerate\", \"Sets the targeted framerate\", new string[] { })] public static void SetTargetFramerate(int framerate) Parameters framerate int"
  },
  "api/rwby.Debugging.ICParser.html": {
    "href": "api/rwby.Debugging.ICParser.html",
    "title": "Interface ICParser | Rwby Vytal Versus Documentation",
    "keywords": "Interface ICParser Namespace rwby.Debugging Assembly rwby.dll public interface ICParser Properties Priority int Priority { get; } Property Value int Methods CanParse(Type) bool CanParse(Type type) Parameters type Type Returns bool Parse(string, Type, Func<string, Type, object>) object Parse(string value, Type type, Func<string, Type, object> recursiveParser) Parameters value string type Type recursiveParser Func<string, Type, object> Returns object"
  },
  "api/rwby.Debugging.MonoTargetType.html": {
    "href": "api/rwby.Debugging.MonoTargetType.html",
    "title": "Enum MonoTargetType | Rwby Vytal Versus Documentation",
    "keywords": "Enum MonoTargetType Namespace rwby.Debugging Assembly rwby.dll public enum MonoTargetType Fields All = 0 Single = 1"
  },
  "api/rwby.Debugging.PrimitiveParser.html": {
    "href": "api/rwby.Debugging.PrimitiveParser.html",
    "title": "Class PrimitiveParser | Rwby Vytal Versus Documentation",
    "keywords": "Class PrimitiveParser Namespace rwby.Debugging Assembly rwby.dll public class PrimitiveParser : ICParser Inheritance object PrimitiveParser Implements ICParser Properties Priority public int Priority { get; } Property Value int Methods CanParse(Type) public bool CanParse(Type type) Parameters type Type Returns bool Parse(string, Type, Func<string, Type, object>) public object Parse(string value, Type type, Func<string, Type, object> recursiveParser) Parameters value string type Type recursiveParser Func<string, Type, object> Returns object"
  },
  "api/rwby.Debugging.StringArrayParser.html": {
    "href": "api/rwby.Debugging.StringArrayParser.html",
    "title": "Class StringArrayParser | Rwby Vytal Versus Documentation",
    "keywords": "Class StringArrayParser Namespace rwby.Debugging Assembly rwby.dll public class StringArrayParser : ICParser Inheritance object StringArrayParser Implements ICParser Properties Priority public int Priority { get; } Property Value int Methods CanParse(Type) public bool CanParse(Type type) Parameters type Type Returns bool Parse(string, Type, Func<string, Type, object>) public object Parse(string value, Type type, Func<string, Type, object> recursiveParser) Parameters value string type Type recursiveParser Func<string, Type, object> Returns object"
  },
  "api/rwby.Debugging.html": {
    "href": "api/rwby.Debugging.html",
    "title": "Namespace rwby.Debugging | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.Debugging Classes CommandAttribute ConsoleInput ConsoleInputProcessor ConsoleReader ConsoleWindow ExtConsoleCommands PrimitiveParser StringArrayParser Interfaces ICParser Enums ConsoleMessageType MonoTargetType"
  },
  "api/rwby.DummyCamera.html": {
    "href": "api/rwby.DummyCamera.html",
    "title": "Class DummyCamera | Rwby Vytal Versus Documentation",
    "keywords": "Class DummyCamera Namespace rwby Assembly rwby.dll public class DummyCamera : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DummyCamera Fields brain public CinemachineBrain brain Field Value CinemachineBrain cam public Camera cam Field Value Camera Methods UpdateCameraSettings() public void UpdateCameraSettings()"
  },
  "api/rwby.EntityAnimationUpdater.html": {
    "href": "api/rwby.EntityAnimationUpdater.html",
    "title": "Class EntityAnimationUpdater | Rwby Vytal Versus Documentation",
    "keywords": "Class EntityAnimationUpdater Namespace rwby Assembly rwby.dll public class EntityAnimationUpdater : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour EntityAnimationUpdater Fields animancer public AnimancerComponent animancer Field Value AnimancerComponent animationGroupAsset public AnimationGroupDefinitions animationGroupAsset Field Value AnimationGroupDefinitions customEntityView public CustomEntityView customEntityView Field Value CustomEntityView disabled public bool disabled Field Value bool lMixers public Dictionary<AssetRef<AnimationEntry>, MixerState<float>> lMixers Field Value Dictionary<AssetRef<AnimationEntry>, MixerState<float>> mixers public Dictionary<AssetRef<AnimationEntry>, MixerState<Vector2>> mixers Field Value Dictionary<AssetRef<AnimationEntry>, MixerState<Vector2>> modelRoot public GameObject modelRoot Field Value GameObject wantedFadeDuration public float wantedFadeDuration Field Value float Methods Reset() public void Reset()"
  },
  "api/rwby.ExternalModAssetSoftReference.html": {
    "href": "api/rwby.ExternalModAssetSoftReference.html",
    "title": "Class ExternalModAssetSoftReference | Rwby Vytal Versus Documentation",
    "keywords": "Class ExternalModAssetSoftReference Namespace rwby Assembly rwby.dll [CreateAssetMenu(menuName = \"rwby/Mod Asset Soft Reference\")] public class ExternalModAssetSoftReference : ScriptableObject Inheritance object Object ScriptableObject ExternalModAssetSoftReference Fields reference public ModAssetSoftReference reference Field Value ModAssetSoftReference"
  },
  "api/rwby.ExternalOptionDefinition.html": {
    "href": "api/rwby.ExternalOptionDefinition.html",
    "title": "Struct ExternalOptionDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Struct ExternalOptionDefinition Namespace rwby Assembly rwby.dll [Serializable] public struct ExternalOptionDefinition Constructors ExternalOptionDefinition(string, string, Sprite) public ExternalOptionDefinition(string name, string description, Sprite image) Parameters name string description string image Sprite Fields description public string description Field Value string image public Sprite image Field Value Sprite name public string name Field Value string"
  },
  "api/rwby.FindLobbyScreen.html": {
    "href": "api/rwby.FindLobbyScreen.html",
    "title": "Class FindLobbyScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class FindLobbyScreen Namespace rwby Assembly rwby.dll public class FindLobbyScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase FindLobbyScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields lobbyListItemPrefab public GameObject lobbyListItemPrefab Field Value GameObject lobbyListScrollView public ScrollRect lobbyListScrollView Field Value ScrollRect Methods BUTTON_RefreshLobbies() public void BUTTON_RefreshLobbies() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.ForceRenderRate.html": {
    "href": "api/rwby.ForceRenderRate.html",
    "title": "Class ForceRenderRate | Rwby Vytal Versus Documentation",
    "keywords": "Class ForceRenderRate Namespace rwby Assembly rwby.dll public class ForceRenderRate : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ForceRenderRate Fields Rate public float Rate Field Value float Methods Activate(int) public void Activate(int cap) Parameters cap int Deactivate() public void Deactivate()"
  },
  "api/rwby.GameConstants.html": {
    "href": "api/rwby.GameConstants.html",
    "title": "Class GameConstants | Rwby Vytal Versus Documentation",
    "keywords": "Class GameConstants Namespace rwby Assembly rwby.dll [CreateAssetMenu(fileName = \"Game Constants\", menuName = \"rwby/Game Constants\")] public class GameConstants : ScriptableObject Inheritance object Object ScriptableObject GameConstants Fields dummyCamera public DummyCamera dummyCamera Field Value DummyCamera localPlayerCamCamLayers public OutputChannels[] localPlayerCamCamLayers Field Value OutputChannels[] localPlayerVirtualCamLayers public OutputChannels[] localPlayerVirtualCamLayers Field Value OutputChannels[] matchSessionHandler public NetworkMatchSessionHandler matchSessionHandler Field Value NetworkMatchSessionHandler messageHandler [FormerlySerializedAs(\"lobbySessionHandler\")] public NetworkLobbySessionHandler messageHandler Field Value NetworkLobbySessionHandler mirrorNetworkManager public MirrorNetworkManager mirrorNetworkManager Field Value MirrorNetworkManager mouseMenuLabelDropdownElement [Header(\"UI - Mouse\")] public MenuLabelDropdownElement mouseMenuLabelDropdownElement Field Value MenuLabelDropdownElement mouseMenuLabelFloatSliderElement public MenuLabelFloatSliderElement mouseMenuLabelFloatSliderElement Field Value MenuLabelFloatSliderElement mouseMenuLabelOptionElement public MenuLabelOptionElement mouseMenuLabelOptionElement Field Value MenuLabelOptionElement mouseMenuLabelToggleElement public MenuLabelToggleElement mouseMenuLabelToggleElement Field Value MenuLabelToggleElement offlineMatchSessionHandler public OfflineMatchSessionHandler offlineMatchSessionHandler Field Value OfflineMatchSessionHandler pipelineAsset [Header(\"Rendering\")] public UniversalRenderPipelineAsset pipelineAsset Field Value UniversalRenderPipelineAsset tag_CinemachineBrain [Header(\"Tags\")] public Tag tag_CinemachineBrain Field Value Tag tag_CutscenePlayingEntity public Tag tag_CutscenePlayingEntity Field Value Tag tag_CutscenePlayingEntityModel public Tag tag_CutscenePlayingEntityModel Field Value Tag tag_CutscenePlayingEntityModelRoot public Tag tag_CutscenePlayingEntityModelRoot Field Value Tag tag_Cutscene_GameManager public Tag tag_Cutscene_GameManager Field Value Tag tag_Cutscene_MatchHandler public Tag tag_Cutscene_MatchHandler Field Value Tag tag_VirtualCam public Tag tag_VirtualCam Field Value Tag targetCam public TargetCameraManager targetCam Field Value TargetCameraManager teamVersusModeSoftReference public ExternalModAssetSoftReference teamVersusModeSoftReference Field Value ExternalModAssetSoftReference trainingModeSoftReference [Header(\"Mod References\")] public ExternalModAssetSoftReference trainingModeSoftReference Field Value ExternalModAssetSoftReference"
  },
  "api/rwby.GameManager.html": {
    "href": "api/rwby.GameManager.html",
    "title": "Class GameManager | Rwby Vytal Versus Documentation",
    "keywords": "Class GameManager Namespace rwby Assembly rwby.dll public class GameManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour GameManager Fields audioListenerManager public AudioListenerManager audioListenerManager Field Value AudioListenerManager consoleWindow public ConsoleWindow consoleWindow Field Value ConsoleWindow constants public GameConstants constants Field Value GameConstants contentManager public ModContentManager contentManager Field Value ModContentManager devicePickerUtility public DevicePickerUtility devicePickerUtility Field Value DevicePickerUtility eosLobby public EOSLobby eosLobby Field Value EOSLobby eosSdk public EOSSDKComponent eosSdk Field Value EOSSDKComponent forceRenderRate public ForceRenderRate forceRenderRate Field Value ForceRenderRate glyphDatabase public ControllerGlyphDatabase glyphDatabase Field Value ControllerGlyphDatabase inputManager public InputManager inputManager Field Value InputManager instance public static GameManager instance Field Value GameManager loadingScreenManager [FormerlySerializedAs(\"LoadingScreenManager\")] public LoadingScreenManager loadingScreenManager Field Value LoadingScreenManager modManager public ModManager modManager Field Value ModManager musicManager public MusicManager musicManager Field Value MusicManager networkManager public NetworkManager networkManager Field Value NetworkManager profilesManager public ProfilesManager profilesManager Field Value ProfilesManager saveManager public SaveManager saveManager Field Value SaveManager settingsManager public SettingsManager settingsManager Field Value SettingsManager splitScreenManager public SplitScreenManager splitScreenManager Field Value SplitScreenManager Methods Initialize() public UniTask Initialize() Returns UniTask"
  },
  "api/rwby.GlobalCutsceneManager.html": {
    "href": "api/rwby.GlobalCutsceneManager.html",
    "title": "Class GlobalCutsceneManager | Rwby Vytal Versus Documentation",
    "keywords": "Class GlobalCutsceneManager Namespace rwby Assembly rwby.dll [Serializable] public class GlobalCutsceneManager Inheritance object GlobalCutsceneManager Fields cutsceneGroupingPool public Dictionary<AssetRef<CharaDefinitionAsset>, List<CutsceneGrouping>> cutsceneGroupingPool Field Value Dictionary<AssetRef<CharaDefinitionAsset>, List<CutsceneGrouping>> entityToCutscenePlayers public Dictionary<EntityRef, CutsceneGrouping> entityToCutscenePlayers Field Value Dictionary<EntityRef, CutsceneGrouping> globalBindingSource public CutsceneBindingSource globalBindingSource Field Value CutsceneBindingSource matchHandler public MatchHandlerBase matchHandler Field Value MatchHandlerBase viewUpdater public QuantumEntityViewUpdater viewUpdater Field Value QuantumEntityViewUpdater Methods Breakdown() public void Breakdown() Initialize(MatchHandlerBase, CutsceneBindingSource) public void Initialize(MatchHandlerBase mHandler, CutsceneBindingSource bindingSource = null) Parameters mHandler MatchHandlerBase bindingSource CutsceneBindingSource UpdateMapBindings() public void UpdateMapBindings()"
  },
  "api/rwby.HudElementContainer.html": {
    "href": "api/rwby.HudElementContainer.html",
    "title": "Class HudElementContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class HudElementContainer Namespace rwby Assembly rwby.dll public class HudElementContainer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour HudElementContainer Methods GetElementInstance(Transform) public GameObject GetElementInstance(Transform parent) Parameters parent Transform Returns GameObject"
  },
  "api/rwby.IClosableMenu.html": {
    "href": "api/rwby.IClosableMenu.html",
    "title": "Interface IClosableMenu | Rwby Vytal Versus Documentation",
    "keywords": "Interface IClosableMenu Namespace rwby Assembly rwby.dll public interface IClosableMenu Methods TryClose() bool TryClose() Returns bool"
  },
  "api/rwby.ICutsceneBinding.html": {
    "href": "api/rwby.ICutsceneBinding.html",
    "title": "Interface ICutsceneBinding | Rwby Vytal Versus Documentation",
    "keywords": "Interface ICutsceneBinding Namespace rwby Assembly rwby.dll public interface ICutsceneBinding Methods Bind(QuantumGame, CutsceneBindingSource) void Bind(QuantumGame qGame, CutsceneBindingSource bindingSource) Parameters qGame QuantumGame bindingSource CutsceneBindingSource"
  },
  "api/rwby.IFighterDefinitionUser.html": {
    "href": "api/rwby.IFighterDefinitionUser.html",
    "title": "Interface IFighterDefinitionUser | Rwby Vytal Versus Documentation",
    "keywords": "Interface IFighterDefinitionUser Namespace rwby Assembly rwby.dll public interface IFighterDefinitionUser Properties FighterDef IFighterDefinition FighterDef { get; set; } Property Value IFighterDefinition"
  },
  "api/rwby.IHUDElement.html": {
    "href": "api/rwby.IHUDElement.html",
    "title": "Interface IHUDElement | Rwby Vytal Versus Documentation",
    "keywords": "Interface IHUDElement Namespace rwby Assembly rwby.dll public interface IHUDElement Properties RootCanvas Canvas RootCanvas { get; set; } Property Value Canvas Methods Initialize(int, int) void Initialize(int localPlayerID, int networkPlayerID) Parameters localPlayerID int networkPlayerID int Teardown() void Teardown()"
  },
  "api/rwby.ILocalEntityHolder.html": {
    "href": "api/rwby.ILocalEntityHolder.html",
    "title": "Interface ILocalEntityHolder | Rwby Vytal Versus Documentation",
    "keywords": "Interface ILocalEntityHolder Namespace rwby Assembly rwby.dll public interface ILocalEntityHolder Properties LocalPlayerEntitys Dictionary<int, QuantumEntityView> LocalPlayerEntitys { get; } Property Value Dictionary<int, QuantumEntityView>"
  },
  "api/rwby.InputActions.IPlayerActions.html": {
    "href": "api/rwby.InputActions.IPlayerActions.html",
    "title": "Interface InputActions.IPlayerActions | Rwby Vytal Versus Documentation",
    "keywords": "Interface InputActions.IPlayerActions Namespace rwby Assembly rwby.dll public interface InputActions.IPlayerActions Methods OnAbilities(CallbackContext) void OnAbilities(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnAbility1(CallbackContext) void OnAbility1(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnAbility2(CallbackContext) void OnAbility2(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnAbility3(CallbackContext) void OnAbility3(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnAbility4(CallbackContext) void OnAbility4(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnBlock(CallbackContext) void OnBlock(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnCamera(CallbackContext) void OnCamera(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnDash(CallbackContext) void OnDash(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnExtra1(CallbackContext) void OnExtra1(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnExtra2(CallbackContext) void OnExtra2(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnExtra3(CallbackContext) void OnExtra3(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnExtra4(CallbackContext) void OnExtra4(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnHeavy(CallbackContext) void OnHeavy(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnJump(CallbackContext) void OnJump(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnLight(CallbackContext) void OnLight(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnLockon(CallbackContext) void OnLockon(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnMove(CallbackContext) void OnMove(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPause(CallbackContext) void OnPause(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnResetCamera(CallbackContext) void OnResetCamera(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnTaunt(CallbackContext) void OnTaunt(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnUnique(CallbackContext) void OnUnique(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/rwby.InputActions.IUIActions.html": {
    "href": "api/rwby.InputActions.IUIActions.html",
    "title": "Interface InputActions.IUIActions | Rwby Vytal Versus Documentation",
    "keywords": "Interface InputActions.IUIActions Namespace rwby Assembly rwby.dll public interface InputActions.IUIActions Methods OnAlternative(CallbackContext) void OnAlternative(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnCancel(CallbackContext) void OnCancel(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnClick(CallbackContext) void OnClick(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnMiddleClick(CallbackContext) void OnMiddleClick(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnNavigate(CallbackContext) void OnNavigate(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPageLeft(CallbackContext) void OnPageLeft(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPageRight(CallbackContext) void OnPageRight(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPause(CallbackContext) void OnPause(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPoint(CallbackContext) void OnPoint(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnScrollWheel(CallbackContext) void OnScrollWheel(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnSubmit(CallbackContext) void OnSubmit(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/rwby.InputActions.PlayerActions.html": {
    "href": "api/rwby.InputActions.PlayerActions.html",
    "title": "Struct InputActions.PlayerActions | Rwby Vytal Versus Documentation",
    "keywords": "Struct InputActions.PlayerActions Namespace rwby Assembly rwby.dll public struct InputActions.PlayerActions Constructors PlayerActions(InputActions) public PlayerActions(InputActions wrapper) Parameters wrapper InputActions Properties Abilities public InputAction Abilities { get; } Property Value InputAction Ability1 public InputAction Ability1 { get; } Property Value InputAction Ability2 public InputAction Ability2 { get; } Property Value InputAction Ability3 public InputAction Ability3 { get; } Property Value InputAction Ability4 public InputAction Ability4 { get; } Property Value InputAction Block public InputAction Block { get; } Property Value InputAction Camera public InputAction Camera { get; } Property Value InputAction Dash public InputAction Dash { get; } Property Value InputAction Extra1 public InputAction Extra1 { get; } Property Value InputAction Extra2 public InputAction Extra2 { get; } Property Value InputAction Extra3 public InputAction Extra3 { get; } Property Value InputAction Extra4 public InputAction Extra4 { get; } Property Value InputAction Heavy public InputAction Heavy { get; } Property Value InputAction Jump public InputAction Jump { get; } Property Value InputAction Light public InputAction Light { get; } Property Value InputAction Lockon public InputAction Lockon { get; } Property Value InputAction Move public InputAction Move { get; } Property Value InputAction Pause public InputAction Pause { get; } Property Value InputAction ResetCamera public InputAction ResetCamera { get; } Property Value InputAction Taunt public InputAction Taunt { get; } Property Value InputAction Unique public InputAction Unique { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IPlayerActions) public void AddCallbacks(InputActions.IPlayerActions instance) Parameters instance InputActions.IPlayerActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IPlayerActions) public void RemoveCallbacks(InputActions.IPlayerActions instance) Parameters instance InputActions.IPlayerActions SetCallbacks(IPlayerActions) public void SetCallbacks(InputActions.IPlayerActions instance) Parameters instance InputActions.IPlayerActions Operators implicit operator InputActionMap(PlayerActions) public static implicit operator InputActionMap(InputActions.PlayerActions set) Parameters set InputActions.PlayerActions Returns InputActionMap"
  },
  "api/rwby.InputActions.UIActions.html": {
    "href": "api/rwby.InputActions.UIActions.html",
    "title": "Struct InputActions.UIActions | Rwby Vytal Versus Documentation",
    "keywords": "Struct InputActions.UIActions Namespace rwby Assembly rwby.dll public struct InputActions.UIActions Constructors UIActions(InputActions) public UIActions(InputActions wrapper) Parameters wrapper InputActions Properties Alternative public InputAction Alternative { get; } Property Value InputAction Cancel public InputAction Cancel { get; } Property Value InputAction Click public InputAction Click { get; } Property Value InputAction MiddleClick public InputAction MiddleClick { get; } Property Value InputAction Navigate public InputAction Navigate { get; } Property Value InputAction PageLeft public InputAction PageLeft { get; } Property Value InputAction PageRight public InputAction PageRight { get; } Property Value InputAction Pause public InputAction Pause { get; } Property Value InputAction Point public InputAction Point { get; } Property Value InputAction ScrollWheel public InputAction ScrollWheel { get; } Property Value InputAction Submit public InputAction Submit { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods AddCallbacks(IUIActions) public void AddCallbacks(InputActions.IUIActions instance) Parameters instance InputActions.IUIActions Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap RemoveCallbacks(IUIActions) public void RemoveCallbacks(InputActions.IUIActions instance) Parameters instance InputActions.IUIActions SetCallbacks(IUIActions) public void SetCallbacks(InputActions.IUIActions instance) Parameters instance InputActions.IUIActions Operators implicit operator InputActionMap(UIActions) public static implicit operator InputActionMap(InputActions.UIActions set) Parameters set InputActions.UIActions Returns InputActionMap"
  },
  "api/rwby.InputActions.html": {
    "href": "api/rwby.InputActions.html",
    "title": "Class InputActions | Rwby Vytal Versus Documentation",
    "keywords": "Class InputActions Namespace rwby Assembly rwby.dll public class InputActions Inheritance object InputActions Constructors InputActions() public InputActions() Properties GamepadScheme public InputControlScheme GamepadScheme { get; } Property Value InputControlScheme KeyboardMouseScheme public InputControlScheme KeyboardMouseScheme { get; } Property Value InputControlScheme Player public InputActions.PlayerActions Player { get; } Property Value InputActions.PlayerActions UI public InputActions.UIActions UI { get; } Property Value InputActions.UIActions asset public InputActionAsset asset { get; } Property Value InputActionAsset bindingMask public InputBinding? bindingMask { get; set; } Property Value InputBinding? bindings public IEnumerable<InputBinding> bindings { get; } Property Value IEnumerable<InputBinding> controlSchemes public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value ReadOnlyArray<InputControlScheme> devices public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value ReadOnlyArray<InputDevice>? Methods Contains(InputAction) public bool Contains(InputAction action) Parameters action InputAction Returns bool Disable() public void Disable() Dispose() public void Dispose() Enable() public void Enable() ~InputActions() protected ~InputActions() FindAction(string, bool) public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters actionNameOrId string throwIfNotFound bool Returns InputAction FindBinding(InputBinding, out InputAction) public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters bindingMask InputBinding action InputAction Returns int GetEnumerator() public IEnumerator<InputAction> GetEnumerator() Returns IEnumerator<InputAction>"
  },
  "api/rwby.InputManager.ControlSchemeType.html": {
    "href": "api/rwby.InputManager.ControlSchemeType.html",
    "title": "Enum InputManager.ControlSchemeType | Rwby Vytal Versus Documentation",
    "keywords": "Enum InputManager.ControlSchemeType Namespace rwby Assembly rwby.dll public enum InputManager.ControlSchemeType Fields GAMEPAD = 1 KEYBOARD_MOUSE = 0"
  },
  "api/rwby.InputManager.html": {
    "href": "api/rwby.InputManager.html",
    "title": "Class InputManager | Rwby Vytal Versus Documentation",
    "keywords": "Class InputManager Namespace rwby Assembly rwby.dll public class InputManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InputManager Fields inputUserIndex public Dictionary<InputUser, int> inputUserIndex Field Value Dictionary<InputUser, int> playerInputManagers public List<InputPlayerManager> playerInputManagers Field Value List<InputPlayerManager> Methods AddPlayer() public void AddPlayer() AssignDevicesToPlayer(InputDevice[], int) public void AssignDevicesToPlayer(InputDevice[] devices, int player) Parameters devices InputDevice[] player int GetPlayer(int) public InputPlayerManager GetPlayer(int playerId) Parameters playerId int Returns InputPlayerManager GetPlayerCount() public int GetPlayerCount() Returns int GetSystemPlayer() public InputPlayerManager GetSystemPlayer() Returns InputPlayerManager Initialize() public void Initialize() InitializeSystemPlayer() public void InitializeSystemPlayer() RemoveDeviceFromPlayers(InputDevice) public void RemoveDeviceFromPlayers(InputDevice device) Parameters device InputDevice RemovePlayer(int) public void RemovePlayer(int player) Parameters player int ReturnAllDevicesToSystem() public void ReturnAllDevicesToSystem() ReturnPlayerDevicesToSystem(int) public void ReturnPlayerDevicesToSystem(int player) Parameters player int SetGlobalUIControllingPlayer(int) public void SetGlobalUIControllingPlayer(int playerId) Parameters playerId int SetPlayerCount(int) public void SetPlayerCount(int count) Parameters count int SwitchAllToPlayerActionMap() public void SwitchAllToPlayerActionMap() SwitchAllToUIActionMap() public void SwitchAllToUIActionMap() SwitchToPlayerActionMap(int) public void SwitchToPlayerActionMap(int playerId = 0) Parameters playerId int SwitchToUIActionMap(int) public void SwitchToUIActionMap(int playerId = 0) Parameters playerId int TransferAllDevicesFromSystemTo(int) public void TransferAllDevicesFromSystemTo(int player) Parameters player int onInputDeviceChange(InputDevice, InputDeviceChange) public void onInputDeviceChange(InputDevice device, InputDeviceChange change) Parameters device InputDevice change InputDeviceChange"
  },
  "api/rwby.LoadingScreenManager.html": {
    "href": "api/rwby.LoadingScreenManager.html",
    "title": "Class LoadingScreenManager | Rwby Vytal Versus Documentation",
    "keywords": "Class LoadingScreenManager Namespace rwby Assembly rwby.dll public class LoadingScreenManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LoadingScreenManager Fields canvas public Canvas canvas Field Value Canvas loadingBar public Image loadingBar Field Value Image loadingBarFill public Image loadingBarFill Field Value Image loadingText public TextMeshProUGUI loadingText Field Value TextMeshProUGUI Methods ActivateBlackScreen() public void ActivateBlackScreen() ActivateLoadingScreen() public void ActivateLoadingScreen() DeactivateLoadingScreen() public void DeactivateLoadingScreen() DeactivateLoadingScreen(float) public UniTaskVoid DeactivateLoadingScreen(float delay) Parameters delay float Returns UniTaskVoid SetLoadingBarProgress(float) public void SetLoadingBarProgress(float percentage) Parameters percentage float SetLoadingText(string) public void SetLoadingText(string text) Parameters text string"
  },
  "api/rwby.LobbyClientState.html": {
    "href": "api/rwby.LobbyClientState.html",
    "title": "Enum LobbyClientState | Rwby Vytal Versus Documentation",
    "keywords": "Enum LobbyClientState Namespace rwby Assembly rwby.dll public enum LobbyClientState Fields IN_LOBBY = 0 IN_MATCH = 2 TRANSITIONING_TO_LOBBY = 3 TRANSITIONING_TO_MATCH = 1"
  },
  "api/rwby.LobbyModStrictness.html": {
    "href": "api/rwby.LobbyModStrictness.html",
    "title": "Enum LobbyModStrictness | Rwby Vytal Versus Documentation",
    "keywords": "Enum LobbyModStrictness Namespace rwby Assembly rwby.dll public enum LobbyModStrictness Fields AllLoadedMods = 1 Custom = 2 RequiredMods = 0"
  },
  "api/rwby.MatchHandlerBase.MatchEvent.html": {
    "href": "api/rwby.MatchHandlerBase.MatchEvent.html",
    "title": "Delegate MatchHandlerBase.MatchEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate MatchHandlerBase.MatchEvent Namespace rwby Assembly rwby.dll public delegate void MatchHandlerBase.MatchEvent()"
  },
  "api/rwby.MatchHandlerBase.html": {
    "href": "api/rwby.MatchHandlerBase.html",
    "title": "Class MatchHandlerBase | Rwby Vytal Versus Documentation",
    "keywords": "Class MatchHandlerBase Namespace rwby Assembly rwby.dll public class MatchHandlerBase : MonoBehaviour, ILocalEntityHolder Inheritance object Object Component Behaviour MonoBehaviour MatchHandlerBase Implements ILocalEntityHolder Derived TVTMatchHandler TrainingMatchHandler Fields OnMatchEnded public MatchHandlerBase.MatchEvent OnMatchEnded Field Value MatchHandlerBase.MatchEvent gameRunner public QuantumRunner gameRunner Field Value QuantumRunner gamemodeSystemConfig public AssetRef<SystemsConfig> gamemodeSystemConfig Field Value AssetRef<SystemsConfig> Properties LocalPlayerEntitys public virtual Dictionary<int, QuantumEntityView> LocalPlayerEntitys { get; } Property Value Dictionary<int, QuantumEntityView> Methods GetGamemodeSettings() public virtual GamemodeSettingsBase GetGamemodeSettings() Returns GamemodeSettingsBase GetLocalPlayerCamera(PlayerRef) public virtual DummyCamera GetLocalPlayerCamera(PlayerRef globalPlayer) Parameters globalPlayer PlayerRef Returns DummyCamera GetLocalPlayerVirtualCam(PlayerRef) public virtual TargetCameraManager GetLocalPlayerVirtualCam(PlayerRef globalPlayer) Parameters globalPlayer PlayerRef Returns TargetCameraManager SetBGM(BaseSongDefinition) public virtual void SetBGM(BaseSongDefinition songDefinition) Parameters songDefinition BaseSongDefinition SetLocalPlayerCharacters(List<IFighterDefinition>) public virtual void SetLocalPlayerCharacters(List<IFighterDefinition> fighterDefinitions) Parameters fighterDefinitions List<IFighterDefinition> SetLocalPlayerSpecials(List<List<AssetRef<HNSFSpecialSet>>>) public virtual void SetLocalPlayerSpecials(List<List<AssetRef<HNSFSpecialSet>>> fighterSpecials) Parameters fighterSpecials List<List<AssetRef<HNSFSpecialSet>>> SetLocalPlayerTeams(List<int>) public virtual void SetLocalPlayerTeams(List<int> playerTeams) Parameters playerTeams List<int> Setup() public virtual UniTask<bool> Setup() Returns UniTask<bool> Teardown() public virtual UniTask Teardown() Returns UniTask"
  },
  "api/rwby.MenuLabelExternalOptionElement.html": {
    "href": "api/rwby.MenuLabelExternalOptionElement.html",
    "title": "Class MenuLabelExternalOptionElement | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelExternalOptionElement Namespace rwby Assembly rwby.dll public class MenuLabelExternalOptionElement : Selectable Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour Selectable MenuLabelExternalOptionElement Fields description public string description Field Value string label public TextMeshProUGUI label Field Value TextMeshProUGUI options public ExternalOptionDefinition[] options Field Value ExternalOptionDefinition[] reversed [NonSerialized] public bool reversed Field Value bool valueLabel public TextMeshProUGUI valueLabel Field Value TextMeshProUGUI Properties SelectedOption public int SelectedOption { get; set; } Property Value int Methods Awake() protected override void Awake() GetSelectedOption() public ExternalOptionDefinition GetSelectedOption() Returns ExternalOptionDefinition GetSelectedOptionName() public string GetSelectedOptionName() Returns string Initialize(string, string, List<string>, int, IExternalOptionCallback, bool) public void Initialize(string labelText, string description, List<string> options, int selectedOption, IExternalOptionCallback callback, bool reverse = false) Parameters labelText string description string options List<string> selectedOption int callback IExternalOptionCallback reverse bool Initialize(string, string, List<(string, string)>, int, IExternalOptionCallback, bool) public void Initialize(string labelText, string description, List<(string, string)> options, int selectedOption, IExternalOptionCallback callback, bool reverse = false) Parameters labelText string description string options List<(string, string)> selectedOption int callback IExternalOptionCallback reverse bool Initialize(string, string, ExternalOptionDefinition[], int, IExternalOptionCallback, bool) public void Initialize(string labelText, string description, ExternalOptionDefinition[] options, int selectedOption, IExternalOptionCallback callback, bool reverse = false) Parameters labelText string description string options ExternalOptionDefinition[] selectedOption int callback IExternalOptionCallback reverse bool OnDeselect(BaseEventData) public override void OnDeselect(BaseEventData eventData) Parameters eventData BaseEventData OnSelect(BaseEventData) public override void OnSelect(BaseEventData eventData) Parameters eventData BaseEventData UpdateSelection() public void UpdateSelection()"
  },
  "api/rwby.MirrorNetworkManager.EmptyEvent.html": {
    "href": "api/rwby.MirrorNetworkManager.EmptyEvent.html",
    "title": "Delegate MirrorNetworkManager.EmptyEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate MirrorNetworkManager.EmptyEvent Namespace rwby Assembly rwby.dll public delegate void MirrorNetworkManager.EmptyEvent()"
  },
  "api/rwby.MirrorNetworkManager.ServerClientEvent.html": {
    "href": "api/rwby.MirrorNetworkManager.ServerClientEvent.html",
    "title": "Delegate MirrorNetworkManager.ServerClientEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate MirrorNetworkManager.ServerClientEvent Namespace rwby Assembly rwby.dll public delegate void MirrorNetworkManager.ServerClientEvent(NetworkConnectionToClient conn) Parameters conn NetworkConnectionToClient"
  },
  "api/rwby.MirrorNetworkManager.html": {
    "href": "api/rwby.MirrorNetworkManager.html",
    "title": "Class MirrorNetworkManager | Rwby Vytal Versus Documentation",
    "keywords": "Class MirrorNetworkManager Namespace rwby Assembly rwby.dll public class MirrorNetworkManager : NetworkManager Inheritance object Object Component Behaviour MonoBehaviour NetworkManager MirrorNetworkManager Fields ClientOnClientConnectEvent public MirrorNetworkManager.EmptyEvent ClientOnClientConnectEvent Field Value MirrorNetworkManager.EmptyEvent ClientOnClientDisconnectEvent public MirrorNetworkManager.EmptyEvent ClientOnClientDisconnectEvent Field Value MirrorNetworkManager.EmptyEvent ServerClientManagers List of client managers. List is only filled on the server. Indexed by connection ID. public Dictionary<int, NetworkIdentity> ServerClientManagers Field Value Dictionary<int, NetworkIdentity> ServerOnClientConnectEvent public MirrorNetworkManager.ServerClientEvent ServerOnClientConnectEvent Field Value MirrorNetworkManager.ServerClientEvent ServerOnClientDisconnectEvent public MirrorNetworkManager.ServerClientEvent ServerOnClientDisconnectEvent Field Value MirrorNetworkManager.ServerClientEvent Methods OnClientConnect() Called on the client when connected to a server. By default it sets client as ready and adds a player. public override void OnClientConnect() OnClientDisconnect() Called on clients when disconnected from a server. public override void OnClientDisconnect() OnServerAddPlayer(NetworkConnectionToClient) Called on server when a client requests to add the player. Adds playerPrefab by default. Can be overwritten. public override void OnServerAddPlayer(NetworkConnectionToClient conn) Parameters conn NetworkConnectionToClient OnServerConnect(NetworkConnectionToClient) Called on the server when a new client connects. public override void OnServerConnect(NetworkConnectionToClient conn) Parameters conn NetworkConnectionToClient OnServerDisconnect(NetworkConnectionToClient) Called on the server when a client disconnects. public override void OnServerDisconnect(NetworkConnectionToClient conn) Parameters conn NetworkConnectionToClient"
  },
  "api/rwby.MultipleDisplayUtilities.html": {
    "href": "api/rwby.MultipleDisplayUtilities.html",
    "title": "Class MultipleDisplayUtilities | Rwby Vytal Versus Documentation",
    "keywords": "Class MultipleDisplayUtilities Namespace rwby Assembly rwby.dll public static class MultipleDisplayUtilities Inheritance object MultipleDisplayUtilities Methods GetRelativeMousePositionForDrag(PointerEventData, ref Vector2) Converts the current drag position into a relative position for the display. public static bool GetRelativeMousePositionForDrag(PointerEventData eventData, ref Vector2 position) Parameters eventData PointerEventData position Vector2 Returns bool Returns true except when the drag operation is not on the same display as it originated GetRelativeMousePositionForRaycast(PointerEventData) public static Vector3 GetRelativeMousePositionForRaycast(PointerEventData eventData) Parameters eventData PointerEventData Returns Vector3 RelativeMouseAtScaled(Vector2, int) A version of Display.RelativeMouseAt that scales the position when the main display has a different rendering resolution to the system resolution. By default, the mouse position is relative to the main render area, we need to adjust this so it is relative to the system resolution in order to correctly determine the position on other displays. public static Vector3 RelativeMouseAtScaled(Vector2 position, int displayIndex) Parameters position Vector2 displayIndex int Returns Vector3"
  },
  "api/rwby.MusicLooper.html": {
    "href": "api/rwby.MusicLooper.html",
    "title": "Class MusicLooper | Rwby Vytal Versus Documentation",
    "keywords": "Class MusicLooper Namespace rwby Assembly rwby.dll public class MusicLooper : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MusicLooper Fields song public SongAudio song Field Value SongAudio tracks public List<MusicLooperTrack> tracks Field Value List<MusicLooperTrack> Methods FadeOut(float) public UniTask FadeOut(float fadeTime = 0.5) Parameters fadeTime float Returns UniTask Pause() public void Pause() Play(SongAudio, float) public void Play(SongAudio wantedSong, float volume = 1) Parameters wantedSong SongAudio volume float SetTrackVolume(int, float) public void SetTrackVolume(int index, float volume) Parameters index int volume float SetTrackVolumeSlice(int, float) public void SetTrackVolumeSlice(int index, float volume) Parameters index int volume float Stop() public void Stop()"
  },
  "api/rwby.MusicLooperTrack.html": {
    "href": "api/rwby.MusicLooperTrack.html",
    "title": "Class MusicLooperTrack | Rwby Vytal Versus Documentation",
    "keywords": "Class MusicLooperTrack Namespace rwby Assembly rwby.dll public class MusicLooperTrack : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MusicLooperTrack Methods GetNextSource(int) public int GetNextSource(int val) Parameters val int Returns int GetVolume() public float GetVolume() Returns float Play(AudioSource, AudioClip, SongLoopType, double, double) public void Play(AudioSource referenceAudioSource, AudioClip audioClip, SongLoopType loopType, double introBoundary, double loopBoundary) Parameters referenceAudioSource AudioSource audioClip AudioClip loopType SongLoopType introBoundary double loopBoundary double SetVolume(float) public void SetVolume(float volume) Parameters volume float Stop() public void Stop()"
  },
  "api/rwby.MusicManager.html": {
    "href": "api/rwby.MusicManager.html",
    "title": "Class MusicManager | Rwby Vytal Versus Documentation",
    "keywords": "Class MusicManager Namespace rwby Assembly rwby.dll public class MusicManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MusicManager Fields currentlyFading public List<MusicLooper> currentlyFading Field Value List<MusicLooper> currentlyPlaying public List<MusicLooper> currentlyPlaying Field Value List<MusicLooper> musicLooperPrefab public MusicLooper musicLooperPrefab Field Value MusicLooper Methods Fade(int, float) public void Fade(int index, float timeToFade = 0.5) Parameters index int timeToFade float FadeAll(float) public void FadeAll(float timeToFade = 0.5) Parameters timeToFade float GetLooperForSong(SongAudio) public MusicLooper GetLooperForSong(SongAudio song) Parameters song SongAudio Returns MusicLooper Play(SongAudio, float) public MusicLooper Play(SongAudio song, float volume = 1) Parameters song SongAudio volume float Returns MusicLooper StopCurrentlyFading(bool) public void StopCurrentlyFading(bool destroyPlayers = false) Parameters destroyPlayers bool StopCurrentlyPlaying(bool) public void StopCurrentlyPlaying(bool destroyPlayers = false) Parameters destroyPlayers bool"
  },
  "api/rwby.NetworkConsoleCommands.html": {
    "href": "api/rwby.NetworkConsoleCommands.html",
    "title": "Class NetworkConsoleCommands | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkConsoleCommands Namespace rwby Assembly rwby.dll public class NetworkConsoleCommands Inheritance object NetworkConsoleCommands Methods CreateLobby(string, uint, string, string) [ConsoleMethod(\"create-lobby\", \"Creates a multiplayer lobby.\", new string[] { })] public static UniTask<bool> CreateLobby(string lobbyName, uint maxClients, string password, string modGuid) Parameters lobbyName string maxClients uint password string modGuid string Returns UniTask<bool> JoinLobby(LobbyDetails) public static UniTask<bool> JoinLobby(LobbyDetails lobbyDetails) Parameters lobbyDetails LobbyDetails Returns UniTask<bool> StartLocalTrainingMode() public static UniTask<bool> StartLocalTrainingMode() Returns UniTask<bool> StartLocalVersusMode() public static UniTask<bool> StartLocalVersusMode() Returns UniTask<bool>"
  },
  "api/rwby.NetworkManager.html": {
    "href": "api/rwby.NetworkManager.html",
    "title": "Class NetworkManager | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkManager Namespace rwby Assembly rwby.dll public class NetworkManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NetworkManager Fields regionCodes public static readonly string[] regionCodes Field Value string[] sessionHandlers public Dictionary<string, SessionHandlerBase> sessionHandlers Field Value Dictionary<string, SessionHandlerBase> Methods CreateSessionHandler(string, SessionHandlerBase) public bool CreateSessionHandler(string sessionID, SessionHandlerBase sessionHandlerPrefab) Parameters sessionID string sessionHandlerPrefab SessionHandlerBase Returns bool DestroySessionHandler(string) public void DestroySessionHandler(string sessionID) Parameters sessionID string TryGetSessionHandler(string, out SessionHandlerBase) public bool TryGetSessionHandler(string sessionID, out SessionHandlerBase sessionHandler) Parameters sessionID string sessionHandler SessionHandlerBase Returns bool"
  },
  "api/rwby.NetworkMatchSessionHandler.MatchEvent.html": {
    "href": "api/rwby.NetworkMatchSessionHandler.MatchEvent.html",
    "title": "Delegate NetworkMatchSessionHandler.MatchEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate NetworkMatchSessionHandler.MatchEvent Namespace rwby Assembly rwby.dll public delegate void NetworkMatchSessionHandler.MatchEvent(string id) Parameters id string"
  },
  "api/rwby.NetworkMatchSessionHandler.html": {
    "href": "api/rwby.NetworkMatchSessionHandler.html",
    "title": "Class NetworkMatchSessionHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkMatchSessionHandler Namespace rwby Assembly rwby.dll public class NetworkMatchSessionHandler : SessionHandlerBase Inheritance object Object Component Behaviour MonoBehaviour SessionHandlerBase NetworkMatchSessionHandler Inherited Members SessionHandlerBase.ID Fields CurrentRunner [HideInInspector] public QuantumRunner CurrentRunner Field Value QuantumRunner OnMatchEnded public NetworkMatchSessionHandler.MatchEvent OnMatchEnded Field Value NetworkMatchSessionHandler.MatchEvent assetsToLoad [NonSerialized] public ModAssetSoftReference[] assetsToLoad Field Value ModAssetSoftReference[] clientCount [NonSerialized] public int clientCount Field Value int currentMatchHandler [HideInInspector] public MatchHandlerBase currentMatchHandler Field Value MatchHandlerBase defaultRuntimeConfig public RuntimeConfig defaultRuntimeConfig Field Value RuntimeConfig gameManager [HideInInspector] public GameManager gameManager Field Value GameManager gamemodeReference [NonSerialized] public ModAssetSoftReference gamemodeReference Field Value ModAssetSoftReference localBGM [NonSerialized] public BaseSongDefinition localBGM Field Value BaseSongDefinition localPlayerCharacterRefs [NonSerialized] public ModAssetSoftReference[] localPlayerCharacterRefs Field Value ModAssetSoftReference[] localPlayerTeams public int[] localPlayerTeams Field Value int[] mapReference [NonSerialized] public ModAssetSoftReference mapReference Field Value ModAssetSoftReference matchCode [Header(\"Match Info\")] [NonSerialized] public string matchCode Field Value string matchRegion public string matchRegion Field Value string playerCount [NonSerialized] public int playerCount Field Value int quantumAppSettings public AppSettings quantumAppSettings Field Value AppSettings quantumClient public RealtimeClient quantumClient Field Value RealtimeClient Methods BeginMatch() public UniTask BeginMatch() Returns UniTask Initialize() public override bool Initialize() Returns bool OnConnected() Called to signal that the \"low level connection\" got established but before the client can call operation on the server. public void OnConnected() Remarks After the (low level transport) connection is established, the client will automatically send the Authentication operation, which needs to get a response before the client can call other operations. Your logic should wait for either: OnRegionListReceived or OnConnectedToMaster. This callback is useful to detect if the server can be reached at all (technically). Most often, it's enough to implement OnDisconnected(DisconnectCause cause) and check for the cause. This is not called for transitions from the masterserver to game servers. OnConnectedToMaster() Called when the client is connected to the Master Server and ready for matchmaking and other tasks. public void OnConnectedToMaster() Remarks The list of available rooms won't become available unless you join a lobby via RealtimeClient.OpJoinLobby. You can join rooms and create them even without being in a lobby. The default lobby is used in that case. OnCreateRoomFailed(short, string) Called when the server couldn't create a room (OpCreateRoom failed). public void OnCreateRoomFailed(short returnCode, string message) Parameters returnCode short Operation ReturnCode from the server. message string Debug message for the error. Remarks Creating a room may fail for various reasons. Most often, the room already exists (roomname in use) or the RoomOptions clash and it's impossible to create the room. When creating a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. OnCreatedRoom() Called when this client created a room and entered it. OnJoinedRoom() will be called as well. public void OnCreatedRoom() Remarks This callback is only called on the client which created a room (see OpCreateRoom). As any client might close (or drop connection) anytime, there is a chance that the creator of a room does not execute OnCreatedRoom. If you need specific room properties or a \"start signal\", implement OnMasterClientSwitched() and make each new MasterClient check the room's state. OnCustomAuthenticationFailed(string) Called when the custom authentication failed. Followed by disconnect! public void OnCustomAuthenticationFailed(string debugMessage) Parameters debugMessage string Contains a debug message why authentication failed. This has to be fixed during development. Remarks Custom Authentication can fail due to user-input, bad tokens/secrets. If authentication is successful, this method is not called. Implement OnJoinedLobby() or OnConnectedToMaster() (as usual). During development of a game, it might also fail due to wrong configuration on the server side. In those cases, logging the debugMessage is very important. Unless you setup a custom authentication service for your app (in the Dashboard), this won't be called! OnCustomAuthenticationResponse(Dictionary<string, object>) Called when your Custom Authentication service responds with additional data. public void OnCustomAuthenticationResponse(Dictionary<string, object> data) Parameters data Dictionary<string, object> Remarks Custom Authentication services can include some custom data in their response. When present, that data is made available in this callback as Dictionary. While the keys of your data have to be strings, the values can be either string or a number (in Json). You need to make extra sure, that the value type is the one you expect. Numbers become (currently) int64. Example: void OnCustomAuthenticationResponse(Dictionary<string, object> data) { ... } OnDisconnected(DisconnectCause) Called after disconnecting from the Photon server. It could be a failure or an explicit disconnect call public void OnDisconnected(DisconnectCause cause) Parameters cause DisconnectCause Remarks The reason for this disconnect is provided as DisconnectCause. OnEvent(EventData) Called for any incoming events. public void OnEvent(EventData photonEvent) Parameters photonEvent EventData Remarks To receive events, implement IOnEventCallback in any class and register it via AddCallbackTarget (either in RealtimeClient or PhotonNetwork). With the EventData.Sender you can look up the Player who sent the event. It is best practice to assign an eventCode for each different type of content and action, so the Code will be essential to read the incoming events. OnFriendListUpdate(List<FriendInfo>) Called when the server sent the response to a FindFriends request. public void OnFriendListUpdate(List<FriendInfo> friendList) Parameters friendList List<FriendInfo> Remarks After calling OpFindFriends, the Master Server will cache the friend list and send updates to the friend list. The friends includes the name, userId, online state and the room (if any) for each requested user/friend. Use the friendList to update your UI and store it, if the UI should highlight changes. OnJoinRandomFailed(short, string) Called when a previous OpJoinRandom call failed on the server. public void OnJoinRandomFailed(short returnCode, string message) Parameters returnCode short Operation ReturnCode from the server. message string Debug message for the error. Remarks The most common causes are that a room is full or does not exist (due to someone else being faster or closing the room). This operation is only ever sent to the Master Server. Once a room is found by the Master Server, the client will head off to the designated Game Server and use the operation Join on the Game Server. When using multiple lobbies (via OpJoinLobby or a TypedLobby parameter), another lobby might have more/fitting rooms. OnJoinRoomFailed(short, string) Called when a previous OpJoinRoom call failed on the server. public void OnJoinRoomFailed(short returnCode, string message) Parameters returnCode short Operation ReturnCode from the server. message string Debug message for the error. Remarks Joining a room may fail for various reasons. Most often, the room is full or does not exist anymore (due to someone else being faster or closing the room). When joining a room fails on a Game Server: The client will cache the failure internally and returns to the Master Server before it calls the fail-callback. This way, the client is ready to find/create a room at the moment of the callback. In this case, the client skips calling OnConnectedToMaster but returning to the Master Server will still call OnConnected. Treat callbacks of OnConnected as pure information that the client could connect. OnJoinedRoom() Called when the RealtimeClient entered a room, no matter if this client created it or simply joined. public void OnJoinedRoom() Remarks When this is called, you can access the existing players in Room.Players, their custom properties and Room.CustomProperties. In this callback, you could create player objects. For example in Unity, instantiate a prefab for the player. If you want a match to be started \"actively\", enable the user to signal \"ready\" (using OpRaiseEvent or a Custom Property). OnLeftRoom() Called when the local user/client left a room, so the game's logic can clean up it's internal state. public void OnLeftRoom() Remarks When leaving a room, the RealtimeClient will disconnect the Game Server and connect to the Master Server. This wraps up multiple internal actions. Wait for the callback OnConnectedToMaster, before you use lobbies and join or create rooms. OnLeftRoom also gets called, when the application quits. It makes sense to check static ConnectionHandler.AppQuits before loading scenes in OnLeftRoom(). OnRegionListReceived(RegionHandler) Called when the Name Server provided a list of regions for your title. public void OnRegionListReceived(RegionHandler regionHandler) Parameters regionHandler RegionHandler The currently used RegionHandler. Remarks This callback is called as soon as the list is available. No pings were sent for Best Region selection yet. If the client is set to connect to the Best Region (lowest ping), one or more regions get pinged. Not all regions are pinged. As soon as the results are final, the client will connect to the best region, so you can check the ping results when connected to the Master Server. Check the RegionHandler class description, to make use of the provided values. Teardown() public override UniTask Teardown() Returns UniTask Update() public void Update()"
  },
  "api/rwby.NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter.html": {
    "href": "api/rwby.NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter.html",
    "title": "Struct NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter Namespace rwby Assembly rwby.dll public struct NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter Fields fighterReference public ModAssetSoftReference fighterReference Field Value ModAssetSoftReference"
  },
  "api/rwby.NetworkMessagesCharacterLoading.html": {
    "href": "api/rwby.NetworkMessagesCharacterLoading.html",
    "title": "Class NetworkMessagesCharacterLoading | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkMessagesCharacterLoading Namespace rwby Assembly rwby.dll public static class NetworkMessagesCharacterLoading Inheritance object NetworkMessagesCharacterLoading Methods RoomClient_RequestMatchClientsLoadFighter(ModAssetSoftReference) public static UniTask<bool> RoomClient_RequestMatchClientsLoadFighter(ModAssetSoftReference fighterReference) Parameters fighterReference ModAssetSoftReference Returns UniTask<bool> Server_RequestMatchClientsLoadFighter(NetworkConnectionToClient, ClientToServerRequestRoomMembersLoadFighter) public static void Server_RequestMatchClientsLoadFighter(NetworkConnectionToClient arg1, NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter arg2) Parameters arg1 NetworkConnectionToClient arg2 NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter"
  },
  "api/rwby.OfflineMatchSessionHandler.html": {
    "href": "api/rwby.OfflineMatchSessionHandler.html",
    "title": "Class OfflineMatchSessionHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class OfflineMatchSessionHandler Namespace rwby Assembly rwby.dll public class OfflineMatchSessionHandler : SessionHandlerBase Inheritance object Object Component Behaviour MonoBehaviour SessionHandlerBase OfflineMatchSessionHandler Inherited Members SessionHandlerBase.ID Fields bgmIndex public int bgmIndex Field Value int currentMatchHandler [HideInInspector] public MatchHandlerBase currentMatchHandler Field Value MatchHandlerBase currentRunner [HideInInspector] public QuantumRunner currentRunner Field Value QuantumRunner defaultRuntimeConfig public RuntimeConfig defaultRuntimeConfig Field Value RuntimeConfig gameManager [HideInInspector] public GameManager gameManager Field Value GameManager localBGM [NonSerialized] public BaseSongDefinition localBGM Field Value BaseSongDefinition mapIndex [Header(\"Match Info\")] public int mapIndex Field Value int profiling public bool profiling Field Value bool Methods BeginMatch(ModAssetSoftReference) public virtual UniTask BeginMatch(ModAssetSoftReference gamemodeReference) Parameters gamemodeReference ModAssetSoftReference Returns UniTask Initialize() public override bool Initialize() Returns bool StartQuantumGame(AssetGuid, int) public virtual UniTask StartQuantumGame(AssetGuid mapGuid, int playerCount) Parameters mapGuid AssetGuid playerCount int Returns UniTask Teardown() public override UniTask Teardown() Returns UniTask"
  },
  "api/rwby.ParentSelectable.html": {
    "href": "api/rwby.ParentSelectable.html",
    "title": "Class ParentSelectable | Rwby Vytal Versus Documentation",
    "keywords": "Class ParentSelectable Namespace rwby Assembly rwby.dll [SelectionBase] [DisallowMultipleComponent] public class ParentSelectable : Selectable Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour Selectable ParentSelectable"
  },
  "api/rwby.QuickBootloader.html": {
    "href": "api/rwby.QuickBootloader.html",
    "title": "Class QuickBootloader | Rwby Vytal Versus Documentation",
    "keywords": "Class QuickBootloader Namespace rwby Assembly rwby.dll public class QuickBootloader : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour QuickBootloader"
  },
  "api/rwby.SaveData.html": {
    "href": "api/rwby.SaveData.html",
    "title": "Struct SaveData | Rwby Vytal Versus Documentation",
    "keywords": "Struct SaveData Namespace rwby Assembly rwby.dll [Serializable] public struct SaveData Fields version public int version Field Value int"
  },
  "api/rwby.SaveManager.html": {
    "href": "api/rwby.SaveManager.html",
    "title": "Class SaveManager | Rwby Vytal Versus Documentation",
    "keywords": "Class SaveManager Namespace rwby Assembly rwby.dll public class SaveManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SaveManager Fields currentSaveSlot public int currentSaveSlot Field Value int Properties CurrentSaveData public SaveData CurrentSaveData { get; } Property Value SaveData Methods CreateNewSaveFile() public void CreateNewSaveFile() LoadData(int) public void LoadData(int index) Parameters index int SaveData() public bool SaveData() Returns bool UpdateSaveData(SaveData) public void UpdateSaveData(SaveData newData) Parameters newData SaveData"
  },
  "api/rwby.SessionHandlerBase.html": {
    "href": "api/rwby.SessionHandlerBase.html",
    "title": "Class SessionHandlerBase | Rwby Vytal Versus Documentation",
    "keywords": "Class SessionHandlerBase Namespace rwby Assembly rwby.dll public class SessionHandlerBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SessionHandlerBase Derived NetworkMatchSessionHandler OfflineMatchSessionHandler NetworkLobbySessionHandler Fields ID public string ID Field Value string Methods Initialize() public virtual bool Initialize() Returns bool Teardown() public virtual UniTask Teardown() Returns UniTask"
  },
  "api/rwby.SetPositionFromCutsceneBinding.html": {
    "href": "api/rwby.SetPositionFromCutsceneBinding.html",
    "title": "Class SetPositionFromCutsceneBinding | Rwby Vytal Versus Documentation",
    "keywords": "Class SetPositionFromCutsceneBinding Namespace rwby Assembly rwby.dll public class SetPositionFromCutsceneBinding : MonoBehaviour, ICutsceneBinding Inheritance object Object Component Behaviour MonoBehaviour SetPositionFromCutsceneBinding Implements ICutsceneBinding Fields followTarget public GameObject followTarget Field Value GameObject setRotation public bool setRotation Field Value bool tag public AssetRef<Tag> tag Field Value AssetRef<Tag> Methods Bind(QuantumGame, CutsceneBindingSource) public void Bind(QuantumGame qGame, CutsceneBindingSource bindingSource) Parameters qGame QuantumGame bindingSource CutsceneBindingSource"
  },
  "api/rwby.SetTextFromVersion.html": {
    "href": "api/rwby.SetTextFromVersion.html",
    "title": "Class SetTextFromVersion | Rwby Vytal Versus Documentation",
    "keywords": "Class SetTextFromVersion Namespace rwby Assembly rwby.dll public class SetTextFromVersion : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SetTextFromVersion Fields prefix public string prefix Field Value string text public TextMeshProUGUI text Field Value TextMeshProUGUI"
  },
  "api/rwby.SettingsManager.SettingsChangedEvent.html": {
    "href": "api/rwby.SettingsManager.SettingsChangedEvent.html",
    "title": "Delegate SettingsManager.SettingsChangedEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate SettingsManager.SettingsChangedEvent Namespace rwby Assembly rwby.dll public delegate void SettingsManager.SettingsChangedEvent(SettingsManager settingsManager) Parameters settingsManager SettingsManager"
  },
  "api/rwby.SettingsManager.html": {
    "href": "api/rwby.SettingsManager.html",
    "title": "Class SettingsManager | Rwby Vytal Versus Documentation",
    "keywords": "Class SettingsManager Namespace rwby Assembly rwby.dll public class SettingsManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SettingsManager Fields OnVideoSettingsChanged public static SettingsManager.SettingsChangedEvent OnVideoSettingsChanged Field Value SettingsManager.SettingsChangedEvent VideoSettingsFile public const string VideoSettingsFile = \"VideoSettings.json\" Field Value string defaultVideoSettings public VideoSettings defaultVideoSettings Field Value VideoSettings Properties CurrentVideoSettings public VideoSettings CurrentVideoSettings { get; protected set; } Property Value VideoSettings Methods ApplyVideoSettings() public void ApplyVideoSettings() Initialize() public void Initialize() LoadAllSettings() public void LoadAllSettings() LoadVideoSettings() public void LoadVideoSettings() SaveVideoSettings() public void SaveVideoSettings() SetVideoSettings(VideoSettings) public void SetVideoSettings(VideoSettings settings) Parameters settings VideoSettings"
  },
  "api/rwby.SongAudio.html": {
    "href": "api/rwby.SongAudio.html",
    "title": "Class SongAudio | Rwby Vytal Versus Documentation",
    "keywords": "Class SongAudio Namespace rwby Assembly rwby.dll [CreateAssetMenu(fileName = \"SongAudio\", menuName = \"rwby/SongAudio\")] public class SongAudio : ScriptableObject Inheritance object Object ScriptableObject SongAudio Fields audioClips public AudioClip[] audioClips Field Value AudioClip[] introBoundary public double introBoundary Field Value double loopType public SongLoopType loopType Field Value SongLoopType loopingBoundary public double loopingBoundary Field Value double pitch [Range(-3, 3)] public float pitch Field Value float volume [Range(0, 1)] public float volume Field Value float"
  },
  "api/rwby.SongLoopType.html": {
    "href": "api/rwby.SongLoopType.html",
    "title": "Enum SongLoopType | Rwby Vytal Versus Documentation",
    "keywords": "Enum SongLoopType Namespace rwby Assembly rwby.dll public enum SongLoopType Fields IntroLoop = 0 Loop = 1 NonLooping = 2"
  },
  "api/rwby.StagingManager.html": {
    "href": "api/rwby.StagingManager.html",
    "title": "Class StagingManager | Rwby Vytal Versus Documentation",
    "keywords": "Class StagingManager Namespace rwby Assembly rwby.dll public class StagingManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour StagingManager Fields cutsceneManager public GlobalCutsceneManager cutsceneManager Field Value GlobalCutsceneManager fighterEventManager public GlobalFighterEventManager fighterEventManager Field Value GlobalFighterEventManager soundManager public GlobalSoundManager soundManager Field Value GlobalSoundManager vfxManager public GlobalVFXManager vfxManager Field Value GlobalVFXManager"
  },
  "api/rwby.TargetCameraManager.CameraState.html": {
    "href": "api/rwby.TargetCameraManager.CameraState.html",
    "title": "Enum TargetCameraManager.CameraState | Rwby Vytal Versus Documentation",
    "keywords": "Enum TargetCameraManager.CameraState Namespace rwby Assembly rwby.dll public enum TargetCameraManager.CameraState Fields LockedOn = 2 None = 0 ThirdPerson = 1"
  },
  "api/rwby.TargetCameraManager.html": {
    "href": "api/rwby.TargetCameraManager.html",
    "title": "Class TargetCameraManager | Rwby Vytal Versus Documentation",
    "keywords": "Class TargetCameraManager Namespace rwby Assembly rwby.dll public class TargetCameraManager : QuantumCallbacks Inheritance object Object Component Behaviour MonoBehaviour QuantumMonoBehaviour QuantumCallbacks TargetCameraManager Inherited Members QuantumCallbacks.Instances QuantumCallbacks.OnEnable() QuantumCallbacks.OnDisable() QuantumCallbacks.OnGameInit(QuantumGame, bool) QuantumCallbacks.OnGameStart(QuantumGame) QuantumCallbacks.OnGameStart(QuantumGame, bool) QuantumCallbacks.OnGameResync(QuantumGame) QuantumCallbacks.OnGameDestroyed(QuantumGame) QuantumCallbacks.OnSimulateFinished(QuantumGame, Frame) QuantumCallbacks.OnUnitySceneLoadBegin(QuantumGame) QuantumCallbacks.OnUnitySceneLoadDone(QuantumGame) QuantumCallbacks.OnUnitySceneUnloadBegin(QuantumGame) QuantumCallbacks.OnUnitySceneUnloadDone(QuantumGame) QuantumCallbacks.OnChecksumError(QuantumGame, DeterministicTickChecksumError, Frame[]) Fields animator public Animator animator Field Value Animator dummyCam public DummyCamera dummyCam Field Value DummyCamera enemyVirtualTarget public Transform enemyVirtualTarget Field Value Transform followPlayer [HideInInspector] public int followPlayer Field Value int localEntityHolder public ILocalEntityHolder localEntityHolder Field Value ILocalEntityHolder lockOnCenterTarget public Transform lockOnCenterTarget Field Value Transform lockOnTargetGroup public CinemachineTargetGroup lockOnTargetGroup Field Value CinemachineTargetGroup selfTargetGroup public CinemachineTargetGroup selfTargetGroup Field Value CinemachineTargetGroup stateDrivenCam public CinemachineStateDrivenCamera stateDrivenCam Field Value CinemachineStateDrivenCamera targetVirtualCam public CinemachineCamera targetVirtualCam Field Value CinemachineCamera tpVirtualCam public CinemachineCamera tpVirtualCam Field Value CinemachineCamera updateAudioListener public bool updateAudioListener Field Value bool virtualCameras public CinemachineCamera[] virtualCameras Field Value CinemachineCamera[] virtualTarget public Transform virtualTarget Field Value Transform Methods OnUpdateView(QuantumGame) Is called by CallbackUpdateView which is originally called by Quantum.QuantumRunner.Update() and it is called every Unity frame. public override void OnUpdateView(QuantumGame game) Parameters game QuantumGame Quantum game SetCameraOutputLayer(OutputChannels) public void SetCameraOutputLayer(OutputChannels channels) Parameters channels OutputChannels UpdatePOVSources(InputPlayerManager) public void UpdatePOVSources(InputPlayerManager inputPlayer) Parameters inputPlayer InputPlayerManager UpdateTargetCameraAim() public void UpdateTargetCameraAim() UpdateTpCameraAim() public void UpdateTpCameraAim()"
  },
  "api/rwby.TestUIMenu.html": {
    "href": "api/rwby.TestUIMenu.html",
    "title": "Class TestUIMenu | Rwby Vytal Versus Documentation",
    "keywords": "Class TestUIMenu Namespace rwby Assembly rwby.dll public class TestUIMenu : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase TestUIMenu Implements IMenu Inherited Members MenuBase.currentHandler Fields gameManager [NonSerialized] public GameManager gameManager Field Value GameManager sliderEle [Header(\"Elements\")] public MenuLabelFloatSliderElement sliderEle Field Value MenuLabelFloatSliderElement Methods BUTTON_CreateLobby() public void BUTTON_CreateLobby() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.TitleMainScreen.SubmenuType.html": {
    "href": "api/rwby.TitleMainScreen.SubmenuType.html",
    "title": "Enum TitleMainScreen.SubmenuType | Rwby Vytal Versus Documentation",
    "keywords": "Enum TitleMainScreen.SubmenuType Namespace rwby Assembly rwby.dll public enum TitleMainScreen.SubmenuType Fields local = 2 online = 1 topLevel = 0"
  },
  "api/rwby.TitleMainScreen.html": {
    "href": "api/rwby.TitleMainScreen.html",
    "title": "Class TitleMainScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class TitleMainScreen Namespace rwby Assembly rwby.dll public class TitleMainScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase TitleMainScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields gameManager [NonSerialized] public GameManager gameManager Field Value GameManager joinLobbyEntryScreen public GameObject joinLobbyEntryScreen Field Value GameObject submenuHistory public List<TitleMainScreen.SubmenuType> submenuHistory Field Value List<TitleMainScreen.SubmenuType> submenuLocal public GameObject submenuLocal Field Value GameObject submenuLocalDefaultSelection public GameObject submenuLocalDefaultSelection Field Value GameObject submenuOnline public GameObject submenuOnline Field Value GameObject submenuOnlineDefaultSelection public GameObject submenuOnlineDefaultSelection Field Value GameObject submenuTop [Header(\"Submenus\")] public GameObject submenuTop Field Value GameObject submenuTopDefaultSelection [Header(\"Default Picks\")] public GameObject submenuTopDefaultSelection Field Value GameObject testingLocal public bool testingLocal Field Value bool titleCamera public Camera titleCamera Field Value Camera titleGroup public CanvasGroup titleGroup Field Value CanvasGroup Methods BUTTON_ConfigureMods() public void BUTTON_ConfigureMods() BUTTON_CreateLobby() public void BUTTON_CreateLobby() BUTTON_ExitToDesktop() public void BUTTON_ExitToDesktop() BUTTON_JoinLobby() public void BUTTON_JoinLobby() BUTTON_Local() public void BUTTON_Local() BUTTON_Online() public void BUTTON_Online() BUTTON_Settings() public void BUTTON_Settings() BUTTON_TestButton() public void BUTTON_TestButton() BUTTON_Training() public void BUTTON_Training() BUTTON_Versus() public void BUTTON_Versus() GetSubmenuFromType(SubmenuType) public GameObject GetSubmenuFromType(TitleMainScreen.SubmenuType submenuType) Parameters submenuType TitleMainScreen.SubmenuType Returns GameObject Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.TitleScreen.html": {
    "href": "api/rwby.TitleScreen.html",
    "title": "Class TitleScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class TitleScreen Namespace rwby Assembly rwby.dll public class TitleScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase TitleScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields cutsceneTitleScreenTransition public PlayableDirector cutsceneTitleScreenTransition Field Value PlayableDirector gameManager [NonSerialized] public GameManager gameManager Field Value GameManager Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.UIElementTweenSequence.html": {
    "href": "api/rwby.UIElementTweenSequence.html",
    "title": "Class UIElementTweenSequence | Rwby Vytal Versus Documentation",
    "keywords": "Class UIElementTweenSequence Namespace rwby Assembly rwby.dll public class UIElementTweenSequence : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UIElementTweenSequence Fields scale public float scale Field Value float targetTransform public RectTransform targetTransform Field Value RectTransform Methods OnDeselect(BaseEventData) public void OnDeselect(BaseEventData eventData) Parameters eventData BaseEventData OnPointerDown(PointerEventData) public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData OnPointerEnter(PointerEventData) public void OnPointerEnter(PointerEventData eventData) Parameters eventData PointerEventData OnPointerExit(PointerEventData) public void OnPointerExit(PointerEventData eventData) Parameters eventData PointerEventData OnPointerUp(PointerEventData) public void OnPointerUp(PointerEventData eventData) Parameters eventData PointerEventData OnSelect(BaseEventData) public void OnSelect(BaseEventData eventData) Parameters eventData BaseEventData"
  },
  "api/rwby.UModGamemodeDefinition.html": {
    "href": "api/rwby.UModGamemodeDefinition.html",
    "title": "Class UModGamemodeDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class UModGamemodeDefinition Namespace rwby Assembly rwby.modding.umod.dll [Serializable] [CreateAssetMenu(menuName = \"rwby/UMod/Content/Gamemode Definition\")] public class UModGamemodeDefinition : BaseGamemodeDefinition Inheritance object Object ScriptableObject IContentDefinition BaseGamemodeDefinition UModGamemodeDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.Load(string) Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetMatchHandler() public override GameObject GetMatchHandler() Returns GameObject GetQuantumDataAsset() public override GamemodeQuantumData GetQuantumDataAsset() Returns GamemodeQuantumData GetTeamConfig() public override GamemodeTeamConfig[] GetTeamConfig() Returns GamemodeTeamConfig[] LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> RegisterQuantumAsset() public override void RegisterQuantumAsset() Unload() public override void Unload() UnloadAssets() public override void UnloadAssets() UnregisterQuantumAsset() public override void UnregisterQuantumAsset()"
  },
  "api/rwby.UModHudElementDefinition.html": {
    "href": "api/rwby.UModHudElementDefinition.html",
    "title": "Class UModHudElementDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class UModHudElementDefinition Namespace rwby Assembly rwby.modding.umod.dll [Serializable] [CreateAssetMenu(menuName = \"rwby/UMod/Content/Hud Element Definition\")] public class UModHudElementDefinition : BaseHudElementDefinition Inheritance object Object ScriptableObject IContentDefinition BaseHudElementDefinition UModHudElementDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetElementContainer() public override HudElementContainer GetElementContainer() Returns HudElementContainer LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> Unload() public override void Unload() UnloadAssets() public override void UnloadAssets()"
  },
  "api/rwby.UModHudElementDefinitionContainer.html": {
    "href": "api/rwby.UModHudElementDefinitionContainer.html",
    "title": "Class UModHudElementDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class UModHudElementDefinitionContainer Namespace rwby Assembly rwby.modding.umod.dll [CreateAssetMenu(menuName = \"rwby/UMod/Content/Hud Element Definitions Container\", fileName = \"hudelementdefinitioncontainer\")] public class UModHudElementDefinitionContainer : BaseHudElementDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<BaseHudElementDefinition> BaseHudElementDefinitionContainer UModHudElementDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetDefinitions() public override BaseHudElementDefinition[] GetDefinitions() Returns BaseHudElementDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadDefinitions() public override UniTask<bool> LoadDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadDefinitions() public override void UnloadDefinitions()"
  },
  "api/rwby.UModMapDefinitionContainer.html": {
    "href": "api/rwby.UModMapDefinitionContainer.html",
    "title": "Class UModMapDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class UModMapDefinitionContainer Namespace rwby Assembly rwby.modding.umod.dll [CreateAssetMenu(menuName = \"rwby/UMod/Content/Map Definitions Container\", fileName = \"mapdefinitioncontainer\")] public class UModMapDefinitionContainer : BaseMapDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseMapDefinitionContainer UModMapDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetMaps() public override IMapDefinition[] GetMaps() Returns IMapDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadMapDefinitions() public override UniTask<bool> LoadMapDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadMapDefinitions() public override void UnloadMapDefinitions()"
  },
  "api/rwby.UModModInfoAsset.html": {
    "href": "api/rwby.UModModInfoAsset.html",
    "title": "Class UModModInfoAsset | Rwby Vytal Versus Documentation",
    "keywords": "Class UModModInfoAsset Namespace rwby Assembly rwby.modding.umod.dll [CreateAssetMenu(menuName = \"rwby/modding/UMod ModInfoAsset\")] [Serializable] public class UModModInfoAsset : BaseModInfoAsset Inheritance object Object ScriptableObject BaseModInfoAsset UModModInfoAsset Inherited Members BaseModInfoAsset.ModVersion BaseModInfoAsset.OnlineRequirement BaseModInfoAsset.Build() BaseModInfoAsset.GetAssetListPaginated(int, int) BaseModInfoAsset.LoadAssetByIDAsync<T>(string) Fields AssetPathToIDMappng Converts an asset path to it's custom id. If no custom ID was assigned, just returns the asset path. [SerializeField] [HideInInspector] public SerializedDictionary<string, string> AssetPathToIDMappng Field Value SerializedDictionary<string, string> IDToAssetMapping Converts an asset's custom id to it's asset path. [SerializeField] [HideInInspector] public SerializedDictionary<string, string> IDToAssetMapping Field Value SerializedDictionary<string, string> TypeToAssetPaths Returns the paths of all assets in the mod that have the given type. The type string is the AssemblyQualifiedName. [SerializeField] [HideInInspector] public SerializedDictionary<string, List<string>> TypeToAssetPaths Field Value SerializedDictionary<string, List<string>> assetIdRemap Used by the mod creator to assign custom IDs to any asset in the mod. [SerializeField] [SerializedDictionary(\"Identifier\", \"Asset\")] public SerializedDictionary<ExternalModAssetSoftReference, string> assetIdRemap Field Value SerializedDictionary<ExternalModAssetSoftReference, string> excludedAssetsFromAutoCreation Used by the mod creator to ignore the contents of any folder or asset from auto reference creation. public List<ExternalModAssetSoftReference> excludedAssetsFromAutoCreation Field Value List<ExternalModAssetSoftReference> guidToAssetReference Keeps track of the auto created references and what asset they're pointing to. The key is the asset's GUID. [SerializeField] public SerializedDictionary<string, ExternalModAssetSoftReference> guidToAssetReference Field Value SerializedDictionary<string, ExternalModAssetSoftReference> modID public string modID Field Value string Properties ModDefinition public override LoadedModDefinition ModDefinition { get; set; } Property Value LoadedModDefinition ModID public override string ModID { get; } Property Value string Methods GetAssetByID(string, bool) public override Object GetAssetByID(string id, bool autoLoad = false) Parameters id string autoLoad bool Returns Object GetAssetByID<T>(string, bool) public override T GetAssetByID<T>(string id, bool autoLoad = false) where T : Object Parameters id string autoLoad bool Returns T Type Parameters T GetAssetInfo(string) public override object GetAssetInfo(string id) Parameters id string Returns object GetAssetList() Gets a list of all content (loaded or not) in this mod. public override List<string> GetAssetList() Returns List<string> A list of the IDs of content. GetAssetsByID(string) public virtual List<Object> GetAssetsByID(string id) Parameters id string Returns List<Object> GetAssetsByType<T>(bool) public override List<T> GetAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Returns List<T> Type Parameters T GetLoadedAssetByPath(string) public Object GetLoadedAssetByPath(string path) Parameters path string Returns Object GetLoadedAssetList() Gets a list of all loaded content in this mod. public override List<string> GetLoadedAssetList() Returns List<string> A list of the IDs of loaded content. GetLoadedAssetListByType<T>() Gets a list of all loaded content in the mod with the given type. public override List<string> GetLoadedAssetListByType<T>() where T : Object Returns List<string> A list of the IDs of the loaded content for the given type. Type Parameters T The type of the content. HasAsset(string) public override bool HasAsset(string id) Parameters id string Returns bool LoadAssetByID(string) Loads an asset by the ID given. public override bool LoadAssetByID(string id) Parameters id string The ID of the asset. Returns bool True if the asset was loaded; otherwise false. LoadAssetByIDAsync(string) Loads an asset by the ID given asynchronously. public override UniTask<bool> LoadAssetByIDAsync(string id) Parameters id string The ID of the asset. Returns UniTask<bool> True if the asset was loaded; otherwise false. OnLoad() Called right when the mod this ModInfoAsset belongs to loads. public override void OnLoad() OnUnload() Called right before the mod this ModInfoAsset belongs to unloads. public override void OnUnload() RegisterQuantumAsset(string) Registers an asset to the quantum database. public override void RegisterQuantumAsset(string id) Parameters id string TryRegisterQuantumAsset(Object, bool) public virtual bool TryRegisterQuantumAsset(Object obj, bool printError = true) Parameters obj Object printError bool Returns bool TryUnregisterQuantumAsset(Object, bool) public virtual bool TryUnregisterQuantumAsset(Object obj, bool printError = false) Parameters obj Object printError bool Returns bool UnloadAssetByID(string) public override void UnloadAssetByID(string id) Parameters id string UnloadAssetsByType<T>(bool) public override void UnloadAssetsByType<T>(bool includeInheritors = true) where T : Object Parameters includeInheritors bool Type Parameters T UnregisterQuantumAsset(string) Deregisters an asset from the quantum database. public override void UnregisterQuantumAsset(string id) Parameters id string"
  },
  "api/rwby.UModModLoader.html": {
    "href": "api/rwby.UModModLoader.html",
    "title": "Class UModModLoader | Rwby Vytal Versus Documentation",
    "keywords": "Class UModModLoader Namespace rwby Assembly rwby.modding.umod.dll public class UModModLoader : BaseModLoader Inheritance object BaseModLoader UModModLoader Properties LoaderType public override ModLoaderType LoaderType { get; } Property Value ModLoaderType Methods TryLoadMod(ModManager, AvailableModDefinition) public override UniTask<LoadedModDefinition> TryLoadMod(ModManager modManager, AvailableModDefinition modDefinition) Parameters modManager ModManager modDefinition AvailableModDefinition Returns UniTask<LoadedModDefinition> TryUnloadMod(ModManager, LoadedModDefinition) public override bool TryUnloadMod(ModManager modManager, LoadedModDefinition modLoadedDefinition) Parameters modManager ModManager modLoadedDefinition LoadedModDefinition Returns bool"
  },
  "api/rwby.UModSongDefinition.html": {
    "href": "api/rwby.UModSongDefinition.html",
    "title": "Class UModSongDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Class UModSongDefinition Namespace rwby Assembly rwby.modding.umod.dll [CreateAssetMenu(menuName = \"rwby/UMod/Content/Song Definition\")] public class UModSongDefinition : BaseSongDefinition Inheritance object Object ScriptableObject IContentDefinition BaseSongDefinition UModSongDefinition Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Tags IContentDefinition.Load(string) IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() Properties Description public override string Description { get; } Property Value string Name public override string Name { get; } Property Value string Methods GetSong() public override SongAudio GetSong() Returns SongAudio LoadAssets() public override UniTask<bool> LoadAssets() Returns UniTask<bool> Unload() public override void Unload() UnloadAssets() public override void UnloadAssets()"
  },
  "api/rwby.UModSongDefinitionContainer.html": {
    "href": "api/rwby.UModSongDefinitionContainer.html",
    "title": "Class UModSongDefinitionContainer | Rwby Vytal Versus Documentation",
    "keywords": "Class UModSongDefinitionContainer Namespace rwby Assembly rwby.modding.umod.dll [CreateAssetMenu(menuName = \"rwby/UMod/Content/Song Definitions Container\", fileName = \"songdefinitioncontainer\")] public class UModSongDefinitionContainer : BaseSongDefinitionContainer Inheritance object Object ScriptableObject IContentDefinition BaseContentDefinitionContainer<BaseSongDefinition> BaseSongDefinitionContainer UModSongDefinitionContainer Inherited Members IContentDefinition.modDefinition IContentDefinition.ID IContentDefinition.Name IContentDefinition.Description IContentDefinition.Tags IContentDefinition.LoadAssets() IContentDefinition.RegisterQuantumAsset() IContentDefinition.UnregisterQuantumAsset() IContentDefinition.UnloadAssets() Methods GetDefinitions() public override BaseSongDefinition[] GetDefinitions() Returns BaseSongDefinition[] Load(string) public override UniTask<bool> Load(string id) Parameters id string Returns UniTask<bool> LoadDefinitions() public override UniTask<bool> LoadDefinitions() Returns UniTask<bool> Unload() public override void Unload() UnloadDefinitions() public override void UnloadDefinitions()"
  },
  "api/rwby.UrpCameraSettingsUpdater.html": {
    "href": "api/rwby.UrpCameraSettingsUpdater.html",
    "title": "Class UrpCameraSettingsUpdater | Rwby Vytal Versus Documentation",
    "keywords": "Class UrpCameraSettingsUpdater Namespace rwby Assembly rwby.dll public class UrpCameraSettingsUpdater : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UrpCameraSettingsUpdater"
  },
  "api/rwby.VideoSettings.html": {
    "href": "api/rwby.VideoSettings.html",
    "title": "Struct VideoSettings | Rwby Vytal Versus Documentation",
    "keywords": "Struct VideoSettings Namespace rwby Assembly rwby.dll [Serializable] public struct VideoSettings Fields ambientOcculsion public int ambientOcculsion Field Value int antiAliasing public AntialiasingMode antiAliasing Field Value AntialiasingMode aoBlurQuality public int aoBlurQuality Field Value int aoSamples public int aoSamples Field Value int bloomQuality public int bloomQuality Field Value int bloomStrength public int bloomStrength Field Value int displayMode public int displayMode Field Value int fieldOfView public int fieldOfView Field Value int frameRateCap public int frameRateCap Field Value int fsrSharpness public float fsrSharpness Field Value float msaaQuality public int msaaQuality Field Value int renderScale public float renderScale Field Value float resolutionX public int resolutionX Field Value int resolutionY public int resolutionY Field Value int separateDisplayPerPlayer public bool separateDisplayPerPlayer Field Value bool shadowQuality public int shadowQuality Field Value int textureFiltering public int textureFiltering Field Value int textureQuality public int textureQuality Field Value int upscaler public int upscaler Field Value int vsyncMode public int vsyncMode Field Value int Methods ApplyCameraSettings(Camera, bool) public void ApplyCameraSettings(Camera camera, bool applyFOV = true) Parameters camera Camera applyFOV bool ApplyVideoSettings(UniversalRenderPipelineAsset) public void ApplyVideoSettings(UniversalRenderPipelineAsset urpAsset) Parameters urpAsset UniversalRenderPipelineAsset ApplyVolumeSettings(Volume) public void ApplyVolumeSettings(Volume volume) Parameters volume Volume GetAnisoLevel() public int GetAnisoLevel() Returns int GetFullScreenMode() public FullScreenMode GetFullScreenMode() Returns FullScreenMode SetShadowQuality(UniversalRenderPipelineAsset) public void SetShadowQuality(UniversalRenderPipelineAsset urpAsset) Parameters urpAsset UniversalRenderPipelineAsset"
  },
  "api/rwby.core.ConfigureDummyCommand.html": {
    "href": "api/rwby.core.ConfigureDummyCommand.html",
    "title": "Class ConfigureDummyCommand | Rwby Vytal Versus Documentation",
    "keywords": "Class ConfigureDummyCommand Namespace rwby.core Assembly Quantum.Simulation.dll public class ConfigureDummyCommand : DeterministicCommand Inheritance object DeterministicCommand ConfigureDummyCommand Fields behaviour public DummyConfigBehaviour behaviour Field Value DummyConfigBehaviour blockBehaviour public DummyBlockBehaviour blockBehaviour Field Value DummyBlockBehaviour blockDirection public DummyBlockDirection blockDirection Field Value DummyBlockDirection controlType public DummyControlType controlType Field Value DummyControlType counterhit public DummyConfigCounterhit counterhit Field Value DummyConfigCounterhit framesBeforeGroundRecovery public byte framesBeforeGroundRecovery Field Value byte framesToHoldBlockAfterBlockstunEnded public byte framesToHoldBlockAfterBlockstunEnded Field Value byte groundRecovery public DummyGroundRecovery groundRecovery Field Value DummyGroundRecovery hitsBeforeShouldBlock public byte hitsBeforeShouldBlock Field Value byte id public byte id Field Value byte throwEscape public DummyThrowEscape throwEscape Field Value DummyThrowEscape Methods Serialize(BitStream) Override this method to add additional data to the command. public override void Serialize(BitStream stream) Parameters stream BitStream Stream to write and read from"
  },
  "api/rwby.core.HudElementGenericAurabar.html": {
    "href": "api/rwby.core.HudElementGenericAurabar.html",
    "title": "Class HudElementGenericAurabar | Rwby Vytal Versus Documentation",
    "keywords": "Class HudElementGenericAurabar Namespace rwby.core Assembly Assembly-CSharp.dll public class HudElementGenericAurabar : MonoBehaviour, IHUDElement, IFighterDefinitionUser Inheritance object Object Component Behaviour MonoBehaviour HudElementGenericAurabar Implements IHUDElement IFighterDefinitionUser Fields auraBurnoutColor public Color auraBurnoutColor Field Value Color auraColor public Color auraColor Field Value Color auraValue [ReadOnly] public int auraValue Field Value int backBar public Image backBar Field Value Image chipDelay public float chipDelay Field Value float chipSpeed public float chipSpeed Field Value float fighterEntityView public QuantumEntityView fighterEntityView Field Value QuantumEntityView frontBar public Image frontBar Field Value Image globalPlayerID public int globalPlayerID Field Value int lerpTime [ReadOnly] public float lerpTime Field Value float localPlayerID public int localPlayerID Field Value int maxAuraValue [ReadOnly] public int maxAuraValue Field Value int Properties FighterDef public IFighterDefinition FighterDef { get; set; } Property Value IFighterDefinition RootCanvas public Canvas RootCanvas { get; set; } Property Value Canvas Methods Initialize(int, int) public void Initialize(int localPlayerID, int networkPlayerID) Parameters localPlayerID int networkPlayerID int Teardown() public void Teardown()"
  },
  "api/rwby.core.HudElementGenericHealthbar.html": {
    "href": "api/rwby.core.HudElementGenericHealthbar.html",
    "title": "Class HudElementGenericHealthbar | Rwby Vytal Versus Documentation",
    "keywords": "Class HudElementGenericHealthbar Namespace rwby.core Assembly Assembly-CSharp.dll public class HudElementGenericHealthbar : MonoBehaviour, IHUDElement, IFighterDefinitionUser Inheritance object Object Component Behaviour MonoBehaviour HudElementGenericHealthbar Implements IHUDElement IFighterDefinitionUser Fields backBar public Image backBar Field Value Image chipDelay public float chipDelay Field Value float chipSpeed public float chipSpeed Field Value float fighterEntityView public QuantumEntityView fighterEntityView Field Value QuantumEntityView frontBar public Image frontBar Field Value Image globalPlayerID public int globalPlayerID Field Value int healthValue [ReadOnly] public int healthValue Field Value int healthbarHealthCurve public AnimationCurve healthbarHealthCurve Field Value AnimationCurve lerpTime [ReadOnly] public float lerpTime Field Value float localPlayerID public int localPlayerID Field Value int maxHealthValue [ReadOnly] public int maxHealthValue Field Value int Properties FighterDef public IFighterDefinition FighterDef { get; set; } Property Value IFighterDefinition RootCanvas public Canvas RootCanvas { get; set; } Property Value Canvas Methods Initialize(int, int) public void Initialize(int localPlayerID, int networkPlayerID) Parameters localPlayerID int networkPlayerID int Teardown() public void Teardown()"
  },
  "api/rwby.core.HudElementGenericHitstunbar.html": {
    "href": "api/rwby.core.HudElementGenericHitstunbar.html",
    "title": "Class HudElementGenericHitstunbar | Rwby Vytal Versus Documentation",
    "keywords": "Class HudElementGenericHitstunbar Namespace rwby.core Assembly Assembly-CSharp.dll public class HudElementGenericHitstunbar : MonoBehaviour, IHUDElement, IFighterDefinitionUser Inheritance object Object Component Behaviour MonoBehaviour HudElementGenericHitstunbar Implements IHUDElement IFighterDefinitionUser Fields auraValue [ReadOnly] public int auraValue Field Value int fighterEntityView public QuantumEntityView fighterEntityView Field Value QuantumEntityView frontBar public Image frontBar Field Value Image globalPlayerID public int globalPlayerID Field Value int localPlayerID public int localPlayerID Field Value int maxAuraValue [ReadOnly] public int maxAuraValue Field Value int Properties FighterDef public IFighterDefinition FighterDef { get; set; } Property Value IFighterDefinition RootCanvas public Canvas RootCanvas { get; set; } Property Value Canvas Methods Initialize(int, int) public void Initialize(int localPlayerID, int networkPlayerID) Parameters localPlayerID int networkPlayerID int Teardown() public void Teardown()"
  },
  "api/rwby.core.HudElementRubyRose.html": {
    "href": "api/rwby.core.HudElementRubyRose.html",
    "title": "Class HudElementRubyRose | Rwby Vytal Versus Documentation",
    "keywords": "Class HudElementRubyRose Namespace rwby.core Assembly Assembly-CSharp.dll public class HudElementRubyRose : MonoBehaviour, IHUDElement, IFighterDefinitionUser Inheritance object Object Component Behaviour MonoBehaviour HudElementRubyRose Implements IHUDElement IFighterDefinitionUser Fields aurabarHudElement public HudElementGenericAurabar aurabarHudElement Field Value HudElementGenericAurabar fighterEntityView public QuantumEntityView fighterEntityView Field Value QuantumEntityView globalPlayerID public int globalPlayerID Field Value int healthbarHudElement public HudElementGenericHealthbar healthbarHudElement Field Value HudElementGenericHealthbar localPlayerID public int localPlayerID Field Value int Properties FighterDef public IFighterDefinition FighterDef { get; set; } Property Value IFighterDefinition RootCanvas public Canvas RootCanvas { get; set; } Property Value Canvas Methods Initialize(int, int) public void Initialize(int localPlayerID, int networkPlayerID) Parameters localPlayerID int networkPlayerID int Teardown() public void Teardown()"
  },
  "api/rwby.core.IntroFinishedCommand.html": {
    "href": "api/rwby.core.IntroFinishedCommand.html",
    "title": "Class IntroFinishedCommand | Rwby Vytal Versus Documentation",
    "keywords": "Class IntroFinishedCommand Namespace rwby.core Assembly Quantum.Simulation.dll public class IntroFinishedCommand : DeterministicCommand Inheritance object DeterministicCommand IntroFinishedCommand Methods Serialize(BitStream) Override this method to add additional data to the command. public override void Serialize(BitStream stream) Parameters stream BitStream Stream to write and read from"
  },
  "api/rwby.core.MusicTester.html": {
    "href": "api/rwby.core.MusicTester.html",
    "title": "Class MusicTester | Rwby Vytal Versus Documentation",
    "keywords": "Class MusicTester Namespace rwby.core Assembly rwby.core.view.dll public class MusicTester : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MusicTester Fields lastTrackBSlider public float lastTrackBSlider Field Value float song public SongAudio song Field Value SongAudio trackBVolumeSlider [Range(0, 1)] public float trackBVolumeSlider Field Value float volume public float volume Field Value float"
  },
  "api/rwby.core.OutroFinishedCommand.html": {
    "href": "api/rwby.core.OutroFinishedCommand.html",
    "title": "Class OutroFinishedCommand | Rwby Vytal Versus Documentation",
    "keywords": "Class OutroFinishedCommand Namespace rwby.core Assembly Quantum.Simulation.dll public class OutroFinishedCommand : DeterministicCommand Inheritance object DeterministicCommand OutroFinishedCommand Methods Serialize(BitStream) Override this method to add additional data to the command. public override void Serialize(BitStream stream) Parameters stream BitStream Stream to write and read from"
  },
  "api/rwby.core.OverheadHUDElement.html": {
    "href": "api/rwby.core.OverheadHUDElement.html",
    "title": "Class OverheadHUDElement | Rwby Vytal Versus Documentation",
    "keywords": "Class OverheadHUDElement Namespace rwby.core Assembly Assembly-CSharp.dll public class OverheadHUDElement : MonoBehaviour, IHUDElement, IFighterDefinitionUser Inheritance object Object Component Behaviour MonoBehaviour OverheadHUDElement Implements IHUDElement IFighterDefinitionUser Fields aurabarHudElement public HudElementGenericAurabar aurabarHudElement Field Value HudElementGenericAurabar container public GameObject container Field Value GameObject entityRef public EntityRef entityRef Field Value EntityRef fighterEntityView public QuantumEntityView fighterEntityView Field Value QuantumEntityView healthbarHudElement public HudElementGenericHealthbar healthbarHudElement Field Value HudElementGenericHealthbar hitstunbarHudElement public HudElementGenericHitstunbar hitstunbarHudElement Field Value HudElementGenericHitstunbar hudHandler public OverheadHUDHandler hudHandler Field Value OverheadHUDHandler maxDistance public float maxDistance Field Value float maxScale public float maxScale Field Value float minDistance public float minDistance Field Value float minScale public float minScale Field Value float updateRate public int updateRate Field Value int Properties FighterDef public IFighterDefinition FighterDef { get; set; } Property Value IFighterDefinition RootCanvas public Canvas RootCanvas { get; set; } Property Value Canvas Methods Initialize(int, int) public void Initialize(int localPlayerID, int networkPlayerID) Parameters localPlayerID int networkPlayerID int Teardown() public void Teardown() UpdatePos() public void UpdatePos() UpdateView(CallbackUpdateView) public void UpdateView(CallbackUpdateView callback) Parameters callback CallbackUpdateView"
  },
  "api/rwby.core.OverheadHUDHandler.html": {
    "href": "api/rwby.core.OverheadHUDHandler.html",
    "title": "Class OverheadHUDHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class OverheadHUDHandler Namespace rwby.core Assembly Assembly-CSharp.dll public class OverheadHUDHandler : MonoBehaviour, IHUDElement, IFighterDefinitionUser Inheritance object Object Component Behaviour MonoBehaviour OverheadHUDHandler Implements IHUDElement IFighterDefinitionUser Fields checkLayerMask public LayerMask checkLayerMask Field Value LayerMask elementPrefab public GameObject elementPrefab Field Value GameObject entityViewtoHUDElement public Dictionary<EntityRef, OverheadHUDElement> entityViewtoHUDElement Field Value Dictionary<EntityRef, OverheadHUDElement> fighterEntityView public QuantumEntityView fighterEntityView Field Value QuantumEntityView globalPlayerID public int globalPlayerID Field Value int localPlayerID public int localPlayerID Field Value int updateRate public int updateRate Field Value int Properties FighterDef public IFighterDefinition FighterDef { get; set; } Property Value IFighterDefinition RootCanvas public Canvas RootCanvas { get; set; } Property Value Canvas Methods DeleteElement(OverheadHUDElement) public void DeleteElement(OverheadHUDElement element) Parameters element OverheadHUDElement Initialize(int, int) public void Initialize(int localPlayerID, int networkPlayerID) Parameters localPlayerID int networkPlayerID int Teardown() public void Teardown()"
  },
  "api/rwby.core.SpawnFighterCommand.html": {
    "href": "api/rwby.core.SpawnFighterCommand.html",
    "title": "Class SpawnFighterCommand | Rwby Vytal Versus Documentation",
    "keywords": "Class SpawnFighterCommand Namespace rwby.core Assembly Quantum.Simulation.dll public class SpawnFighterCommand : DeterministicCommand Inheritance object DeterministicCommand SpawnFighterCommand Fields characterDefinition public AssetRef<CharaDefinitionAsset> characterDefinition Field Value AssetRef<CharaDefinitionAsset> id public int id Field Value int Methods Serialize(BitStream) Override this method to add additional data to the command. public override void Serialize(BitStream stream) Parameters stream BitStream Stream to write and read from"
  },
  "api/rwby.core.gamemodes.teamversus.ComboRecipeHUDHandler.html": {
    "href": "api/rwby.core.gamemodes.teamversus.ComboRecipeHUDHandler.html",
    "title": "Class ComboRecipeHUDHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class ComboRecipeHUDHandler Namespace rwby.core.gamemodes.teamversus Assembly rwby.core.view.dll public class ComboRecipeHUDHandler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ComboRecipeHUDHandler Fields TvshudHandler public TVSHUDHandler TvshudHandler Field Value TVSHUDHandler attackStateGroup public AssetRef<HNSFState> attackStateGroup Field Value AssetRef<HNSFState> comboRecipeEntryPrefab public GameObject comboRecipeEntryPrefab Field Value GameObject comboRecipePArent public Transform comboRecipePArent Field Value Transform latestStates public List<HNSFState> latestStates Field Value List<HNSFState> shouldUpdate public bool shouldUpdate Field Value bool updateEvery public int updateEvery Field Value int Methods Initialize() public void Initialize() Teardown() public void Teardown()"
  },
  "api/rwby.core.gamemodes.teamversus.TVSCutsceneBindingSource.html": {
    "href": "api/rwby.core.gamemodes.teamversus.TVSCutsceneBindingSource.html",
    "title": "Class TVSCutsceneBindingSource | Rwby Vytal Versus Documentation",
    "keywords": "Class TVSCutsceneBindingSource Namespace rwby.core.gamemodes.teamversus Assembly rwby.core.view.dll [Serializable] public class TVSCutsceneBindingSource : CutsceneBindingSource Inheritance object CutsceneBindingSource TVSCutsceneBindingSource Inherited Members CutsceneBindingSource.parent CutsceneBindingSource.mappings CutsceneBindingSource.GetMapping(AssetRef<Tag>) CutsceneBindingSource.TryGetMapping(AssetRef<Tag>, out Object) CutsceneBindingSource.TryGetMapping(AssetRef<Tag>, List<CutsceneBindingSourceCondition>, out Object) Methods Initialize(MatchHandlerBase) public void Initialize(MatchHandlerBase mHandler) Parameters mHandler MatchHandlerBase"
  },
  "api/rwby.core.gamemodes.teamversus.TVSHUDHandler.html": {
    "href": "api/rwby.core.gamemodes.teamversus.TVSHUDHandler.html",
    "title": "Class TVSHUDHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class TVSHUDHandler Namespace rwby.core.gamemodes.teamversus Assembly rwby.core.view.dll public class TVSHUDHandler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TVSHUDHandler Fields canvas public Canvas canvas Field Value Canvas comboRecipeHUDHandler public ComboRecipeHUDHandler comboRecipeHUDHandler Field Value ComboRecipeHUDHandler countdownDirector public PlayableDirector countdownDirector Field Value PlayableDirector globalPlayerID public int globalPlayerID Field Value int hudCanvasGroup public CanvasGroup hudCanvasGroup Field Value CanvasGroup localPlayer public InputPlayerManager localPlayer Field Value InputPlayerManager localPlayerID public int localPlayerID Field Value int matchHandler public TVTMatchHandler matchHandler Field Value TVTMatchHandler outroGameOverDirector public PlayableDirector outroGameOverDirector Field Value PlayableDirector overheadHudReference public ExternalModAssetSoftReference overheadHudReference Field Value ExternalModAssetSoftReference teamScoreElementPrefab public TeamScoreElement teamScoreElementPrefab Field Value TeamScoreElement teamScoreElements public Dictionary<int, TeamScoreElement> teamScoreElements Field Value Dictionary<int, TeamScoreElement> teamScoresContainer public Transform teamScoresContainer Field Value Transform timer public TextMeshProUGUI timer Field Value TextMeshProUGUI Methods Initialize(Camera, InputPlayerManager, int, int) public void Initialize(Camera cam, InputPlayerManager inputPlayer, int localPlayerID, int globalPlayerID) Parameters cam Camera inputPlayer InputPlayerManager localPlayerID int globalPlayerID int Teardown() public void Teardown()"
  },
  "api/rwby.core.gamemodes.teamversus.TVTMatchHandler.html": {
    "href": "api/rwby.core.gamemodes.teamversus.TVTMatchHandler.html",
    "title": "Class TVTMatchHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class TVTMatchHandler Namespace rwby.core.gamemodes.teamversus Assembly rwby.core.view.dll public class TVTMatchHandler : MatchHandlerBase, ILocalEntityHolder Inheritance object Object Component Behaviour MonoBehaviour MatchHandlerBase TVTMatchHandler Implements ILocalEntityHolder Inherited Members MatchHandlerBase.OnMatchEnded MatchHandlerBase.gameRunner MatchHandlerBase.gamemodeSystemConfig Fields GlobalPlayerToLocalPlayer public Dictionary<PlayerRef, int> GlobalPlayerToLocalPlayer Field Value Dictionary<PlayerRef, int> cutsceneManager public GlobalCutsceneManager cutsceneManager Field Value GlobalCutsceneManager entityViewUpdater public QuantumEntityViewUpdater entityViewUpdater Field Value QuantumEntityViewUpdater fighterEventManager public GlobalFighterEventManager fighterEventManager Field Value GlobalFighterEventManager hudHandler public TVSHUDHandler hudHandler Field Value TVSHUDHandler hudInstances public Dictionary<int, TVSHUDHandler> hudInstances Field Value Dictionary<int, TVSHUDHandler> localPlayerCams public Dictionary<int, (DummyCamera, TargetCameraManager)> localPlayerCams Field Value Dictionary<int, (DummyCamera, TargetCameraManager)> localPlayerEntitys public Dictionary<int, QuantumEntityView> localPlayerEntitys Field Value Dictionary<int, QuantumEntityView> localPlayerToGlobalPlayer public Dictionary<int, PlayerRef> localPlayerToGlobalPlayer Field Value Dictionary<int, PlayerRef> localSelectedCharacters public List<IFighterDefinition> localSelectedCharacters Field Value List<IFighterDefinition> playerCamCamLayers public OutputChannels[] playerCamCamLayers Field Value OutputChannels[] playerVirtualCamLayers [FormerlySerializedAs(\"playerCamLayers\")] public OutputChannels[] playerVirtualCamLayers Field Value OutputChannels[] settingsAsset public TeamVersusSettings settingsAsset Field Value TeamVersusSettings soundManager public GlobalSoundManager soundManager Field Value GlobalSoundManager vfxManager public GlobalVFXManager vfxManager Field Value GlobalVFXManager Properties LocalPlayerEntitys public override Dictionary<int, QuantumEntityView> LocalPlayerEntitys { get; } Property Value Dictionary<int, QuantumEntityView> Methods GetGamemodeSettings() public override GamemodeSettingsBase GetGamemodeSettings() Returns GamemodeSettingsBase GetLocalPlayerCamera(PlayerRef) public override DummyCamera GetLocalPlayerCamera(PlayerRef globalPlayer) Parameters globalPlayer PlayerRef Returns DummyCamera GetLocalPlayerVirtualCam(PlayerRef) public override TargetCameraManager GetLocalPlayerVirtualCam(PlayerRef globalPlayer) Parameters globalPlayer PlayerRef Returns TargetCameraManager PollInput(CallbackPollInput) public void PollInput(CallbackPollInput callback) Parameters callback CallbackPollInput SetBGM(BaseSongDefinition) public override void SetBGM(BaseSongDefinition songDefinition) Parameters songDefinition BaseSongDefinition SetLocalPlayerCharacters(List<IFighterDefinition>) public override void SetLocalPlayerCharacters(List<IFighterDefinition> fighterDefinitions) Parameters fighterDefinitions List<IFighterDefinition> SetLocalPlayerSpecials(List<List<AssetRef<HNSFSpecialSet>>>) public override void SetLocalPlayerSpecials(List<List<AssetRef<HNSFSpecialSet>>> fighterSpecials) Parameters fighterSpecials List<List<AssetRef<HNSFSpecialSet>>> SetLocalPlayerTeams(List<int>) public override void SetLocalPlayerTeams(List<int> playerTeams) Parameters playerTeams List<int> Setup() public override UniTask<bool> Setup() Returns UniTask<bool> Teardown() public override UniTask Teardown() Returns UniTask"
  },
  "api/rwby.core.gamemodes.teamversus.TeamScoreElement.html": {
    "href": "api/rwby.core.gamemodes.teamversus.TeamScoreElement.html",
    "title": "Class TeamScoreElement | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamScoreElement Namespace rwby.core.gamemodes.teamversus Assembly rwby.core.view.dll public class TeamScoreElement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TeamScoreElement Fields teamID public int teamID Field Value int teamName public TextMeshProUGUI teamName Field Value TextMeshProUGUI teamScore public TextMeshProUGUI teamScore Field Value TextMeshProUGUI"
  },
  "api/rwby.core.gamemodes.teamversus.html": {
    "href": "api/rwby.core.gamemodes.teamversus.html",
    "title": "Namespace rwby.core.gamemodes.teamversus | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.core.gamemodes.teamversus Classes ComboRecipeHUDHandler TVSCutsceneBindingSource TVSHUDHandler TVTMatchHandler TeamScoreElement"
  },
  "api/rwby.core.gamemodes.training.TrainingHUDHandler.html": {
    "href": "api/rwby.core.gamemodes.training.TrainingHUDHandler.html",
    "title": "Class TrainingHUDHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingHUDHandler Namespace rwby.core.gamemodes.training Assembly Assembly-CSharp.dll public class TrainingHUDHandler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TrainingHUDHandler Fields globalPlayerID public int globalPlayerID Field Value int localPlayer public InputPlayerManager localPlayer Field Value InputPlayerManager localPlayerID public int localPlayerID Field Value int mainCanvas [FormerlySerializedAs(\"canvas\")] public Canvas mainCanvas Field Value Canvas mainCanvasGroup [FormerlySerializedAs(\"hudCanvasGroup\")] public CanvasGroup mainCanvasGroup Field Value CanvasGroup matchHandler public TrainingMatchHandler matchHandler Field Value TrainingMatchHandler overheadHudReference public ExternalModAssetSoftReference overheadHudReference Field Value ExternalModAssetSoftReference pauseMenuCanvas public Canvas pauseMenuCanvas Field Value Canvas pauseMenuHandler public TrainingPauseMenuHandler pauseMenuHandler Field Value TrainingPauseMenuHandler Methods GetLocalPlayerFighterDefinition() public IFighterDefinition GetLocalPlayerFighterDefinition() Returns IFighterDefinition Initialize(Camera, InputPlayerManager, int, int) public void Initialize(Camera cam, InputPlayerManager inputPlayer, int localPlayerID, int globalPlayerID) Parameters cam Camera inputPlayer InputPlayerManager localPlayerID int globalPlayerID int Teardown() public void Teardown()"
  },
  "api/rwby.core.gamemodes.training.TrainingMatchHandler.html": {
    "href": "api/rwby.core.gamemodes.training.TrainingMatchHandler.html",
    "title": "Class TrainingMatchHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingMatchHandler Namespace rwby.core.gamemodes.training Assembly Assembly-CSharp.dll public class TrainingMatchHandler : MatchHandlerBase, ILocalEntityHolder Inheritance object Object Component Behaviour MonoBehaviour MatchHandlerBase TrainingMatchHandler Implements ILocalEntityHolder Inherited Members MatchHandlerBase.OnMatchEnded MatchHandlerBase.gameRunner MatchHandlerBase.gamemodeSystemConfig Fields GlobalPlayerToLocalPlayer public Dictionary<PlayerRef, int> GlobalPlayerToLocalPlayer Field Value Dictionary<PlayerRef, int> entityViewUpdater public QuantumEntityViewUpdater entityViewUpdater Field Value QuantumEntityViewUpdater fighterEventManager public GlobalFighterEventManager fighterEventManager Field Value GlobalFighterEventManager hudHandler public TrainingHUDHandler hudHandler Field Value TrainingHUDHandler hudInstances public Dictionary<int, TrainingHUDHandler> hudInstances Field Value Dictionary<int, TrainingHUDHandler> localPlayerCams public Dictionary<int, (DummyCamera, TargetCameraManager)> localPlayerCams Field Value Dictionary<int, (DummyCamera, TargetCameraManager)> localPlayerEntitys public Dictionary<int, QuantumEntityView> localPlayerEntitys Field Value Dictionary<int, QuantumEntityView> localPlayerToGlobalPlayer public Dictionary<int, PlayerRef> localPlayerToGlobalPlayer Field Value Dictionary<int, PlayerRef> localSelectedCharacters public List<IFighterDefinition> localSelectedCharacters Field Value List<IFighterDefinition> playerCamLayers public string[] playerCamLayers Field Value string[] settingsAsset public TrainingSettings settingsAsset Field Value TrainingSettings soundManager public GlobalSoundManager soundManager Field Value GlobalSoundManager vfxManager public GlobalVFXManager vfxManager Field Value GlobalVFXManager Properties LocalPlayerEntitys public override Dictionary<int, QuantumEntityView> LocalPlayerEntitys { get; } Property Value Dictionary<int, QuantumEntityView> Methods GetGamemodeSettings() public override GamemodeSettingsBase GetGamemodeSettings() Returns GamemodeSettingsBase GetLocalPlayerCamera(PlayerRef) public override DummyCamera GetLocalPlayerCamera(PlayerRef globalPlayer) Parameters globalPlayer PlayerRef Returns DummyCamera GetLocalPlayerVirtualCam(PlayerRef) public override TargetCameraManager GetLocalPlayerVirtualCam(PlayerRef globalPlayer) Parameters globalPlayer PlayerRef Returns TargetCameraManager PollInput(CallbackPollInput) public void PollInput(CallbackPollInput callback) Parameters callback CallbackPollInput SetBGM(BaseSongDefinition) public override void SetBGM(BaseSongDefinition songDefinition) Parameters songDefinition BaseSongDefinition SetLocalPlayerCharacters(List<IFighterDefinition>) public override void SetLocalPlayerCharacters(List<IFighterDefinition> fighterDefinitions) Parameters fighterDefinitions List<IFighterDefinition> SetLocalPlayerSpecials(List<List<AssetRef<HNSFSpecialSet>>>) public override void SetLocalPlayerSpecials(List<List<AssetRef<HNSFSpecialSet>>> fighterSpecials) Parameters fighterSpecials List<List<AssetRef<HNSFSpecialSet>>> SetLocalPlayerTeams(List<int>) public override void SetLocalPlayerTeams(List<int> playerTeams) Parameters playerTeams List<int> Setup() public override UniTask<bool> Setup() Returns UniTask<bool> Teardown() public override UniTask Teardown() Returns UniTask"
  },
  "api/rwby.core.gamemodes.training.html": {
    "href": "api/rwby.core.gamemodes.training.html",
    "title": "Namespace rwby.core.gamemodes.training | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.core.gamemodes.training Classes TrainingHUDHandler TrainingMatchHandler"
  },
  "api/rwby.core.gamemodes.training.ui.DummySection.html": {
    "href": "api/rwby.core.gamemodes.training.ui.DummySection.html",
    "title": "Class DummySection | Rwby Vytal Versus Documentation",
    "keywords": "Class DummySection Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public class DummySection : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DummySection Fields aerialRecovery public MenuLabelOptionElement aerialRecovery Field Value MenuLabelOptionElement aerialRecoveryDirection public MenuLabelOptionElement aerialRecoveryDirection Field Value MenuLabelOptionElement behaviourElement public MenuLabelOptionElement behaviourElement Field Value MenuLabelOptionElement blockBehaviour public MenuLabelOptionElement blockBehaviour Field Value MenuLabelOptionElement blockCount public MenuLabelFloatSliderElement blockCount Field Value MenuLabelFloatSliderElement blockDirection public MenuLabelOptionElement blockDirection Field Value MenuLabelOptionElement controlsElement public MenuLabelOptionElement controlsElement Field Value MenuLabelOptionElement counterElement public MenuLabelOptionElement counterElement Field Value MenuLabelOptionElement dummyIndex public byte dummyIndex Field Value byte fighterSpawnLabel public TextMeshProUGUI fighterSpawnLabel Field Value TextMeshProUGUI framesHoldBlockAfterStunOver public MenuLabelFloatSliderElement framesHoldBlockAfterStunOver Field Value MenuLabelFloatSliderElement groundRecovery public MenuLabelOptionElement groundRecovery Field Value MenuLabelOptionElement groundRecoveryDelay public MenuLabelFloatSliderElement groundRecoveryDelay Field Value MenuLabelFloatSliderElement label [Header(\"Options\")] public TextMeshProUGUI label Field Value TextMeshProUGUI menu public PauseMenuDummySettingsHandler menu Field Value PauseMenuDummySettingsHandler techRollDirection public MenuLabelOptionElement techRollDirection Field Value MenuLabelOptionElement throwEscape public MenuLabelOptionElement throwEscape Field Value MenuLabelOptionElement Methods BUTTON_Apply() public void BUTTON_Apply() BUTTON_SelectFighter() public void BUTTON_SelectFighter() Initialize(TrainingMatchHandler, byte) public void Initialize(TrainingMatchHandler matchHandler, byte dummyIndex) Parameters matchHandler TrainingMatchHandler dummyIndex byte SetSettings() public void SetSettings() UpdateSettings() public void UpdateSettings()"
  },
  "api/rwby.core.gamemodes.training.ui.DummySettingsFighterSelectScreen.OnFighterSelected.html": {
    "href": "api/rwby.core.gamemodes.training.ui.DummySettingsFighterSelectScreen.OnFighterSelected.html",
    "title": "Delegate DummySettingsFighterSelectScreen.OnFighterSelected | Rwby Vytal Versus Documentation",
    "keywords": "Delegate DummySettingsFighterSelectScreen.OnFighterSelected Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public delegate void DummySettingsFighterSelectScreen.OnFighterSelected(IFighterDefinition fighter) Parameters fighter IFighterDefinition"
  },
  "api/rwby.core.gamemodes.training.ui.DummySettingsFighterSelectScreen.html": {
    "href": "api/rwby.core.gamemodes.training.ui.DummySettingsFighterSelectScreen.html",
    "title": "Class DummySettingsFighterSelectScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class DummySettingsFighterSelectScreen Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public class DummySettingsFighterSelectScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase DummySettingsFighterSelectScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields dummySettingsHandler public PauseMenuDummySettingsHandler dummySettingsHandler Field Value PauseMenuDummySettingsHandler fighterItemPrefab public Button fighterItemPrefab Field Value Button fightersPerPage public int fightersPerPage Field Value int onFighterSelected public DummySettingsFighterSelectScreen.OnFighterSelected onFighterSelected Field Value DummySettingsFighterSelectScreen.OnFighterSelected page public int page Field Value int pauseMenuHandler public TrainingPauseMenuHandler pauseMenuHandler Field Value TrainingPauseMenuHandler scrollRect public ScrollRect scrollRect Field Value ScrollRect selectingDummyIndex public int selectingDummyIndex Field Value int Methods FillCharacters() public void FillCharacters() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.core.gamemodes.training.ui.DummySettingsMainScreen.html": {
    "href": "api/rwby.core.gamemodes.training.ui.DummySettingsMainScreen.html",
    "title": "Class DummySettingsMainScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class DummySettingsMainScreen Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public class DummySettingsMainScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase DummySettingsMainScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields dummySectionPrefab public DummySection dummySectionPrefab Field Value DummySection dummySectionScrollRect public ScrollRect dummySectionScrollRect Field Value ScrollRect pauseMenuHandler public TrainingPauseMenuHandler pauseMenuHandler Field Value TrainingPauseMenuHandler Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.core.gamemodes.training.ui.PauseMenuBasicSettingsHandler.MenuType.html": {
    "href": "api/rwby.core.gamemodes.training.ui.PauseMenuBasicSettingsHandler.MenuType.html",
    "title": "Enum PauseMenuBasicSettingsHandler.MenuType | Rwby Vytal Versus Documentation",
    "keywords": "Enum PauseMenuBasicSettingsHandler.MenuType Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public enum PauseMenuBasicSettingsHandler.MenuType Fields commandList = 1 main = 0"
  },
  "api/rwby.core.gamemodes.training.ui.PauseMenuBasicSettingsHandler.html": {
    "href": "api/rwby.core.gamemodes.training.ui.PauseMenuBasicSettingsHandler.html",
    "title": "Class PauseMenuBasicSettingsHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class PauseMenuBasicSettingsHandler Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public class PauseMenuBasicSettingsHandler : MenuAndHandlerBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase MenuAndHandlerBase PauseMenuBasicSettingsHandler Implements IMenu IMenuHandler Inherited Members MenuAndHandlerBase.menus MenuAndHandlerBase.history MenuAndHandlerBase.ResetAndForwardTo(int) MenuAndHandlerBase.Forward(int, bool) MenuAndHandlerBase.Back() MenuAndHandlerBase.GetHistory() MenuAndHandlerBase.GetCurrentMenu() MenuAndHandlerBase.HasSubmenuOpen() MenuBase.currentHandler Fields commandListMenu public CommandListMenu commandListMenu Field Value CommandListMenu mainMenu public Transform mainMenu Field Value Transform pauseMenuHandler public TrainingPauseMenuHandler pauseMenuHandler Field Value TrainingPauseMenuHandler Methods BUTTON_CommandList() public void BUTTON_CommandList() BUTTON_ControlSettings() public void BUTTON_ControlSettings() BUTTON_Options() public void BUTTON_Options() BUTTON_ShortcutSettings() public void BUTTON_ShortcutSettings() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.core.gamemodes.training.ui.PauseMenuDummySettingsHandler.MenuTypes.html": {
    "href": "api/rwby.core.gamemodes.training.ui.PauseMenuDummySettingsHandler.MenuTypes.html",
    "title": "Enum PauseMenuDummySettingsHandler.MenuTypes | Rwby Vytal Versus Documentation",
    "keywords": "Enum PauseMenuDummySettingsHandler.MenuTypes Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public enum PauseMenuDummySettingsHandler.MenuTypes Fields Fighter = 1 Main = 0"
  },
  "api/rwby.core.gamemodes.training.ui.PauseMenuDummySettingsHandler.html": {
    "href": "api/rwby.core.gamemodes.training.ui.PauseMenuDummySettingsHandler.html",
    "title": "Class PauseMenuDummySettingsHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class PauseMenuDummySettingsHandler Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public class PauseMenuDummySettingsHandler : MenuAndHandlerBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase MenuAndHandlerBase PauseMenuDummySettingsHandler Implements IMenu IMenuHandler Inherited Members MenuAndHandlerBase.menus MenuAndHandlerBase.history MenuAndHandlerBase.ResetAndForwardTo(int) MenuAndHandlerBase.Forward(int, bool) MenuAndHandlerBase.Back() MenuAndHandlerBase.GetHistory() MenuAndHandlerBase.GetCurrentMenu() MenuAndHandlerBase.HasSubmenuOpen() MenuBase.currentHandler Fields fighterSelectScreen public DummySettingsFighterSelectScreen fighterSelectScreen Field Value DummySettingsFighterSelectScreen mainScreen public DummySettingsMainScreen mainScreen Field Value DummySettingsMainScreen pauseMenuHandler public TrainingPauseMenuHandler pauseMenuHandler Field Value TrainingPauseMenuHandler testCharaRef public AssetRef<CharaDefinitionAsset> testCharaRef Field Value AssetRef<CharaDefinitionAsset> trainingHudHandler public TrainingHUDHandler trainingHudHandler Field Value TrainingHUDHandler Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.core.gamemodes.training.ui.PauseMenuEnvironmentSettingsHandler.html": {
    "href": "api/rwby.core.gamemodes.training.ui.PauseMenuEnvironmentSettingsHandler.html",
    "title": "Class PauseMenuEnvironmentSettingsHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class PauseMenuEnvironmentSettingsHandler Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public class PauseMenuEnvironmentSettingsHandler : MenuAndHandlerBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase MenuAndHandlerBase PauseMenuEnvironmentSettingsHandler Implements IMenu IMenuHandler Inherited Members MenuAndHandlerBase.menus MenuAndHandlerBase.history MenuAndHandlerBase.ResetAndForwardTo(int) MenuAndHandlerBase.Forward(int, bool) MenuAndHandlerBase.Back() MenuAndHandlerBase.GetHistory() MenuAndHandlerBase.GetCurrentMenu() MenuAndHandlerBase.HasSubmenuOpen() MenuBase.currentHandler Fields pauseMenuHandler public TrainingPauseMenuHandler pauseMenuHandler Field Value TrainingPauseMenuHandler Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.core.gamemodes.training.ui.TrainingPauseMenuHandler.SubmenuType.html": {
    "href": "api/rwby.core.gamemodes.training.ui.TrainingPauseMenuHandler.SubmenuType.html",
    "title": "Enum TrainingPauseMenuHandler.SubmenuType | Rwby Vytal Versus Documentation",
    "keywords": "Enum TrainingPauseMenuHandler.SubmenuType Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public enum TrainingPauseMenuHandler.SubmenuType Fields basic = 0 dummySettings = 2 environment = 1"
  },
  "api/rwby.core.gamemodes.training.ui.TrainingPauseMenuHandler.html": {
    "href": "api/rwby.core.gamemodes.training.ui.TrainingPauseMenuHandler.html",
    "title": "Class TrainingPauseMenuHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingPauseMenuHandler Namespace rwby.core.gamemodes.training.ui Assembly Assembly-CSharp.dll public class TrainingPauseMenuHandler : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TrainingPauseMenuHandler Fields basicSettingsHandler public PauseMenuBasicSettingsHandler basicSettingsHandler Field Value PauseMenuBasicSettingsHandler currentSubmenu public TrainingPauseMenuHandler.SubmenuType currentSubmenu Field Value TrainingPauseMenuHandler.SubmenuType dummySettingsHandler public PauseMenuDummySettingsHandler dummySettingsHandler Field Value PauseMenuDummySettingsHandler environmentSettingsHandler public PauseMenuEnvironmentSettingsHandler environmentSettingsHandler Field Value PauseMenuEnvironmentSettingsHandler submenus public Dictionary<TrainingPauseMenuHandler.SubmenuType, MenuBase> submenus Field Value Dictionary<TrainingPauseMenuHandler.SubmenuType, MenuBase> trainingHudHandler public TrainingHUDHandler trainingHudHandler Field Value TrainingHUDHandler Methods Open() public void Open() SwapSubmenu(SubmenuType) public void SwapSubmenu(TrainingPauseMenuHandler.SubmenuType submenu) Parameters submenu TrainingPauseMenuHandler.SubmenuType TryClose() public bool TryClose() Returns bool"
  },
  "api/rwby.core.gamemodes.training.ui.html": {
    "href": "api/rwby.core.gamemodes.training.ui.html",
    "title": "Namespace rwby.core.gamemodes.training.ui | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.core.gamemodes.training.ui Classes DummySection DummySettingsFighterSelectScreen DummySettingsMainScreen PauseMenuBasicSettingsHandler PauseMenuDummySettingsHandler PauseMenuEnvironmentSettingsHandler TrainingPauseMenuHandler Enums PauseMenuBasicSettingsHandler.MenuType PauseMenuDummySettingsHandler.MenuTypes TrainingPauseMenuHandler.SubmenuType Delegates DummySettingsFighterSelectScreen.OnFighterSelected"
  },
  "api/rwby.core.html": {
    "href": "api/rwby.core.html",
    "title": "Namespace rwby.core | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.core Classes ConfigureDummyCommand HudElementGenericAurabar HudElementGenericHealthbar HudElementGenericHitstunbar HudElementRubyRose IntroFinishedCommand MusicTester OutroFinishedCommand OverheadHUDElement OverheadHUDHandler SpawnFighterCommand"
  },
  "api/rwby.core.systems.GenericGamemodeStateSystem.html": {
    "href": "api/rwby.core.systems.GenericGamemodeStateSystem.html",
    "title": "Class GenericGamemodeStateSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class GenericGamemodeStateSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll public class GenericGamemodeStateSystem : SystemMainThread, ISignalOnComponentAdded<GenericGamemodeGlobals>, ISignalOnComponentRemoved<GenericGamemodeGlobals>, ISignal Inheritance object SystemBase SystemMainThread GenericGamemodeStateSystem Implements ISignalOnComponentAdded<GenericGamemodeGlobals> ISignalOnComponentRemoved<GenericGamemodeGlobals> ISignal Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, GenericGamemodeGlobals*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, GenericGamemodeGlobals* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component GenericGamemodeGlobals* The component that was added. OnInit(Frame) Is called when the system is initialized. public override void OnInit(Frame f) Parameters f Frame The referenced frame. OnRemoved(Frame, EntityRef, GenericGamemodeGlobals*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, GenericGamemodeGlobals* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component GenericGamemodeGlobals* The component that was removed. SetState(Frame, GenericGamemodeStates) public static void SetState(Frame f, GenericGamemodeStates state) Parameters f Frame state GenericGamemodeStates SetStateDelayed(Frame, GenericGamemodeStates, FP) public static void SetStateDelayed(Frame f, GenericGamemodeStates state, FP delay) Parameters f Frame state GenericGamemodeStates delay FP Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/rwby.core.systems.MapIntroSystem.html": {
    "href": "api/rwby.core.systems.MapIntroSystem.html",
    "title": "Class MapIntroSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class MapIntroSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class MapIntroSystem : SystemMainThread, IGameStateGroupMapIntro, IGameStateGroup Inheritance object SystemBase SystemMainThread MapIntroSystem Implements IGameStateGroupMapIntro IGameStateGroup Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame. Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/rwby.core.systems.TeamVersusEndGameSystem.html": {
    "href": "api/rwby.core.systems.TeamVersusEndGameSystem.html",
    "title": "Class TeamVersusEndGameSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusEndGameSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusEndGameSystem : SystemMainThread, IGameStateGroupGame, IGameStateGroup Inheritance object SystemBase SystemMainThread TeamVersusEndGameSystem Implements IGameStateGroupGame IGameStateGroup Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/rwby.core.systems.TeamVersusGameSetupSystem.html": {
    "href": "api/rwby.core.systems.TeamVersusGameSetupSystem.html",
    "title": "Class TeamVersusGameSetupSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusGameSetupSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusGameSetupSystem : SystemSignalsOnly, IGameStateGroupGame, IGameStateGroup Inheritance object SystemBase SystemSignalsOnly TeamVersusGameSetupSystem Implements IGameStateGroupGame IGameStateGroup Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame."
  },
  "api/rwby.core.systems.TeamVersusGeneralSystem.html": {
    "href": "api/rwby.core.systems.TeamVersusGeneralSystem.html",
    "title": "Class TeamVersusGeneralSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusGeneralSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusGeneralSystem : SystemSignalsOnly, ISignalOnComponentAdded<TeamVersusGlobals>, ISignalOnComponentRemoved<TeamVersusGlobals>, ISignal Inheritance object SystemBase SystemSignalsOnly TeamVersusGeneralSystem Implements ISignalOnComponentAdded<TeamVersusGlobals> ISignalOnComponentRemoved<TeamVersusGlobals> ISignal Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, TeamVersusGlobals*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, TeamVersusGlobals* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component TeamVersusGlobals* The component that was added. OnRemoved(Frame, EntityRef, TeamVersusGlobals*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, TeamVersusGlobals* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component TeamVersusGlobals* The component that was removed."
  },
  "api/rwby.core.systems.TeamVersusOutroSetupSystem.html": {
    "href": "api/rwby.core.systems.TeamVersusOutroSetupSystem.html",
    "title": "Class TeamVersusOutroSetupSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusOutroSetupSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusOutroSetupSystem : SystemMainThread, IGameStateGroupOutro, IGameStateGroup Inheritance object SystemBase SystemMainThread TeamVersusOutroSetupSystem Implements IGameStateGroupOutro IGameStateGroup Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame. Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/rwby.core.systems.TeamVersusPlayerDeathSystem.html": {
    "href": "api/rwby.core.systems.TeamVersusPlayerDeathSystem.html",
    "title": "Class TeamVersusPlayerDeathSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusPlayerDeathSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusPlayerDeathSystem : SystemSignalsOnly, IGameStateGroupGame, IGameStateGroup, ISignalHealthDecreased, ISignal Inheritance object SystemBase SystemSignalsOnly TeamVersusPlayerDeathSystem Implements IGameStateGroupGame IGameStateGroup ISignalHealthDecreased ISignal Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods HealthDecreased(Frame, EntityRef, int, int) public void HealthDecreased(Frame f, EntityRef entity, int oldHealth, int newHealth) Parameters f Frame entity EntityRef oldHealth int newHealth int"
  },
  "api/rwby.core.systems.TeamVersusPlayerDespawnSystem.html": {
    "href": "api/rwby.core.systems.TeamVersusPlayerDespawnSystem.html",
    "title": "Class TeamVersusPlayerDespawnSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusPlayerDespawnSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusPlayerDespawnSystem : SystemSignalsOnly, IGameStateGroupGame, IGameStateGroup, ISignalDespawnFighter, ISignal Inheritance object SystemBase SystemSignalsOnly TeamVersusPlayerDespawnSystem Implements IGameStateGroupGame IGameStateGroup ISignalDespawnFighter ISignal Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods DespawnFighter(Frame, EntityRef) public void DespawnFighter(Frame f, EntityRef entity) Parameters f Frame entity EntityRef"
  },
  "api/rwby.core.systems.TeamVersusPlayerRespawnSystem.html": {
    "href": "api/rwby.core.systems.TeamVersusPlayerRespawnSystem.html",
    "title": "Class TeamVersusPlayerRespawnSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusPlayerRespawnSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusPlayerRespawnSystem : SystemMainThread, IGameStateGroupGame, IGameStateGroupCountdown, IGameStateGroup Inheritance object SystemBase SystemMainThread TeamVersusPlayerRespawnSystem Implements IGameStateGroupGame IGameStateGroupCountdown IGameStateGroup Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/rwby.core.systems.TeamVersusPlayerSpawnSystem.html": {
    "href": "api/rwby.core.systems.TeamVersusPlayerSpawnSystem.html",
    "title": "Class TeamVersusPlayerSpawnSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusPlayerSpawnSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusPlayerSpawnSystem : SystemSignalsOnly, IGameStateGroupMapIntro, IGameStateGroup Inheritance object SystemBase SystemSignalsOnly TeamVersusPlayerSpawnSystem Implements IGameStateGroupMapIntro IGameStateGroup Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame."
  },
  "api/rwby.core.systems.TeamVersusPregameSystem.html": {
    "href": "api/rwby.core.systems.TeamVersusPregameSystem.html",
    "title": "Class TeamVersusPregameSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusPregameSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusPregameSystem : SystemSignalsOnly, IGameStateGroupPregame, IGameStateGroup, ISignalOnPlayerAdded, ISignal Inheritance object SystemBase SystemSignalsOnly TeamVersusPregameSystem Implements IGameStateGroupPregame IGameStateGroup ISignalOnPlayerAdded ISignal Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame. OnPlayerAdded(Frame, PlayerRef, bool) This signal is called when a player was successfully added to the simulation and the server accepted the RuntimePlayer data. public void OnPlayerAdded(Frame f, PlayerRef player, bool firstTime) Parameters f Frame The frame reference. player PlayerRef The player that was added. firstTime bool The first time that this player ref was assigned to a player at all. When firstTime is false the player ref is being reused by a different player. See documentation."
  },
  "api/rwby.core.systems.TeamVersusVictoryScreenSystem.html": {
    "href": "api/rwby.core.systems.TeamVersusVictoryScreenSystem.html",
    "title": "Class TeamVersusVictoryScreenSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusVictoryScreenSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusVictoryScreenSystem : SystemMainThread, IGameStateGroupVictory, IGameStateGroup Inheritance object SystemBase SystemMainThread TeamVersusVictoryScreenSystem Implements IGameStateGroupVictory IGameStateGroup Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame. Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/rwby.core.systems.TrainingPlayerDespawnSystem.html": {
    "href": "api/rwby.core.systems.TrainingPlayerDespawnSystem.html",
    "title": "Class TrainingPlayerDespawnSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingPlayerDespawnSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TrainingPlayerDespawnSystem : SystemSignalsOnly, IGameStateGroupGame, IGameStateGroup, ISignalDespawnFighter, ISignal Inheritance object SystemBase SystemSignalsOnly TrainingPlayerDespawnSystem Implements IGameStateGroupGame IGameStateGroup ISignalDespawnFighter ISignal Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods DespawnFighter(Frame, EntityRef) public void DespawnFighter(Frame f, EntityRef entity) Parameters f Frame entity EntityRef"
  },
  "api/rwby.core.systems.TrainingPlayerRespawnSystem.html": {
    "href": "api/rwby.core.systems.TrainingPlayerRespawnSystem.html",
    "title": "Class TrainingPlayerRespawnSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingPlayerRespawnSystem Namespace rwby.core.systems Assembly Quantum.Simulation.dll [Preserve] public class TrainingPlayerRespawnSystem : SystemMainThread, IGameStateGroupGame, IGameStateGroupCountdown, IGameStateGroup Inheritance object SystemBase SystemMainThread TrainingPlayerRespawnSystem Implements IGameStateGroupGame IGameStateGroupCountdown IGameStateGroup Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/rwby.core.systems.html": {
    "href": "api/rwby.core.systems.html",
    "title": "Namespace rwby.core.systems | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.core.systems Classes GenericGamemodeStateSystem MapIntroSystem TeamVersusEndGameSystem TeamVersusGameSetupSystem TeamVersusGeneralSystem TeamVersusOutroSetupSystem TeamVersusPlayerDeathSystem TeamVersusPlayerDespawnSystem TeamVersusPlayerRespawnSystem TeamVersusPlayerSpawnSystem TeamVersusPregameSystem TeamVersusVictoryScreenSystem TrainingPlayerDespawnSystem TrainingPlayerRespawnSystem"
  },
  "api/rwby.core.systems.teamversus.TeamVersusCharacterIntroSystem.html": {
    "href": "api/rwby.core.systems.teamversus.TeamVersusCharacterIntroSystem.html",
    "title": "Class TeamVersusCharacterIntroSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TeamVersusCharacterIntroSystem Namespace rwby.core.systems.teamversus Assembly Quantum.Simulation.dll [Preserve] public class TeamVersusCharacterIntroSystem : SystemMainThread, IGameStateGroupCharacterIntro, IGameStateGroup Inheritance object SystemBase SystemMainThread TeamVersusCharacterIntroSystem Implements IGameStateGroupCharacterIntro IGameStateGroup Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame. Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/rwby.core.systems.teamversus.html": {
    "href": "api/rwby.core.systems.teamversus.html",
    "title": "Namespace rwby.core.systems.teamversus | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.core.systems.teamversus Classes TeamVersusCharacterIntroSystem"
  },
  "api/rwby.core.systems.training.TrainingAISystem.html": {
    "href": "api/rwby.core.systems.training.TrainingAISystem.html",
    "title": "Class TrainingAISystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingAISystem Namespace rwby.core.systems.training Assembly Quantum.Simulation.dll [Preserve] public class TrainingAISystem : SystemMainThread, ISignalOnComponentAdded<HFSMAgent>, ISignalOnComponentRemoved<HFSMAgent>, ISignalOnComponentAdded<AIBlackboardComponent>, ISignalOnComponentRemoved<AIBlackboardComponent>, ISignal Inheritance object SystemBase SystemMainThread TrainingAISystem Implements ISignalOnComponentAdded<HFSMAgent> ISignalOnComponentRemoved<HFSMAgent> ISignalOnComponentAdded<AIBlackboardComponent> ISignalOnComponentRemoved<AIBlackboardComponent> ISignal Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, AIBlackboardComponent*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame frame, EntityRef entity, AIBlackboardComponent* component) Parameters frame Frame entity EntityRef The entity that the component was added to. component AIBlackboardComponent* The component that was added. OnAdded(Frame, EntityRef, HFSMAgent*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame frame, EntityRef entity, HFSMAgent* component) Parameters frame Frame entity EntityRef The entity that the component was added to. component HFSMAgent* The component that was added. OnRemoved(Frame, EntityRef, AIBlackboardComponent*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame frame, EntityRef entity, AIBlackboardComponent* component) Parameters frame Frame entity EntityRef The entity that the component was removed from. component AIBlackboardComponent* The component that was removed. OnRemoved(Frame, EntityRef, HFSMAgent*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, HFSMAgent* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component HFSMAgent* The component that was removed. Update(Frame) Override to add workload. public override void Update(Frame frame) Parameters frame Frame"
  },
  "api/rwby.core.systems.training.TrainingDummyEarlyUpdateSystem.html": {
    "href": "api/rwby.core.systems.training.TrainingDummyEarlyUpdateSystem.html",
    "title": "Class TrainingDummyEarlyUpdateSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingDummyEarlyUpdateSystem Namespace rwby.core.systems.training Assembly Quantum.Simulation.dll [Preserve] public class TrainingDummyEarlyUpdateSystem : SystemMainThread Inheritance object SystemBase SystemMainThread TrainingDummyEarlyUpdateSystem Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods Update(Frame) Override to add workload. public override void Update(Frame frame) Parameters frame Frame"
  },
  "api/rwby.core.systems.training.TrainingDummyGeneralSystem.html": {
    "href": "api/rwby.core.systems.training.TrainingDummyGeneralSystem.html",
    "title": "Class TrainingDummyGeneralSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingDummyGeneralSystem Namespace rwby.core.systems.training Assembly Quantum.Simulation.dll [Preserve] public class TrainingDummyGeneralSystem : SystemMainThread, ISignalOnComponentAdded<DummyConfiguration>, ISignalOnComponentRemoved<DummyConfiguration>, ISignal Inheritance object SystemBase SystemMainThread TrainingDummyGeneralSystem Implements ISignalOnComponentAdded<DummyConfiguration> ISignalOnComponentRemoved<DummyConfiguration> ISignal Inherited Members SystemMainThread.ScheduleUpdate(Frame, TaskHandle) SystemMainThread.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, DummyConfiguration*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame frame, EntityRef entity, DummyConfiguration* component) Parameters frame Frame entity EntityRef The entity that the component was added to. component DummyConfiguration* The component that was added. OnRemoved(Frame, EntityRef, DummyConfiguration*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame frame, EntityRef entity, DummyConfiguration* component) Parameters frame Frame entity EntityRef The entity that the component was removed from. component DummyConfiguration* The component that was removed. Update(Frame) Override to add workload. public override void Update(Frame f) Parameters f Frame The current fame."
  },
  "api/rwby.core.systems.training.TrainingGameSetupSystem.html": {
    "href": "api/rwby.core.systems.training.TrainingGameSetupSystem.html",
    "title": "Class TrainingGameSetupSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingGameSetupSystem Namespace rwby.core.systems.training Assembly Quantum.Simulation.dll [Preserve] public class TrainingGameSetupSystem : SystemSignalsOnly, IGameStateGroupGame, IGameStateGroup Inheritance object SystemBase SystemSignalsOnly TrainingGameSetupSystem Implements IGameStateGroupGame IGameStateGroup Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame."
  },
  "api/rwby.core.systems.training.TrainingGeneralSystem.html": {
    "href": "api/rwby.core.systems.training.TrainingGeneralSystem.html",
    "title": "Class TrainingGeneralSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingGeneralSystem Namespace rwby.core.systems.training Assembly Quantum.Simulation.dll [Preserve] public class TrainingGeneralSystem : SystemSignalsOnly, ISignalOnComponentAdded<TrainingGlobals>, ISignalOnComponentRemoved<TrainingGlobals>, ISignal Inheritance object SystemBase SystemSignalsOnly TrainingGeneralSystem Implements ISignalOnComponentAdded<TrainingGlobals> ISignalOnComponentRemoved<TrainingGlobals> ISignal Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.StartEnabled SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Methods OnAdded(Frame, EntityRef, TrainingGlobals*) The signal is called after a component of the desired type has been added to an entity. public void OnAdded(Frame f, EntityRef entity, TrainingGlobals* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was added to. component TrainingGlobals* The component that was added. OnRemoved(Frame, EntityRef, TrainingGlobals*) The signal is called after a component of the desired type has been removed from an entity. public void OnRemoved(Frame f, EntityRef entity, TrainingGlobals* component) Parameters f Frame The frame reference. entity EntityRef The entity that the component was removed from. component TrainingGlobals* The component that was removed."
  },
  "api/rwby.core.systems.training.TrainingPlayerDeathSystem.html": {
    "href": "api/rwby.core.systems.training.TrainingPlayerDeathSystem.html",
    "title": "Class TrainingPlayerDeathSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingPlayerDeathSystem Namespace rwby.core.systems.training Assembly Quantum.Simulation.dll [Preserve] public class TrainingPlayerDeathSystem : SystemSignalsOnly, IGameStateGroupGame, IGameStateGroup, ISignalHealthDecreased, ISignal Inheritance object SystemBase SystemSignalsOnly TrainingPlayerDeathSystem Implements IGameStateGroupGame IGameStateGroup ISignalHealthDecreased ISignal Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnEnabled(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods HealthDecreased(Frame, EntityRef, int, int) public void HealthDecreased(Frame f, EntityRef entity, int oldHealth, int newHealth) Parameters f Frame entity EntityRef oldHealth int newHealth int"
  },
  "api/rwby.core.systems.training.TrainingPregameSystem.html": {
    "href": "api/rwby.core.systems.training.TrainingPregameSystem.html",
    "title": "Class TrainingPregameSystem | Rwby Vytal Versus Documentation",
    "keywords": "Class TrainingPregameSystem Namespace rwby.core.systems.training Assembly Quantum.Simulation.dll [Preserve] public class TrainingPregameSystem : SystemSignalsOnly, IGameStateGroupPregame, IGameStateGroup, ISignalOnPlayerAdded, ISignal Inheritance object SystemBase SystemSignalsOnly TrainingPregameSystem Implements IGameStateGroupPregame IGameStateGroup ISignalOnPlayerAdded ISignal Inherited Members SystemSignalsOnly.Schedule(Frame, TaskHandle) SystemBase.RuntimeIndex SystemBase.ParentSystem SystemBase.ChildSystems SystemBase.Hierarchy SystemBase.OnInit(Frame) SystemBase.OnDisabled(Frame) SystemBase.OnSchedule(Frame, TaskHandle) Properties StartEnabled Set to true when the simulation should start with this system enabled. public override bool StartEnabled { get; } Property Value bool Methods OnEnabled(Frame) Is called when the system was enabled for example after calling SystemEnable<T>() or during InitSystems(DeterministicFrame). public override void OnEnabled(Frame f) Parameters f Frame The referenced frame. OnPlayerAdded(Frame, PlayerRef, bool) This signal is called when a player was successfully added to the simulation and the server accepted the RuntimePlayer data. public void OnPlayerAdded(Frame f, PlayerRef player, bool firstTime) Parameters f Frame The frame reference. player PlayerRef The player that was added. firstTime bool The first time that this player ref was assigned to a player at all. When firstTime is false the player ref is being reused by a different player. See documentation."
  },
  "api/rwby.core.systems.training.html": {
    "href": "api/rwby.core.systems.training.html",
    "title": "Namespace rwby.core.systems.training | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.core.systems.training Classes TrainingAISystem TrainingDummyEarlyUpdateSystem TrainingDummyGeneralSystem TrainingGameSetupSystem TrainingGeneralSystem TrainingPlayerDeathSystem TrainingPregameSystem"
  },
  "api/rwby.html": {
    "href": "api/rwby.html",
    "title": "Namespace rwby | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby Classes ActorCutscenePlayer AddressablesCommandListDefinition AddressablesCommandListEntry AddressablesHudElementDefinition AddressablesHudElementDefinitionContainer AddressablesSongDefinition AddressablesSongDefinitionContainer AudioListenerManager AuraBurnoutSystem BaseCommandListDefinition BaseCommandListEntry BaseCommandListEntryGrouping BaseCommandListMovesetDefinition BaseSongDefinition BaseSongDefinitionContainer Bootloader ClientManager CreateLobbyScreen CustomEntityView CustomEntityViewUpdater CutsceneBinder CutsceneBinder.CinemachineTrackBindingDefinition CutsceneBindingSource CutsceneBindingSourceCondition CutsceneGrouping DummyCamera EntityAnimationUpdater ExternalModAssetSoftReference FindLobbyScreen ForceRenderRate GameConstants GameManager GlobalCutsceneManager HudElementContainer InputActions InputManager LoadingScreenManager MatchHandlerBase MenuLabelExternalOptionElement MirrorNetworkManager MultipleDisplayUtilities MusicLooper MusicLooperTrack MusicManager NetworkConsoleCommands NetworkManager NetworkMatchSessionHandler NetworkMessagesCharacterLoading OfflineMatchSessionHandler ParentSelectable QuickBootloader SaveManager SessionHandlerBase SetPositionFromCutsceneBinding SetTextFromVersion SettingsManager SongAudio StagingManager TargetCameraManager TestUIMenu TitleMainScreen TitleScreen UIElementTweenSequence UModGamemodeDefinition UModHudElementDefinition UModHudElementDefinitionContainer UModMapDefinitionContainer UModModInfoAsset UModModLoader UModSongDefinition UModSongDefinitionContainer UrpCameraSettingsUpdater Structs AuraBurnoutSystem.Filter ExternalOptionDefinition InputActions.PlayerActions InputActions.UIActions NetworkMessagesCharacterLoading.ClientToServerRequestRoomMembersLoadFighter SaveData VideoSettings Interfaces IClosableMenu ICutsceneBinding IFighterDefinitionUser IHUDElement ILocalEntityHolder InputActions.IPlayerActions InputActions.IUIActions Enums InputManager.ControlSchemeType LobbyClientState LobbyModStrictness SongLoopType TargetCameraManager.CameraState TitleMainScreen.SubmenuType Delegates ActorCutscenePlayer.CutsceneEvent ClientManager.ClientManagerEvent ClientManager.ClientManagerPlayerCountEvent CustomEntityView.EntityAction MatchHandlerBase.MatchEvent MirrorNetworkManager.EmptyEvent MirrorNetworkManager.ServerClientEvent NetworkMatchSessionHandler.MatchEvent SettingsManager.SettingsChangedEvent"
  },
  "api/rwby.sessionhandlers.lobby.BGMSelectScreen.FighterEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.BGMSelectScreen.FighterEvent.html",
    "title": "Delegate BGMSelectScreen.FighterEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate BGMSelectScreen.FighterEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void BGMSelectScreen.FighterEvent(BaseSongDefinition songDefinition) Parameters songDefinition BaseSongDefinition"
  },
  "api/rwby.sessionhandlers.lobby.BGMSelectScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.BGMSelectScreen.html",
    "title": "Class BGMSelectScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class BGMSelectScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class BGMSelectScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase BGMSelectScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields OnFighterSelectedEvent public BGMSelectScreen.FighterEvent OnFighterSelectedEvent Field Value BGMSelectScreen.FighterEvent currentlySelectedSong public BaseSongDefinition currentlySelectedSong Field Value BaseSongDefinition fighhterDescriptionPanelText public TextMeshProUGUI fighhterDescriptionPanelText Field Value TextMeshProUGUI fighterItemPrefab public GameObject fighterItemPrefab Field Value GameObject fighterNamePanelText public TextMeshProUGUI fighterNamePanelText Field Value TextMeshProUGUI fighterScrollView public ScrollRect fighterScrollView Field Value ScrollRect Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler SelectCurrentViewingFighter() public void SelectCurrentViewingFighter() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.sessionhandlers.lobby.CharacterSelectionScreen.FighterEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.CharacterSelectionScreen.FighterEvent.html",
    "title": "Delegate CharacterSelectionScreen.FighterEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate CharacterSelectionScreen.FighterEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void CharacterSelectionScreen.FighterEvent(IFighterDefinition fighterDefinition) Parameters fighterDefinition IFighterDefinition"
  },
  "api/rwby.sessionhandlers.lobby.CharacterSelectionScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.CharacterSelectionScreen.html",
    "title": "Class CharacterSelectionScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class CharacterSelectionScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class CharacterSelectionScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase CharacterSelectionScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields OnFighterSelectedEvent public CharacterSelectionScreen.FighterEvent OnFighterSelectedEvent Field Value CharacterSelectionScreen.FighterEvent currentlySelectedFighter public IFighterDefinition currentlySelectedFighter Field Value IFighterDefinition fighhterDescriptionPanelText public TextMeshProUGUI fighhterDescriptionPanelText Field Value TextMeshProUGUI fighterItemPrefab public GameObject fighterItemPrefab Field Value GameObject fighterNamePanelText public TextMeshProUGUI fighterNamePanelText Field Value TextMeshProUGUI fighterScrollView public ScrollRect fighterScrollView Field Value ScrollRect Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler SelectCurrentViewingFighter() public void SelectCurrentViewingFighter() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool TrySelectCurrentViewingFighter() public UniTask TrySelectCurrentViewingFighter() Returns UniTask"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientAssetEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientAssetEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.ClientAssetEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.ClientAssetEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.ClientAssetEvent(ClientManager client, ModAssetSoftReference[] assetRefs, bool result) Parameters client ClientManager assetRefs ModAssetSoftReference[] result bool"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent(ClientManager client, ModAssetSoftReference characterRef, bool result) Parameters client ClientManager characterRef ModAssetSoftReference result bool"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientReadyStateEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.ClientReadyStateEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.ClientReadyStateEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.ClientReadyStateEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.ClientReadyStateEvent(int matchID, ClientManager client, int localPlayerID, bool readyState) Parameters matchID int client ClientManager localPlayerID int readyState bool"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.EmptyEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.EmptyEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.EmptyEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.EmptyEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.EmptyEvent()"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.JoinMatchResponseEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.JoinMatchResponseEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.JoinMatchResponseEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.JoinMatchResponseEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.JoinMatchResponseEvent(NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode result) Parameters result NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent.html",
    "title": "Delegate LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent | Rwby Vytal Versus Documentation",
    "keywords": "Delegate LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public delegate void LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent(bool result, int matchID) Parameters result bool matchID int"
  },
  "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.html": {
    "href": "api/rwby.sessionhandlers.lobby.LobbySessionNetworkMessageHandler.html",
    "title": "Class LobbySessionNetworkMessageHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class LobbySessionNetworkMessageHandler Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class LobbySessionNetworkMessageHandler Inheritance object LobbySessionNetworkMessageHandler Fields OnClientReportHasAsset public LobbySessionNetworkMessageHandler.ClientAssetEvent OnClientReportHasAsset Field Value LobbySessionNetworkMessageHandler.ClientAssetEvent OnClientSetCharacterResponse public LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent OnClientSetCharacterResponse Field Value LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent OnJoinMatchGetResponse public LobbySessionNetworkMessageHandler.JoinMatchResponseEvent OnJoinMatchGetResponse Field Value LobbySessionNetworkMessageHandler.JoinMatchResponseEvent OnMatchCreationOrUpdateResult public LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent OnMatchCreationOrUpdateResult Field Value LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent OnMatchListUpdated public LobbySessionNetworkMessageHandler.EmptyEvent OnMatchListUpdated Field Value LobbySessionNetworkMessageHandler.EmptyEvent ServerOnPlayerReadyStateChanged public LobbySessionNetworkMessageHandler.ClientReadyStateEvent ServerOnPlayerReadyStateChanged Field Value LobbySessionNetworkMessageHandler.ClientReadyStateEvent lobbySessionHandler public NetworkLobbySessionHandler lobbySessionHandler Field Value NetworkLobbySessionHandler Methods ClientAttemptReadyUpAsync(int) public UniTask<bool> ClientAttemptReadyUpAsync(int localPlayerID) Parameters localPlayerID int Returns UniTask<bool> ClientRequestMatchList() public void ClientRequestMatchList() ClientTryAddNewMatchAsync(NetworkLobbySessionMatchInfo) public UniTask<(bool, int)> ClientTryAddNewMatchAsync(NetworkLobbySessionMatchInfo matchInfo) Parameters matchInfo NetworkLobbySessionMatchInfo Returns UniTask<(bool, int)> ClientTryJoinMatchAsync(int, int, int, int) public UniTask<bool> ClientTryJoinMatchAsync(int matchID, int team, int slot, int localPlayerID) Parameters matchID int team int slot int localPlayerID int Returns UniTask<bool> ClientTrySetCharacterAsync(ModAssetSoftReference, int) public UniTask<bool> ClientTrySetCharacterAsync(ModAssetSoftReference characterRef, int localPlayerID) Parameters characterRef ModAssetSoftReference localPlayerID int Returns UniTask<bool> ClientUnready(int) public void ClientUnready(int localPlayerID) Parameters localPlayerID int RegisterNetworkMessages() public void RegisterNetworkMessages() ServerStartMatch(int) public void ServerStartMatch(int matchId) Parameters matchId int ServerUpdateClientMatchList(NetworkConnectionToClient, RequestMatchListMessage) public void ServerUpdateClientMatchList(NetworkConnectionToClient requester, NetworkLobbySessionHandlerMessages.RequestMatchListMessage msg) Parameters requester NetworkConnectionToClient msg NetworkLobbySessionHandlerMessages.RequestMatchListMessage"
  },
  "api/rwby.sessionhandlers.lobby.MatchCreationScreenGamemodeSelectionScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.MatchCreationScreenGamemodeSelectionScreen.html",
    "title": "Class MatchCreationScreenGamemodeSelectionScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class MatchCreationScreenGamemodeSelectionScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class MatchCreationScreenGamemodeSelectionScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase MatchCreationScreenGamemodeSelectionScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields gamemodeDescriptionPanelText public TextMeshProUGUI gamemodeDescriptionPanelText Field Value TextMeshProUGUI gamemodeItemPrefab public GameObject gamemodeItemPrefab Field Value GameObject gamemodeNamePanelText public TextMeshProUGUI gamemodeNamePanelText Field Value TextMeshProUGUI gamemodeScrollView public ScrollRect gamemodeScrollView Field Value ScrollRect matchCreationScreen public NetworkLobbySessionMatchCreationScreen matchCreationScreen Field Value NetworkLobbySessionMatchCreationScreen Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler SelectCurrentViewingGamemode() public void SelectCurrentViewingGamemode() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.sessionhandlers.lobby.MatchCreationScreenMainScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.MatchCreationScreenMainScreen.html",
    "title": "Class MatchCreationScreenMainScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class MatchCreationScreenMainScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class MatchCreationScreenMainScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase MatchCreationScreenMainScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields createLobbyButton public Button createLobbyButton Field Value Button pickGamemodeButton public Button pickGamemodeButton Field Value Button pickMapButton public Button pickMapButton Field Value Button regionDropdown public TMP_Dropdown regionDropdown Field Value TMP_Dropdown Methods AttemptToCreateLobby() public void AttemptToCreateLobby() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler Refresh() public void Refresh() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.sessionhandlers.lobby.MatchCreationScreenMapSelectionScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.MatchCreationScreenMapSelectionScreen.html",
    "title": "Class MatchCreationScreenMapSelectionScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class MatchCreationScreenMapSelectionScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class MatchCreationScreenMapSelectionScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase MatchCreationScreenMapSelectionScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields gamemodeDescriptionPanelText public TextMeshProUGUI gamemodeDescriptionPanelText Field Value TextMeshProUGUI gamemodeItemPrefab public GameObject gamemodeItemPrefab Field Value GameObject gamemodeNamePanelText public TextMeshProUGUI gamemodeNamePanelText Field Value TextMeshProUGUI gamemodeScrollView public ScrollRect gamemodeScrollView Field Value ScrollRect matchCreationScreen public NetworkLobbySessionMatchCreationScreen matchCreationScreen Field Value NetworkLobbySessionMatchCreationScreen Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler SelectCurrentViewingGamemode() public void SelectCurrentViewingGamemode() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.sessionhandlers.lobby.MatchPlayerListHolder.html": {
    "href": "api/rwby.sessionhandlers.lobby.MatchPlayerListHolder.html",
    "title": "Class MatchPlayerListHolder | Rwby Vytal Versus Documentation",
    "keywords": "Class MatchPlayerListHolder Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class MatchPlayerListHolder : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MatchPlayerListHolder Fields listTitle public TextMeshProUGUI listTitle Field Value TextMeshProUGUI playerListGroup public GridLayoutGroup playerListGroup Field Value GridLayoutGroup playerListItemPrefab public GameObject playerListItemPrefab Field Value GameObject readyColor public Color readyColor Field Value Color Methods UpdateList(NetworkLobbySessionMatchScreen, NetworkLobbySessionMatchInfo, int) public void UpdateList(NetworkLobbySessionMatchScreen matchScreen, NetworkLobbySessionMatchInfo matchInfo, int teamIndex) Parameters matchScreen NetworkLobbySessionMatchScreen matchInfo NetworkLobbySessionMatchInfo teamIndex int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandler.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandler.html",
    "title": "Class NetworkLobbySessionHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkLobbySessionHandler Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class NetworkLobbySessionHandler : SessionHandlerBase Inheritance object Object Component Behaviour MonoBehaviour SessionHandlerBase NetworkLobbySessionHandler Inherited Members SessionHandlerBase.ID Fields currentMatches public List<NetworkLobbySessionMatchInfo> currentMatches Field Value List<NetworkLobbySessionMatchInfo> gameManager [HideInInspector] public GameManager gameManager Field Value GameManager lobbyMenuHandlers public List<NetworkLobbySessionMenuHandler> lobbyMenuHandlers Field Value List<NetworkLobbySessionMenuHandler> lobbyMenuPrefab public NetworkLobbySessionMenuHandler lobbyMenuPrefab Field Value NetworkLobbySessionMenuHandler mirrorNetworkManager [HideInInspector] public MirrorNetworkManager mirrorNetworkManager Field Value MirrorNetworkManager networkMessageHandler public LobbySessionNetworkMessageHandler networkMessageHandler Field Value LobbySessionNetworkMessageHandler quantumAppSettings public AppSettings quantumAppSettings Field Value AppSettings quantumClient public RealtimeClient quantumClient Field Value RealtimeClient selectedSong public BaseSongDefinition selectedSong Field Value BaseSongDefinition Methods CreateLobby(string, string, uint, Guid) public virtual bool CreateLobby(string lobbyName, string password, uint maxClients, Guid modListGuid) Parameters lobbyName string password string maxClients uint modListGuid Guid Returns bool CreateQuantumClient() public virtual void CreateQuantumClient() GetMatchIndexByID(int) public int GetMatchIndexByID(int id) Parameters id int Returns int GetMatchInfoByID(int) public NetworkLobbySessionMatchInfo GetMatchInfoByID(int id) Parameters id int Returns NetworkLobbySessionMatchInfo Initialize() public override bool Initialize() Returns bool JoinLobby(LobbyDetails) public virtual bool JoinLobby(LobbyDetails lobbyDetails) Parameters lobbyDetails LobbyDetails Returns bool QuantumClientUpdateRegionPing() public virtual UniTask<bool> QuantumClientUpdateRegionPing() Returns UniTask<bool> RegisterNetworkEvents() public void RegisterNetworkEvents() SetMatchInfo(NetworkLobbySessionMatchInfo) public void SetMatchInfo(NetworkLobbySessionMatchInfo newMatchInfo) Parameters newMatchInfo NetworkLobbySessionMatchInfo SetupLobbyLocalUI() public void SetupLobbyLocalUI() Teardown() public override UniTask Teardown() Returns UniTask TeardownLobbyLocalUI() public void TeardownLobbyLocalUI() UnregisterNetworkEvents() public void UnregisterNetworkEvents() Update() public void Update()"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ChatMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ChatMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ChatMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ChatMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ChatMessage"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse Fields assetReferences public ModAssetSoftReference[] assetReferences Field Value ModAssetSoftReference[] hasAssets public bool hasAssets Field Value bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp Fields localPlayerID public int localPlayerID Field Value int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAttemptToUnready.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientAttemptToUnready.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientAttemptToUnready | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientAttemptToUnready Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientAttemptToUnready Fields localPlayerID public int localPlayerID Field Value int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode.html",
    "title": "Enum NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode | Rwby Vytal Versus Documentation",
    "keywords": "Enum NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public enum NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode Fields InvalidMatch = 2 InvalidModID = 1 InvalidTeam = 3 Success = 0"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage Fields result public NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode result Field Value NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse Fields characterReference public ModAssetSoftReference characterReference Field Value ModAssetSoftReference result public bool result Field Value bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage Fields localPlayerID public int localPlayerID Field Value int matchID public int matchID Field Value int slot public int slot Field Value int team public int team Field Value int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage Fields characterReference public ModAssetSoftReference characterReference Field Value ModAssetSoftReference localPlayerID public int localPlayerID Field Value int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage Fields matchID public int matchID Field Value int result public bool result Field Value bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage Fields matches public NetworkLobbySessionMatchInfo[] matches Field Value NetworkLobbySessionMatchInfo[]"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestMatchListMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestMatchListMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.RequestMatchListMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.RequestMatchListMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.RequestMatchListMessage"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestNewMatchMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestNewMatchMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.RequestNewMatchMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.RequestNewMatchMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.RequestNewMatchMessage Fields id public int id Field Value int matchInfo public NetworkLobbySessionMatchInfo matchInfo Field Value NetworkLobbySessionMatchInfo"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage Fields newMatchInfo public NetworkLobbySessionMatchInfo newMatchInfo Field Value NetworkLobbySessionMatchInfo"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse Fields localPlayerID public int localPlayerID Field Value int result public bool result Field Value bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets Fields assetReferences public ModAssetSoftReference[] assetReferences Field Value ModAssetSoftReference[]"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerStartMatchMessage.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.ServerStartMatchMessage.html",
    "title": "Struct NetworkLobbySessionHandlerMessages.ServerStartMatchMessage | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionHandlerMessages.ServerStartMatchMessage Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public struct NetworkLobbySessionHandlerMessages.ServerStartMatchMessage Fields matchId public int matchId Field Value int"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionHandlerMessages.html",
    "title": "Class NetworkLobbySessionHandlerMessages | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkLobbySessionHandlerMessages Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public static class NetworkLobbySessionHandlerMessages Inheritance object NetworkLobbySessionHandlerMessages"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchClientDefinition.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchClientDefinition.html",
    "title": "Struct NetworkLobbySessionMatchClientDefinition | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionMatchClientDefinition Namespace rwby.sessionhandlers.lobby Assembly rwby.dll [Serializable] public struct NetworkLobbySessionMatchClientDefinition Fields characterReference public ModAssetSoftReference characterReference Field Value ModAssetSoftReference client public ClientManager client Field Value ClientManager localPlayerID public int localPlayerID Field Value int ready public bool ready Field Value bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchCreationScreen.MenuTypes.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchCreationScreen.MenuTypes.html",
    "title": "Enum NetworkLobbySessionMatchCreationScreen.MenuTypes | Rwby Vytal Versus Documentation",
    "keywords": "Enum NetworkLobbySessionMatchCreationScreen.MenuTypes Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public enum NetworkLobbySessionMatchCreationScreen.MenuTypes Fields GamemodeSelection = 1 Main = 0 MapSelection = 2"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchCreationScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchCreationScreen.html",
    "title": "Class NetworkLobbySessionMatchCreationScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkLobbySessionMatchCreationScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class NetworkLobbySessionMatchCreationScreen : MenuAndHandlerBase, IMenu, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuBase MenuAndHandlerBase NetworkLobbySessionMatchCreationScreen Implements IMenu IMenuHandler Inherited Members MenuAndHandlerBase.menus MenuAndHandlerBase.history MenuAndHandlerBase.ResetAndForwardTo(int) MenuAndHandlerBase.Forward(int, bool) MenuAndHandlerBase.Back() MenuAndHandlerBase.GetHistory() MenuAndHandlerBase.GetCurrentMenu() MenuAndHandlerBase.HasSubmenuOpen() MenuBase.currentHandler Fields gamemodeSelectionScreen public MatchCreationScreenGamemodeSelectionScreen gamemodeSelectionScreen Field Value MatchCreationScreenGamemodeSelectionScreen mainScreen public MatchCreationScreenMainScreen mainScreen Field Value MatchCreationScreenMainScreen mapSelectionScreen public MatchCreationScreenMapSelectionScreen mapSelectionScreen Field Value MatchCreationScreenMapSelectionScreen messageHandler [FormerlySerializedAs(\"lobbySessionHandler\")] public NetworkLobbySessionHandler messageHandler Field Value NetworkLobbySessionHandler pickedGamemode [NonSerialized] public BaseGamemodeDefinition pickedGamemode Field Value BaseGamemodeDefinition pickedMap [NonSerialized] public IMapDefinition pickedMap Field Value IMapDefinition Methods Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler PickGamemode(BaseGamemodeDefinition) public void PickGamemode(BaseGamemodeDefinition gamemodeDefinition) Parameters gamemodeDefinition BaseGamemodeDefinition PickMap(IMapDefinition) public void PickMap(IMapDefinition mapDefinition) Parameters mapDefinition IMapDefinition TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchInfo.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchInfo.html",
    "title": "Struct NetworkLobbySessionMatchInfo | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionMatchInfo Namespace rwby.sessionhandlers.lobby Assembly rwby.dll [Serializable] public struct NetworkLobbySessionMatchInfo Fields gamemodeName public string gamemodeName Field Value string gamemodeRef public ModAssetSoftReference gamemodeRef Field Value ModAssetSoftReference id public int id Field Value int mapName public string mapName Field Value string mapRef public ModAssetSoftReference mapRef Field Value ModAssetSoftReference matchCode public string matchCode Field Value string matchLocked public bool matchLocked Field Value bool matchMasterClient public int matchMasterClient Field Value int matchRegion public string matchRegion Field Value string modGuid public Guid modGuid Field Value Guid teamDefinitions public GamemodeTeamConfig[] teamDefinitions Field Value GamemodeTeamConfig[] teams public NetworkLobbySessionMatchTeam[] teams Field Value NetworkLobbySessionMatchTeam[] Methods GenerateMatchCode() public void GenerateMatchCode() GetClientManagers() public ClientManager[] GetClientManagers() Returns ClientManager[] GetLocalPlayerCharacterRefs() public ModAssetSoftReference[] GetLocalPlayerCharacterRefs() Returns ModAssetSoftReference[] GetLocalPlayerTeams() public int[] GetLocalPlayerTeams() Returns int[] GetPlayerCharacterRefs() public ModAssetSoftReference[] GetPlayerCharacterRefs() Returns ModAssetSoftReference[] GetTotalClientCount() public int GetTotalClientCount() Returns int GetTotalPlayerCount() public int GetTotalPlayerCount() Returns int UnreadyAll() public void UnreadyAll()"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchScreen.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchScreen.html",
    "title": "Class NetworkLobbySessionMatchScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkLobbySessionMatchScreen Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class NetworkLobbySessionMatchScreen : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase NetworkLobbySessionMatchScreen Implements IMenu Inherited Members MenuBase.currentHandler Fields BGMText public TextMeshProUGUI BGMText Field Value TextMeshProUGUI lobbySessionHandler [FormerlySerializedAs(\"messageHandler\")] public NetworkLobbySessionHandler lobbySessionHandler Field Value NetworkLobbySessionHandler lobbySessionMenuHandler public NetworkLobbySessionMenuHandler lobbySessionMenuHandler Field Value NetworkLobbySessionMenuHandler matchButtonPrefab public Button matchButtonPrefab Field Value Button matchGamemodeNameText public TextMeshProUGUI matchGamemodeNameText Field Value TextMeshProUGUI matchMapNameText public TextMeshProUGUI matchMapNameText Field Value TextMeshProUGUI matchPlayerListHolderPrefab public MatchPlayerListHolder matchPlayerListHolderPrefab Field Value MatchPlayerListHolder matchPlayerScrollView public ScrollRect matchPlayerScrollView Field Value ScrollRect matchScrollView public ScrollRect matchScrollView Field Value ScrollRect regionText public TextMeshProUGUI regionText Field Value TextMeshProUGUI Methods BUTTON_BGMSelect() public void BUTTON_BGMSelect() OnTeamSlotClicked(int, int) public void OnTeamSlotClicked(int teamIndex, int playerSlotIndex) Parameters teamIndex int playerSlotIndex int Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler RefreshAll() public void RefreshAll() RefreshMatchInfo() public void RefreshMatchInfo() RefreshMatchList() public void RefreshMatchList() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool WhenMatchSelected(NetworkLobbySessionMatchInfo) public void WhenMatchSelected(NetworkLobbySessionMatchInfo match) Parameters match NetworkLobbySessionMatchInfo"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchTeam.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMatchTeam.html",
    "title": "Struct NetworkLobbySessionMatchTeam | Rwby Vytal Versus Documentation",
    "keywords": "Struct NetworkLobbySessionMatchTeam Namespace rwby.sessionhandlers.lobby Assembly rwby.dll [Serializable] public struct NetworkLobbySessionMatchTeam Fields players public NetworkLobbySessionMatchClientDefinition[] players Field Value NetworkLobbySessionMatchClientDefinition[]"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMenuHandler.ScreenTypes.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMenuHandler.ScreenTypes.html",
    "title": "Enum NetworkLobbySessionMenuHandler.ScreenTypes | Rwby Vytal Versus Documentation",
    "keywords": "Enum NetworkLobbySessionMenuHandler.ScreenTypes Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public enum NetworkLobbySessionMenuHandler.ScreenTypes Fields BGMSelect = 3 CharacterSelect = 2 Match = 0 MatchCreation = 1"
  },
  "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMenuHandler.html": {
    "href": "api/rwby.sessionhandlers.lobby.NetworkLobbySessionMenuHandler.html",
    "title": "Class NetworkLobbySessionMenuHandler | Rwby Vytal Versus Documentation",
    "keywords": "Class NetworkLobbySessionMenuHandler Namespace rwby.sessionhandlers.lobby Assembly rwby.dll public class NetworkLobbySessionMenuHandler : MenuHandlerBase, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MenuHandlerBase NetworkLobbySessionMenuHandler Implements IMenuHandler Inherited Members MenuHandlerBase.menus MenuHandlerBase.history MenuHandlerBase.ResetAndForwardTo(int) MenuHandlerBase.Forward(int, bool) MenuHandlerBase.Back() MenuHandlerBase.GetHistory() MenuHandlerBase.GetPreviousMenu() MenuHandlerBase.GetCurrentMenu() MenuHandlerBase.HasSubmenuOpen() Fields InputPlayerManager public InputPlayerManager InputPlayerManager Field Value InputPlayerManager bgmSelectScreen public MenuBase bgmSelectScreen Field Value MenuBase characterSelectScreen public MenuBase characterSelectScreen Field Value MenuBase matchCreationScreen public MenuBase matchCreationScreen Field Value MenuBase matchScreen public MenuBase matchScreen Field Value MenuBase messageHandler [FormerlySerializedAs(\"lobbySessionHandler\")] public NetworkLobbySessionHandler messageHandler Field Value NetworkLobbySessionHandler"
  },
  "api/rwby.sessionhandlers.lobby.html": {
    "href": "api/rwby.sessionhandlers.lobby.html",
    "title": "Namespace rwby.sessionhandlers.lobby | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.sessionhandlers.lobby Classes BGMSelectScreen CharacterSelectionScreen LobbySessionNetworkMessageHandler MatchCreationScreenGamemodeSelectionScreen MatchCreationScreenMainScreen MatchCreationScreenMapSelectionScreen MatchPlayerListHolder NetworkLobbySessionHandler NetworkLobbySessionHandlerMessages NetworkLobbySessionMatchCreationScreen NetworkLobbySessionMatchScreen NetworkLobbySessionMenuHandler Structs NetworkLobbySessionHandlerMessages.ChatMessage NetworkLobbySessionHandlerMessages.ClientAssetCheckResponse NetworkLobbySessionHandlerMessages.ClientAttemptToReadyUp NetworkLobbySessionHandlerMessages.ClientAttemptToUnready NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage NetworkLobbySessionHandlerMessages.ClientReceiveSetCharacterResponse NetworkLobbySessionHandlerMessages.ClientRequestJoinMatchMessage NetworkLobbySessionHandlerMessages.ClientRequestSetCharacterMessage NetworkLobbySessionHandlerMessages.MatchCreationOrUpdateResponseMessage NetworkLobbySessionHandlerMessages.ReceiveLatestMatchListMessage NetworkLobbySessionHandlerMessages.RequestMatchListMessage NetworkLobbySessionHandlerMessages.RequestNewMatchMessage NetworkLobbySessionHandlerMessages.RequestUpdateMatchMessage NetworkLobbySessionHandlerMessages.ServerAttemptToReadyUpResponse NetworkLobbySessionHandlerMessages.ServerCheckIfClientHasAssets NetworkLobbySessionHandlerMessages.ServerStartMatchMessage NetworkLobbySessionMatchClientDefinition NetworkLobbySessionMatchInfo NetworkLobbySessionMatchTeam Enums NetworkLobbySessionHandlerMessages.ClientReceiveJoinMatchResponseMessage.ResponseCode NetworkLobbySessionMatchCreationScreen.MenuTypes NetworkLobbySessionMenuHandler.ScreenTypes Delegates BGMSelectScreen.FighterEvent CharacterSelectionScreen.FighterEvent LobbySessionNetworkMessageHandler.ClientAssetEvent LobbySessionNetworkMessageHandler.ClientCharacterAssetEvent LobbySessionNetworkMessageHandler.ClientReadyStateEvent LobbySessionNetworkMessageHandler.EmptyEvent LobbySessionNetworkMessageHandler.JoinMatchResponseEvent LobbySessionNetworkMessageHandler.MatchCreationOrUpdateEvent"
  },
  "api/rwby.ui.CommandListEntry.html": {
    "href": "api/rwby.ui.CommandListEntry.html",
    "title": "Class CommandListEntry | Rwby Vytal Versus Documentation",
    "keywords": "Class CommandListEntry Namespace rwby.ui Assembly rwby.dll public class CommandListEntry : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CommandListEntry Fields bgImage public Image bgImage Field Value Image button public Button button Field Value Button command public TextMeshProUGUI command Field Value TextMeshProUGUI deselectedColor public Color deselectedColor Field Value Color image public Image image Field Value Image label public TextMeshProUGUI label Field Value TextMeshProUGUI meterRequirement public TextMeshProUGUI meterRequirement Field Value TextMeshProUGUI root public RectTransform root Field Value RectTransform selectedColor public Color selectedColor Field Value Color subtext public TextMeshProUGUI subtext Field Value TextMeshProUGUI Methods SetSelectedState(bool) public void SetSelectedState(bool state) Parameters state bool Setup(BaseCommandListEntry) public void Setup(BaseCommandListEntry commandListEntry) Parameters commandListEntry BaseCommandListEntry"
  },
  "api/rwby.ui.CommandListMenu.html": {
    "href": "api/rwby.ui.CommandListMenu.html",
    "title": "Class CommandListMenu | Rwby Vytal Versus Documentation",
    "keywords": "Class CommandListMenu Namespace rwby.ui Assembly rwby.dll public class CommandListMenu : MenuBase, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase CommandListMenu Implements IMenu Inherited Members MenuBase.currentHandler Fields characterName public TextMeshProUGUI characterName Field Value TextMeshProUGUI characterPortrait public Image characterPortrait Field Value Image moveDescription public TextMeshProUGUI moveDescription Field Value TextMeshProUGUI moveListEntryItemPrefab public CommandListEntry moveListEntryItemPrefab Field Value CommandListEntry moveListScrollRect public ScrollRect moveListScrollRect Field Value ScrollRect moveName public TextMeshProUGUI moveName Field Value TextMeshProUGUI moveVideoPlayer public VideoPlayer moveVideoPlayer Field Value VideoPlayer moveVideoRawImage public RawImage moveVideoRawImage Field Value RawImage movesetListChildItem public CommandListMovesetButton movesetListChildItem Field Value CommandListMovesetButton movesetListTransform public Transform movesetListTransform Field Value Transform tabChildItem public CommandListTabButton tabChildItem Field Value CommandListTabButton tabsTransform public Transform tabsTransform Field Value Transform Methods CreateMenu(IFighterDefinition) public void CreateMenu(IFighterDefinition fighterDefinition) Parameters fighterDefinition IFighterDefinition InitializeCommandList(IFighterDefinition) public UniTask<bool> InitializeCommandList(IFighterDefinition fighterDefinition) Parameters fighterDefinition IFighterDefinition Returns UniTask<bool> Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool UninitializeCommandList(IFighterDefinition) public void UninitializeCommandList(IFighterDefinition fighterDefinition) Parameters fighterDefinition IFighterDefinition"
  },
  "api/rwby.ui.CommandListMovesetButton.html": {
    "href": "api/rwby.ui.CommandListMovesetButton.html",
    "title": "Class CommandListMovesetButton | Rwby Vytal Versus Documentation",
    "keywords": "Class CommandListMovesetButton Namespace rwby.ui Assembly rwby.dll public class CommandListMovesetButton : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CommandListMovesetButton Fields button public Button button Field Value Button deselectedColor public Color deselectedColor Field Value Color deselectedTextColor public Color deselectedTextColor Field Value Color image public Image image Field Value Image label public TextMeshProUGUI label Field Value TextMeshProUGUI selectedColor public Color selectedColor Field Value Color selectedTextColor public Color selectedTextColor Field Value Color Methods SetSelectedState(bool) public void SetSelectedState(bool state) Parameters state bool"
  },
  "api/rwby.ui.CommandListTabButton.html": {
    "href": "api/rwby.ui.CommandListTabButton.html",
    "title": "Class CommandListTabButton | Rwby Vytal Versus Documentation",
    "keywords": "Class CommandListTabButton Namespace rwby.ui Assembly rwby.dll public class CommandListTabButton : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CommandListTabButton Fields button public Button button Field Value Button deselectedColor public Color deselectedColor Field Value Color deselectedTextColor public Color deselectedTextColor Field Value Color image public Image image Field Value Image label public TextMeshProUGUI label Field Value TextMeshProUGUI selectedColor public Color selectedColor Field Value Color selectedTextColor public Color selectedTextColor Field Value Color Methods SetSelectedState(bool) public void SetSelectedState(bool state) Parameters state bool"
  },
  "api/rwby.ui.IMenu.html": {
    "href": "api/rwby.ui.IMenu.html",
    "title": "Interface IMenu | Rwby Vytal Versus Documentation",
    "keywords": "Interface IMenu Namespace rwby.ui Assembly rwby.dll public interface IMenu Methods Open(MenuDirection, IMenuHandler) void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.ui.IMenuHandler.html": {
    "href": "api/rwby.ui.IMenuHandler.html",
    "title": "Interface IMenuHandler | Rwby Vytal Versus Documentation",
    "keywords": "Interface IMenuHandler Namespace rwby.ui Assembly rwby.dll public interface IMenuHandler Methods Back() bool Back() Returns bool Forward(int, bool) bool Forward(int menu, bool autoClose = true) Parameters menu int autoClose bool Returns bool GetCurrentMenu() IMenu GetCurrentMenu() Returns IMenu GetHistory() IList GetHistory() Returns IList HasSubmenuOpen() bool HasSubmenuOpen() Returns bool"
  },
  "api/rwby.ui.MainMenu.MainMenuManager.MainMenuScreens.html": {
    "href": "api/rwby.ui.MainMenu.MainMenuManager.MainMenuScreens.html",
    "title": "Enum MainMenuManager.MainMenuScreens | Rwby Vytal Versus Documentation",
    "keywords": "Enum MainMenuManager.MainMenuScreens Namespace rwby.ui.MainMenu Assembly rwby.dll public enum MainMenuManager.MainMenuScreens Fields CreateLobbyScreen = 4 FindLobbyScreen = 3 MAIN_SCREEN = 1 OPTIONS_SCREEN = 2 TITLE_SCREEN = 0 TestUIScreen = 5"
  },
  "api/rwby.ui.MainMenu.MainMenuManager.html": {
    "href": "api/rwby.ui.MainMenu.MainMenuManager.html",
    "title": "Class MainMenuManager | Rwby Vytal Versus Documentation",
    "keywords": "Class MainMenuManager Namespace rwby.ui.MainMenu Assembly rwby.dll public class MainMenuManager : MonoBehaviour, IMenuHandler Inheritance object Object Component Behaviour MonoBehaviour MainMenuManager Implements IMenuHandler Fields createLobbyScreen public MenuBase createLobbyScreen Field Value MenuBase findLobbyScreen public MenuBase findLobbyScreen Field Value MenuBase mainMenuCamera public Camera mainMenuCamera Field Value Camera mainScreen public MenuBase mainScreen Field Value MenuBase menus public Dictionary<int, MenuBase> menus Field Value Dictionary<int, MenuBase> optionsScreen public MenuBase optionsScreen Field Value MenuBase singleton public static MainMenuManager singleton Field Value MainMenuManager skipTitleScreen public bool skipTitleScreen Field Value bool startingMenu public MainMenuManager.MainMenuScreens startingMenu Field Value MainMenuManager.MainMenuScreens testUIScreen public MenuBase testUIScreen Field Value MenuBase titleScreen public MenuBase titleScreen Field Value MenuBase Methods Back() public bool Back() Returns bool Forward(int, bool) public bool Forward(int menu, bool autoClose = true) Parameters menu int autoClose bool Returns bool GetCurrentMenu() public IMenu GetCurrentMenu() Returns IMenu GetHistory() public IList GetHistory() Returns IList GetPreviousMenu() public IMenu GetPreviousMenu() Returns IMenu HasSubmenuOpen() public bool HasSubmenuOpen() Returns bool Start() public void Start()"
  },
  "api/rwby.ui.MainMenu.OptionsVideoScreen.html": {
    "href": "api/rwby.ui.MainMenu.OptionsVideoScreen.html",
    "title": "Class OptionsVideoScreen | Rwby Vytal Versus Documentation",
    "keywords": "Class OptionsVideoScreen Namespace rwby.ui.MainMenu Assembly rwby.dll public class OptionsVideoScreen : MenuBase, IMenu, IExternalOptionCallback Inheritance object Object Component Behaviour MonoBehaviour MenuBase OptionsVideoScreen Implements IMenu IExternalOptionCallback Inherited Members MenuBase.currentHandler Fields optionsMainScreen public OptionsMainScreen optionsMainScreen Field Value OptionsMainScreen optionsScrollRect public ScrollRect optionsScrollRect Field Value ScrollRect Methods ApplyVideoOptions() public void ApplyVideoOptions() Open(MenuDirection, IMenuHandler) public override void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler SelectDefault() public void SelectDefault() SetupVideoOptions() public void SetupVideoOptions() TryClose(MenuDirection, bool) public override bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool WhenElementSelected(MenuLabelExternalOptionElement, BaseEventData) public void WhenElementSelected(MenuLabelExternalOptionElement element, BaseEventData eventData) Parameters element MenuLabelExternalOptionElement eventData BaseEventData"
  },
  "api/rwby.ui.MainMenu.html": {
    "href": "api/rwby.ui.MainMenu.html",
    "title": "Namespace rwby.ui.MainMenu | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.ui.MainMenu Classes MainMenuManager OptionsVideoScreen Enums MainMenuManager.MainMenuScreens"
  },
  "api/rwby.ui.MenuBase.html": {
    "href": "api/rwby.ui.MenuBase.html",
    "title": "Class MenuBase | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuBase Namespace rwby.ui Assembly rwby.dll public class MenuBase : MonoBehaviour, IMenu Inheritance object Object Component Behaviour MonoBehaviour MenuBase Implements IMenu Derived ControlsMainScreen ControlsProfileMappingScreen MenuAndHandlerBase OptionsGameplayScreen OptionsMainScreen OptionsModdingScreen OptionsScreen CreateLobbyScreen FindLobbyScreen TestUIMenu TitleMainScreen TitleScreen DummySettingsFighterSelectScreen DummySettingsMainScreen BGMSelectScreen CharacterSelectionScreen MatchCreationScreenGamemodeSelectionScreen MatchCreationScreenMainScreen MatchCreationScreenMapSelectionScreen NetworkLobbySessionMatchScreen CommandListMenu OptionsVideoScreen Fields currentHandler public IMenuHandler currentHandler Field Value IMenuHandler Methods Open(MenuDirection, IMenuHandler) public virtual void Open(MenuDirection direction, IMenuHandler menuHandler) Parameters direction MenuDirection menuHandler IMenuHandler TryClose(MenuDirection, bool) public virtual bool TryClose(MenuDirection direction, bool forceClose = false) Parameters direction MenuDirection forceClose bool Returns bool"
  },
  "api/rwby.ui.MenuDirection.html": {
    "href": "api/rwby.ui.MenuDirection.html",
    "title": "Enum MenuDirection | Rwby Vytal Versus Documentation",
    "keywords": "Enum MenuDirection Namespace rwby.ui Assembly rwby.dll public enum MenuDirection Fields BACKWARDS = 0 FORWARDS = 1"
  },
  "api/rwby.ui.MenuLabelDropdownElement.html": {
    "href": "api/rwby.ui.MenuLabelDropdownElement.html",
    "title": "Class MenuLabelDropdownElement | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelDropdownElement Namespace rwby.ui Assembly rwby.dll public class MenuLabelDropdownElement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MenuLabelDropdownElement Fields bgImage public Image bgImage Field Value Image dropdown public TMP_Dropdown dropdown Field Value TMP_Dropdown label public TextMeshProUGUI label Field Value TextMeshProUGUI Methods GetSelectedOptionText() public string GetSelectedOptionText() Returns string Initialize(string, List<string>, int) public void Initialize(string labelText, List<string> dropdownOptions, int defaultValue) Parameters labelText string dropdownOptions List<string> defaultValue int"
  },
  "api/rwby.ui.MenuLabelFloatSliderElement.ElementCallback.html": {
    "href": "api/rwby.ui.MenuLabelFloatSliderElement.ElementCallback.html",
    "title": "Delegate MenuLabelFloatSliderElement.ElementCallback | Rwby Vytal Versus Documentation",
    "keywords": "Delegate MenuLabelFloatSliderElement.ElementCallback Namespace rwby.ui Assembly rwby.dll public delegate void MenuLabelFloatSliderElement.ElementCallback(MenuLabelFloatSliderElement slider) Parameters slider MenuLabelFloatSliderElement"
  },
  "api/rwby.ui.MenuLabelFloatSliderElement.SliderEvent.html": {
    "href": "api/rwby.ui.MenuLabelFloatSliderElement.SliderEvent.html",
    "title": "Class MenuLabelFloatSliderElement.SliderEvent | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelFloatSliderElement.SliderEvent Namespace rwby.ui Assembly rwby.dll [Serializable] public class MenuLabelFloatSliderElement.SliderEvent : UnityEvent<float> Inheritance object UnityEventBase UnityEvent<float> MenuLabelFloatSliderElement.SliderEvent"
  },
  "api/rwby.ui.MenuLabelFloatSliderElement.html": {
    "href": "api/rwby.ui.MenuLabelFloatSliderElement.html",
    "title": "Class MenuLabelFloatSliderElement | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelFloatSliderElement Namespace rwby.ui Assembly rwby.dll public class MenuLabelFloatSliderElement : Selectable, INavigationStyleChanged Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour Selectable MenuLabelFloatSliderElement Implements INavigationStyleChanged Fields bgImage public Image bgImage Field Value Image description public string description Field Value string label public TextMeshProUGUI label Field Value TextMeshProUGUI m_Value [SerializeField] protected float m_Value Field Value float onSelected public MenuLabelFloatSliderElement.ElementCallback onSelected Field Value MenuLabelFloatSliderElement.ElementCallback sliderValueLabel public TextMeshProUGUI sliderValueLabel Field Value TextMeshProUGUI Properties maxValue public float maxValue { get; set; } Property Value float minValue public float minValue { get; set; } Property Value float normalizedValue public float normalizedValue { get; set; } Property Value float onValueChanged public MenuLabelFloatSliderElement.SliderEvent onValueChanged { get; set; } Property Value MenuLabelFloatSliderElement.SliderEvent value public virtual float value { get; set; } Property Value float wholeNumbers public bool wholeNumbers { get; set; } Property Value bool Methods FindSelectableOnLeft() See Selectable.FindSelectableOnLeft public override Selectable FindSelectableOnLeft() Returns Selectable FindSelectableOnRight() See Selectable.FindSelectableOnRight public override Selectable FindSelectableOnRight() Returns Selectable GetValue() public float GetValue() Returns float GraphicUpdateComplete() public void GraphicUpdateComplete() Initialize(string, float, float, float, string) public void Initialize(string labelText, float sliderValue, float sliderMin, float sliderMax, string valueFormatting = \"F0\") Parameters labelText string sliderValue float sliderMin float sliderMax float valueFormatting string LayoutComplete() public void LayoutComplete() NavigationStyleChanged(InputPlayerManager, NavigationType) public void NavigationStyleChanged(InputPlayerManager inputPlayer, InputPlayerManager.NavigationType navigationType) Parameters inputPlayer InputPlayerManager navigationType InputPlayerManager.NavigationType OnDisable() protected override void OnDisable() OnDrag(PointerEventData) public virtual void OnDrag(PointerEventData eventData) Parameters eventData PointerEventData OnEnable() protected override void OnEnable() OnInitializePotentialDrag(PointerEventData) public virtual void OnInitializePotentialDrag(PointerEventData eventData) Parameters eventData PointerEventData OnMove(AxisEventData) public override void OnMove(AxisEventData eventData) Parameters eventData AxisEventData OnPointerDown(PointerEventData) public override void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData OnSelect(BaseEventData) public override void OnSelect(BaseEventData eventData) Parameters eventData BaseEventData Rebuild(CanvasUpdate) public virtual void Rebuild(CanvasUpdate executing) Parameters executing CanvasUpdate Set(float, bool) Set the value of the slider. protected virtual void Set(float input, bool sendCallback = true) Parameters input float The new value for the slider. sendCallback bool If the OnValueChanged callback should be invoked. Remarks Process the input to ensure the value is between min and max value. If the input is different set the value and send the callback is required. SetValue(float) public void SetValue(float value) Parameters value float Update() Update the rect based on the delayed update visuals. Got around issue of calling sendMessage from onValidate. public virtual void Update()"
  },
  "api/rwby.ui.MenuLabelOptionElement.html": {
    "href": "api/rwby.ui.MenuLabelOptionElement.html",
    "title": "Class MenuLabelOptionElement | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelOptionElement Namespace rwby.ui Assembly rwby.dll public class MenuLabelOptionElement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MenuLabelOptionElement Fields bgImage public Image bgImage Field Value Image label public TextMeshProUGUI label Field Value TextMeshProUGUI listLabel public TextMeshProUGUI listLabel Field Value TextMeshProUGUI Properties Option public int Option { get; protected set; } Property Value int Methods Initialize(string, List<string>, int) public void Initialize(string labelText, List<string> options, int defaultOption) Parameters labelText string options List<string> defaultOption int ScrollLeft() public void ScrollLeft() ScrollRight() public void ScrollRight() SetOption(int) public void SetOption(int value) Parameters value int"
  },
  "api/rwby.ui.MenuLabelToggleElement.html": {
    "href": "api/rwby.ui.MenuLabelToggleElement.html",
    "title": "Class MenuLabelToggleElement | Rwby Vytal Versus Documentation",
    "keywords": "Class MenuLabelToggleElement Namespace rwby.ui Assembly rwby.dll public class MenuLabelToggleElement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MenuLabelToggleElement Fields bgImage public Image bgImage Field Value Image label public TextMeshProUGUI label Field Value TextMeshProUGUI toggle public Toggle toggle Field Value Toggle Methods Initialize(string, bool) public void Initialize(string labelText, bool defaultOption) Parameters labelText string defaultOption bool ScrollLeft() public void ScrollLeft() ScrollRight() public void ScrollRight()"
  },
  "api/rwby.ui.html": {
    "href": "api/rwby.ui.html",
    "title": "Namespace rwby.ui | Rwby Vytal Versus Documentation",
    "keywords": "Namespace rwby.ui Classes CommandListEntry CommandListMenu CommandListMovesetButton CommandListTabButton MenuBase MenuLabelDropdownElement MenuLabelFloatSliderElement MenuLabelFloatSliderElement.SliderEvent MenuLabelOptionElement MenuLabelToggleElement Interfaces IMenu IMenuHandler Enums MenuDirection Delegates MenuLabelFloatSliderElement.ElementCallback"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Rwby Vytal Versus Documentation",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Rwby Vytal Versus Documentation",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Rwby Vytal Versus Documentation",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}